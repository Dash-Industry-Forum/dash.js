{"version":3,"file":"dash.mss.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js","webpack://dashjs/./src/mss/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DataChunk {\r\n    //Represents a data structure that keep all the necessary info about a single init/media segment\r\n    constructor() {\r\n        this.streamId = null;\r\n        this.mediaInfo = null;\r\n        this.segmentType = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.bytes = null;\r\n        this.start = NaN;\r\n        this.end = NaN;\r\n        this.duration = NaN;\r\n        this.representationId = null;\r\n        this.endFragment = null;\r\n    }\r\n}\r\n\r\nexport default DataChunk;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n        /**\r\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\r\n         * @public\r\n         */\r\n        this.cmsd = null;\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n        /**\r\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\r\n         */\r\n        this._fileLoaderType = null;\r\n        /**\r\n         * The values derived from the ResourceTimingAPI.\r\n         */\r\n        this._resourceTimingValues = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport {HTTPRequest, HTTPRequestTrace};\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport { HTTPRequest } from './metrics/HTTPRequest.js';\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor(url) {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaStartTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = url || null;\r\n        this.serviceLocation = null;\r\n        this.startDate = null;\r\n        this.firstByteDate = null;\r\n        this.endDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n        this.representationId = null;\r\n    }\r\n\r\n    isInitializationRequest() {\r\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\r\n    }\r\n\r\n    setInfo(info) {\r\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        this.url = info && info.url ? info.url : null;\r\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\r\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\r\n\r\nfunction MssFragmentInfoController(config) {\r\n\r\n    config = config || {};\r\n\r\n    let instance,\r\n        logger,\r\n        fragmentModel,\r\n        started,\r\n        type,\r\n        loadFragmentTimeout,\r\n        startTime,\r\n        startFragmentTime,\r\n        index;\r\n\r\n    const streamProcessor = config.streamProcessor;\r\n    const baseURLController = config.baseURLController;\r\n    const debug = config.debug;\r\n    const controllerType = 'MssFragmentInfoController';\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function initialize() {\r\n        type = streamProcessor.getType();\r\n        fragmentModel = streamProcessor.getFragmentModel();\r\n\r\n        started = false;\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n    }\r\n\r\n    function start() {\r\n        if (started) return;\r\n\r\n        logger.debug('Start');\r\n\r\n        started = true;\r\n        index = 0;\r\n\r\n        loadNextFragmentInfo();\r\n    }\r\n\r\n    function stop() {\r\n        if (!started) return;\r\n\r\n        logger.debug('Stop');\r\n\r\n        clearTimeout(loadFragmentTimeout);\r\n        started = false;\r\n        startTime = null;\r\n        startFragmentTime = null;\r\n    }\r\n\r\n    function reset() {\r\n        stop();\r\n    }\r\n\r\n    function loadNextFragmentInfo() {\r\n        if (!started) return;\r\n\r\n        // Get last segment from SegmentTimeline\r\n        const representation = getCurrentRepresentation();\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index];\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\r\n        const segment = segments[segments.length - 1];\r\n\r\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\r\n\r\n        // Generate segment request\r\n        const request = getRequestForSegment(adaptation, representation, segment);\r\n\r\n        // Send segment request\r\n        requestFragment.call(this, request);\r\n    }\r\n\r\n    function getRequestForSegment(adaptation, representation, segment) {\r\n        let timescale = adaptation.SegmentTemplate.timescale;\r\n        let request = new FragmentRequest();\r\n\r\n        request.mediaType = type;\r\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\r\n        // request.range = segment.mediaRange;\r\n        request.startTime = segment.t / timescale;\r\n        request.duration = segment.d / timescale;\r\n        request.timescale = timescale;\r\n        // request.availabilityStartTime = segment.availabilityStartTime;\r\n        // request.availabilityEndTime = segment.availabilityEndTime;\r\n        // request.wallStartTime = segment.wallStartTime;\r\n        request.quality = representation.index;\r\n        request.index = index++;\r\n        request.mediaInfo = streamProcessor.getMediaInfo();\r\n        request.adaptationIndex = representation.adaptation.index;\r\n        request.representationId = representation.id;\r\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\r\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\r\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\r\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\r\n\r\n        return request;\r\n    }\r\n\r\n    function getCurrentRepresentation() {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n        return representation;\r\n    }\r\n\r\n    function requestFragment(request) {\r\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\r\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\r\n            // We may have reached end of timeline in case of start-over streams\r\n            logger.debug('End of timeline');\r\n            stop();\r\n            return;\r\n        }\r\n\r\n        fragmentModel.executeRequest(request);\r\n    }\r\n\r\n    function fragmentInfoLoaded (e) {\r\n        if (!started) return;\r\n\r\n        const request = e.request;\r\n        if (!e.response) {\r\n            logger.error('Load error', request.url);\r\n            return;\r\n        }\r\n\r\n        let deltaFragmentTime,\r\n            deltaTime,\r\n            delay;\r\n\r\n        // logger.debug('FragmentInfo loaded: ', request.url);\r\n\r\n        if (startTime === null) {\r\n            startTime = new Date().getTime();\r\n        }\r\n\r\n        if (!startFragmentTime) {\r\n            startFragmentTime = request.startTime;\r\n        }\r\n\r\n        // Determine delay before requesting next FragmentInfo\r\n        deltaTime = (new Date().getTime() - startTime) / 1000;\r\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\r\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\r\n\r\n        // Set timeout for requesting next FragmentInfo\r\n        clearTimeout(loadFragmentTimeout);\r\n        loadFragmentTimeout = setTimeout(function () {\r\n            loadFragmentTimeout = null;\r\n            loadNextFragmentInfo();\r\n        }, delay * 1000);\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        controllerType: controllerType,\r\n        start: start,\r\n        fragmentInfoLoaded: fragmentInfoLoaded,\r\n        getType: getType,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../core/errors/ErrorsBase.js';\r\n\r\n/**\r\n * @class\r\n *\r\n */\r\nclass MssErrors extends ErrorsBase {\r\n    constructor() {\r\n        super();\r\n        /**\r\n         * Error code returned when no tfrf box is detected in MSS live stream\r\n         */\r\n        this.MSS_NO_TFRF_CODE = 200;\r\n\r\n        /**\r\n         * Error code returned when one of the codecs defined in the manifest is not supported\r\n         */\r\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\r\n\r\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\r\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\r\n    }\r\n}\r\n\r\nlet mssErrors = new MssErrors();\r\nexport default mssErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase.js';\r\n\r\n/**\r\n * @class\r\n * @implements EventsBase\r\n */\r\nclass MediaPlayerEvents extends EventsBase {\r\n\r\n    /**\r\n     * @description Public facing external events to be used when developing a player that implements dash.js.\r\n     */\r\n    constructor() {\r\n        super();\r\n        /**\r\n         * Triggered when playback will not start yet\r\n         * as the MPD's availabilityStartTime is in the future.\r\n         * Check delay property in payload to determine time before playback will start.\r\n         * @event MediaPlayerEvents#AST_IN_FUTURE\r\n         */\r\n        this.AST_IN_FUTURE = 'astInFuture';\r\n\r\n        /**\r\n         * Triggered when the BaseURLs have been updated.\r\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\r\n         */\r\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to stalled.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_EMPTY\r\n         */\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to loaded.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\r\n         */\r\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\r\n\r\n        /**\r\n         * Triggered when the buffer level of a media type has been updated\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\r\n         */\r\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\r\n\r\n        /**\r\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\r\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\r\n         */\r\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\r\n\r\n        /**\r\n         * Triggered when there is an error from the element or MSE source buffer.\r\n         * @event MediaPlayerEvents#ERROR\r\n         */\r\n        this.ERROR = 'error';\r\n        /**\r\n         * Triggered when a fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\r\n         */\r\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\r\n\r\n        /**\r\n         * Triggered when a partial fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\r\n         */\r\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\r\n        /**\r\n         * Triggered when a fragment download has started.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\r\n         */\r\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\r\n         */\r\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\r\n\r\n        /**\r\n         * Triggered when {@link module:Debug} logger methods are called.\r\n         * @event MediaPlayerEvents#LOG\r\n         */\r\n        this.LOG = 'log';\r\n\r\n        /**\r\n         * Triggered when the manifest load is started\r\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\r\n         */\r\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when the manifest loading is finished, providing the request object information\r\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\r\n         */\r\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\r\n\r\n        /**\r\n         * Triggered when the manifest load is complete, providing the payload\r\n         * @event MediaPlayerEvents#MANIFEST_LOADED\r\n         */\r\n        this.MANIFEST_LOADED = 'manifestLoaded';\r\n\r\n        /**\r\n         * Triggered anytime there is a change to the overall metrics.\r\n         * @event MediaPlayerEvents#METRICS_CHANGED\r\n         */\r\n        this.METRICS_CHANGED = 'metricsChanged';\r\n\r\n        /**\r\n         * Triggered when an individual metric is added, updated or cleared.\r\n         * @event MediaPlayerEvents#METRIC_CHANGED\r\n         */\r\n        this.METRIC_CHANGED = 'metricChanged';\r\n\r\n        /**\r\n         * Triggered every time a new metric is added.\r\n         * @event MediaPlayerEvents#METRIC_ADDED\r\n         */\r\n        this.METRIC_ADDED = 'metricAdded';\r\n\r\n        /**\r\n         * Triggered every time a metric is updated.\r\n         * @event MediaPlayerEvents#METRIC_UPDATED\r\n         */\r\n        this.METRIC_UPDATED = 'metricUpdated';\r\n\r\n        /**\r\n         * Triggered when a new stream (period) starts.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\r\n         */\r\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\r\n\r\n        /**\r\n         * Triggered at the stream end of a period.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\r\n         */\r\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\r\n\r\n        /**\r\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\r\n         */\r\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\r\n\r\n        /**\r\n         * Triggered when the new ABR quality is being rendered on-screen.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\r\n         */\r\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\r\n\r\n        /**\r\n         * Triggered when the new track is being rendered.\r\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\r\n         */\r\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is being loaded\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\r\n         */\r\n        this.STREAM_INITIALIZING = 'streamInitializing';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is loaded\r\n         * @event MediaPlayerEvents#STREAM_UPDATED\r\n         */\r\n        this.STREAM_UPDATED = 'streamUpdated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\r\n         */\r\n        this.STREAM_ACTIVATED = 'streamActivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is deactivated\r\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\r\n         */\r\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\r\n         */\r\n        this.STREAM_INITIALIZED = 'streamInitialized';\r\n\r\n        /**\r\n         * Triggered when the player has been reset.\r\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\r\n         */\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n\r\n        /**\r\n         * Triggered once all text tracks detected in the MPD are added to the video element.\r\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\r\n         */\r\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\r\n\r\n        /**\r\n         * Triggered when a text track is added to the video element's TextTrackList\r\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\r\n         */\r\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\r\n\r\n        /**\r\n         * Triggered when a throughput measurement based on the last segment request has been stored\r\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\r\n         */\r\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk is parsed.\r\n         * @event MediaPlayerEvents#TTML_PARSED\r\n         */\r\n        this.TTML_PARSED = 'ttmlParsed';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk has to be parsed.\r\n         * @event MediaPlayerEvents#TTML_TO_PARSE\r\n         */\r\n        this.TTML_TO_PARSE = 'ttmlToParse';\r\n\r\n        /**\r\n         * Triggered when a caption is rendered.\r\n         * @event MediaPlayerEvents#CAPTION_RENDERED\r\n         */\r\n        this.CAPTION_RENDERED = 'captionRendered';\r\n\r\n        /**\r\n         * Triggered when the caption container is resized.\r\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\r\n         */\r\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\r\n\r\n        /**\r\n         * Sent when enough data is available that the media can be played,\r\n         * at least for a couple of frames.  This corresponds to the\r\n         * HAVE_ENOUGH_DATA readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY\r\n         */\r\n        this.CAN_PLAY = 'canPlay';\r\n\r\n        /**\r\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\r\n         */\r\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\r\n\r\n        /**\r\n         * Sent when playback completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\r\n         */\r\n        this.PLAYBACK_ENDED = 'playbackEnded';\r\n\r\n        /**\r\n         * Sent when an error occurs.  The element's error\r\n         * attribute contains more information.\r\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\r\n         */\r\n        this.PLAYBACK_ERROR = 'playbackError';\r\n\r\n        /**\r\n         * Sent when playback is not allowed (for example if user gesture is needed).\r\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\r\n         */\r\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\r\n\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\r\n\r\n        /**\r\n         * The event is fired when the frame at the current playback position of the media has finished loading;\r\n         * often the first frame\r\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\r\n         */\r\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\r\n\r\n        /**\r\n         * Sent when playback is paused.\r\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\r\n         */\r\n        this.PLAYBACK_PAUSED = 'playbackPaused';\r\n\r\n        /**\r\n         * Sent when the media begins to play (either for the first time, after having been paused,\r\n         * or after ending and then restarting).\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\r\n         */\r\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\r\n\r\n        /**\r\n         * Sent periodically to inform interested parties of progress downloading\r\n         * the media. Information about the current amount of the media that has\r\n         * been downloaded is available in the media element's buffered attribute.\r\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\r\n         */\r\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\r\n\r\n        /**\r\n         * Sent when the playback speed changes.\r\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\r\n         */\r\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\r\n\r\n        /**\r\n         * Sent when a seek operation completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\r\n         */\r\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\r\n\r\n        /**\r\n         * Sent when a seek operation begins.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\r\n         */\r\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\r\n\r\n        /**\r\n         * Sent when the video element reports stalled\r\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\r\n         */\r\n        this.PLAYBACK_STALLED = 'playbackStalled';\r\n\r\n        /**\r\n         * Sent when playback of the media starts after having been paused;\r\n         * that is, when playback is resumed after a prior pause event.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\r\n         */\r\n        this.PLAYBACK_STARTED = 'playbackStarted';\r\n\r\n        /**\r\n         * The time indicated by the element's currentTime attribute has changed.\r\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\r\n         */\r\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\r\n\r\n        /**\r\n         * Sent when the video element reports that the volume has changed\r\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\r\n         */\r\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\r\n\r\n        /**\r\n         * Sent when the media playback has stopped because of a temporary lack of data.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\r\n         */\r\n        this.PLAYBACK_WAITING = 'playbackWaiting';\r\n\r\n        /**\r\n         * Manifest validity changed - As a result of an MPD validity expiration event.\r\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\r\n         */\r\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\r\n\r\n        /**\r\n         * Dash events are triggered at their respective start points on the timeline.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\r\n         */\r\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\r\n\r\n        /**\r\n         * Dash events are triggered as soon as they were parsed.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\r\n         */\r\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\r\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\r\n         */\r\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player switches to a different representation\r\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\r\n         */\r\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\r\n\r\n        /**\r\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\r\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\r\n         */\r\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\r\n\r\n        /**\r\n         * Triggered when a content steering request has completed.\r\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\r\n         */\r\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\r\n\r\n        /**\r\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\r\n         * @event MediaPlayerEvents#INBAND_PRFT\r\n         */\r\n        this.INBAND_PRFT = 'inbandPrft';\r\n    }\r\n}\r\n\r\nlet mediaPlayerEvents = new MediaPlayerEvents();\r\nexport default mediaPlayerEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport DashJSError from '../streaming/vo/DashJSError.js';\r\nimport MssErrors from './errors/MssErrors.js';\r\n\r\nimport Events from '../streaming/MediaPlayerEvents.js';\r\n\r\n/**\r\n * @module MssFragmentMoofProcessor\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoofProcessor(config) {\r\n\r\n    config = config || {};\r\n    let instance,\r\n        type,\r\n        logger;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const errorHandler = config.errHandler;\r\n    const eventBus = config.eventBus;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        type = '';\r\n    }\r\n\r\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\r\n        const representationController = streamProcessor.getRepresentationController();\r\n        const representation = representationController.getCurrentRepresentation();\r\n\r\n        const manifest = representation.adaptation.period.mpd.manifest;\r\n        const adaptation = manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index];\r\n        const timescale = adaptation.SegmentTemplate.timescale;\r\n\r\n        type = streamProcessor.getType();\r\n\r\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\r\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\r\n            return;\r\n        }\r\n\r\n        if (!tfrf) {\r\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\r\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\r\n        const entries = tfrf.entry;\r\n        let entry,\r\n            segmentTime,\r\n            range;\r\n        let segment = null;\r\n        let t = 0;\r\n        let endTime;\r\n        let availabilityStartTime = null;\r\n\r\n        if (entries.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\r\n        entry = entries[0];\r\n\r\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\r\n        // => then do not update anymore timeline\r\n        if (manifest.type === 'static') {\r\n            // Get first segment time\r\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\r\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\r\n\r\n        // Get last segment time\r\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\r\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\r\n\r\n        // Check if we have to append new segment to timeline\r\n        if (entry.fragment_absolute_time <= segmentTime) {\r\n            // Update DVR window range => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\r\n            return;\r\n        }\r\n\r\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\r\n        segment = {};\r\n        segment.t = entry.fragment_absolute_time;\r\n        segment.d = entry.fragment_duration;\r\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\r\n        if (segments[0].tManifest) {\r\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\r\n            segment.tManifest = entry.fragment_absolute_time;\r\n        }\r\n\r\n        // Patch previous segment duration\r\n        let lastSegment = segments[segments.length - 1];\r\n        if (lastSegment.t + lastSegment.d !== segment.t) {\r\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\r\n            lastSegment.d = segment.t - lastSegment.t;\r\n        }\r\n\r\n        segments.push(segment);\r\n\r\n        // In case of static start-over streams, update content duration\r\n        if (manifest.type === 'static') {\r\n            if (type === 'video') {\r\n                segment = segments[segments.length - 1];\r\n                endTime = (segment.t + segment.d) / timescale;\r\n                if (endTime > representation.adaptation.period.duration) {\r\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\r\n                }\r\n            }\r\n            return;\r\n        } else {\r\n            // In case of live streams, update segment timeline according to DVR window\r\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\r\n                // Get timestamp of the last segment\r\n                segment = segments[segments.length - 1];\r\n                t = segment.t;\r\n\r\n                // Determine the segments' availability start time\r\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\r\n\r\n                // Remove segments prior to availability start time\r\n                segment = segments[0];\r\n                endTime = (segment.t + segment.d) / timescale;\r\n                while (endTime < availabilityStartTime) {\r\n                    // Check if not currently playing the segment to be removed\r\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\r\n                        break;\r\n                    }\r\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\r\n                    segments.splice(0, 1);\r\n                    segment = segments[0];\r\n                    endTime = (segment.t + segment.d) / timescale;\r\n                }\r\n            }\r\n\r\n            // Update DVR window range => set range end to end time of current segment\r\n            range = {\r\n                start: segments[0].t / timescale,\r\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\r\n            };\r\n\r\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\r\n        }\r\n\r\n    }\r\n\r\n    function updateDVR(type, range, manifestInfo) {\r\n        if (type !== 'video' && type !== 'audio') return;\r\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\r\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\r\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\r\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\r\n            playbackController.updateCurrentTime(type);\r\n        }\r\n    }\r\n\r\n    // This function returns the offset of the 1st byte of a child box within a container box\r\n    function getBoxOffset(parent, type) {\r\n        let offset = 8;\r\n        let i = 0;\r\n\r\n        for (i = 0; i < parent.boxes.length; i++) {\r\n            if (parent.boxes[i].type === type) {\r\n                return offset;\r\n            }\r\n            offset += parent.boxes[i].size;\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    function convertFragment(e, streamProcessor) {\r\n        let i;\r\n\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        const traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        const trun = isoFile.fetch('trun');\r\n\r\n        // Process tfxd boxes\r\n        // This box provide absolute timestamp but we take the segment start time for tfdt\r\n        let tfxd = isoFile.fetch('tfxd');\r\n        if (tfxd) {\r\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\r\n            tfxd = null;\r\n        }\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n\r\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\r\n        // => convert sepiff box it into a senc box\r\n        // => create saio and saiz boxes (if not already present)\r\n        const sepiff = isoFile.fetch('sepiff');\r\n        if (sepiff !== null) {\r\n            sepiff.type = 'senc';\r\n            sepiff.usertype = undefined;\r\n\r\n            let saio = isoFile.fetch('saio');\r\n            if (saio === null) {\r\n                // Create Sample Auxiliary Information Offsets Box box (saio)\r\n                saio = ISOBoxer.createFullBox('saio', traf);\r\n                saio.version = 0;\r\n                saio.flags = 0;\r\n                saio.entry_count = 1;\r\n                saio.offset = [0];\r\n\r\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\r\n                saiz.version = 0;\r\n                saiz.flags = 0;\r\n                saiz.sample_count = sepiff.sample_count;\r\n                saiz.default_sample_info_size = 0;\r\n                saiz.sample_info_size = [];\r\n\r\n                if (sepiff.flags & 0x02) {\r\n                    // Sub-sample encryption => set sample_info_size for each sample\r\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\r\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\r\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\r\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\r\n                    }\r\n                } else {\r\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\r\n                    saiz.default_sample_info_size = 8;\r\n                }\r\n            }\r\n        }\r\n\r\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\r\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\r\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\r\n\r\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\r\n        const moof = isoFile.fetch('moof');\r\n        let length = moof.getLength();\r\n        trun.data_offset = length + 8;\r\n\r\n        // Update saio box offset field according to new senc box offset\r\n        let saio = isoFile.fetch('saio');\r\n        if (saio !== null) {\r\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\r\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\r\n            // Set offset from begin fragment to the first IV field in senc box\r\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\r\n        }\r\n\r\n        // Write transformed/processed fragment into request reponse data\r\n        e.response = isoFile.write();\r\n    }\r\n\r\n    function updateSegmentList(e, streamProcessor) {\r\n        // e.request contains request description object\r\n        // e.response contains fragment bytes\r\n        if (!e.response) {\r\n            throw new Error('e.response parameter is missing');\r\n        }\r\n\r\n        const isoFile = ISOBoxer.parseBuffer(e.response);\r\n        // Update track_Id in tfhd box\r\n        const tfhd = isoFile.fetch('tfhd');\r\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\r\n\r\n        // Add tfdt box\r\n        let tfdt = isoFile.fetch('tfdt');\r\n        let traf = isoFile.fetch('traf');\r\n        if (tfdt === null) {\r\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\r\n            tfdt.version = 1;\r\n            tfdt.flags = 0;\r\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\r\n        }\r\n\r\n        let tfrf = isoFile.fetch('tfrf');\r\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\r\n        if (tfrf) {\r\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\r\n            tfrf = null;\r\n        }\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    instance = {\r\n        convertFragment: convertFragment,\r\n        updateSegmentList: updateSegmentList,\r\n        getType: getType\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport MssErrors from './errors/MssErrors.js';\r\n\r\n/**\r\n * @module MssFragmentMoovProcessor\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\nfunction MssFragmentMoovProcessor(config) {\r\n    config = config || {};\r\n    const NALUTYPE_SPS = 7;\r\n    const NALUTYPE_PPS = 8;\r\n    const constants = config.constants;\r\n    const ISOBoxer = config.ISOBoxer;\r\n\r\n    let protectionController = config.protectionController;\r\n    let instance,\r\n        period,\r\n        adaptationSet,\r\n        representation,\r\n        contentProtection,\r\n        timescale,\r\n        trackId;\r\n\r\n    function createFtypBox(isoFile) {\r\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\r\n        ftyp.major_brand = 'iso6';\r\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\r\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\r\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\r\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\r\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\r\n\r\n        return ftyp;\r\n    }\r\n\r\n    function createMoovBox(isoFile) {\r\n\r\n        // moov box\r\n        let moov = ISOBoxer.createBox('moov', isoFile);\r\n\r\n        // moov/mvhd\r\n        createMvhdBox(moov);\r\n\r\n        // moov/trak\r\n        let trak = ISOBoxer.createBox('trak', moov);\r\n\r\n        // moov/trak/tkhd\r\n        createTkhdBox(trak);\r\n\r\n        // moov/trak/mdia\r\n        let mdia = ISOBoxer.createBox('mdia', trak);\r\n\r\n        // moov/trak/mdia/mdhd\r\n        createMdhdBox(mdia);\r\n\r\n        // moov/trak/mdia/hdlr\r\n        createHdlrBox(mdia);\r\n\r\n        // moov/trak/mdia/minf\r\n        let minf = ISOBoxer.createBox('minf', mdia);\r\n\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                // moov/trak/mdia/minf/vmhd\r\n                createVmhdBox(minf);\r\n                break;\r\n            case constants.AUDIO:\r\n                // moov/trak/mdia/minf/smhd\r\n                createSmhdBox(minf);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // moov/trak/mdia/minf/dinf\r\n        let dinf = ISOBoxer.createBox('dinf', minf);\r\n\r\n        // moov/trak/mdia/minf/dinf/dref\r\n        createDrefBox(dinf);\r\n\r\n        // moov/trak/mdia/minf/stbl\r\n        let stbl = ISOBoxer.createBox('stbl', minf);\r\n\r\n        // Create empty stts, stsc, stco and stsz boxes\r\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\r\n\r\n        // moov/trak/mdia/minf/stbl/stts\r\n        let stts = ISOBoxer.createFullBox('stts', stbl);\r\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsc\r\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\r\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stco\r\n        let stco = ISOBoxer.createFullBox('stco', stbl);\r\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsz\r\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\r\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\r\n\r\n        // moov/trak/mdia/minf/stbl/stsd\r\n        createStsdBox(stbl);\r\n\r\n        // moov/mvex\r\n        let mvex = ISOBoxer.createBox('mvex', moov);\r\n\r\n        // moov/mvex/trex\r\n        createTrexBox(mvex);\r\n\r\n        if (contentProtection && protectionController) {\r\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\r\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\r\n        }\r\n    }\r\n\r\n    function createMvhdBox(moov) {\r\n\r\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\r\n\r\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\r\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\r\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\r\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\r\n        mvhd.reserved1 = 0;\r\n        mvhd.reserved2 = [0x0, 0x0];\r\n        mvhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\r\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\r\n\r\n        return mvhd;\r\n    }\r\n\r\n    function createTkhdBox(trak) {\r\n\r\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\r\n\r\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\r\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\r\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\r\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\r\n\r\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\r\n        tkhd.reserved1 = 0;\r\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\r\n        tkhd.reserved2 = [0x0, 0x0];\r\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\r\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\r\n        tkhd.volume = 1.0; // '1.0' = full volume\r\n        tkhd.reserved3 = 0;\r\n        tkhd.matrix = [\r\n            1, 0, 0, // provides a transformation matrix for the video;\r\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\r\n            0, 0, 16384\r\n        ];\r\n        tkhd.width = representation.width; // visual presentation width\r\n        tkhd.height = representation.height; // visual presentation height\r\n\r\n        return tkhd;\r\n    }\r\n\r\n    function createMdhdBox(mdia) {\r\n\r\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\r\n\r\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\r\n\r\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\r\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\r\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\r\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\r\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\r\n        mdhd.pre_defined = 0;\r\n\r\n        return mdhd;\r\n    }\r\n\r\n    function createHdlrBox(mdia) {\r\n\r\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\r\n\r\n        hdlr.pre_defined = 0;\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n                hdlr.handler_type = 'vide';\r\n                break;\r\n            case constants.AUDIO:\r\n                hdlr.handler_type = 'soun';\r\n                break;\r\n            default:\r\n                hdlr.handler_type = 'meta';\r\n                break;\r\n        }\r\n        hdlr.name = representation.id;\r\n        hdlr.reserved = [0, 0, 0];\r\n\r\n        return hdlr;\r\n    }\r\n\r\n    function createVmhdBox(minf) {\r\n\r\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\r\n\r\n        vmhd.flags = 1;\r\n\r\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\r\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\r\n\r\n        return vmhd;\r\n    }\r\n\r\n    function createSmhdBox(minf) {\r\n\r\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\r\n\r\n        smhd.flags = 1;\r\n\r\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\r\n        smhd.reserved = 0;\r\n\r\n        return smhd;\r\n    }\r\n\r\n    function createDrefBox(dinf) {\r\n\r\n        let dref = ISOBoxer.createFullBox('dref', dinf);\r\n\r\n        dref.entry_count = 1;\r\n        dref.entries = [];\r\n\r\n        let url = ISOBoxer.createFullBox('url ', dref, false);\r\n        url.location = '';\r\n        url.flags = 1;\r\n\r\n        dref.entries.push(url);\r\n\r\n        return dref;\r\n    }\r\n\r\n    function createStsdBox(stbl) {\r\n\r\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\r\n\r\n        stsd.entries = [];\r\n        switch (adaptationSet.type) {\r\n            case constants.VIDEO:\r\n            case constants.AUDIO:\r\n                stsd.entries.push(createSampleEntry(stsd));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\r\n        return stsd;\r\n    }\r\n\r\n    function createSampleEntry(stsd) {\r\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\r\n\r\n        switch (codec) {\r\n            case 'avc1':\r\n                return createAVCVisualSampleEntry(stsd, codec);\r\n            case 'mp4a':\r\n                return createMP4AudioSampleEntry(stsd, codec);\r\n            default:\r\n                throw {\r\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\r\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\r\n                    data: {\r\n                        codec: codec\r\n                    }\r\n                };\r\n        }\r\n    }\r\n\r\n    function createAVCVisualSampleEntry(stsd, codec) {\r\n        let avc1;\r\n\r\n        if (contentProtection) {\r\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\r\n        } else {\r\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        avc1.data_reference_index = 1;\r\n\r\n        // VisualSampleEntry fields\r\n        avc1.pre_defined1 = 0;\r\n        avc1.reserved2 = 0;\r\n        avc1.pre_defined2 = [0, 0, 0];\r\n        avc1.height = representation.height;\r\n        avc1.width = representation.width;\r\n        avc1.horizresolution = 72; // 72 dpi\r\n        avc1.vertresolution = 72; // 72 dpi\r\n        avc1.reserved3 = 0;\r\n        avc1.frame_count = 1; // 1 compressed video frame per sample\r\n        avc1.compressorname = [\r\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\r\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\r\n        ];\r\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\r\n        avc1.pre_defined3 = 65535;\r\n        avc1.config = createAVC1ConfigurationRecord();\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', avc1);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return avc1;\r\n    }\r\n\r\n    function createAVC1ConfigurationRecord() {\r\n\r\n        let avcC = null;\r\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\r\n\r\n        // First get all SPS and PPS from codecPrivateData\r\n        let sps = [];\r\n        let pps = [];\r\n        let AVCProfileIndication = 0;\r\n        let AVCLevelIndication = 0;\r\n        let profile_compatibility = 0;\r\n\r\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\r\n        let naluBytes, naluType;\r\n\r\n        for (let i = 0; i < nalus.length; i++) {\r\n            naluBytes = hexStringtoBuffer(nalus[i]);\r\n\r\n            naluType = naluBytes[0] & 0x1F;\r\n\r\n            switch (naluType) {\r\n                case NALUTYPE_SPS:\r\n                    sps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\r\n                    break;\r\n                case NALUTYPE_PPS:\r\n                    pps.push(naluBytes);\r\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Get profile and level from SPS\r\n        if (sps.length > 0) {\r\n            AVCProfileIndication = sps[0][1];\r\n            profile_compatibility = sps[0][2];\r\n            AVCLevelIndication = sps[0][3];\r\n        }\r\n\r\n        // Generate avcC buffer\r\n        avcC = new Uint8Array(avcCLength);\r\n\r\n        let i = 0;\r\n        // length\r\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\r\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\r\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\r\n        avcC[i++] = (avcCLength & 0x000000FF);\r\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\r\n        i += 4;\r\n        avcC[i++] = 1; // configurationVersion = 1\r\n        avcC[i++] = AVCProfileIndication;\r\n        avcC[i++] = profile_compatibility;\r\n        avcC[i++] = AVCLevelIndication;\r\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\r\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\r\n        for (let n = 0; n < sps.length; n++) {\r\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (sps[n].length & 0x00FF);\r\n            avcC.set(sps[n], i);\r\n            i += sps[n].length;\r\n        }\r\n        avcC[i++] = pps.length; // numOfPictureParameterSets\r\n        for (let n = 0; n < pps.length; n++) {\r\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\r\n            avcC[i++] = (pps[n].length & 0x00FF);\r\n            avcC.set(pps[n], i);\r\n            i += pps[n].length;\r\n        }\r\n\r\n        return avcC;\r\n    }\r\n\r\n    function createMP4AudioSampleEntry(stsd, codec) {\r\n        let mp4a;\r\n\r\n        if (contentProtection) {\r\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\r\n        } else {\r\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\r\n        }\r\n\r\n        // SampleEntry fields\r\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n        mp4a.data_reference_index = 1;\r\n\r\n        // AudioSampleEntry fields\r\n        mp4a.reserved2 = [0x0, 0x0];\r\n        mp4a.channelcount = representation.audioChannels;\r\n        mp4a.samplesize = 16;\r\n        mp4a.pre_defined = 0;\r\n        mp4a.reserved_3 = 0;\r\n        mp4a.samplerate = representation.audioSamplingRate << 16;\r\n\r\n        mp4a.esds = createMPEG4AACESDescriptor();\r\n\r\n        if (contentProtection) {\r\n            // Create and add Protection Scheme Info Box\r\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\r\n\r\n            // Create and add Original Format Box => indicate codec type of the encrypted content\r\n            createOriginalFormatBox(sinf, codec);\r\n\r\n            // Create and add Scheme Type box\r\n            createSchemeTypeBox(sinf);\r\n\r\n            // Create and add Scheme Information Box\r\n            createSchemeInformationBox(sinf);\r\n        }\r\n\r\n        return mp4a;\r\n    }\r\n\r\n    function createMPEG4AACESDescriptor() {\r\n\r\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\r\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\r\n\r\n        // ESDS length = esds box header length (= 12) +\r\n        //               ES_Descriptor header length (= 5) +\r\n        //               DecoderConfigDescriptor header length (= 15) +\r\n        //               decoderSpecificInfo header length (= 2) +\r\n        //               AudioSpecificConfig length (= codecPrivateData length)\r\n        let esdsLength = 34 + audioSpecificConfig.length;\r\n        let esds = new Uint8Array(esdsLength);\r\n\r\n        let i = 0;\r\n        // esds box\r\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\r\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (esdsLength & 0x000000FF); // ''\r\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\r\n        i += 4;\r\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\r\n        i += 4;\r\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\r\n        esds[i++] = 20 + audioSpecificConfig.length; // size\r\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\r\n        esds[i++] = (trackId & 0x00FF); // ''\r\n        esds[i++] = 0; // flags and streamPriority\r\n\r\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\r\n        esds[i++] = 15 + audioSpecificConfig.length; // size\r\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\r\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\r\n        esds[i] |= 0 << 1; // upStream = 0\r\n        esds[i++] |= 1; // reserved = 1\r\n        esds[i++] = 0xFF; // buffersizeDB = undefined\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = 0xFF; // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\r\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\r\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\r\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\r\n\r\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\r\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\r\n        esds[i++] = audioSpecificConfig.length; // size\r\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\r\n\r\n        return esds;\r\n    }\r\n\r\n    function createOriginalFormatBox(sinf, codec) {\r\n        let frma = ISOBoxer.createBox('frma', sinf);\r\n        frma.data_format = stringToCharCode(codec);\r\n    }\r\n\r\n    function createSchemeTypeBox(sinf) {\r\n        let schm = ISOBoxer.createFullBox('schm', sinf);\r\n\r\n        schm.flags = 0;\r\n        schm.version = 0;\r\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\r\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\r\n    }\r\n\r\n    function createSchemeInformationBox(sinf) {\r\n        let schi = ISOBoxer.createBox('schi', sinf);\r\n\r\n        // Create and add Track Encryption Box\r\n        createTrackEncryptionBox(schi);\r\n    }\r\n\r\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\r\n        let pssh_bytes,\r\n            pssh,\r\n            i,\r\n            parsedBuffer;\r\n\r\n        for (i = 0; i < keySystems.length; i += 1) {\r\n            pssh_bytes = keySystems[i].initData;\r\n            if (pssh_bytes) {\r\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\r\n                pssh = parsedBuffer.fetch('pssh');\r\n                if (pssh) {\r\n                    ISOBoxer.Utils.appendBox(moov, pssh);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function createTrackEncryptionBox(schi) {\r\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\r\n\r\n        tenc.flags = 0;\r\n        tenc.version = 0;\r\n\r\n        tenc.default_IsEncrypted = 0x1;\r\n        tenc.default_IV_size = 8;\r\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\r\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\r\n    }\r\n\r\n    function createTrexBox(moov) {\r\n        let trex = ISOBoxer.createFullBox('trex', moov);\r\n\r\n        trex.track_ID = trackId;\r\n        trex.default_sample_description_index = 1;\r\n        trex.default_sample_duration = 0;\r\n        trex.default_sample_size = 0;\r\n        trex.default_sample_flags = 0;\r\n\r\n        return trex;\r\n    }\r\n\r\n    function hexStringtoBuffer(str) {\r\n        let buf = new Uint8Array(str.length / 2);\r\n        let i;\r\n\r\n        for (i = 0; i < str.length / 2; i += 1) {\r\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\r\n        }\r\n        return buf;\r\n    }\r\n\r\n    function stringToCharCode(str) {\r\n        let code = 0;\r\n        let i;\r\n\r\n        for (i = 0; i < str.length; i += 1) {\r\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\r\n        }\r\n        return code;\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        if (!rep || !rep.adaptation) {\r\n            return;\r\n        }\r\n\r\n        let isoFile,\r\n            arrayBuffer;\r\n\r\n        representation = rep;\r\n        adaptationSet = representation.adaptation;\r\n\r\n        period = adaptationSet.period;\r\n        trackId = adaptationSet.index + 1;\r\n        contentProtection = period.mpd.manifest.Period[period.index].AdaptationSet[adaptationSet.index].ContentProtection;\r\n\r\n        timescale = period.mpd.manifest.Period[period.index].AdaptationSet[adaptationSet.index].SegmentTemplate.timescale;\r\n\r\n        isoFile = ISOBoxer.createFile();\r\n        createFtypBox(isoFile);\r\n        createMoovBox(isoFile);\r\n\r\n        arrayBuffer = isoFile.write();\r\n\r\n        return arrayBuffer;\r\n    }\r\n\r\n    instance = {\r\n        generateMoov: generateMoov\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor.js';\r\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor.js';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\r\n\r\n\r\n// Add specific box processors not provided by codem-isoboxer library\r\n\r\nfunction arrayEqual(arr1, arr2) {\r\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\r\n        return element === arr2[index];\r\n    });\r\n}\r\n\r\nfunction saioProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('entry_count', 'uint', 32);\r\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\r\n}\r\n\r\nfunction saizProcessor() {\r\n    this._procFullBox();\r\n    if (this.flags & 1) {\r\n        this._procField('aux_info_type', 'uint', 32);\r\n        this._procField('aux_info_type_parameter', 'uint', 32);\r\n    }\r\n    this._procField('default_sample_info_size', 'uint', 8);\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.default_sample_info_size === 0) {\r\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\r\n    }\r\n}\r\n\r\nfunction sencProcessor() {\r\n    this._procFullBox();\r\n    this._procField('sample_count', 'uint', 32);\r\n    if (this.flags & 1) {\r\n        this._procField('IV_size', 'uint', 8);\r\n    }\r\n    this._procEntries('entry', this.sample_count, function (entry) {\r\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\r\n        if (this.flags & 2) {\r\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\r\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\r\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction uuidProcessor() {\r\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\r\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\r\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\r\n\r\n    if (arrayEqual(this.usertype, tfxdUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfxd';\r\n        }\r\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, tfrfUserType)) {\r\n        this._procFullBox();\r\n        if (this._parsing) {\r\n            this.type = 'tfrf';\r\n        }\r\n        this._procField('fragment_count', 'uint', 8);\r\n        this._procEntries('entry', this.fragment_count, function (entry) {\r\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\r\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\r\n        });\r\n    }\r\n\r\n    if (arrayEqual(this.usertype, sepiffUserType)) {\r\n        if (this._parsing) {\r\n            this.type = 'sepiff';\r\n        }\r\n        sencProcessor.call(this);\r\n    }\r\n}\r\n\r\nfunction MssFragmentProcessor(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const eventBus = config.eventBus;\r\n    const protectionController = config.protectionController;\r\n    const ISOBoxer = config.ISOBoxer;\r\n    const debug = config.debug;\r\n    let mssFragmentMoovProcessor,\r\n        mssFragmentMoofProcessor,\r\n        instance;\r\n\r\n    function setup() {\r\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\r\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\r\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\r\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\r\n\r\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\r\n            protectionController: protectionController,\r\n            constants: config.constants,\r\n            ISOBoxer: ISOBoxer});\r\n\r\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\r\n            dashMetrics: dashMetrics,\r\n            playbackController: playbackController,\r\n            ISOBoxer: ISOBoxer,\r\n            eventBus: eventBus,\r\n            debug: debug,\r\n            errHandler: config.errHandler\r\n        });\r\n    }\r\n\r\n    function generateMoov(rep) {\r\n        return mssFragmentMoovProcessor.generateMoov(rep);\r\n    }\r\n\r\n    function processFragment(e, streamProcessor) {\r\n        if (!e || !e.request || !e.response) {\r\n            throw new Error('e parameter is missing or malformed');\r\n        }\r\n\r\n        if (e.request.type === 'MediaSegment') {\r\n            // MediaSegment => convert to Smooth Streaming moof format\r\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\r\n\r\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n            // FragmentInfo (live) => update segments list\r\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\r\n\r\n            // Stop event propagation (FragmentInfo must not be added to buffer)\r\n            e.sender = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        generateMoov,\r\n        processFragment\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\r\n","var bigInt = function (undefined) {\r\n    'use strict';\r\n    var BASE = 1e7, LOG_BASE = 7, MAX_INT = 9007199254740992, MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n    var supportsNativeBigInt = typeof BigInt === 'function';\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === 'undefined') return Integer[0];\r\n        if (typeof radix !== 'undefined') return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v)\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false\r\n    }\r\n\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true\r\n    }\r\n\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value\r\n    }\r\n\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT\r\n    }\r\n\r\n    function smallToArray(n) {\r\n        if (n < 1e7) return [n];\r\n        if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)]\r\n    }\r\n\r\n    function arrayToSmall(arr) {\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0:\r\n                    return 0;\r\n                case 1:\r\n                    return arr[0];\r\n                case 2:\r\n                    return arr[0] + arr[1] * BASE;\r\n                default:\r\n                    return arr[0] + (arr[1] + arr[2] * BASE) * BASE\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0) ;\r\n        v.length = i + 1\r\n    }\r\n\r\n    function createArray(length) {\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0\r\n        }\r\n        return x\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n)\r\n    }\r\n\r\n    function add(a, b) {\r\n        var l_a = a.length, l_b = b.length, r = new Array(l_a), carry = 0, base = BASE, sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a)\r\n    }\r\n\r\n    function addSmall(a, carry) {\r\n        var l = a.length, r = new Array(l), base = BASE, sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base)\r\n        }\r\n        return r\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate())\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign)\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign)\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate())\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b))\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0)\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value)\r\n    };\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) {\r\n        var a_l = a.length, b_l = b.length, r = new Array(a_l), borrow = 0, base = BASE, i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1\r\n            } else borrow = 0;\r\n            r[i] = difference\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base; else {\r\n                r[i++] = difference;\r\n                break\r\n            }\r\n            r[i] = difference\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i]\r\n        }\r\n        trim(r);\r\n        return r\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b)\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === 'number') {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value)\r\n        }\r\n        return new BigInteger(value, sign)\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) {\r\n        var l = a.length, r = new Array(l), carry = -b, base = BASE, i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === 'number') {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r)\r\n        }\r\n        return new BigInteger(r, sign)\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate())\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign)\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate())\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b)\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0)\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value)\r\n    };\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign)\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value)\r\n    };\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false)\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value))\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value)\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length, b_l = b.length, l = a_l + b_l, r = createArray(l), base = BASE, product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry\r\n            }\r\n        }\r\n        trim(r);\r\n        return r\r\n    }\r\n\r\n    function multiplySmall(a, b) {\r\n        var l = a.length, r = new Array(l), base = BASE, carry = 0, product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base)\r\n        }\r\n        return r\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x)\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n        var b = x.slice(n), a = x.slice(0, n), d = y.slice(n), c = y.slice(0, n);\r\n        var ac = multiplyKaratsuba(a, c), bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product\r\n    }\r\n\r\n    function useKaratsuba(l1, l2) {\r\n        return -.012 * l1 - .012 * l2 + 15e-6 * l1 * l2 > 0\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v), a = this.value, b = n.value, sign = this.sign !== n.sign, abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign)\r\n            }\r\n            b = smallToArray(abs)\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign)\r\n    };\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) {\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign)\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign)\r\n    }\r\n\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value)\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign)\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign)\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this)\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value)\r\n    };\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        var l = a.length, r = createArray(l + l), base = BASE, product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base\r\n            }\r\n            r[i + l] = carry\r\n        }\r\n        trim(r);\r\n        return r\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false)\r\n    };\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false)\r\n    };\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value)\r\n    };\r\n\r\n    function divMod1(a, b) {\r\n        var a_l = a.length, b_l = b.length, base = BASE, result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1], lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda), divisor = multiplySmall(b, lambda), quotientDigit, shift, carry,\r\n            borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit)\r\n            }\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1\r\n                    }\r\n                }\r\n                borrow += carry\r\n            }\r\n            result[shift] = quotientDigit\r\n        }\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)]\r\n    }\r\n\r\n    function divMod2(a, b) {\r\n        var a_l = a.length, b_l = b.length, result = [], part = [], base = BASE, guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check)\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)]\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length, quotient = createArray(length), base = BASE, i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0\r\n        }\r\n        return [quotient, remainder | 0]\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)]\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error('Cannot divide by zero');\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)]\r\n            }\r\n            return [Integer[0], self]\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === 'number') {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)]\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)]\r\n            }\r\n            b = smallToArray(abs)\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n        if (a.length + b.length <= 200) value = divMod1(a, b); else value = divMod2(a, b);\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign, mod = value[1], mSign = self.sign;\r\n        if (typeof quotient === 'number') {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient)\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === 'number') {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod)\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod]\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return { quotient: result[0], remainder: result[1] }\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0]\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value)\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1]\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value)\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v), a = this.value, b = n.value, value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0]\r\n        }\r\n        if (!n.isSmall) throw new Error('The exponent ' + n.toString() + ' is too large.');\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value))\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square()\r\n        }\r\n        return y\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square()\r\n        }\r\n        return y\r\n    };\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error('Cannot take modPow with modulus 0');\r\n        var r = Integer[1], base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod)\r\n        }\r\n        return r\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1\r\n        }\r\n        return 0\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v), a = this.value, b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b)\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v), a = Math.abs(this.value), b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1\r\n        }\r\n        return -1\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1\r\n    };\r\n    BigInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1\r\n        }\r\n        var n = parseValue(v), a = this.value, b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1)\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1\r\n        }\r\n        var n = parseValue(v), a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1\r\n        }\r\n        return a < 0 ? 1 : -1\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1\r\n    };\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0)\r\n    };\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1)\r\n    };\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1)\r\n    };\r\n    BigInteger.prototype.isZero = function () {\r\n        return false\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0)\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero()\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(), b = nPrev, r = 0, d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next:for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next\r\n            }\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64) return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2))\r\n        }\r\n        return millerRabinTest(n, a)\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)))\r\n        }\r\n        return millerRabinTest(n, a)\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR))\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + ' and ' + n.toString() + ' are not co-prime');\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n)\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate()\r\n        }\r\n        return t\r\n    };\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign)\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign)\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false)\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1))\r\n    };\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true)\r\n        }\r\n        return subtractSmall(value, 1, this.sign)\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true)\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1))\r\n    };\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + ' is too large for shifting.')\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1\r\n        }\r\n        return result.multiply(powersOfTwo[n])\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + ' is too large for shifting.')\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || result.isNegative() && result.isUnit()) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0]\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x, yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit\r\n            }\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit\r\n            }\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit))\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]))\r\n        }\r\n        return sum\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev()\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) {\r\n            return a & b\r\n        })\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) {\r\n            return a | b\r\n        })\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) {\r\n            return a ^ b\r\n        })\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n\r\n    function roughLOB(n) {\r\n        var v = n.value,\r\n            x = typeof v === 'number' ? v | LOBMASK_I : typeof v === 'bigint' ? v | BigInt(LOBMASK_I) : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 }\r\n        }\r\n        return { p: bigInt(1), e: 0 }\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1))\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0)\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1))\r\n    };\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b\r\n    }\r\n\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b\r\n    }\r\n\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d)\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a))\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b))\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b;\r\n                b = a;\r\n                a = t\r\n            }\r\n            b = b.subtract(a)\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c)\r\n    }\r\n\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b)\r\n    }\r\n\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false))\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase()\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === '-') continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === '1' && absBase === 1) continue;\r\n                    throw new Error(c + ' is not a valid digit in base ' + base + '.')\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === '-';\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c])); else if (c === '<') {\r\n                var start = i;\r\n                do {\r\n                    i++\r\n                } while (text[i] !== '>' && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)))\r\n            } else throw new Error(c + ' is not a valid character')\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative)\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base)\r\n        }\r\n        return isNegative ? val.negate() : val\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit]\r\n        }\r\n        return '<' + digit + '>'\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error('Cannot convert nonzero numbers to base 0.')\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative()) return {\r\n                value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber())).map(Array.prototype.valueOf, [1, 0])),\r\n                isNegative: false\r\n            };\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1)).map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return { value: [].concat.apply([], arr), isNegative: false }\r\n        }\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs()\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            return { value: Array.apply(null, Array(n.toJSNumber())).map(Number.prototype.valueOf, 1), isNegative: neg }\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next()\r\n            }\r\n            out.push(digit.toJSNumber())\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg }\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? '-' : '') + arr.value.map(function (x) {\r\n            return stringify(x, alphabet)\r\n        }).join('')\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix)\r\n    };\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix)\r\n    };\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix)\r\n    };\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = '0000000', digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit\r\n        }\r\n        var sign = this.sign ? '-' : '';\r\n        return sign + str\r\n    };\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value)\r\n    };\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\r\n        return this.toString()\r\n    };\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10)\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10)\r\n    };\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x)) return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error('Invalid integer: ' + v)\r\n        }\r\n        var sign = v[0] === '-';\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error('Invalid integer: ' + split.join('e'));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === '+') exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error('Invalid integer: ' + exp + ' is not a valid exponent.');\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf('.');\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1)\r\n            }\r\n            if (exp < 0) throw new Error('Cannot include negative exponent part for integers');\r\n            text += new Array(exp + 1).join('0');\r\n            v = text\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error('Invalid integer: ' + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? '-' + v : v))\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign)\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v))\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + ' is not an integer.');\r\n            return new SmallInteger(v)\r\n        }\r\n        return parseStringValue(v.toString())\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === 'number') {\r\n            return parseNumberValue(v)\r\n        }\r\n        if (typeof v === 'string') {\r\n            return parseStringValue(v)\r\n        }\r\n        if (typeof v === 'bigint') {\r\n            return new NativeBigInt(v)\r\n        }\r\n        return v\r\n    }\r\n\r\n    for (var i = 0; i < 1e3; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i)\r\n    }\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) {\r\n        return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt\r\n    };\r\n    Integer.randBetween = randBetween;\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative)\r\n    };\r\n    return Integer\r\n}();\r\nif (typeof module !== 'undefined' && module.hasOwnProperty('exports')) {\r\n    module.exports = bigInt\r\n}\r\nif (typeof define === 'function' && define.amd) {\r\n    define('big-integer', [], function () {\r\n        return bigInt\r\n    })\r\n}\r\n\r\nexport default bigInt\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module MssParser\r\n * @ignore\r\n * @param {Object} config object\r\n */\r\n\r\nimport BigInt from '../../../externals/BigInteger.js';\r\n\r\nfunction MssParser(config) {\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n    const debug = config.debug;\r\n    const constants = config.constants;\r\n    const manifestModel = config.manifestModel;\r\n    const settings = config.settings;\r\n\r\n    const DEFAULT_TIME_SCALE = 10000000.0;\r\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AACH', 'AACP', 'AVC1', 'H264', 'TTML', 'DFXP'];\r\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\r\n    const ROLE = {\r\n        'CAPT': 'main',\r\n        'SUBT': 'alternate',\r\n        'DESC': 'main'\r\n    };\r\n    const ACCESSIBILITY = {\r\n        'DESC': '2'\r\n    };\r\n    const samplingFrequencyIndex = {\r\n        96000: 0x0,\r\n        88200: 0x1,\r\n        64000: 0x2,\r\n        48000: 0x3,\r\n        44100: 0x4,\r\n        32000: 0x5,\r\n        24000: 0x6,\r\n        22050: 0x7,\r\n        16000: 0x8,\r\n        12000: 0x9,\r\n        11025: 0xA,\r\n        8000: 0xB,\r\n        7350: 0xC\r\n    };\r\n    const mimeTypeMap = {\r\n        'video': 'video/mp4',\r\n        'audio': 'audio/mp4',\r\n        'text': 'application/mp4'\r\n    };\r\n\r\n    let instance,\r\n        logger,\r\n        initialBufferSettings;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function getAttributeAsBoolean(node, attrName) {\r\n        const value = node.getAttribute(attrName);\r\n        if (!value) return false;\r\n        return value.toLowerCase() === 'true';\r\n    }\r\n\r\n    function mapPeriod(smoothStreamingMedia, timescale) {\r\n        const period = {};\r\n        let streams,\r\n            adaptation;\r\n\r\n        // For each StreamIndex node, create an AdaptationSet element\r\n        period.AdaptationSet = [];\r\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\r\n        for (let i = 0; i < streams.length; i++) {\r\n            adaptation = mapAdaptationSet(streams[i], timescale);\r\n            if (adaptation !== null) {\r\n                period.AdaptationSet.push(adaptation);\r\n            }\r\n        }\r\n\r\n        return period;\r\n    }\r\n\r\n    function mapAdaptationSet(streamIndex, timescale) {\r\n        const adaptationSet = {};\r\n        const representations = [];\r\n        let segmentTemplate;\r\n        let qualityLevels,\r\n            representation,\r\n            i,\r\n            index;\r\n\r\n        const name = streamIndex.getAttribute('Name');\r\n        const type = streamIndex.getAttribute('Type');\r\n        const lang = streamIndex.getAttribute('Language');\r\n        const fallBackId = lang ? type + '_' + lang : type;\r\n\r\n        adaptationSet.id = name || fallBackId;\r\n        adaptationSet.contentType = type;\r\n        adaptationSet.lang = lang || 'und';\r\n        adaptationSet.mimeType = mimeTypeMap[type];\r\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\r\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\r\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\r\n\r\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\r\n        if (adaptationSet.subType) {\r\n            if (ROLE[adaptationSet.subType]) {\r\n                adaptationSet.Role = [{\r\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\r\n                    value: ROLE[adaptationSet.subType]\r\n                }];\r\n            }\r\n            if (ACCESSIBILITY[adaptationSet.subType]) {\r\n                adaptationSet.Accessibility = [{\r\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\r\n                    value: ACCESSIBILITY[adaptationSet.subType]\r\n                }];\r\n            }\r\n        }\r\n\r\n        // Create a SegmentTemplate with a SegmentTimeline\r\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\r\n\r\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\r\n        // For each QualityLevel node, create a Representation element\r\n        for (i = 0; i < qualityLevels.length; i++) {\r\n            // Propagate BaseURL and mimeType\r\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\r\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\r\n\r\n            // Set quality level id\r\n            index = qualityLevels[i].getAttribute('Index');\r\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\r\n\r\n            // Map Representation to QualityLevel\r\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\r\n\r\n            if (representation !== null) {\r\n                // Copy SegmentTemplate into Representation\r\n                representation.SegmentTemplate = segmentTemplate;\r\n\r\n                representations.push(representation);\r\n            }\r\n        }\r\n\r\n        if (representations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        adaptationSet.Representation = representations;\r\n\r\n        // Set SegmentTemplate\r\n        adaptationSet.SegmentTemplate = segmentTemplate;\r\n\r\n        return adaptationSet;\r\n    }\r\n\r\n    function mapRepresentation(qualityLevel, streamIndex) {\r\n        const representation = {};\r\n        const type = streamIndex.getAttribute('Type');\r\n        let fourCCValue = null;\r\n        let width = null;\r\n        let height = null;\r\n\r\n        representation.id = qualityLevel.Id;\r\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\r\n        representation.mimeType = qualityLevel.mimeType;\r\n\r\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\r\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\r\n        if (!isNaN(width)) representation.width = width;\r\n        if (!isNaN(height)) representation.height = height;\r\n\r\n\r\n        fourCCValue = qualityLevel.getAttribute('FourCC');\r\n\r\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            fourCCValue = streamIndex.getAttribute('FourCC');\r\n        }\r\n\r\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\r\n        // then we consider the stream is an audio AAC stream\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            if (type === constants.AUDIO) {\r\n                fourCCValue = 'AAC';\r\n            } else if (type === constants.VIDEO) {\r\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Check if codec is supported\r\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\r\n            // Do not send warning\r\n            logger.warn('Codec not supported: ' + fourCCValue);\r\n            return null;\r\n        }\r\n\r\n        // Get codecs value according to FourCC field\r\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\r\n            representation.codecs = getH264Codec(qualityLevel);\r\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\r\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\r\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\r\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\r\n            representation.codecs = constants.STPP;\r\n        }\r\n\r\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\r\n        representation.BaseURL = qualityLevel.BaseURL;\r\n\r\n        return representation;\r\n    }\r\n\r\n    function getH264Codec(qualityLevel) {\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let nalHeader,\r\n            avcoti;\r\n\r\n\r\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\r\n        // three bytes in the sequence parameter set NAL unit.\r\n        // => Find the SPS nal header\r\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\r\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\r\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\r\n\r\n        return 'avc1.' + avcoti;\r\n    }\r\n\r\n    function getAACCodec(qualityLevel, fourCCValue) {\r\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let objectType = 0;\r\n        let codecPrivateDataHex,\r\n            arr16,\r\n            indexFreq,\r\n            extensionSamplingFrequencyIndex;\r\n\r\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\r\n        //set objectType to 5 => strange, it should be 2\r\n        if (fourCCValue === 'AACH') {\r\n            objectType = 0x05;\r\n        }\r\n        //if codecPrivateData is empty, build it :\r\n        if (codecPrivateData === undefined || codecPrivateData === '') {\r\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\r\n            indexFreq = samplingFrequencyIndex[samplingRate];\r\n            if (fourCCValue === 'AACH') {\r\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\r\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\r\n                codecPrivateData = new Uint8Array(4);\r\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\r\n                // equals to SamplingRate*2\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\r\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\r\n                codecPrivateData[3] = 0x0; //alignment bits\r\n\r\n                arr16 = new Uint16Array(2);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\r\n\r\n            } else {\r\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\r\n                codecPrivateData = new Uint8Array(2);\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\r\n                // put the 2 bytes in an 16 bits array\r\n                arr16 = new Uint16Array(1);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n            }\r\n\r\n            codecPrivateData = '' + codecPrivateDataHex;\r\n            codecPrivateData = codecPrivateData.toUpperCase();\r\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\r\n        } else if (objectType === 0) {\r\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\r\n        }\r\n\r\n        return 'mp4a.40.' + objectType;\r\n    }\r\n\r\n    function mapSegmentTemplate(streamIndex, timescale) {\r\n        const segmentTemplate = {};\r\n        let mediaUrl,\r\n            streamIndexTimeScale,\r\n            url;\r\n\r\n        url = streamIndex.getAttribute('Url');\r\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\r\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\r\n\r\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\r\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\r\n\r\n        segmentTemplate.media = mediaUrl;\r\n        segmentTemplate.timescale = streamIndexTimeScale;\r\n\r\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\r\n\r\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\r\n        segmentTemplate.availabilityTimeOffset = 'INF';\r\n\r\n        return segmentTemplate;\r\n    }\r\n\r\n    function mapSegmentTimeline(streamIndex, timescale) {\r\n        const segmentTimeline = {};\r\n        const chunks = streamIndex.getElementsByTagName('c');\r\n        const segments = [];\r\n        let segment,\r\n            prevSegment,\r\n            tManifest,\r\n            i, j, r;\r\n        let duration = 0;\r\n\r\n        for (i = 0; i < chunks.length; i++) {\r\n            segment = {};\r\n\r\n            // Get time 't' attribute value\r\n            tManifest = chunks[i].getAttribute('t');\r\n\r\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\r\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\r\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\r\n                segment.tManifest = tManifest;\r\n            }\r\n            segment.t = parseFloat(tManifest);\r\n\r\n            // Get duration 'd' attribute value\r\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\r\n\r\n            // If 't' not defined for first segment then t=0\r\n            if ((i === 0) && !segment.t) {\r\n                segment.t = 0;\r\n            }\r\n\r\n            if (i > 0) {\r\n                prevSegment = segments[segments.length - 1];\r\n                // Update previous segment duration if not defined\r\n                if (!prevSegment.d) {\r\n                    if (prevSegment.tManifest) {\r\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\r\n                    } else {\r\n                        prevSegment.d = segment.t - prevSegment.t;\r\n                    }\r\n                    duration += prevSegment.d;\r\n                }\r\n                // Set segment absolute timestamp if not set in manifest\r\n                if (!segment.t) {\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\r\n                        segment.t = parseFloat(segment.tManifest);\r\n                    } else {\r\n                        segment.t = prevSegment.t + prevSegment.d;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (segment.d) {\r\n                duration += segment.d;\r\n            }\r\n\r\n            // Create new segment\r\n            segments.push(segment);\r\n\r\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\r\n            r = parseFloat(chunks[i].getAttribute('r'));\r\n            if (r) {\r\n\r\n                for (j = 0; j < (r - 1); j++) {\r\n                    prevSegment = segments[segments.length - 1];\r\n                    segment = {};\r\n                    segment.t = prevSegment.t + prevSegment.d;\r\n                    segment.d = prevSegment.d;\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\r\n                    }\r\n                    duration += segment.d;\r\n                    segments.push(segment);\r\n                }\r\n            }\r\n        }\r\n\r\n        segmentTimeline.S = segments;\r\n        segmentTimeline.duration = duration / timescale;\r\n\r\n        return segmentTimeline;\r\n    }\r\n\r\n    function getKIDFromProtectionHeader(protectionHeader) {\r\n        let prHeader,\r\n            wrmHeader,\r\n            xmlReader,\r\n            KID;\r\n\r\n        // Get PlayReady header as byte array (base64 decoded)\r\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\r\n\r\n        // Get Right Management header (WRMHEADER) from PlayReady header\r\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\r\n\r\n        if (wrmHeader) {\r\n            // Convert from multi-byte to unicode\r\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\r\n\r\n            // Convert to string\r\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\r\n\r\n            // Parse <WRMHeader> to get KID field value\r\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\r\n            KID = xmlReader.querySelector('KID').textContent;\r\n\r\n            // Get KID (base64 decoded) as byte array\r\n            KID = BASE64.decodeArray(KID);\r\n\r\n            // Convert UUID from little-endian to big-endian\r\n            convertUuidEndianness(KID);\r\n        }\r\n\r\n        return KID;\r\n    }\r\n\r\n    function getWRMHeaderFromPRHeader(prHeader) {\r\n        let length,\r\n            recordCount,\r\n            recordType,\r\n            recordLength,\r\n            recordValue;\r\n        let i = 0;\r\n\r\n        // Parse PlayReady header\r\n\r\n        // Length - 32 bits (LE format)\r\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\r\n        i += 4;\r\n\r\n        // Record count - 16 bits (LE format)\r\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\r\n        i += 2;\r\n\r\n        // Parse records\r\n        while (i < prHeader.length) {\r\n            // Record type - 16 bits (LE format)\r\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\r\n            i += 2;\r\n\r\n            // Check if Rights Management header (record type = 0x01)\r\n            if (recordType === 0x01) {\r\n\r\n                // Record length - 16 bits (LE format)\r\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\r\n                i += 2;\r\n\r\n                // Record value => contains <WRMHEADER>\r\n                recordValue = new Uint8Array(recordLength);\r\n                recordValue.set(prHeader.subarray(i, i + recordLength));\r\n                return recordValue;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertUuidEndianness(uuid) {\r\n        swapBytes(uuid, 0, 3);\r\n        swapBytes(uuid, 1, 2);\r\n        swapBytes(uuid, 4, 5);\r\n        swapBytes(uuid, 6, 7);\r\n    }\r\n\r\n    function swapBytes(bytes, pos1, pos2) {\r\n        const temp = bytes[pos1];\r\n        bytes[pos1] = bytes[pos2];\r\n        bytes[pos2] = temp;\r\n    }\r\n\r\n\r\n    function createPRContentProtection(protectionHeader) {\r\n        let pro = {\r\n            __text: protectionHeader.firstChild.data,\r\n            __prefix: 'mspr'\r\n        };\r\n        return {\r\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\r\n            value: 'com.microsoft.playready',\r\n            pro: pro\r\n        };\r\n    }\r\n\r\n    function createWidevineContentProtection(KID) {\r\n        let widevineCP = {\r\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\r\n            value: 'com.widevine.alpha'\r\n        };\r\n        if (!KID)\r\n            return widevineCP;\r\n        // Create Widevine CENC header (Protocol Buffer) with KID value\r\n        const wvCencHeader = new Uint8Array(2 + KID.length);\r\n        wvCencHeader[0] = 0x12;\r\n        wvCencHeader[1] = 0x10;\r\n        wvCencHeader.set(KID, 2);\r\n\r\n        // Create a pssh box\r\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\r\n        let pssh = new Uint8Array(length);\r\n        let i = 0;\r\n\r\n        // Set box length value\r\n        pssh[i++] = (length & 0xFF000000) >> 24;\r\n        pssh[i++] = (length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (length & 0x000000FF);\r\n\r\n        // Set type ('pssh'), version (0) and flags (0)\r\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\r\n        i += 8;\r\n\r\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\r\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\r\n        i += 16;\r\n\r\n        // Set data length value\r\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\r\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\r\n\r\n        // Copy Widevine CENC header\r\n        pssh.set(wvCencHeader, i);\r\n\r\n        // Convert to BASE64 string\r\n        pssh = String.fromCharCode.apply(null, pssh);\r\n        pssh = BASE64.encodeASCII(pssh);\r\n\r\n        widevineCP.pssh = { __text: pssh };\r\n\r\n        return widevineCP;\r\n    }\r\n\r\n    function processManifest(xmlDoc) {\r\n        const manifest = {};\r\n        const contentProtections = [];\r\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\r\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\r\n        let protectionHeader = null;\r\n        let period,\r\n            adaptations,\r\n            contentProtection,\r\n            KID,\r\n            timestampOffset,\r\n            startTime,\r\n            segments,\r\n            timescale,\r\n            segmentDuration,\r\n            i, j;\r\n\r\n        // Set manifest node properties\r\n        manifest.protocol = 'MSS';\r\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\r\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\r\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\r\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\r\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\r\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\r\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n        // Star-over\r\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n\r\n        if (dvrWindowLength > 0) {\r\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\r\n        }\r\n\r\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\r\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\r\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\r\n        manifest.minBufferTime = 2;\r\n        manifest.ttmlTimeIsRelative = true;\r\n\r\n        // Live manifest with Duration = start-over\r\n        if (manifest.type === 'dynamic' && duration > 0) {\r\n            manifest.type = 'static';\r\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\r\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\r\n            // Duration will be set according to current segment timeline duration (see below)\r\n        }\r\n\r\n        if (manifest.type === 'dynamic') {\r\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\r\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\r\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\r\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\r\n        }\r\n\r\n        // Map period node to manifest root node\r\n        period = mapPeriod(smoothStreamingMedia, manifest.timescale);\r\n        manifest.Period = [period];\r\n\r\n        // Initialize period start time\r\n        period.start = 0;\r\n\r\n        // Uncomment to test live to static manifests\r\n        // if (manifest.type !== 'static') {\r\n        //     manifest.type = 'static';\r\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\r\n        //     manifest.timeShiftBufferDepth = null;\r\n        // }\r\n\r\n        // ContentProtection node\r\n        if (protection !== undefined) {\r\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\r\n\r\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\r\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\r\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\r\n\r\n            // Get KID (in CENC format) from protection header\r\n            KID = getKIDFromProtectionHeader(protectionHeader);\r\n\r\n            // Create ContentProtection for PlayReady\r\n            contentProtection = createPRContentProtection(protectionHeader);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            // Create ContentProtection for Widevine (as a CENC protection)\r\n            contentProtection = createWidevineContentProtection(KID);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            manifest.ContentProtection = contentProtections;\r\n        }\r\n\r\n        adaptations = period.AdaptationSet;\r\n\r\n        for (i = 0; i < adaptations.length; i += 1) {\r\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\r\n            // Propagate content protection information into each adaptation\r\n            if (manifest.ContentProtection !== undefined) {\r\n                adaptations[i].ContentProtection = manifest.ContentProtection;\r\n                adaptations[i].ContentProtection = manifest.ContentProtection;\r\n            }\r\n\r\n            if (adaptations[i].contentType === 'video') {\r\n                // Get video segment duration\r\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S[0].d / adaptations[i].SegmentTemplate.timescale;\r\n                // Set minBufferTime to one segment duration\r\n                manifest.minBufferTime = segmentDuration;\r\n\r\n                if (manifest.type === 'dynamic') {\r\n                    // Match timeShiftBufferDepth to video segment timeline duration\r\n                    if (manifest.timeShiftBufferDepth > 0 &&\r\n                        manifest.timeShiftBufferDepth !== Infinity &&\r\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\r\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Cap minBufferTime to timeShiftBufferDepth\r\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\r\n\r\n        // In case of live streams:\r\n        // 1- configure player buffering properties according to target live delay\r\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\r\n        // 3- Set retry attempts and intervals for FragmentInfo requests\r\n        if (manifest.type === 'dynamic') {\r\n            let targetLiveDelay = settings.get().streaming.delay.liveDelay;\r\n            if (!targetLiveDelay) {\r\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\r\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\r\n            }\r\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\r\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\r\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\r\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\r\n\r\n            // Store initial buffer settings\r\n            initialBufferSettings = {\r\n                'streaming': {\r\n                    'buffer': {\r\n                        'bufferTimeDefault': settings.get().streaming.buffer.bufferTimeDefault,\r\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\r\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\r\n                    },\r\n                    'timeShiftBuffer': {\r\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\r\n                    },\r\n                    'delay': {\r\n                        'liveDelay': settings.get().streaming.delay.liveDelay\r\n                    }\r\n                }\r\n            };\r\n\r\n            settings.update({\r\n                'streaming': {\r\n                    'buffer': {\r\n                        'bufferTimeDefault': bufferTime,\r\n                        'bufferTimeAtTopQuality': bufferTime,\r\n                        'bufferTimeAtTopQualityLongForm': bufferTime\r\n                    },\r\n                    'timeShiftBuffer': {\r\n                        calcFromSegmentTimeline: true\r\n                    },\r\n                    'delay': {\r\n                        'liveDelay': liveDelay\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Delete Content Protection under root manifest node\r\n        delete manifest.ContentProtection;\r\n\r\n        // In case of VOD streams, check if start time is greater than 0\r\n        // Then determine timestamp offset according to higher audio/video start time\r\n        // (use case = live stream delinearization)\r\n        if (manifest.type === 'static') {\r\n            // In case of start-over stream and manifest reloading (due to track switch)\r\n            // we consider previous timestampOffset to keep timelines synchronized\r\n            var prevManifest = manifestModel.getValue();\r\n            if (prevManifest && prevManifest.timestampOffset) {\r\n                timestampOffset = prevManifest.timestampOffset;\r\n            } else {\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\r\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S;\r\n                        startTime = segments[0].t;\r\n                        if (timestampOffset === undefined) {\r\n                            timestampOffset = startTime;\r\n                        }\r\n                        timestampOffset = Math.min(timestampOffset, startTime);\r\n                        // Correct content duration according to minimum adaptation's segment timeline duration\r\n                        // in order to force <video> element sending 'ended' event\r\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\r\n                    }\r\n                }\r\n            }\r\n            if (timestampOffset > 0) {\r\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\r\n                manifest.timestampOffset = timestampOffset;\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S;\r\n                    for (j = 0; j < segments.length; j++) {\r\n                        if (!segments[j].tManifest) {\r\n                            segments[j].tManifest = segments[j].t.toString();\r\n                        }\r\n                        segments[j].t -= timestampOffset;\r\n                    }\r\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\r\n                        period.start = Math.max(segments[0].t, period.start);\r\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\r\n                    }\r\n                }\r\n                period.start /= manifest.timescale;\r\n            }\r\n        }\r\n\r\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\r\n        // and then avoid 'ended' event not being raised\r\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\r\n        period.duration = manifest.mediaPresentationDuration;\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function parseDOM(data) {\r\n        let xmlDoc = null;\r\n\r\n        if (window.DOMParser) {\r\n            const parser = new window.DOMParser();\r\n\r\n            xmlDoc = parser.parseFromString(data, 'text/xml');\r\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\r\n                throw new Error('parsing the manifest failed');\r\n            }\r\n        }\r\n\r\n        return xmlDoc;\r\n    }\r\n\r\n    function getIron() {\r\n        return null;\r\n    }\r\n\r\n    function internalParse(data) {\r\n        let xmlDoc = null;\r\n        let manifest = null;\r\n\r\n        const startTime = window.performance.now();\r\n\r\n        // Parse the MSS XML manifest\r\n        xmlDoc = parseDOM(data);\r\n\r\n        const xmlParseTime = window.performance.now();\r\n\r\n        if (xmlDoc === null) {\r\n            return null;\r\n        }\r\n\r\n        // Convert MSS manifest into DASH manifest\r\n        manifest = processManifest(xmlDoc, new Date());\r\n\r\n        const mss2dashTime = window.performance.now();\r\n\r\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function reset() {\r\n        // Restore initial buffer settings\r\n        if (initialBufferSettings) {\r\n            settings.update(initialBufferSettings);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        parse: internalParse,\r\n        getIron: getIron,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssParser.__dashjs_factory_name = 'MssParser';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DataChunk from '../streaming/vo/DataChunk.js';\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\r\nimport MssFragmentInfoController from './MssFragmentInfoController.js';\r\nimport MssFragmentProcessor from './MssFragmentProcessor.js';\r\nimport MssParser from './parser/MssParser.js';\r\nimport MssErrors from './errors/MssErrors.js';\r\nimport DashJSError from '../streaming/vo/DashJSError.js';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\r\n\r\nfunction MssHandler(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const constants = config.constants;\r\n    const initSegmentType = config.initSegmentType;\r\n    const playbackController = config.playbackController;\r\n    const streamController = config.streamController;\r\n    let mssParser,\r\n        mssFragmentProcessor,\r\n        fragmentInfoControllers,\r\n        instance;\r\n\r\n    function setup() {\r\n        fragmentInfoControllers = [];\r\n    }\r\n\r\n    function createMssFragmentProcessor() {\r\n        mssFragmentProcessor = MssFragmentProcessor(context).create(config);\r\n    }\r\n\r\n    function getStreamProcessor(type) {\r\n        return streamController.getActiveStreamProcessors().filter(processor => {\r\n            return processor.getType() === type;\r\n        })[0];\r\n    }\r\n\r\n    function getFragmentInfoController(type) {\r\n        return fragmentInfoControllers.filter(controller => {\r\n            return (controller.getType() === type);\r\n        })[0];\r\n    }\r\n\r\n    function createDataChunk(request, streamId, endFragment) {\r\n        const chunk = new DataChunk();\r\n\r\n        chunk.streamId = streamId;\r\n        chunk.mediaInfo = request.mediaInfo;\r\n        chunk.segmentType = request.type;\r\n        chunk.start = request.startTime;\r\n        chunk.duration = request.duration;\r\n        chunk.end = chunk.start + chunk.duration;\r\n        chunk.index = request.index;\r\n        chunk.quality = request.quality;\r\n        chunk.representationId = request.representationId;\r\n        chunk.endFragment = endFragment;\r\n\r\n        return chunk;\r\n    }\r\n\r\n    function startFragmentInfoControllers() {\r\n\r\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\r\n        let processors = streamController.getActiveStreamProcessors();\r\n        processors.forEach(function (processor) {\r\n            if (processor.getType() === constants.VIDEO ||\r\n                processor.getType() === constants.AUDIO ||\r\n                processor.getType() === constants.TEXT) {\r\n\r\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\r\n                if (!fragmentInfoController) {\r\n                    fragmentInfoController = MssFragmentInfoController(context).create({\r\n                        streamProcessor: processor,\r\n                        baseURLController: config.baseURLController,\r\n                        debug: config.debug\r\n                    });\r\n                    fragmentInfoController.initialize();\r\n                    fragmentInfoControllers.push(fragmentInfoController);\r\n                }\r\n                fragmentInfoController.start();\r\n            }\r\n        });\r\n    }\r\n\r\n    function stopFragmentInfoControllers() {\r\n        fragmentInfoControllers.forEach(c => {\r\n            c.reset();\r\n        });\r\n        fragmentInfoControllers = [];\r\n    }\r\n\r\n    function onInitFragmentNeeded(e) {\r\n        let streamProcessor = getStreamProcessor(e.mediaType);\r\n        if (!streamProcessor) return;\r\n\r\n        // Create init segment request\r\n        let representationController = streamProcessor.getRepresentationController();\r\n        let representation = representationController.getCurrentRepresentation();\r\n        let mediaInfo = streamProcessor.getMediaInfo();\r\n\r\n        let request = new FragmentRequest();\r\n        request.mediaType = representation.adaptation.type;\r\n        request.type = initSegmentType;\r\n        request.range = representation.range;\r\n        request.quality = representation.index;\r\n        request.mediaInfo = mediaInfo;\r\n        request.representationId = representation.id;\r\n\r\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\r\n\r\n        try {\r\n            // Generate init segment (moov)\r\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\r\n\r\n            // Notify init segment has been loaded\r\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\r\n                { chunk: chunk },\r\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\r\n            );\r\n        } catch (e) {\r\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\r\n        }\r\n\r\n        // Change the sender value to stop event to be propagated\r\n        e.sender = null;\r\n    }\r\n\r\n    function onSegmentMediaLoaded(e) {\r\n        if (e.error) return;\r\n\r\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\r\n        if (!streamProcessor) return;\r\n\r\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\r\n        mssFragmentProcessor.processFragment(e, streamProcessor);\r\n\r\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\r\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\r\n            if (fragmentInfoController) {\r\n                fragmentInfoController.fragmentInfoLoaded(e);\r\n            }\r\n        }\r\n\r\n        // Start MssFragmentInfoControllers in case of start-over streams\r\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\r\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackPaused() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onPlaybackSeeking() {\r\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\r\n            startFragmentInfoControllers();\r\n        }\r\n    }\r\n\r\n    function onTTMLPreProcess(ttmlSubtitles) {\r\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\r\n            return;\r\n        }\r\n\r\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\r\n    }\r\n\r\n    function registerEvents() {\r\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.PLAYBACK_SEEKING, onPlaybackSeeking, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\r\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\r\n    }\r\n\r\n    function reset() {\r\n        if (mssParser) {\r\n            mssParser.reset();\r\n            mssParser = undefined;\r\n        }\r\n\r\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\r\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\r\n        eventBus.off(events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\r\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\r\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\r\n\r\n        // Reset FragmentInfoControllers\r\n        stopFragmentInfoControllers();\r\n    }\r\n\r\n    function createMssParser() {\r\n        mssParser = MssParser(context).create(config);\r\n        return mssParser;\r\n    }\r\n\r\n    instance = {\r\n        reset,\r\n        createMssParser,\r\n        createMssFragmentProcessor,\r\n        registerEvents\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssHandler.__dashjs_factory_name = 'MssHandler';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\r\nfactory.errors = MssErrors;\r\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory; /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport MssHandler from './MssHandler.js';\r\n\r\n// Shove both of these into the global scope\r\nvar context = (typeof window !== 'undefined' && window) || global;\r\n\r\nvar dashjs = context.dashjs;\r\nif (!dashjs) {\r\n    dashjs = context.dashjs = {};\r\n}\r\n\r\ndashjs.MssHandler = MssHandler;\r\n\r\nexport default dashjs;\r\nexport { MssHandler };\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","this","streamId","mediaInfo","segmentType","quality","NaN","index","bytes","start","end","duration","representationId","endFragment","HTTPRequest","tcpid","type","url","actualurl","range","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","_resourceTimingValues","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","FragmentRequest","action","ACTION_DOWNLOAD","startTime","mediaStartTime","mediaType","timescale","serviceLocation","startDate","firstByteDate","endDate","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","info","init","ACTION_COMPLETE","MssFragmentInfoController","config","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period","AdaptationSet","segments","SegmentTemplate","SegmentTimeline","S","request","segment","t","d","getMediaInfo","adaptationIndex","id","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","length","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","e","deltaFragmentTime","deltaTime","delay","response","Date","getTime","Math","max","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","code","message","data","MssErrors","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","ErrorsBase","errors","override","publicOnly","err","indexOf","MediaPlayerEvents","AST_IN_FUTURE","BASE_URLS_UPDATED","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADING_STARTED","MANIFEST_LOADING_FINISHED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","THROUGHPUT_MEASUREMENT_STORED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_VOLUME_CHANGED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","CONTENT_STEERING_REQUEST_COMPLETED","INBAND_PRFT","EventsBase","events","evt","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","push","isPaused","splice","trigger","Events","sender","newDuration","DashJSError","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","i","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","floor","trun","tfxd","_parent","sepiff","usertype","undefined","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","Error","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createOriginalFormatBox","sinf","codec","createBox","data_format","str","charCodeAt","stringToCharCode","createSchemeTypeBox","schm","scheme_type","scheme_version","createSchemeInformationBox","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","hexStringtoBuffer","buf","Uint8Array","parseInt","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","moov","mvhd","creation_time","modification_time","Infinity","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","name","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","split","slice","set","n","createAVC1ConfigurationRecord","createAVCVisualSampleEntry","mp4a","audioSpecificConfig","esdsLength","esds","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","createMoovBox","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","context","processFragment","addBoxProcessor","create","bigInt","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","arrayToSmall","arr","trim","compareAbs","createArray","x","Array","truncate","ceil","add","a","b","sum","l_a","l_b","r","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","tmp","p","min","gcd","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","decimalPlace","test","parseNumberValue","toArray","toJSON","minusOne","lcm","isInstance","low","random","restricted","top","fromArray","MssParser","initialBufferSettings","BASE64","manifestModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","Role","schemeIdUri","Accessibility","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","KID","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protectionHeader","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","streams","mapPeriod","firstChild","wrmHeader","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","getKIDFromProtectionHeader","pro","__text","__prefix","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","initialization","targetLiveDelay","streaming","liveDelay","liveDelayFragmentCount","targetDelayCapping","bufferTime","bufferTimeDefault","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","window","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getIron","MssHandler","mssParser","mssFragmentProcessor","fragmentInfoControllers","initSegmentType","streamController","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","DataChunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeeking","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","createMssFragmentProcessor","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory","global"],"sourceRoot":""}