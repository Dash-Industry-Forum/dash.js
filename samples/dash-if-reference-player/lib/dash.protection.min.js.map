{"version":3,"file":"dash.protection.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/Protection.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.2\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.2',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 255;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK   = 'Facebook';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY).replace(/\\s\\s*$/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /\\bqbcore\\/([\\w\\.]+)/i                                              // WeChat Desktop for Windows Built-in Browser\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.]+) .*mobile\\/\\w+ (safari)/i                        // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w\\.]+) .*(mobile ?safari|safari)/i                     // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\w ]*);/i                                         // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}-[atu]?[ln][01259x][012359][an]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ ([c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)( bui|\\))/i,                                         // Kindle Fire without Silk\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic|sony)[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i               // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2)?)/i                                                     // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| safari)|pda(?=.+windows ce))/i              // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i                                       // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86)/i                              // Android-x86\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+ ([\\w\\.]+\\w)/i                                         // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = majorize(_browser.version);\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n * @ignore\r\n */\r\nconst FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let singletonContexts = [];\r\n    const singletonFactories = {};\r\n    const classFactories = {};\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        if (!context[name] && childInstance) {\r\n            context[name] = {\r\n                instance: childInstance,\r\n                override: override\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({\r\n            name: className,\r\n            context: context,\r\n            instance: instance\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this method to remove all singleton instances associated with a particular context.\r\n     *\r\n     * @param {Object} context\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function deleteSingletonInstances(context) {\r\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Factories storage Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function getFactoryByName(name, factoriesArray) {\r\n        return factoriesArray[name];\r\n    }\r\n\r\n    function updateFactory(name, factory, factoriesArray) {\r\n        if (name in factoriesArray) {\r\n            factoriesArray[name] = factory;\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Class Factories Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateClassFactory(name, factory) {\r\n        updateFactory(name, factory, classFactories);\r\n    }\r\n\r\n    function getClassFactoryByName(name) {\r\n        return getFactoryByName(name, classFactories);\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\r\n\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    create: function () {\r\n                        return merge(classConstructor, context, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n        return factory;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Singleton Factory MAangement\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateSingletonFactory(name, factory) {\r\n        updateFactory(name, factory, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactoryByName(name) {\r\n        return getFactoryByName(name, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                let instance;\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    getInstance: function () {\r\n                        // If we don't have an instance yet check for one on the context\r\n                        if (!instance) {\r\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                        }\r\n                        // If there's no instance on the context then create one\r\n                        if (!instance) {\r\n                            instance = merge(classConstructor, context, arguments);\r\n                            singletonContexts.push({\r\n                                name: classConstructor.__dashjs_factory_name,\r\n                                context: context,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                        return instance;\r\n                    }\r\n                };\r\n            };\r\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n\r\n        return factory;\r\n    }\r\n\r\n    function merge(classConstructor, context, args) {\r\n\r\n        let classInstance;\r\n        const className = classConstructor.__dashjs_factory_name;\r\n        const extensionObject = context[className];\r\n\r\n        if (extensionObject) {\r\n\r\n            let extension = extensionObject.instance;\r\n\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n\r\n                classInstance = classConstructor.apply({context}, args);\r\n                extension = extension.apply({\r\n                    context,\r\n                    factory: instance,\r\n                    parent: classInstance\r\n                }, args);\r\n\r\n                for (const prop in extension) {\r\n                    if (classInstance.hasOwnProperty(prop)) {\r\n                        classInstance[prop] = extension[prop];\r\n                    }\r\n                }\r\n\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n\r\n                return extension.apply({\r\n                    context,\r\n                    factory: instance\r\n                }, args);\r\n\r\n            }\r\n        } else {\r\n            // Create new instance of the class\r\n            classInstance = classConstructor.apply({context}, args);\r\n        }\r\n\r\n        // Add getClassName function to class instance prototype (used by Debug)\r\n        classInstance.getClassName = function () {return className;};\r\n\r\n        return classInstance;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        deleteSingletonInstances: deleteSingletonInstances,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getSingletonFactoryByName: getSingletonFactoryByName,\r\n        updateSingletonFactory: updateSingletonFactory,\r\n        getClassFactory: getClassFactory,\r\n        getClassFactoryByName: getClassFactoryByName,\r\n        updateClassFactory: updateClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nimport path from 'path-browserify'\r\nimport {UAParser} from 'ua-parser-js'\r\n\r\nclass Utils {\r\n    static mixin(dest, source, copy) {\r\n        let s;\r\n        let empty = {};\r\n        if (dest) {\r\n            for (let name in source) {\r\n                if (source.hasOwnProperty(name)) {\r\n                    s = source[name];\r\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\r\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\r\n                            dest[name] = Utils.mixin(dest[name], s, copy);\r\n                        } else {\r\n                            dest[name] = copy(s);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n\r\n    static clone(src) {\r\n        if (!src || typeof src !== 'object') {\r\n            return src; // anything\r\n        }\r\n        let r;\r\n        if (src instanceof Array) {\r\n            // array\r\n            r = [];\r\n            for (let i = 0, l = src.length; i < l; ++i) {\r\n                if (i in src) {\r\n                    r.push(Utils.clone(src[i]));\r\n                }\r\n            }\r\n        } else {\r\n            r = {};\r\n        }\r\n        return Utils.mixin(r, src, Utils.clone);\r\n    }\r\n\r\n    static addAditionalQueryParameterToUrl(url, params) {\r\n        try {\r\n            if (!params || params.length === 0) {\r\n                return url;\r\n            }\r\n\r\n            let modifiedUrl = new URL(url);\r\n\r\n            params.forEach((param) => {\r\n                if (param.key && param.value) {\r\n                    modifiedUrl.searchParams.set(param.key, param.value);\r\n                }\r\n            });\r\n\r\n            return modifiedUrl.href;\r\n\r\n\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    }\r\n\r\n    static parseHttpHeaders(headerStr) {\r\n        let headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n\r\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\r\n        // which send a string starting with a \"\\n\" character\r\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\r\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            let headerPair = headerPairs[i];\r\n            let index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    static generateUuid() {\r\n        let dt = new Date().getTime();\r\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    static generateHashCode(string) {\r\n        let hash = 0;\r\n\r\n        if (string.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const chr = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Compares both urls and returns a relative url (target relative to original)\r\n     * @param {string} originalUrl\r\n     * @param {string} targetUrl\r\n     * @return {string|*}\r\n     */\r\n    static getRelativeUrl(originalUrl, targetUrl) {\r\n        try {\r\n            const original = new URL(originalUrl);\r\n            const target = new URL(targetUrl);\r\n\r\n            // Unify the protocol to compare the origins\r\n            original.protocol = target.protocol;\r\n            if (original.origin !== target.origin) {\r\n                return targetUrl;\r\n            }\r\n\r\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\r\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\r\n\r\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\r\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\r\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\r\n\r\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\r\n            if (target.pathname.length < relativePath.length) {\r\n                return target.pathname;\r\n            }\r\n            return relativePath;\r\n        } catch (e) {\r\n            return targetUrl\r\n        }\r\n    }\r\n\r\n    static parseUserAgent(ua = null) {\r\n        try {\r\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\r\n\r\n            return UAParser(uaString);\r\n        } catch (e) {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks for existence of \"http\" or \"https\" in a string\r\n     * @param string\r\n     * @returns {boolean}\r\n     */\r\n    static stringHasProtocol(string) {\r\n        return (/(http(s?)):\\/\\//i.test(string))\r\n    }\r\n}\r\n\r\nexport default Utils;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Constants declaration\r\n */\r\nexport default {\r\n    /**\r\n     *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    STREAM: 'stream',\r\n\r\n    /**\r\n     *  @constant {string} VIDEO Video media type\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    VIDEO: 'video',\r\n\r\n    /**\r\n     *  @constant {string} AUDIO Audio media type\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    AUDIO: 'audio',\r\n\r\n    /**\r\n     *  @constant {string} TEXT Text media type\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TEXT: 'text',\r\n\r\n    /**\r\n     *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    MUXED: 'muxed',\r\n\r\n    /**\r\n     *  @constant {string} IMAGE Image media type\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    IMAGE: 'image',\r\n\r\n    /**\r\n     *  @constant {string} STPP STTP Subtitles format\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    STPP: 'stpp',\r\n\r\n    /**\r\n     *  @constant {string} TTML STTP Subtitles format\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TTML: 'ttml',\r\n\r\n    /**\r\n     *  @constant {string} VTT STTP Subtitles format\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    VTT: 'vtt',\r\n\r\n    /**\r\n     *  @constant {string} WVTT STTP Subtitles format\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    WVTT: 'wvtt',\r\n\r\n    /**\r\n     *  @constant {string} Content Steering\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    CONTENT_STEERING: 'contentSteering',\r\n\r\n    /**\r\n     *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    LIVE_CATCHUP_MODE_DEFAULT: 'liveCatchupModeDefault',\r\n\r\n    /**\r\n     *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    LIVE_CATCHUP_MODE_LOLP: 'liveCatchupModeLoLP',\r\n\r\n    /**\r\n     *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    MOVING_AVERAGE_SLIDING_WINDOW: 'slidingWindow',\r\n\r\n    /**\r\n     *  @constant {string} EWMA Exponential moving average\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    MOVING_AVERAGE_EWMA: 'ewma',\r\n\r\n    /**\r\n     *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    BAD_ARGUMENT_ERROR: 'Invalid Arguments',\r\n\r\n    /**\r\n     *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    MISSING_CONFIG_ERROR: 'Missing config parameter(s)',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SWITCH_MODE_ALWAYS_REPLACE: 'alwaysReplace',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SWITCH_MODE_NEVER_REPLACE: 'neverReplace',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SELECTION_MODE_FIRST_TRACK: 'firstTrack',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SELECTION_MODE_HIGHEST_BITRATE: 'highestBitrate',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY: 'highestEfficiency',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SELECTION_MODE_WIDEST_RANGE: 'widestRange',\r\n\r\n    /**\r\n     *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY: 'highestSelectionPriority',\r\n\r\n    /**\r\n     *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    CMCD_MODE_QUERY: 'query',\r\n\r\n    /**\r\n     *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\r\n     *  @memberof Constants#\r\n     *  @static\r\n     */\r\n    CMCD_MODE_HEADER: 'header',\r\n    INITIALIZE: 'initialize',\r\n    TEXT_SHOWING: 'showing',\r\n    TEXT_HIDDEN: 'hidden',\r\n    ACCESSIBILITY_CEA608_SCHEME: 'urn:scte:dash:cc:cea-608:2015',\r\n    CC1: 'CC1',\r\n    CC3: 'CC3',\r\n    UTF8: 'utf-8',\r\n    SCHEME_ID_URI: 'schemeIdUri',\r\n    START_TIME: 'starttime',\r\n    SERVICE_DESCRIPTION_DVB_LL_SCHEME: 'urn:dvb:dash:lowlatency:scope:2019',\r\n    SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME: 'urn:dvb:dash:lowlatency:critical:2019',\r\n    XML: 'XML',\r\n    ARRAY_BUFFER: 'ArrayBuffer',\r\n    DVB_REPORTING_URL: 'dvb:reportingUrl',\r\n    DVB_PROBABILITY: 'dvb:probability',\r\n    VIDEO_ELEMENT_READY_STATES: {\r\n        HAVE_NOTHING: 0,\r\n        HAVE_METADATA: 1,\r\n        HAVE_CURRENT_DATA: 2,\r\n        HAVE_FUTURE_DATA: 3,\r\n        HAVE_ENOUGH_DATA: 4\r\n    },\r\n    FILE_LOADER_TYPES: {\r\n        FETCH: 'fetch_loader',\r\n        XHR: 'xhr_loader'\r\n    },\r\n    THROUGHPUT_TYPES: {\r\n        LATENCY: 'throughput_type_latency',\r\n        BANDWIDTH: 'throughput_type_bandwidth'\r\n    },\r\n    THROUGHPUT_CALCULATION_MODES: {\r\n        EWMA: 'throughputCalculationModeEwma',\r\n        ZLEMA: 'throughputCalculationModeZlema',\r\n        ARITHMETIC_MEAN: 'throughputCalculationModeArithmeticMean',\r\n        BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN: 'throughputCalculationModeByteSizeWeightedArithmeticMean',\r\n        DATE_WEIGHTED_ARITHMETIC_MEAN: 'throughputCalculationModeDateWeightedArithmeticMean',\r\n        HARMONIC_MEAN: 'throughputCalculationModeHarmonicMean',\r\n        BYTE_SIZE_WEIGHTED_HARMONIC_MEAN: 'throughputCalculationModeByteSizeWeightedHarmonicMean',\r\n        DATE_WEIGHTED_HARMONIC_MEAN: 'throughputCalculationModeDateWeightedHarmonicMean',\r\n    },\r\n    LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE: {\r\n        MOOF_PARSING: 'lowLatencyDownloadTimeCalculationModeMoofParsing',\r\n        DOWNLOADED_DATA: 'lowLatencyDownloadTimeCalculationModeDownloadedData',\r\n        AAST: 'lowLatencyDownloadTimeCalculationModeAast',\r\n    },\r\n    RULES_TYPES: {\r\n        QUALITY_SWITCH_RULES: 'qualitySwitchRules',\r\n        ABANDON_FRAGMENT_RULES: 'abandonFragmentRules'\r\n    },\r\n    QUALITY_SWITCH_RULES: {\r\n        BOLA_RULE: 'BolaRule',\r\n        THROUGHPUT_RULE: 'ThroughputRule',\r\n        INSUFFICIENT_BUFFER_RULE: 'InsufficientBufferRule',\r\n        SWITCH_HISTORY_RULE: 'SwitchHistoryRule',\r\n        DROPPED_FRAMES_RULE: 'DroppedFramesRule',\r\n        LEARN_TO_ADAPT_RULE: 'L2ARule',\r\n        LOL_PLUS_RULE: 'LoLPRule'\r\n    },\r\n    ABANDON_FRAGMENT_RULES: {\r\n        ABANDON_REQUEST_RULE: 'AbandonRequestsRule'\r\n    }\r\n}\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n        /**\r\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\r\n         * @public\r\n         */\r\n        this.cmsd = null;\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n        /**\r\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\r\n         */\r\n        this._fileLoaderType = null;\r\n        /**\r\n         * The values derived from the ResourceTimingAPI.\r\n         */\r\n        this._resourceTimingValues = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport {HTTPRequest, HTTPRequestTrace};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nconst LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\r\n    attributes: ['Laurl', 'laurl'],\r\n    prefixes: ['clearkey', 'dashif']\r\n};\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param {Array} cpArray array of content protection elements\r\n     * @returns {Object|null} the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        let retVal = null;\r\n        for (let i = 0; i < cpArray.length; ++i) {\r\n            let cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param {ArrayBuffer} pssh - the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        let offset = 8; // Box size and type fields\r\n        let view = new DataView(pssh);\r\n\r\n        // Read version\r\n        let version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        let psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param {Object} cpData the ContentProtection element\r\n     * @param {BASE64} BASE64 reference\r\n     * @returns {ArrayBuffer|null} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData, BASE64) {\r\n        if ('pssh' in cpData) {\r\n\r\n            // Remove whitespaces and newlines from pssh text\r\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\r\n\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {Object|Array} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null || data === undefined)\r\n            return [];\r\n\r\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\r\n        let done = false;\r\n        let pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        let byteCursor = 0;\r\n        while (!done) {\r\n\r\n            let size,\r\n                nextBox,\r\n                version,\r\n                systemID;\r\n            let boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            let i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n\r\n    static getLicenseServerUrlFromMediaInfo(mediaInfo, schemeIdUri) {\r\n        try {\r\n\r\n            if (!mediaInfo || mediaInfo.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            let i = 0;\r\n            let licenseServer = null;\r\n\r\n            while (i < mediaInfo.length && !licenseServer) {\r\n                const info = mediaInfo[i];\r\n\r\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\r\n                    const targetProtectionData = info.contentProtection.filter((cp) => {\r\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdUri;\r\n                    });\r\n\r\n                    if (targetProtectionData && targetProtectionData.length > 0) {\r\n                        let j = 0;\r\n                        while (j < targetProtectionData.length && !licenseServer) {\r\n                            const ckData = targetProtectionData[j];\r\n                            let k = 0;\r\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\r\n                                let l = 0;\r\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\r\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\r\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\r\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\r\n                                        licenseServer = ckData[attribute].__text;\r\n                                    }\r\n                                    l += 1;\r\n                                }\r\n                                k += 1;\r\n                            }\r\n                            j += 1;\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return licenseServer;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc A media capability\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    /**\r\n     * @param {string} contentType MIME type and codecs (RFC6386)\r\n     * @param {string} robustness\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Represents a set of configurations that describe the capabilities desired for\r\n *  support by a given CDM\r\n * @ignore\r\n */\r\nclass KeySystemConfiguration {\r\n    /**\r\n     * @param {Array.<MediaCapability>} audioCapabilities array of\r\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {Array.<MediaCapability>} videoCapabilities array of\r\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\r\n     * One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {string} persistentState desired support for persistent storage of\r\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {Array.<string>} sessionTypes List of session types that must\r\n     * be supported by the key system\r\n     * @class\r\n     */\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        if (audioCapabilities && audioCapabilities.length) {\r\n            this.audioCapabilities = audioCapabilities;\r\n        }\r\n        if (videoCapabilities && videoCapabilities.length) {\r\n            this.videoCapabilities = videoCapabilities;\r\n        }\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../../core/errors/ErrorsBase.js';\r\n\r\n/**\r\n * @class\r\n */\r\nclass ProtectionErrors extends ErrorsBase {\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         *  Generid key Error code\r\n         */\r\n        this.MEDIA_KEYERR_CODE = 100;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\r\n\r\n        /**\r\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\r\n        /**\r\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\r\n        /**\r\n         *  Error code returned when License server certificate has not been successfully updated\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\r\n        /**\r\n         *  Error code returned when license validity has expired\r\n         */\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\r\n        /**\r\n         *  Error code returned when no licenser url is defined\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\r\n        /**\r\n         *  Error code returned when key system access is denied\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\r\n        /**\r\n         *  Error code returned when key session has not been successfully created\r\n         */\r\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\r\n        /**\r\n         *  Error code returned when license request failed after a keymessage event has been triggered\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\r\n\r\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\r\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\r\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\r\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\r\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\r\n    }\r\n}\r\n\r\nlet protectionErrors = new ProtectionErrors();\r\nexport default protectionErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license request\r\n * @ignore\r\n */\r\nclass LicenseRequest {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     */\r\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\r\n\r\n        /**\r\n         * The license request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTTP method\r\n         */\r\n        this.method = method;\r\n\r\n        /**\r\n         * The HTTP response type\r\n         */\r\n        this.responseType = responseType;\r\n\r\n        /**\r\n         * The HTP request headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * Wether request is done using credentials (cross-site cookies)\r\n         */\r\n        this.withCredentials = withCredentials;\r\n\r\n        /**\r\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\r\n         */\r\n        this.messageType = messageType;\r\n\r\n        /**\r\n         * The corresponding EME session ID\r\n         */\r\n        this.sessionId = sessionId;\r\n\r\n        /**\r\n         * The license request data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license response\r\n */\r\nclass LicenseResponse {\r\n    /**\r\n     * Defines a license response\r\n     *\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(url, headers, data) {\r\n\r\n        /**\r\n         * The url that was loaded, that can be redirected from original request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTP response headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * The license response data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseResponse;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport MediaCapability from '../vo/MediaCapability.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport ProtectionErrors from '../errors/ProtectionErrors.js';\r\nimport DashJSError from '../../vo/DashJSError.js';\r\nimport LicenseRequest from '../vo/LicenseRequest.js';\r\nimport LicenseResponse from '../vo/LicenseResponse.js';\r\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest.js';\r\nimport Utils from '../../../core/Utils.js';\r\nimport Constants from '../../constants/Constants.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\r\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\r\n\r\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\r\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\r\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\r\n\r\n/**\r\n * @module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n * This module can be accessed using the MediaPlayer API getProtectionController()\r\n * @param {Object} config\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    config = config || {};\r\n    const protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const BASE64 = config.BASE64;\r\n    const constants = config.constants;\r\n    let needkeyRetries = [];\r\n    const cmcdModel = config.cmcdModel;\r\n    const settings = config.settings;\r\n    const customParametersModel = config.customParametersModel;\r\n\r\n    let instance,\r\n        logger,\r\n        pendingKeySessionsToHandle,\r\n        mediaInfoArr,\r\n        protDataSet,\r\n        sessionType,\r\n        robustnessLevel,\r\n        selectedKeySystem,\r\n        keySystemSelectionInProgress,\r\n        licenseXhrRequest,\r\n        licenseRequestRetryTimeout;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        pendingKeySessionsToHandle = [];\r\n        mediaInfoArr = [];\r\n        sessionType = 'temporary';\r\n        robustnessLevel = '';\r\n        licenseXhrRequest = null;\r\n        licenseRequestRetryTimeout = null;\r\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system for a given media type.\r\n     *\r\n     * @param {StreamInfo} [mediaInfo] Media information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function initializeForMedia(mediaInfo) {\r\n        // Not checking here if a session for similar KS/KID combination is already created\r\n        // because still don't know which keysystem will be selected.\r\n        // Once Keysystem is selected and before creating the session, we will do that check\r\n        // so we create the strictly necessary DRM sessions\r\n        if (!mediaInfo) {\r\n            throw new Error('mediaInfo can not be null or undefined');\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        mediaInfoArr.push(mediaInfo);\r\n    }\r\n\r\n    /**\r\n     * Once all mediaInfo objects have been added to our mediaInfoArray we can select a key system or check if the kid has changed and we need to trigger a new license request\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function handleKeySystemFromManifest() {\r\n        if (!mediaInfoArr || mediaInfoArr.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let supportedKeySystems = [];\r\n        mediaInfoArr.forEach((mInfo) => {\r\n            const currentKs = protectionKeyController.getSupportedKeySystemsFromContentProtection(mInfo.contentProtection, protDataSet, sessionType);\r\n            // We assume that the same key systems are signaled for each AS. We can use the first entry we found\r\n            if (currentKs.length > 0) {\r\n                if (supportedKeySystems.length === 0) {\r\n                    supportedKeySystems = currentKs;\r\n                }\r\n                // Save config for creating key session once we selected a key system\r\n                pendingKeySessionsToHandle.push(currentKs);\r\n            }\r\n        })\r\n\r\n        if (supportedKeySystems && supportedKeySystems.length > 0) {\r\n            _selectKeySystemOrUpdateKeySessions(supportedKeySystems, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selects a key system if we dont have any one yet. Otherwise we use the existing key system and trigger a new license request if the initdata has changed\r\n     * @param {array} supportedKs\r\n     * @private\r\n     */\r\n    function _handleKeySystemFromPssh(supportedKs) {\r\n        pendingKeySessionsToHandle.push(supportedKs);\r\n        _selectKeySystemOrUpdateKeySessions(supportedKs, false);\r\n    }\r\n\r\n    /**\r\n     * Select the key system or update one of our existing key sessions\r\n     * @param {array} supportedKs\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectKeySystemOrUpdateKeySessions(supportedKs, fromManifest) {\r\n        // First time, so we need to select a key system\r\n        if (!selectedKeySystem && !keySystemSelectionInProgress) {\r\n            _selectInitialKeySystem(supportedKs, fromManifest);\r\n        }\r\n\r\n        // We already selected a key system. We only need to trigger a new license exchange if the init data has changed\r\n        else if (selectedKeySystem) {\r\n            _handleKeySessions();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We do not have a key system yet. Select one\r\n     * @param {array} supportedKs\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectInitialKeySystem(supportedKs, fromManifest) {\r\n        if (!keySystemSelectionInProgress) {\r\n            keySystemSelectionInProgress = true;\r\n            const requestedKeySystems = [];\r\n\r\n            // Reorder key systems according to priority order provided in protectionData\r\n            supportedKs = supportedKs.sort((ksA, ksB) => {\r\n                let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKs.length;\r\n                let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKs.length;\r\n                return indexA - indexB;\r\n            });\r\n\r\n            // Add all key systems to our request list since we have yet to select a key system\r\n            for (let i = 0; i < supportedKs.length; i++) {\r\n                const keySystemConfiguration = _getKeySystemConfiguration(supportedKs[i]);\r\n                requestedKeySystems.push({\r\n                    ks: supportedKs[i].ks,\r\n                    configs: [keySystemConfiguration],\r\n                    protData: supportedKs[i].protData\r\n                });\r\n            }\r\n\r\n            let keySystemAccess;\r\n\r\n            protectionModel.requestKeySystemAccess(requestedKeySystems)\r\n                .then((event) => {\r\n                    keySystemAccess = event.data;\r\n                    let selectedSystemString = keySystemAccess.mksa && keySystemAccess.mksa.selectedSystemString ? keySystemAccess.mksa.selectedSystemString : keySystemAccess.keySystem.systemString;\r\n                    logger.info('DRM: KeySystem Access Granted for system string (' + selectedSystemString + ')!  Selecting key system...');\r\n                    return protectionModel.selectKeySystem(keySystemAccess);\r\n                })\r\n                .then((keySystem) => {\r\n                    selectedKeySystem = keySystem;\r\n                    keySystemSelectionInProgress = false;\r\n\r\n                    if (!protectionModel) {\r\n                        return;\r\n                    }\r\n\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\r\n\r\n                    // Set server certificate from protData\r\n                    const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n                    if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\r\n                        protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\r\n                    }\r\n\r\n                    _handleKeySessions();\r\n                })\r\n                .catch((event) => {\r\n                    selectedKeySystem = null;\r\n                    keySystemSelectionInProgress = false;\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\r\n                            data: null,\r\n                            error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If we have already selected a key system we only need to create a new key session and issue a new license request if the init data has changed.\r\n     * @private\r\n     */\r\n    function _handleKeySessions() {\r\n        // Create key sessions for the different AdaptationSets\r\n        let ksIdx;\r\n        for (let i = 0; i < pendingKeySessionsToHandle.length; i++) {\r\n            for (ksIdx = 0; ksIdx < pendingKeySessionsToHandle[i].length; ksIdx++) {\r\n                if (selectedKeySystem === pendingKeySessionsToHandle[i][ksIdx].ks) {\r\n                    const current = pendingKeySessionsToHandle[i][ksIdx]\r\n                    _loadOrCreateKeySession(current)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        pendingKeySessionsToHandle = [];\r\n    }\r\n\r\n    /**\r\n     * Loads an existing key session if we already have a session id. Otherwise we create a new key session\r\n     * @param {object} keySystemInfo\r\n     * @private\r\n     */\r\n    function _loadOrCreateKeySession(keySystemInfo) {\r\n        // Clearkey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\r\n            // initData and overwrite possible initData indicated in encrypted event (EME)\r\n            if (keySystemInfo.protData && keySystemInfo.protData.hasOwnProperty('clearkeys') && Object.keys(keySystemInfo.protData.clearkeys).length !== 0) {\r\n                const initData = { kids: Object.keys(keySystemInfo.protData.clearkeys) };\r\n                keySystemInfo.initData = new TextEncoder().encode(JSON.stringify(initData));\r\n            }\r\n        }\r\n\r\n        // Reuse existing KeySession\r\n        if (keySystemInfo.sessionId) {\r\n            // Load MediaKeySession with sessionId\r\n            loadKeySession(keySystemInfo);\r\n        }\r\n\r\n        // Create a new KeySession\r\n        else if (keySystemInfo.initData !== null) {\r\n            // Create new MediaKeySession with initData\r\n            createKeySession(keySystemInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This essentially creates a new key session\r\n     *\r\n     * @param {object} ksInfo\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function loadKeySession(keySystemInfo) {\r\n        checkConfig();\r\n        protectionModel.loadKeySession(keySystemInfo);\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from the MPD or from the PSSH box in the media\r\n     * For the latest version of the EME a request is generated. Once this request is ready we get notified via the INTERNAL_KEY_MESSAGE event\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function createKeySession(keySystemInfo) {\r\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, keySystemInfo ? keySystemInfo.initData : null);\r\n\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate key id\r\n            if (_isKeyIdDuplicate(keySystemInfo.keyId)) {\r\n                return;\r\n            }\r\n\r\n            // Check for duplicate initData\r\n            if (_isInitDataDuplicate(initDataForKS)) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                keySystemInfo.initData = initDataForKS;\r\n                protectionModel.createKeySession(keySystemInfo);\r\n            } catch (error) {\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\r\n                });\r\n            }\r\n        } else if (keySystemInfo && keySystemInfo.initData) {\r\n            protectionModel.createKeySession(keySystemInfo);\r\n        } else {\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (selectedKeySystem ? selectedKeySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the protectionData for a specific keysystem as specified by the application.\r\n     * @param {object} keySystem\r\n     * @return {object | null}\r\n     * @private\r\n     */\r\n    function _getProtDataForKeySystem(keySystem) {\r\n        if (keySystem) {\r\n            const keySystemString = keySystem.systemString;\r\n\r\n            if (protDataSet) {\r\n                return (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes all entries from the mediaInfoArr\r\n     */\r\n    function clearMediaInfoArray() {\r\n        mediaInfoArr = [];\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        checkConfig();\r\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType);\r\n    }\r\n\r\n    /**\r\n     * Checks if a session has already created for the provided key id\r\n     * @param {string} keyId\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isKeyIdDuplicate(keyId) {\r\n\r\n        if (!keyId) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const sessions = protectionModel.getSessions();\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                if (sessions[i].getKeyId() === keyId) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the provided init data is equal to one of the existing init data values\r\n     * @param {any} initDataForKS\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isInitDataDuplicate(initDataForKS) {\r\n\r\n        if (!initDataForKS) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const currentInitData = protectionModel.getAllInitData();\r\n            for (let i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        checkConfig();\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        checkConfig();\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(events.NEED_KEY, _onNeedKey, instance);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(events.NEED_KEY, _onNeedKey, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {string} value the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\r\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\r\n     *\r\n     * @param {string} level the robustness level\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setRobustnessLevel(level) {\r\n        robustnessLevel = level;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n        protectionKeyController.setProtectionData(data);\r\n    }\r\n\r\n    /**\r\n     * Stop method is called when current playback is stopped/resetted.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function stop() {\r\n        _abortLicenseRequest();\r\n        if (protectionModel) {\r\n            protectionModel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function reset() {\r\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n\r\n        checkConfig();\r\n\r\n        _abortLicenseRequest();\r\n\r\n        setMediaElement(null);\r\n\r\n        selectedKeySystem = null;\r\n        keySystemSelectionInProgress = false;\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n\r\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\r\n        needkeyRetries = [];\r\n\r\n        mediaInfoArr = [];\r\n        pendingKeySessionsToHandle = [];\r\n    }\r\n\r\n    /**\r\n     * Returns an object corresponding to the EME MediaKeySystemConfiguration dictionary\r\n     * @param {object} keySystem\r\n     * @return {KeySystemConfiguration}\r\n     * @private\r\n     */\r\n    function _getKeySystemConfiguration(keySystemData) {\r\n        const protData = keySystemData.protData;\r\n        const audioCapabilities = [];\r\n        const videoCapabilities = [];\r\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\r\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\r\n        const ksSessionType = keySystemData.sessionType;\r\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\r\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\r\n\r\n        mediaInfoArr.forEach((media) => {\r\n            if (media.type === constants.AUDIO) {\r\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\r\n            } else if (media.type === constants.VIDEO) {\r\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\r\n            }\r\n        });\r\n\r\n        return new KeySystemConfiguration(\r\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\r\n            persistentState,\r\n            [ksSessionType]);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the status of the key has changed\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyStatusChanged(e) {\r\n        if (e.error) {\r\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\r\n        } else {\r\n            logger.debug('DRM: key status = ' + e.status);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the key message event. Once we have a key message we can issue a license request\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyMessage(e) {\r\n        logger.debug('DRM: onKeyMessage');\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        const keyMessage = e.data;\r\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const message = keyMessage.message;\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n        const licenseServerModelInstance = protectionKeyController.getLicenseServerModelInstance(selectedKeySystem, protData, messageType);\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Ensure message from CDM is not empty\r\n        if (!message || message.byteLength === 0) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerModelInstance) {\r\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionId());\r\n            _sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(selectedKeySystem, protData, message);\r\n            if (clearkeys && clearkeys.keyPairs && clearkeys.keyPairs.length > 0) {\r\n                logger.debug('DRM: ClearKey license request handled by application!');\r\n                _sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // In all other cases we have to make a license request\r\n        _issueLicenseRequest(keyMessage, licenseServerModelInstance, protData);\r\n    }\r\n\r\n    /**\r\n     * Notify other classes that the license request was completed\r\n     * @param {object} data\r\n     * @param {object} error\r\n     * @private\r\n     */\r\n    function _sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\r\n    }\r\n\r\n    /**\r\n     * Start issuing a license request\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @param {object} protData\r\n     * @private\r\n     */\r\n    function _issueLicenseRequest(keyMessage, licenseServerData, protData) {\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n        const keySystemString = selectedKeySystem ? selectedKeySystem.systemString : null;\r\n\r\n        // Determine license server URL\r\n        let url = _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        const reqHeaders = {};\r\n        let withCredentials = false;\r\n        if (protData) {\r\n            _updateHeaders(reqHeaders, protData.httpRequestHeaders);\r\n        }\r\n        const message = keyMessage.message;\r\n        const headersFromMessage = selectedKeySystem.getRequestHeadersFromMessage(message);\r\n        _updateHeaders(reqHeaders, headersFromMessage);\r\n\r\n        Object.keys(reqHeaders).forEach((key) => {\r\n            if ('authorization' === key.toLowerCase()) {\r\n                withCredentials = true;\r\n            }\r\n        });\r\n\r\n        // Overwrite withCredentials property from protData if present\r\n        if (protData && typeof protData.withCredentials == 'boolean') {\r\n            withCredentials = protData.withCredentials;\r\n        }\r\n\r\n        const onLoad = function (xhr) {\r\n            if (!protectionModel) {\r\n                return;\r\n            }\r\n\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                const responseHeaders = Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null);\r\n                let licenseResponse = new LicenseResponse(xhr.responseURL, responseHeaders, xhr.response);\r\n                const licenseResponseFilters = customParametersModel.getLicenseResponseFilters();\r\n                _applyFilters(licenseResponseFilters, licenseResponse)\r\n                    .then(() => {\r\n                        const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\r\n                        if (licenseMessage !== null) {\r\n                            _sendLicenseRequestCompleteEvent(eventData);\r\n                            protectionModel.updateKeySession(sessionToken, licenseMessage);\r\n                        } else {\r\n                            _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n                        }\r\n                    });\r\n            } else {\r\n                _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n            }\r\n        };\r\n\r\n        const onAbort = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const onError = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const reqPayload = selectedKeySystem.getLicenseRequestFromMessage(message);\r\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\r\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\r\n        const sessionId = sessionToken.getSessionId() || null;\r\n\r\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\r\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\r\n        const licenseRequestFilters = customParametersModel.getLicenseRequestFilters();\r\n        _applyFilters(licenseRequestFilters, licenseRequest)\r\n            .then(() => {\r\n                _doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\r\n     * @param {object} request\r\n     * @param {number} retriesCount\r\n     * @param {number} timeout\r\n     * @param {function} onLoad\r\n     * @param {function} onAbort\r\n     * @param {function} onError\r\n     * @private\r\n     */\r\n    function _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\r\n            const cmcdMode = settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\r\n                const cmcdParams = cmcdModel.getQueryParameter({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdParams) {\r\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.open(request.method, request.url, true);\r\n        xhr.responseType = request.responseType;\r\n        xhr.withCredentials = request.withCredentials;\r\n        if (timeout > 0) {\r\n            xhr.timeout = timeout;\r\n        }\r\n        for (const key in request.headers) {\r\n            xhr.setRequestHeader(key, request.headers[key]);\r\n        }\r\n\r\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\r\n            const cmcdMode = settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\r\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdHeaders) {\r\n                    for (const header in cmcdHeaders) {\r\n                        let value = cmcdHeaders[header];\r\n                        if (value) {\r\n                            xhr.setRequestHeader(header, value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const _retryRequest = function () {\r\n            // fail silently and retry\r\n            retriesCount--;\r\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\r\n            licenseRequestRetryTimeout = setTimeout(function () {\r\n                _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\r\n            }, retryInterval);\r\n        };\r\n\r\n        xhr.onload = function () {\r\n            licenseXhrRequest = null;\r\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\r\n                onLoad(this);\r\n            } else {\r\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.ontimeout = xhr.onerror = function () {\r\n            licenseXhrRequest = null;\r\n            if (retriesCount <= 0) {\r\n                onError(this);\r\n            } else {\r\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.onabort = function () {\r\n            onAbort(this);\r\n        };\r\n\r\n        // deprecated, to be removed\r\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\r\n            url: request.url,\r\n            headers: request.headers,\r\n            payload: request.data,\r\n            sessionId: request.sessionId\r\n        });\r\n\r\n        licenseXhrRequest = xhr;\r\n        xhr.send(request.data);\r\n    }\r\n\r\n    /**\r\n     * Aborts license request\r\n     * @private\r\n     */\r\n    function _abortLicenseRequest() {\r\n        if (licenseXhrRequest) {\r\n            licenseXhrRequest.onloadend = licenseXhrRequest.onerror = licenseXhrRequest.onprogress = undefined; //Ignore events from aborted requests.\r\n            licenseXhrRequest.abort();\r\n            licenseXhrRequest = null;\r\n        }\r\n\r\n        if (licenseRequestRetryTimeout) {\r\n            clearTimeout(licenseRequestRetryTimeout);\r\n            licenseRequestRetryTimeout = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the url of the license server\r\n     * @param {object} protData\r\n     * @param {string} messageType\r\n     * @param {object} sessionToken\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    function _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData) {\r\n        let url = null;\r\n        const message = keyMessage.message;\r\n\r\n        // Check if the url is defined by the application\r\n        if (protData && protData.serverURL) {\r\n            const serverURL = protData.serverURL;\r\n            if (typeof serverURL === 'string' && serverURL !== '') {\r\n                url = serverURL;\r\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                url = serverURL[messageType];\r\n            }\r\n        }\r\n\r\n        // This is the old way of providing the url\r\n        else if (protData && protData.laURL && protData.laURL !== '') {\r\n            url = protData.laURL;\r\n        }\r\n\r\n        // No url provided by the app. Check the manifest and the pssh\r\n        else {\r\n            // Check for url defined in the manifest\r\n            url = CommonEncryption.getLicenseServerUrlFromMediaInfo(mediaInfoArr, selectedKeySystem.schemeIdURI);\r\n\r\n            // In case we are not using Clearky we can still get a url from the pssh.\r\n            if (!url && !protectionKeyController.isClearKey(selectedKeySystem)) {\r\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\r\n                url = selectedKeySystem.getLicenseServerURLFromInitData(psshData);\r\n\r\n                // Still no url, check the keymessage\r\n                if (!url) {\r\n                    url = keyMessage.laURL;\r\n                }\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Add new headers to the existing ones\r\n     * @param {array} reqHeaders\r\n     * @param {object} headers\r\n     * @private\r\n     */\r\n    function _updateHeaders(reqHeaders, headers) {\r\n        if (headers) {\r\n            for (const key in headers) {\r\n                reqHeaders[key] = headers[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reports an error that might have occured during the license request\r\n     * @param {object} xhr\r\n     * @param {object} eventData\r\n     * @param {string} keySystemString\r\n     * @param {string} messageType\r\n     * @param {object} licenseServerData\r\n     * @private\r\n     */\r\n    function _reportError(xhr, eventData, keySystemString, messageType, licenseServerData) {\r\n        let errorMsg = 'NONE';\r\n        let data = null;\r\n\r\n        if (xhr.response) {\r\n            errorMsg = licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType);\r\n            data = {\r\n                serverResponse: xhr.response || null,\r\n                responseCode: xhr.status || null,\r\n                responseText: xhr.statusText || null\r\n            }\r\n        }\r\n\r\n        _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n            ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\r\n            xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg,\r\n            data\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Applies custom filters defined by the application\r\n     * @param {array} filters\r\n     * @param {object} param\r\n     * @return {Promise<void>|*}\r\n     * @private\r\n     */\r\n    function _applyFilters(filters, param) {\r\n        if (!filters) return Promise.resolve();\r\n        return filters.reduce((prev, next) => {\r\n            return prev.then(() => {\r\n                return next(param);\r\n            });\r\n        }, Promise.resolve());\r\n    }\r\n\r\n    /**\r\n     * Event handler for \"needkey\" and \"encrypted\" events\r\n     * @param {object} event\r\n     * @param {number} retry\r\n     * @private\r\n     */\r\n    function _onNeedKey(event, retry) {\r\n        if (!settings.get().streaming.protection.ignoreEmeEncryptedEvent) {\r\n            logger.debug('DRM: onNeedKey');\r\n\r\n            // Ignore non-cenc initData\r\n            if (event.key.initDataType !== 'cenc') {\r\n                logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n                return;\r\n            }\r\n\r\n            if (mediaInfoArr.length === 0) {\r\n                logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\r\n                retry = typeof retry === 'undefined' ? 1 : retry + 1;\r\n                if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\r\n                    needkeyRetries.push(setTimeout(() => {\r\n                        _onNeedKey(event, retry);\r\n                    }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n            // Convert to ArrayBuffer\r\n            let abInitData = event.key.initData;\r\n            if (ArrayBuffer.isView(abInitData)) {\r\n                abInitData = abInitData.buffer;\r\n            }\r\n\r\n            // If key system has already been selected and initData already seen, then do nothing\r\n            if (selectedKeySystem) {\r\n                const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, abInitData);\r\n                if (initDataForKS) {\r\n                    // Check for duplicate initData\r\n                    if (_isInitDataDuplicate(initDataForKS)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n            const supportedKs = protectionKeyController.getSupportedKeySystemsFromSegmentPssh(abInitData, protDataSet, sessionType);\r\n            if (supportedKs.length === 0) {\r\n                logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n                return;\r\n            }\r\n\r\n            _handleKeySystemFromPssh(supportedKs);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all available key systems\r\n     * @return {array}\r\n     */\r\n    function getKeySystems() {\r\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\r\n    }\r\n\r\n    /**\r\n     * Sets all available key systems\r\n     * @param {array} keySystems\r\n     */\r\n    function setKeySystems(keySystems) {\r\n        if (protectionKeyController) {\r\n            protectionKeyController.setKeySystems(keySystems);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initializeForMedia,\r\n        clearMediaInfoArray,\r\n        handleKeySystemFromManifest,\r\n        createKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        setMediaElement,\r\n        setSessionType,\r\n        setRobustnessLevel,\r\n        setProtectionData,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    /**\r\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\r\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\r\n *  type\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    /**\r\n     * @param {Array.<KeyPair>} keyPairs\r\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\r\n     * or 'temporary'.  Can also be null or undefined.\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        let i;\r\n        let numKeys = this.keyPairs.length;\r\n        let jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            let key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        let jwkString = JSON.stringify(jwk);\r\n        const len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        let buf = new ArrayBuffer(len);\r\n        let bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR\r\n *  PROFITS, OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Protection Constants declaration\r\n * @ignore\r\n */\r\nexport default {\r\n\r\n    CLEARKEY_KEYSTEM_STRING: 'org.w3.clearkey',\r\n    WIDEVINE_KEYSTEM_STRING: 'com.widevine.alpha',\r\n    PLAYREADY_KEYSTEM_STRING: 'com.microsoft.playready',\r\n    PLAYREADY_RECOMMENDATION_KEYSTEM_STRING: 'com.microsoft.playready.recommendation',\r\n    INITIALIZATION_DATA_TYPE_CENC: 'cenc',\r\n    INITIALIZATION_DATA_TYPE_KEYIDS: 'keyids',\r\n    INITIALIZATION_DATA_TYPE_WEBM: 'webm'\r\n}\r\n\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair.js';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp, cencContentProtection) {\r\n        try {\r\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n\r\n            if (!initData && cencContentProtection) {\r\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\r\n                const data = { kids: [cencDefaultKid] };\r\n                initData = new TextEncoder().encode(JSON.stringify(data));\r\n            }\r\n\r\n            return initData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\r\n        try {\r\n            let kid = cencDefaultKid.replace(/-/g, '');\r\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\r\n                return String.fromCharCode(parseInt(a, 16));\r\n            }).join(''));\r\n            return kid.replace(/=/g, '')\r\n                .replace(/\\//g, '_')\r\n                .replace(/\\+/g, '-');\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        // Set content type to application/json by default\r\n        return {\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message))));\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair.js';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemW3CClearKey(config) {\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n    const logger = config.debug.getLogger(instance);\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionDataSet} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n\r\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage( /*message*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\r\n\r\nfunction KeySystemPlayReady(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let messageFormat = 'utf-16';\r\n    const BASE64 = config.BASE64;\r\n    const settings = config.settings;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        let msg,\r\n            xmlDoc;\r\n        const headers = {};\r\n        const parser = new DOMParser();\r\n\r\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\r\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\r\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\r\n                headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n                return headers;\r\n            }\r\n        }\r\n\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        const headerNameList = xmlDoc.getElementsByTagName('name');\r\n        const headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (let i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\r\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\r\n        if (!headers.hasOwnProperty('Content-Type')) {\r\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        let licenseRequest = null;\r\n        const parser = new DOMParser();\r\n\r\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\r\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\r\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\r\n                return message;\r\n            }\r\n        }\r\n\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        checkConfig();\r\n        const msg = String.fromCharCode.apply(null, dataview);\r\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\r\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        } else {\r\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\r\n            // thus it contains direclty the challenge itself\r\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\r\n            return message;\r\n        }\r\n\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            const data = new DataView(initData);\r\n            const numRecords = data.getUint16(4, true);\r\n            let offset = 6;\r\n            const parser = new DOMParser();\r\n\r\n            for (let i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                const recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                const recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                const recordData = initData.slice(offset, offset + recordLength);\r\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        let byteCursor = 0;\r\n        let uint8arraydecodedPROHeader = null;\r\n\r\n        let PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        checkConfig();\r\n        if (!cpData) {\r\n            return null;\r\n        }\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf-8' && format !== 'utf-16') {\r\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    /**\r\n     * Get Playready Custom data\r\n     */\r\n    function getCDMData(_cdmData) {\r\n        let customData,\r\n            cdmData,\r\n            cdmDataBytes,\r\n            i;\r\n\r\n        checkConfig();\r\n        if (!_cdmData) return null;\r\n\r\n        // Convert custom data into multibyte string\r\n        customData = [];\r\n        for (i = 0; i < _cdmData.length; ++i) {\r\n            customData.push(_cdmData.charCodeAt(i));\r\n            customData.push(0);\r\n        }\r\n        customData = String.fromCharCode.apply(null, customData);\r\n\r\n        // Encode in Base 64 the custom data string\r\n        customData = BASE64.encode(customData);\r\n\r\n        // Initialize CDM data with Base 64 encoded custom data\r\n        // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\r\n        cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\r\n\r\n        // Convert CDM data into multibyte characters\r\n        cdmDataBytes = [];\r\n        for (i = 0; i < cdmData.length; ++i) {\r\n            cdmDataBytes.push(cdmData.charCodeAt(i));\r\n            cdmDataBytes.push(0);\r\n        }\r\n\r\n        return new Uint8Array(cdmDataBytes).buffer;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        setPlayReadyMessageFormat\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\n\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nfunction DRMToday(config) {\r\n\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n\r\n    const keySystems = {};\r\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\r\n        responseType: 'json',\r\n        getLicenseMessage: function (response) {\r\n            return BASE64.decodeArray(response.license);\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return response;\r\n        }\r\n    };\r\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\r\n        responseType: 'arraybuffer',\r\n        getLicenseMessage: function (response) {\r\n            return response;\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return String.fromCharCode.apply(null, new Uint8Array(response));\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        checkConfig();\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/* global escape: true */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker.js';\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n * @ignore\r\n */\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\r\n\r\n    function uintToString(arrayBuffer) {\r\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n\r\n    function parseServerResponse(serverResponse) {\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n\r\n            if (fault) {\r\n                return null;\r\n            }\r\n        }\r\n        return serverResponse;\r\n    }\r\n\r\n    function parseErrorResponse(serverResponse) {\r\n        let faultstring = '';\r\n        let statusCode = '';\r\n        let message = '';\r\n        let idStart = -1;\r\n        let idEnd = -1;\r\n\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\r\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\r\n            let node = null;\r\n\r\n            if (fault === null) {\r\n                return stringResponse;\r\n            }\r\n\r\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\r\n            faultstring = node ? node.nodeValue : null;\r\n\r\n            if (exception !== null) {\r\n                node = exception.getElementsByTagName('StatusCode')[0];\r\n                statusCode = node ? node.firstChild.nodeValue : null;\r\n                node = exception.getElementsByTagName('Message')[0];\r\n                message = node ? node.firstChild.nodeValue : null;\r\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\r\n                idEnd = message ? message.indexOf(']') : -1;\r\n                message = message ? message.substring(idStart, idEnd) : '';\r\n            }\r\n        }\r\n\r\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\r\n        if (message) {\r\n            errorString += `, message: ${message}`;\r\n        }\r\n\r\n        return errorString;\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseServerResponse.call(this, serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseErrorResponse.call(this, serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair.js';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet.js';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /* message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        let keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            let keypair = serverResponse.keys[i];\r\n            let keyid = keypair.kid.replace(/=/g, '');\r\n            let key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption.js';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey.js';\r\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey.js';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine.js';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady.js';\r\nimport DRMToday from './../servers/DRMToday.js';\r\nimport PlayReady from './../servers/PlayReady.js';\r\nimport Widevine from './../servers/Widevine.js';\r\nimport ClearKey from './../servers/ClearKey.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @ignore\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        debug,\r\n        logger,\r\n        keySystems,\r\n        BASE64,\r\n        settings,\r\n        clearkeyKeySystem,\r\n        clearkeyW3CKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.debug) {\r\n            debug = config.debug;\r\n            logger = debug.getLogger(instance);\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n\r\n        if (config.settings) {\r\n            settings = config.settings\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        let keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance({ BASE64: BASE64, settings: settings });\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance({ BASE64: BASE64 });\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance({ BASE64: BASE64 });\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n\r\n        // W3C ClearKey\r\n        keySystem = KeySystemW3CClearKey(context).getInstance({ BASE64: BASE64, debug: debug });\r\n        keySystems.push(keySystem);\r\n        clearkeyW3CKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {Array.<KeySystem>} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Sets the prioritized list of key systems to be supported\r\n     * by this player.\r\n     *\r\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function setKeySystems(newKeySystems) {\r\n        keySystems = newKeySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem|null} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (let i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param {Object} keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param {ArrayBuffer} initData1 - first initData\r\n     * @param {ArrayBuffer} initData2 - second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            let data1 = new Uint8Array(initData1);\r\n            let data2 = new Uint8Array(initData2);\r\n\r\n            for (let j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType) {\r\n        let cp, ks, ksIdx, cpIdx;\r\n        let supportedKS = [];\r\n\r\n        if (cps) {\r\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n\r\n                // Get protection data that applies for current key system\r\n                const protData = _getProtDataForKeySystem(ks.systemString, protDataSet);\r\n\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n                        // Look for DRM-specific ContentProtection\r\n                        let initData = ks.getInitData(cp, cencContentProtection);\r\n\r\n                        supportedKS.push({\r\n                            ks: keySystems[ksIdx],\r\n                            keyId: cp.keyId,\r\n                            initData: initData,\r\n                            protData: protData,\r\n                            cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                            sessionId: _getSessionId(protData, cp),\r\n                            sessionType: _getSessionType(protData, sessionType)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromSegmentPssh(initData, protDataSet, sessionType) {\r\n        let supportedKS = [];\r\n        let pssh = CommonEncryption.parsePSSHList(initData);\r\n        let ks, keySystemString;\r\n\r\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            ks = keySystems[ksIdx];\r\n            keySystemString = ks.systemString;\r\n\r\n            // Get protection data that applies for current key system\r\n            const protData = _getProtDataForKeySystem(keySystemString, protDataSet);\r\n\r\n            if (ks.uuid in pssh) {\r\n                supportedKS.push({\r\n                    ks: ks,\r\n                    initData: pssh[ks.uuid],\r\n                    protData: protData,\r\n                    cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                    sessionId: _getSessionId(protData),\r\n                    sessionType: _getSessionType(protData, sessionType)\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @returns {LicenseServer|null} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServerModelInstance(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        let licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance({ BASE64: BASE64 });\r\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet|null} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function setProtectionData(protectionDataSet) {\r\n        var getProtectionData = function (keySystemString) {\r\n            var protData = null;\r\n            if (protectionDataSet) {\r\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\r\n            }\r\n            return protData;\r\n        };\r\n\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            var keySystem = keySystems[i];\r\n            if (keySystem.hasOwnProperty('init')) {\r\n                keySystem.init(getProtectionData(keySystem.systemString));\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getProtDataForKeySystem(systemString, protDataSet) {\r\n        if (!protDataSet) return null;\r\n        return (systemString in protDataSet) ? protDataSet[systemString] : null;\r\n    }\r\n\r\n    function _getSessionId(protData, cp) {\r\n        // Get sessionId from protectionData or from manifest (ContentProtection)\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function _getSessionType(protData, sessionType) {\r\n        return (protData && protData.sessionType) ? protData.sessionType : sessionType;\r\n    }\r\n\r\n    instance = {\r\n        initialize,\r\n        setProtectionData,\r\n        isClearKey,\r\n        initDataEquals,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystemsFromSegmentPssh,\r\n        getLicenseServerModelInstance,\r\n        processClearKeyLicenseRequest,\r\n        setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase.js';\r\n\r\n/**\r\n * @class\r\n */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one decryption keys has changed\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @event ProtectionEvents#KEY_SYSTEM_ACCESS_COMPLETE\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Sending a license rquest\r\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\r\n         */\r\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n\r\n        /**\r\n         * Triggered when the key session has been updated successfully\r\n         * @ignore\r\n         */\r\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc NeedKey\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {string} initDataType initialization data type\r\n     * @class\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc EME-independent KeyMessage\r\n * @ignore\r\n */\r\nclass KeyMessage {\r\n    /**\r\n     * @param {SessionToken} sessionToken the session\r\n     * to which the key message is associated\r\n     * @param {ArrayBuffer} message the key message\r\n     * @param {string} defaultURL license acquisition URL provided by the CDM\r\n     * @param {string} messageType Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @class\r\n     */\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    /**\r\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n     * @param {KeySystemConfiguration} ksConfiguration the\r\n     * subset of configurations passed to the key system access request that are supported\r\n     * by this user agent\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport ProtectionErrors from '../errors/ProtectionErrors.js';\r\nimport DashJSError from '../../vo/DashJSError.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants.js';\r\n\r\nconst SYSTEM_STRING_PRIORITY = {};\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = [ProtectionConstants.PLAYREADY_KEYSTEM_STRING, ProtectionConstants.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = [ProtectionConstants.WIDEVINE_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.CLEARKEY_KEYSTEM_STRING] = [ProtectionConstants.CLEARKEY_KEYSTEM_STRING];\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n\r\n    let instance,\r\n        logger,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        const numSessions = sessions.length;\r\n        let session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            const done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (let i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    _closeKeySessionInternal(session)\r\n                    done(s);\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        // Close and remove not usable sessions\r\n        let session;\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            session = sessions[i];\r\n            if (!session.getUsable()) {\r\n                _closeKeySessionInternal(session)\r\n                removeSession(session);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i].initData) {\r\n                retVal.push(sessions[i].initData);\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            _requestKeySystemAccessInternal(ksConfigurations, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Initializes access to a key system. Once we found a valid configuration we get a mediaKeySystemAccess object\r\n     * @param ksConfigurations\r\n     * @param idx\r\n     * @param resolve\r\n     * @param reject\r\n     * @private\r\n     */\r\n    function _requestKeySystemAccessInternal(ksConfigurations, idx, resolve, reject) {\r\n\r\n        // In case requestMediaKeySystemAccess is not available we can not proceed and dispatch an error\r\n        if (navigator.requestMediaKeySystemAccess === undefined ||\r\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\r\n            const msg = 'Insecure origins are not allowed';\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: msg });\r\n            reject({ error: msg });\r\n            return;\r\n        }\r\n\r\n        // If a systemStringPriority is defined by the application we use these values. Otherwise we use the default system string\r\n        // This is useful for DRM systems such as Playready for which multiple system strings are possible for instance com.microsoft.playready and com.microsoft.playready.recommendation\r\n        const protDataSystemStringPriority = ksConfigurations[idx].protData && ksConfigurations[idx].protData.systemStringPriority ? ksConfigurations[idx].protData.systemStringPriority : null;\r\n        const configs = ksConfigurations[idx].configs;\r\n        const currentKeySystem = ksConfigurations[idx].ks;\r\n        let systemString = currentKeySystem.systemString;\r\n\r\n        // Use the default values in case no values are provided by the application\r\n        const systemStringsToApply = protDataSystemStringPriority ? protDataSystemStringPriority : SYSTEM_STRING_PRIORITY[systemString] ? SYSTEM_STRING_PRIORITY[systemString] : [systemString];\r\n\r\n        // Check all the available system strings and the available configurations for support\r\n        _checkAccessForKeySystem(systemStringsToApply, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                    mediaKeySystemAccess.getConfiguration() : null;\r\n                const keySystemAccess = new KeySystemAccess(currentKeySystem, configuration);\r\n\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                resolve({ data: keySystemAccess });\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < ksConfigurations.length) {\r\n                    _requestKeySystemAccessInternal(ksConfigurations, idx + 1, resolve, reject);\r\n                } else {\r\n                    const errorMessage = 'Key system access denied! ';\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage + e.message });\r\n                    reject({ error: errorMessage + e.message });\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * For a specific key system: Iterate over the possible system strings and resolve once a valid configuration was found\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @return {Promise}\r\n     * @private\r\n     */\r\n    function _checkAccessForKeySystem(systemStringsToApply, configs) {\r\n        return new Promise((resolve, reject) => {\r\n            _checkAccessForSystemStrings(systemStringsToApply, configs, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Recursively iterate over the possible system strings until a supported configuration is found or we ran out of options\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @param {number} idx\r\n     * @param {function} resolve\r\n     * @param {function} reject\r\n     * @private\r\n     */\r\n    function _checkAccessForSystemStrings(systemStringsToApply, configs, idx, resolve, reject) {\r\n        const systemString = systemStringsToApply[idx];\r\n\r\n        logger.debug(`Requesting key system access for system string ${systemString}`);\r\n\r\n        navigator.requestMediaKeySystemAccess(systemString, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                mediaKeySystemAccess.selectedSystemString = systemString;\r\n                resolve(mediaKeySystemAccess);\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < systemStringsToApply.length) {\r\n                    _checkAccessForSystemStrings(systemStringsToApply, configs, idx + 1, resolve, reject);\r\n                } else {\r\n                    reject(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Selects a key system by creating the mediaKeys and adding them to the video element\r\n     * @param keySystemAccess\r\n     * @return {Promise<unknown>}\r\n     */\r\n    function selectKeySystem(keySystemAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            keySystemAccess.mksa.createMediaKeys()\r\n                .then((mkeys) => {\r\n                    keySystem = keySystemAccess.keySystem;\r\n                    mediaKeys = mkeys;\r\n                    if (videoElement) {\r\n                        return videoElement.setMediaKeys(mediaKeys)\r\n                    } else {\r\n                        return Promise.resolve();\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    resolve(keySystem);\r\n                })\r\n                .catch(function () {\r\n                    reject({ error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n                });\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys) {\r\n                videoElement.setMediaKeys(null);\r\n            }\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys && mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            logger.info('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, { error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name) });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a key session, a session token and initialize a request by calling generateRequest\r\n     * @param ksInfo\r\n     */\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n\r\n        // The \"keyids\" type is used for Clearkey when keys are provided directly in the protection data and a request to a license server is not needed\r\n        const dataType = keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (ksInfo.initData || (ksInfo.protData && ksInfo.protData.clearkeys)) ? ProtectionConstants.INITIALIZATION_DATA_TYPE_KEYIDS : ProtectionConstants.INITIALIZATION_DATA_TYPE_CENC;\r\n\r\n        session.generateRequest(dataType, ksInfo.initData).then(function () {\r\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message)\r\n            .then(() => {\r\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n            })\r\n            .catch(function (error) {\r\n                eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken) });\r\n            });\r\n    }\r\n\r\n    function loadKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        const sessionId = ksInfo.sessionId;\r\n\r\n        // Check if session Id is not already loaded or loading\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessionId === sessions[i].sessionId) {\r\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionId).then(function (success) {\r\n            if (success) {\r\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionId());\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n            } else {\r\n                removeSession(sessionToken);\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionId + ')')\r\n                });\r\n            }\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionId + ')! ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, { data: sessionToken.getSessionId() });\r\n        }, function (error) {\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\r\n                data: null,\r\n                error: 'Error removing session (' + sessionToken.getSessionId() + '). ' + error.name\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        _closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.getSessionId() + ') ' + error.name\r\n            });\r\n        });\r\n    }\r\n\r\n    function _closeKeySessionInternal(sessionToken) {\r\n        if (!sessionToken || !sessionToken.session) {\r\n            return Promise.resolve;\r\n        }\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, event.initDataType) });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function parseKeyStatus(args) {\r\n        // Edge and Chrome implement different version of keystatues, param are not on same order\r\n        let status, keyId;\r\n        if (args && args.length > 0) {\r\n            if (args[0]) {\r\n                if (typeof args[0] === 'string') {\r\n                    status = args[0];\r\n                } else {\r\n                    keyId = args[0];\r\n                }\r\n            }\r\n\r\n            if (args[1]) {\r\n                if (typeof args[1] === 'string') {\r\n                    status = args[1];\r\n                } else {\r\n                    keyId = args[1];\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            status: status,\r\n            keyId: keyId\r\n        };\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, ksInfo) {\r\n        const token = { // Implements SessionToken\r\n            session: session,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n            sessionId: ksInfo.sessionId,\r\n            sessionType: ksInfo.sessionType,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: this });\r\n                        event.target.keyStatuses.forEach(function () {\r\n                            let keyStatus = parseKeyStatus(arguments);\r\n                            switch (keyStatus.status) {\r\n                                case 'expired':\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, { error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });\r\n                                    break;\r\n                                default:\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\r\n                                    break;\r\n                            }\r\n                        });\r\n                        break;\r\n\r\n                    case 'message':\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, undefined, event.messageType) });\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return this.sessionType;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getUsable: function () {\r\n                let usable = false;\r\n                session.keyStatuses.forEach(function () {\r\n                    let keyStatus = parseKeyStatus(arguments);\r\n                    if (keyStatus.status === 'usable') {\r\n                        usable = true;\r\n                    }\r\n                });\r\n                return usable;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(() => {\r\n            removeSession(token);\r\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: token.getSessionId() });\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        setServerCertificate,\r\n        createKeySession,\r\n        updateKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport DashJSError from '../../vo/DashJSError.js';\r\nimport ProtectionErrors from '../errors/ProtectionErrors.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    const audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n\r\n                    // Look for supported audio container/codecs\r\n                    if (audios && audios.length !== 0) {\r\n                        supportedAudio = []; // Indicates that we have a requested audio config\r\n                        for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                                supportedAudio.push(audios[audioIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig);\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n                keySystem = ksAccess.keySystem;\r\n                keySystemAccess = ksAccess;\r\n                if (videoElement) {\r\n                    setMediaKeys();\r\n                }\r\n                resolve(keySystem);\r\n            } catch (error) {\r\n                reject({ error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n            }\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        let capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null) {\r\n            throw new Error('Can not create sessions for unknown content types.');\r\n        }\r\n\r\n        const contentType = capabilities.contentType;\r\n        const session = mediaKeys.createSession(contentType, new Uint8Array(ksInfo.initData), ksInfo.cdmData ? new Uint8Array(ksInfo.cdmData) : null);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param {Object} sessionToken - the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        let boundDoSetKeys = null;\r\n        const doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, ksInfo) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case api.error:\r\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\r\n                        break;\r\n                    case api.message:\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        logger.debug('DRM: Key added.');\r\n                        eventBus.trigger(events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionId());\r\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionId() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController.js';\r\nimport NeedKey from '../vo/NeedKey.js';\r\nimport DashJSError from '../../vo/DashJSError.js';\r\nimport KeyMessage from '../vo/KeyMessage.js';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration.js';\r\nimport KeySystemAccess from '../vo/KeySystemAccess.js';\r\nimport ProtectionErrors from '../errors/ProtectionErrors.js';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n    const errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n\r\n        // With this version of the EME APIs, sessionIds are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIds\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIds\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIds.  Without sessionIds\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions.concat(pendingSessions);\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            let ve = videoElement;\r\n            if (!ve) { // Must have a video element to do this capability tests\r\n                ve = document.createElement('video');\r\n            }\r\n\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    //let audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig)\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        return Promise.resolve(keySystem);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n\r\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            sessions = [];\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n            const newSession = { // Implements SessionToken\r\n                sessionId: null,\r\n                keyId: ksInfo.keyId,\r\n                initData: ksInfo.initData,\r\n\r\n                getKeyId: function () {\r\n                    return this.keyId;\r\n                },\r\n\r\n                getSessionId: function () {\r\n                    return this.sessionId;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(ksInfo.initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const sessionId = sessionToken.sessionId;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionId);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (let i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionId);\r\n            }\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        try {\r\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionId);\r\n        } catch (error) {\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.sessionId + ') ' + error.message\r\n            });\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                let sessionToken = null;\r\n                switch (event.type) {\r\n                    case api.needkey:\r\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\r\n                            let msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\r\n                                    break;\r\n                                case 2:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\r\n                                    break;\r\n                                case 3:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\r\n                                    break;\r\n                                case 4:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\r\n                                    break;\r\n                                case 5:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\r\n                                    break;\r\n                                case 6:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\r\n                        } else {\r\n                            logger.error('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            logger.debug('DRM: Key added.');\r\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            logger.debug('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n                            // Attempt to find an uninitialized token with this sessionId\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionId and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionId = event.sessionId;\r\n\r\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\r\n\r\n                        } else {\r\n                            logger.warn('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionId value\r\n     *\r\n     * @param {Array} sessionArray - the array of sessions to search\r\n     * @param {*} sessionId - the sessionId to search for\r\n     * @returns {*} the session token with the given sessionId\r\n     */\r\n    function findSessionByID(sessionArray, sessionId) {\r\n        if (!sessionId || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            const len = sessionArray.length;\r\n            for (let i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionId == sessionId) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController.js';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController.js';\r\nimport ProtectionEvents from './ProtectionEvents.js';\r\nimport ProtectionErrors from './errors/ProtectionErrors.js';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015.js';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014.js';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b.js';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n    let instance;\r\n    const context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @param {Object} config\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n        let controller = null;\r\n\r\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64, settings: config.settings });\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel = _getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                eventBus: config.eventBus,\r\n                debug: config.debug,\r\n                events: config.events,\r\n                BASE64: config.BASE64,\r\n                constants: config.constants,\r\n                cmcdModel: config.cmcdModel,\r\n                customParametersModel: config.customParametersModel,\r\n                settings: config.settings\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function _getProtectionModel(config) {\r\n        const debug = config.debug;\r\n        const logger = debug.getLogger(instance);\r\n        const eventBus = config.eventBus;\r\n        const errHandler = config.errHandler;\r\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\r\n\r\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\r\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                events: config.events\r\n            });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                events: config.events,\r\n                api: _getAPI(videoElement, APIS_ProtectionModel_3Feb2014)\r\n            });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                errHandler: errHandler,\r\n                events: config.events,\r\n                api: _getAPI(videoElement, APIS_ProtectionModel_01b)\r\n            });\r\n        } else {\r\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getAPI(videoElement, apis) {\r\n        for (let i = 0; i < apis.length; i++) {\r\n            const api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\r\nfactory.events = ProtectionEvents;\r\nfactory.errors = ProtectionErrors;\r\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n"],"names":["root","factory","exports","module","define","amd","self","assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","base","name","_format","parse","ret","delimiter","win32","window","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SONY","XIAOMI","ZEBRA","FACEBOOK","enumerize","arr","enums","toUpperCase","has","str1","str2","lowerize","indexOf","str","toLowerCase","trim","len","replace","substring","rgxMapper","ua","arrays","j","k","p","q","matches","match","regex","props","exec","this","call","test","strMapper","map","windowsVersionMap","regexes","browser","cpu","device","engine","EDGE","os","UAParser","extensions","getResult","_ua","navigator","userAgent","_rgxmap","mergedRegexes","concat","extend","getBrowser","version","_browser","major","split","getCPU","_cpu","getDevice","_device","getEngine","_engine","getOS","_os","getUA","setUA","CPU","DEVICE","ENGINE","OS","$","jQuery","Zepto","parser","get","set","result","prop","FactoryMaker","instance","singletonContexts","singletonFactories","classFactories","getSingletonInstance","context","className","obj","getFactoryByName","factoriesArray","updateFactory","merge","classConstructor","args","classInstance","__dashjs_factory_name","extensionObject","extension","override","apply","parent","hasOwnProperty","getClassName","childInstance","setSingletonInstance","push","deleteSingletonInstances","filter","x","getSingletonFactory","getInstance","getSingletonFactoryByName","updateSingletonFactory","getClassFactory","create","getClassFactoryByName","updateClassFactory","Utils","dest","source","copy","s","empty","mixin","src","r","Array","l","clone","url","params","modifiedUrl","URL","forEach","param","key","value","searchParams","href","e","headerStr","headers","headerPairs","ilen","headerPair","index","dt","Date","getTime","c","Math","random","floor","toString","string","hash","originalUrl","targetUrl","original","target","protocol","origin","relativePath","pathname","substr","startIndexOffset","uaString","ErrorsBase","errors","config","publicOnly","err","EventsBase","events","evt","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","CONTENT_STEERING","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","ACCESSIBILITY_CEA608_SCHEME","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_DVB_LL_SCHEME","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","FILE_LOADER_TYPES","FETCH","XHR","THROUGHPUT_TYPES","LATENCY","BANDWIDTH","THROUGHPUT_CALCULATION_MODES","EWMA","ZLEMA","ARITHMETIC_MEAN","BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN","DATE_WEIGHTED_ARITHMETIC_MEAN","HARMONIC_MEAN","BYTE_SIZE_WEIGHTED_HARMONIC_MEAN","DATE_WEIGHTED_HARMONIC_MEAN","LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE","MOOF_PARSING","DOWNLOADED_DATA","AAST","RULES_TYPES","QUALITY_SWITCH_RULES","ABANDON_FRAGMENT_RULES","BOLA_RULE","THROUGHPUT_RULE","INSUFFICIENT_BUFFER_RULE","SWITCH_HISTORY_RULE","DROPPED_FRAMES_RULE","LEARN_TO_ADAPT_RULE","LOL_PLUS_RULE","ABANDON_REQUEST_RULE","message","data","HTTPRequest","tcpid","type","actualurl","range","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","_resourceTimingValues","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","d","definition","o","Object","defineProperty","enumerable","prototype","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","CommonEncryption","cpArray","retVal","cp","schemeIdUri","pssh","offset","view","DataView","getUint8","getUint32","keySystem","initData","psshList","parsePSSHList","uuid","cpData","BASE64","__text","decodeArray","buffer","dv","byteCursor","nextBox","systemID","boxStart","byteLength","val","mediaInfo","licenseServer","info","contentProtection","targetProtectionData","ckData","attribute","prefix","__prefix","contentType","robustness","audioCapabilities","videoCapabilities","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","ProtectionErrors","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","KEY_SESSION_CREATED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","method","responseType","withCredentials","messageType","sessionId","ProtectionController","logger","pendingKeySessionsToHandle","mediaInfoArr","protDataSet","sessionType","robustnessLevel","selectedKeySystem","keySystemSelectionInProgress","licenseXhrRequest","licenseRequestRetryTimeout","protectionKeyController","protectionModel","eventBus","debug","constants","needkeyRetries","cmcdModel","settings","customParametersModel","checkConfig","Error","_selectKeySystemOrUpdateKeySessions","supportedKs","fromManifest","_handleKeySessions","keySystemAccess","requestedKeySystems","sort","ksA","ksB","ks","systemString","priority","keySystemConfiguration","_getKeySystemConfiguration","configs","protData","requestKeySystemAccess","then","event","selectedSystemString","mksa","selectKeySystem","trigger","KEY_SYSTEM_SELECTED","_getProtDataForKeySystem","serverCertificate","setServerCertificate","error","DashJSError","_selectInitialKeySystem","ksIdx","_loadOrCreateKeySession","keySystemInfo","isClearKey","keys","clearkeys","kids","TextEncoder","encode","loadKeySession","createKeySession","initDataForKS","keyId","sessions","getSessions","getKeyId","_isKeyIdDuplicate","_isInitDataDuplicate","KEY_SESSION_CREATED","keySystemString","currentInitData","getAllInitData","initDataEquals","setMediaElement","element","on","NEED_KEY","_onNeedKey","off","keySystemData","audioRobustness","videoRobustness","ksSessionType","media","MediaCapability","codec","KeySystemConfiguration","_onKeyStatusChanged","KEY_STATUSES_CHANGED","status","_onKeyMessage","keyMessage","KEY_MESSAGE","sessionToken","licenseServerModelInstance","getLicenseServerModelInstance","eventData","getSessionId","_sendLicenseRequestCompleteEvent","processClearKeyLicenseRequest","keyPairs","updateKeySession","licenseServerData","serverURL","laURL","schemeIdURI","psshData","getLicenseServerURLFromInitData","getServerURLFromMessage","_getLicenseServerUrl","reqHeaders","_updateHeaders","httpRequestHeaders","getRequestHeadersFromMessage","onLoad","xhr","responseHeaders","getAllResponseHeaders","licenseResponse","LicenseResponse","responseURL","response","_applyFilters","getLicenseResponseFilters","licenseMessage","getLicenseMessage","_reportError","onAbort","statusText","readyState","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","getResponseType","timeout","isNaN","httpTimeout","licenseRequest","LicenseRequest","retryAttempts","streaming","getLicenseRequestFilters","_doLicenseRequest","_issueLicenseRequest","LICENSE_REQUEST_COMPLETE","request","retriesCount","XMLHttpRequest","cmcd","enabled","mode","Constants","cmcdParams","getQueryParameter","open","setRequestHeader","cmcdHeaders","getHeaderParameters","header","_retryRequest","retryInterval","retryIntervals","setTimeout","onload","warn","ontimeout","onerror","onabort","LICENSE_REQUEST_SENDING","payload","send","_abortLicenseRequest","onloadend","onprogress","abort","clearTimeout","errorMsg","getErrorResponse","serverResponse","responseCode","responseText","filters","reduce","prev","next","Promise","retry","protection","ignoreEmeEncryptedEvent","initDataType","abInitData","ArrayBuffer","isView","String","fromCharCode","Uint8Array","getSupportedKeySystemsFromSegmentPssh","_handleKeySystemFromPssh","initializeForMedia","clearMediaInfoArray","handleKeySystemFromManifest","supportedKeySystems","mInfo","currentKs","getSupportedKeySystemsFromContentProtection","removeKeySession","closeKeySession","setSessionType","setRobustnessLevel","level","setProtectionData","cps","getKeySystems","setKeySystems","keySystems","stop","reset","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_STATUS_CHANGED","retryTimeout","getLogger","keyID","ClearKeyKeySet","numKeys","jwk","kty","alg","kid","jwkString","buf","bView","ProtectionConstants","KeySystemClearKey","getInitData","cencContentProtection","cencDefaultKid","btoa","a","parseInt","cencDefaultKidToBase64Representation","getCDMData","getClearKeysFromProtectionData","protectionData","clearkeySet","jsonMsg","clearkeyID","clearkey","KeyPair","dashjs","KeySystemW3CClearKey","KeySystemWidevine","KeySystemPlayReady","messageFormat","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","msg","xmlDoc","DOMParser","detectPlayreadyMessageFormat","dataview","Uint16Array","headerNameList","parseFromString","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","Challenge","decode","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","_cdmData","customData","cdmData","cdmDataBytes","setPlayReadyMessageFormat","DRMToday","license","keySystemStr","PlayReady","soap","uintToString","arrayBuffer","encodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","getElementsByTagNameNS","body","parseErrorResponse","faultstring","statusCode","idStart","idEnd","fault","detail","exception","node","firstChild","errorString","Widevine","ClearKey","keypair","keyid","ProtectionKeyController","clearkeyKeySystem","clearkeyW3CKeySystem","_getSessionId","_getSessionType","initialize","protectionDataSet","init","initData1","initData2","data1","data2","newKeySystems","getKeySystemBySystemString","cpIdx","supportedKS","setConfig","ProtectionEvents","KEY_ADDED","KEY_ERROR","KEY_SESSION_CLOSED","KEY_SESSION_REMOVED","KEY_SYSTEM_ACCESS_COMPLETE","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","defaultURL","ksConfiguration","SYSTEM_STRING_PRIORITY","ProtectionModel_21Jan2015","videoElement","mediaKeys","eventHandler","_requestKeySystemAccessInternal","ksConfigurations","idx","reject","requestMediaKeySystemAccess","protDataSystemStringPriority","systemStringPriority","currentKeySystem","systemStringsToApply","_checkAccessForSystemStrings","_checkAccessForKeySystem","mediaKeySystemAccess","configuration","getConfiguration","KeySystemAccess","errorMessage","_closeKeySessionInternal","session","removeEventListener","close","removeSession","token","splice","parseKeyStatus","createSessionToken","ksInfo","handleEvent","keyStatuses","keyStatus","KeyMessage","getSessionType","getExpirationTime","expiration","getKeyStatuses","getUsable","usable","addEventListener","closed","createMediaKeys","mkeys","setMediaKeys","mediaElement","createSession","dataType","generateRequest","toJWK","update","load","success","remove","numSessions","done","NeedKey","ProtectionModel_3Feb2014","api","needkey","ready","release","boundDoSetKeys","doSetKeys","bind","found","supportedAudio","supportedVideo","configIdx","audios","videos","audioIdx","MediaKeys","isTypeSupported","videoIdx","ksConfig","ksAccess","capabilities","keySession","NaN","destinationURL","ProtectionModel_01b","pendingSessions","moreSessionsAllowed","errHandler","removeEventListeners","cancelKeyRequest","findSessionByID","sessionArray","keyerror","keymessage","keyadded","ve","document","createElement","canPlayType","newSession","generateKeyRequest","addKey","errorCode","systemCode","shift","APIS_ProtectionModel_01b","APIS_ProtectionModel_3Feb2014","Protection","_getAPI","apis","createProtectionSystem","controller","videoModel","getElement","onencrypted","_getProtectionModel","setEncryptedMediaSupported"],"sourceRoot":""}