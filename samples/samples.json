[
  {
    "section": "Getting Started",
    "active": true,
    "samples": [
      {
        "title": "Auto load single video src",
        "description": "The simplest means of using a dash.js player in a web page. The mpd src is specified within the @src attribute of the video element.",
        "href": "getting-started/auto-load-single-video-src.html",
        "image": "lib/img/bbb-1.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Auto load single video",
        "description": "The mpd source is specified within the child Source element of the video element.",
        "href": "getting-started/auto-load-single-video.html",
        "image": "lib/img/bbb-2.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Auto load multi video",
        "description": "This example shows how to auto-embed multiple instances of dash.js players in a page.",
        "href": "getting-started/auto-load-multi-video.html",
        "image": "lib/img/sintel-2.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Manual load single video",
        "description": "A sample showing how to load a single video.",
        "href": "getting-started/manual-load-single-video.html",
        "image": "lib/img/bbb-3.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Manual load with custom settings",
        "description": "A sample showing how to load a video using custom settings.",
        "href": "getting-started/manual-load-with-custom-settings.html",
        "width": "30rem",
        "image": "lib/img/bbb-1.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Using the Control Bar",
        "description": "This example shows how to add and configure the Akamai control bar with dash.js player.",
        "href": "getting-started/controlbar.html",
        "width": "25rem",
        "image": "lib/img/bbb-4.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio",
          "Controlbar"
        ]
      },
      {
        "title": "Listening to events",
        "description": "Example showing how to listen to events raised by dash.js.",
        "href": "getting-started/listening-to-events.html",
        "image": "lib/img/bbc-1.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio",
          "Events"
        ]
      },
      {
        "title": "Log levels",
        "description": "This examples shows how to configure dash.js logging levels.",
        "href": "getting-started/logging.html",
        "image": "lib/img/bbb-2.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Load with url parameters",
        "description": "A demo page that uses url query parameters to configure the playback.",
        "href": "getting-started/load-with-url-params.html?autoplay=true&url=https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd",
        "image": "lib/img/bbb-1.jpg",
        "labels": [
          "VoD",
          "Video",
          "Audio"
        ]
      }
    ]
  },
  {
    "section": "Live",
    "samples": [
      {
        "title": "Live delay comparison custom manifest",
        "description": "Example showing how to use the two MediaPlayer APIS which control live delay: setLiveDelay and setLiveDelayFragmentCount.",
        "href": "live-streaming/live-delay-comparison-custom-manifest.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Live delay comparison using fragment count",
        "description": "Example showing the combined effects of segment duration and the setLiveDelayFragmentCount MediaPlayer method on the latency of live stream playback",
        "href": "live-streaming/live-delay-comparison-using-fragmentCount.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Live delay comparison using setLiveDelay",
        "description": "Example showing the combined effects of segment duration and the setLiveDelay MediaPlayer method on the latency of live stream playback.",
        "href": "live-streaming/live-delay-comparison-using-setLiveDelay.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Synchronized live playback with the catchup mode",
        "description": "Example showing a synchronized live playback of two videos using the live playback catchup mode.",
        "href": "live-streaming/synchronized-live-playback.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Live stream with availabilityTimeOffset",
        "description": "Example showing how dash.js handles live streams with an availabilityTimeOffset(ATO)",
        "href": "live-streaming/availability-time-offset.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      },
      {
        "title": "Live stream with MPD Patching",
        "description": "Example showing how dash.js handles live streams with updates to the MPD provided via MPD patching",
        "href": "live-streaming/mpd-patching.html",
        "image": "lib/img/livesim-1.jpg",
        "labels": [
          "Live",
          "Video",
          "Audio"
        ]
      }
    ]
  },
  {
    "section": "Live Low Latency",
    "samples": [
      {
        "title": "Low latency testplayer",
        "description": "Example showing how to use dash.js to play low latency streams. All low latency related settings such as the different ABR algorithms(LoL+,L2A) are selectable.",
        "href": "low-latency/testplayer/testplayer.html",
        "image": "lib/img/akamai-ll-4.jpg",
        "labels": [
          "Live",
          "Low Latency",
          "Settings",
          "Video",
          "Audio"
        ]
      }
    ]
  },
  {
    "section": "List MPDs",
    "samples": [
        {
            "title": "List MPDs implementation",
            "description": "A sample showing List MPDs implementation",
            "href": "list-mpds/list-mpds.html",
            "image": "lib/img/bbb-1.jpg",
            "labels": [
                "VoD",
                "Video",
                "Audio",
                "List MPDs"
            ]
        }
    ]
  }
]
