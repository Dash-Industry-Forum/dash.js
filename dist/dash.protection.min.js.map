{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/externals/base64.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/core/EventBus.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/core/FactoryMaker.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/core/events/CoreEvents.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/core/events/Events.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/core/events/EventsBase.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/CommonEncryption.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/Protection.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/ProtectionEvents.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/controllers/ProtectionController.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/controllers/ProtectionKeyController.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/drm/KeySystemClearKey.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/drm/KeySystemPlayReady.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/drm/KeySystemWidevine.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/models/ProtectionModel_01b.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/models/ProtectionModel_21Jan2015.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/models/ProtectionModel_3Feb2014.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/servers/ClearKey.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/servers/DRMToday.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/servers/PlayReady.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/servers/Widevine.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/ClearKeyKeySet.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/KeyError.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/KeyMessage.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/KeyPair.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/KeySystemAccess.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/KeySystemConfiguration.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/MediaCapability.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/protection/vo/NeedKey.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/utils/ErrorHandler.js","/Users/dsparaci/Development/projects/dash-client-dev/support-player/v2.2/dash.js/src/streaming/vo/Error.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","Protection","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","EventBus","on","type","listener","scope","getHandlerIdx","handler","callback","handlers","off","idx","splice","trigger","args","hasOwnProperty","forEach","reset","handlersForType","result","instance","undefined","__dashjs_factory_name","_FactoryMaker2","getSingletonFactory","FactoryMaker","extend","name","childInstance","override","context","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","obj","setSingletonInstance","getClassFactory","classConstructor","create","merge","apply","arguments","getInstance","extensionObject","extension","factory","parent","prop","extensions","CoreEvents","_EventsBase","_get","Object","getPrototypeOf","prototype","AST_IN_FUTURE","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CHUNK_APPENDED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUALITY_CHANGED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ALL_ELEMENTS_LOADED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","events","EventsBase","config","publicOnly","evt","indexOf","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","value","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","uuid","cpData","_externalsBase642","__text","buffer","data","dv","done","byteCursor","size","nextBox","systemID","psshDataSize","boxStart","byteLength","val","toString","createProtectionSystem","controller","protectionKeyController","_controllersProtectionKeyController2","setConfig","log","initialize","protectionModel","getProtectionModel","_controllersProtectionController2","adapter","eventBus","capabilities","setEncryptedMediaSupported","videoElement","videoModel","getElement","onencrypted","mediaKeys","navigator","requestMediaKeySystemAccess","_modelsProtectionModel_21Jan20152","getAPI","APIS_ProtectionModel_3Feb2014","_modelsProtectionModel_3Feb20142","api","APIS_ProtectionModel_01b","_modelsProtectionModel_01b2","apis","keys","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","setMediaKeys","MediaKeys","release","error","message","ready","close","_coreFactoryMaker2","_ProtectionEvents2","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","ProtectionController","setup","keySystems","getKeySystems","pendingNeedKeyData","initialized","sessionType","robustnessLevel","_coreEventsEvents2","_Protection2","manifest","aInfo","vInfo","streamInfo","getStreamsInfo","audioInfo","getMediaInfoForType","videoInfo","mediaInfo","supportedKS","getSupportedKeySystemsFromContentProtection","contentProtection","selectKeySystem","createKeySession","initDataForKS","_CommonEncryption2","getPSSHForKeySystem","currentInitData","getAllInitData","initDataEquals","systemString","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","setMediaElement","element","onNeedKey","onKeyMessage","setSessionType","setRobustnessLevel","level","setProtectionData","protDataSet","getProtData","protData","keySystemString","fromManifest","audioCapabilities","videoCapabilities","_voMediaCapability2","codec","ksIdx","ksConfig","_voKeySystemConfiguration2","requestedKeySystems","ks","configs","onKeySystemAccessComplete","event","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","getSessionID","isClearKey","clearkeys","processClearKeyLicenseRequest","updateKeySession","xhr","XMLHttpRequest","url","serverURL","laURL","getLicenseServerURLFromInitData","getPSSHData","getServerURLFromMessage","open","getHTTPMethod","responseType","getResponseType","onload","status","getLicenseMessage","response","statusText","readyState","getErrorResponse","onabort","onerror","updateHeaders","headers","key","withCredentials","setRequestHeader","httpRequestHeaders","getRequestHeadersFromMessage","send","getLicenseRequestFromMessage","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystems","ProtectionKeyController","_drmKeySystemPlayReady2","_drmKeySystemWidevine2","_drmKeySystemClearKey2","clearkeyKeySystem","getKeySystemBySystemString","initData1","initData2","data1","data2","j","cps","cpIdx","schemeIdURI","getInitData","protectionDataForKeySystemPresent","_serversDRMToday2","_serversWidevine2","_serversPlayReady2","_serversClearKey2","getClearKeysFromProtectionData","KeySystemClearKey","protectionData","clearkeySet","jsonMsg","JSON","parse","keyPairs","kids","clearkeyID","clearkey","_voKeyPair2","_voClearKeyKeySet2","parseInitDataFromContentProtection","KeySystemPlayReady","msg","xmlDoc","parser","DOMParser","dataview","messageFormat","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","licenseRequest","Challenge","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","set","setPlayReadyMessageFormat","format","_voError2","KeySystemWidevine","ProtectionModel_01b","pendingSessions","sessions","errHandler","_utilsErrorHandler2","eventHandler","createEventHandler","removeEventListeners","ksConfigurations","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","_voKeySystemAccess2","mediaElement","addEventListener","moreSessionsAllowed","newSession","getExpirationTime","NaN","getSessionType","keyID","handleEvent","_voNeedKey2","findSessionByID","sessionId","errorCode","systemCode","_voKeyError2","shift","mediaKeyMessageError","_voKeyMessage2","defaultURL","sessionArray","len","removeEventListener","ProtectionModel_21Jan2015","session","numSessions","removeSession","then","closed","closeKeySessionInternal","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","generateRequest","toJWK","update","load","success","remove","mediaKeySystemAccess","configuration","getConfiguration","token","expiration","getKeyStatuses","keyStatuses","ProtectionModel_3Feb2014","audios","audioIdx","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","ClearKey","substring","serverResponse","keypair","keyid","kid","replace","k","DRMToday","keySystemStr","com.widevine.alpha","license","com.microsoft.playready","PlayReady","Widevine","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","stringify","buf","bView","KeyError","errorString","KeyMessage","KeyPair","KeySystemAccess","KeySystemConfiguration","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","MediaCapability","robustness","NeedKey","ErrorHandler","capabilityError","err","ERROR","downloadError","id","request","manifestError","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","_coreEventBus2","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_CONTENT","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_XLINK","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE"],"mappings":"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","file":"dash.protection.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nfunction EventBus() {\n\n    let instance;\n    let handlers = {};\n\n\n    function on(type, listener, scope) {\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        var handler = {\n            callback: listener,\n            scope: scope\n        };\n\n        handlers[type] = handlers[type] || [];\n        handlers[type].push(handler);\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n\n        var idx = getHandlerIdx(type, listener, scope);\n\n        if (idx < 0) return;\n\n        handlers[type].splice(idx, 1);\n    }\n\n    function trigger(type, args) {\n        if (!type || !handlers[type]) return;\n\n        args = args || {};\n\n        if (args.hasOwnProperty('type')) {\n            throw new Error('\\'type\\' is a reserved word for event dispatching');\n        }\n\n        args.type = type;\n\n        handlers[type].forEach(function (handler) {\n            handler.callback.call(handler.scope, args);\n        });\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n        var handlersForType = handlers[type];\n        var result = -1;\n\n        if (!handlersForType || handlersForType.length === 0) return result;\n\n        for (var i = 0; i < handlersForType.length; i++) {\n            if (handlersForType[i].callback === listener && (!scope || scope === handlersForType[i].scope)) return i;\n        }\n\n        return result;\n    }\n\n    instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nexport default FactoryMaker.getSingletonFactory(EventBus);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.AST_IN_FUTURE = 'astinfuture';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CHUNK_APPENDED = 'chunkAppended';\n        this.CURRENT_TRACK_CHANGED = 'currenttrackchanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUALITY_CHANGED = 'qualityChanged';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_INITIALIZED = 'streaminitialized';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ALL_ELEMENTS_LOADED = 'xlinkAllElementsLoaded';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BASE64 from '../../../externals/base64';\n\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        var retVal = null;\n        for (var i = 0; i < cpArray.length; ++i) {\n            var cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                    cp.value.toLowerCase() === 'cenc')\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        var offset = 8; // Box size and type fields\n        var view = new DataView(pssh);\n\n        // Read version\n        var version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        var psshList = CommonEncryption.parsePSSHList(initData);\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData) {\n        if ('pssh' in cpData) {\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null)\n            return [];\n\n        var dv = new DataView(data);\n        var done = false;\n        var pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        var byteCursor = 0;\n        while (!done) {\n\n            var size,\n                nextBox,\n                version,\n                systemID,\n                psshDataSize;\n            var boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            var i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            psshDataSize = dv.getUint32(byteCursor);\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n}\n\nexport default CommonEncryption;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n\n        let controller = null;\n\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({log: config.log,});\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                adapter: config.adapter,\n                eventBus: config.eventBus,\n                log: config.log\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n\n        let log = config.log;\n        let eventBus = config.eventBus;\n        let videoElement = config.videoModel.getElement();\n\n        if (videoElement.onencrypted !== undefined &&\n            videoElement.mediaKeys !== undefined &&\n            navigator.requestMediaKeySystemAccess !== undefined &&\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\n\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n\n            log('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\n\n        } else {\n\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n\n        for (var i = 0; i < apis.length; i++) {\n            var api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nlet factory = FactoryMaker.getClassFactory(Protection);\nfactory.events = ProtectionEvents;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events\n     */\n    constructor () {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @ignore\n         */\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @ignore\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Events from '../../../core/events/Events';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Protection from '../Protection';\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    let protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    let adapter = config.adapter;\n    let eventBus = config.eventBus;\n    let log = config.log;\n\n    let instance,\n        keySystems,\n        pendingNeedKeyData,\n        audioInfo,\n        videoInfo,\n        protDataSet,\n        initialized,\n        sessionType,\n        robustnessLevel,\n        keySystem;\n\n    function setup() {\n        keySystems = protectionKeyController.getKeySystems();\n        pendingNeedKeyData = [];\n        initialized = false;\n        sessionType = 'temporary';\n        robustnessLevel = '';\n\n        Events.extend(Protection.events);\n    }\n\n    /**\n     * Initialize this protection system with a given manifest and optional audio\n     * and video stream information.\n     *\n     * @param {Object} manifest the json version of the manifest XML document for the\n     * desired content.  Applications can download their manifest using\n     * {@link module:MediaPlayer#retrieveManifest}\n     * @param {StreamInfo} [aInfo] audio stream information\n     * @param {StreamInfo} [vInfo] video stream information\n     * @memberof module:ProtectionController\n     * @instance\n     * @todo This API will change when we have better support for allowing applications\n     * to select different adaptation sets for playback.  Right now it is clunky for\n     * applications to create {@link StreamInfo} with the right information,\n     */\n    function initialize(manifest, aInfo, vInfo) {\n\n        // TODO: We really need to do much more here... We need to be smarter about knowing\n        // which adaptation sets for which we have initialized, including the default key ID\n        // value from the ContentProtection elements so we know whether or not we still need to\n        // select key systems and acquire keys.\n        if (!initialized) {\n\n            var streamInfo;\n\n            if (!aInfo && !vInfo) {\n                // Look for ContentProtection elements.  InitData can be provided by either the\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\n            }\n\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\n\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\n\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\n            // and video will be the same.  Just use one valid MediaInfo object\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\n            if (supportedKS && supportedKS.length > 0) {\n                selectKeySystem(supportedKS, true);\n            }\n\n            initialized = true;\n        }\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from\n     * the MPD or from the PSSH box in the media\n     *\n     * @param {ArrayBuffer} initData the initialization data\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\n     * to come up to speed with the latest EME standard\n     */\n    function createKeySession(initData) {\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\n        if (initDataForKS) {\n\n            // Check for duplicate initData\n            var currentInitData = protectionModel.getAllInitData();\n            for (var i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    log('DRM: Ignoring initData because we have already seen it!');\n                    return;\n                }\n            }\n            try {\n                protectionModel.createKeySession(initDataForKS, sessionType);\n            } catch (error) {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\n            }\n        } else {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This\n     * essentially creates a new key session\n     *\n     * @param {string} sessionID\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     */\n    function loadKeySession(sessionID) {\n        protectionModel.loadKeySession(sessionID);\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function removeKeySession(sessionToken) {\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     */\n    function closeKeySession(sessionToken) {\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function reset() {\n        setMediaElement(null);\n\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n    }\n\n    ///////////////\n    // Private\n    ///////////////\n\n    function getProtData(keySystem) {\n        var protData = null;\n        var keySystemString = keySystem.systemString;\n\n        if (protDataSet) {\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n        }\n        return protData;\n    }\n\n    function selectKeySystem(supportedKS, fromManifest) {\n\n        var self = this;\n\n        // Build our request object for requestKeySystemAccess\n        var audioCapabilities = [];\n        var videoCapabilities = [];\n\n        if (videoInfo) {\n            videoCapabilities.push(new MediaCapability(videoInfo.codec, robustnessLevel));\n        }\n        if (audioInfo) {\n            audioCapabilities.push(new MediaCapability(audioInfo.codec, robustnessLevel));\n        }\n        var ksConfig = new KeySystemConfiguration(\n                audioCapabilities, videoCapabilities, 'optional',\n                (sessionType === 'temporary') ? 'optional' : 'required',\n                [sessionType]);\n        var requestedKeySystems = [];\n\n        var ksIdx;\n        if (keySystem) {\n            // We have a key system\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\n                if (keySystem === supportedKS[ksIdx].ks) {\n\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\n\n                    // Ensure that we would be granted key system access using the key\n                    // system and codec information\n                    let onKeySystemAccessComplete = function (event) {\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                        if (event.error) {\n                            if (!fromManifest) {\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                            }\n                        } else {\n                            log('DRM: KeySystem Access Granted');\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\n                            createKeySession(supportedKS[ksIdx].initData);\n                        }\n                    };\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\n                    break;\n                }\n            }\n        }\n        else if (keySystem === undefined) {\n            // First time through, so we need to select a key system\n            keySystem = null;\n            pendingNeedKeyData.push(supportedKS);\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (var i = 0; i < supportedKS.length; i++) {\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\n            }\n\n            var keySystemAccess;\n            var onKeySystemAccessComplete = function (event) {\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (event.error) {\n                    keySystem = undefined;\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\n                    }\n                } else {\n                    keySystemAccess = event.data;\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\n                    protectionModel.selectKeySystem(keySystemAccess);\n                }\n            };\n            var onKeySystemSelected = function (event) {\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n                if (!event.error) {\n                    keySystem = protectionModel.getKeySystem();\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    keySystem = undefined;\n                    if (!fromManifest) {\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\n                    }\n                }\n            };\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\n        } else {\n            // We are in the process of selecting a key system, so just save the data\n            pendingNeedKeyData.push(supportedKS);\n        }\n    }\n\n    function sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\n    }\n\n    function onKeyMessage(e) {\n        log('DRM: onKeyMessage');\n        if (e.error) {\n            log(e.error);\n            return;\n        }\n\n        // Dispatch event to applications indicating we received a key message\n        var keyMessage = e.data;\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        var message = keyMessage.message;\n        var sessionToken = keyMessage.sessionToken;\n        var protData = getProtData(keySystem);\n        var keySystemString = keySystem.systemString;\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Message not destined for license server\n        if (!licenseServerData) {\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\n            sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(keySystem)) {\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\n            if (clearkeys)  {\n                log('DRM: ClearKey license request handled by application!');\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // All remaining key system scenarios require a request to a remote license server\n        var xhr = new XMLHttpRequest();\n\n        // Determine license server URL\n        var url = null;\n        if (protData) {\n            if (protData.serverURL) {\n                var serverURL = protData.serverURL;\n                if (typeof serverURL === 'string' && serverURL !== '') {\n                    url = serverURL;\n                } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                    url = serverURL[messageType];\n                }\n            } else if (protData.laURL && protData.laURL !== '') { // TODO: Deprecated!\n                url = protData.laURL;\n            }\n        } else {\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\n            if (!url) {\n                url = e.data.laURL;\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        // Ensure valid license server URL\n        if (!url) {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\n            return;\n        }\n\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        xhr.onload = function () {\n            if (this.status == 200) {\n                sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken,\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\n            } else {\n                sendLicenseRequestCompleteEvent(eventData,\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\n                        '), expected to be 200. readyState is ' + this.readyState +\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\n            }\n        };\n        xhr.onabort = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n        xhr.onerror = function () {\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\n        };\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        var updateHeaders = function (headers) {\n            var key;\n            if (headers) {\n                for (key in headers) {\n                    if ('authorization' === key.toLowerCase()) {\n                        xhr.withCredentials = true;\n                    }\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        };\n        if (protData) {\n            updateHeaders(protData.httpRequestHeaders);\n        }\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\n\n        // Set withCredentials property from protData\n        if (protData && protData.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\n    }\n\n    function onNeedKey(event) {\n        log('DRM: onNeedKey');\n        // Ignore non-cenc initData\n        if (event.key.initDataType !== 'cenc') {\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n            return;\n        }\n\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n        // Convert to ArrayBuffer\n        var abInitData = event.key.initData;\n        if (ArrayBuffer.isView(abInitData)) {\n            abInitData = abInitData.buffer;\n        }\n\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\n        if (supportedKS.length === 0) {\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n            return;\n        }\n\n        selectKeySystem(supportedKS, false);\n    }\n\n    instance = {\n        initialize: initialize,\n        createKeySession: createKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        setMediaElement: setMediaElement,\n        setSessionType: setSessionType,\n        setRobustnessLevel: setRobustnessLevel,\n        setProtectionData: setProtectionData,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\n/**\n * @module ProtectionKeyController\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        log,\n        keySystems,\n        clearkeyKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.log) {\n            log = config.log;\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        var keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance();\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance();\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance();\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (var i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            var data1 = new Uint8Array(initData1);\n            var data2 = new Uint8Array(initData2);\n\n            for (var j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        var cp, ks, ksIdx, cpIdx;\n        var supportedKS = [];\n\n        if (cps) {\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n\n                        // Look for DRM-specific ContentProtection\n                        var initData = ks.getInitData(cp);\n                        if (!!initData) {\n                            supportedKS.push({\n                                ks: keySystems[ksIdx],\n                                initData: initData\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Only key systems supported by this player\n     * that have protection data present will be returned.  Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystems(initData, protDataSet) {\n        var ksIdx;\n        var supportedKS = [];\n        var pssh = CommonEncryption.parsePSSHList(initData);\n\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            var keySystemString = keySystems[ksIdx].systemString;\n            var protectionDataForKeySystemPresent = keySystemString in protDataSet;\n\n            if (keySystems[ksIdx].uuid in pssh && protectionDataForKeySystemPresent) {\n                supportedKS.push({\n                    ks: keySystems[ksIdx],\n                    initData: pssh[keySystems[ksIdx].uuid]\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServer(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType == 'individualization-request') {\n            return null;\n        }\n\n        var licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance();\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            log('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        isClearKey: isClearKey,\n        initDataEquals: initDataEquals,\n        getKeySystems: getKeySystems,\n        getKeySystemBySystemString: getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystems: getSupportedKeySystems,\n        getLicenseServer: getLicenseServer,\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = 'org.w3.clearkey';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey() {\n\n    let instance;\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        var clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            var keyPairs = [];\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\n                var clearkeyID = jsonMsg.kids[i];\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport Error from '../../vo/Error';\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = 'com.microsoft.playready';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemPlayReady() {\n\n    let instance;\n    let messageFormat = 'utf16';\n\n    function getRequestHeadersFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var headers = {};\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        var headerNameList = xmlDoc.getElementsByTagName('name');\n        var headerValueList = xmlDoc.getElementsByTagName('value');\n        for (var i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        var msg,\n            xmlDoc;\n        var licenseRequest = null;\n        var parser = new DOMParser();\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        }\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            var data = new DataView(initData);\n            var numRecords = data.getUint16(4, true);\n            var offset = 6;\n            var parser = new DOMParser();\n\n            for (var i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                var recordType = data.getUint16(offset, true);\n                offset += 2;\n                var recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                var recordData = initData.slice(offset, offset + recordLength);\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        var byteCursor = 0;\n        var uint8arraydecodedPROHeader = null;\n\n        var PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf8' && format !== 'utf16') {\n            throw new Error('Illegal PlayReady message format! -- ' + format);\n        }\n        messageFormat = format;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = 'com.widevine.alpha';\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine() {\n\n    let instance;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport ErrorHandler from '../../utils/ErrorHandler';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_01b(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n    let instance,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n        errHandler,\n\n        // With this version of the EME APIs, sessionIDs are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIDs\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIDs\n        sessions,\n\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        errHandler = ErrorHandler(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (var i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        var ve = videoElement;\n        if (!ve) { // Must have a video element to do this capability tests\n            ve = document.createElement('video');\n        }\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                //var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n\n            var newSession = { // Implements SessionToken\n                sessionID: null,\n                initData: initData,\n                getSessionID: function () {\n                    return this.sessionID;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        var sessionID = sessionToken.sessionID;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), sessionToken.initData, sessionID);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (var i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\n            }\n        }\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                var sessionToken = null;\n                switch (event.type) {\n\n                    case api.needkey:\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            var msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n                                    break;\n                                case 2:\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\n                                    break;\n                                case 3:\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\n                                    break;\n                                case 4:\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\n                                    break;\n                                case 5:\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\n                                    break;\n                                case 6:\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\n                        } else {\n                            log('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            log('DRM: Key added.');\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            log('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n\n                            // Attempt to find an uninitialized token with this sessionID\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionID and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionID = event.sessionId;\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\n                            }\n                        }\n\n                        if (sessionToken) {\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\n\n                        } else {\n                            log('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionID value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionID - the sessionID to search for\n     * @returns {*} the session token with the given sessionID\n     */\n    function findSessionByID(sessionArray, sessionID) {\n\n        if (!sessionID || !sessionArray) {\n            return null;\n        } else {\n            var len = sessionArray.length;\n            for (var i = 0; i < len; i++) {\n                if (sessionArray[i].sessionID == sessionID) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n\n    var instance,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        var numSessions = sessions.length;\n        var session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            var done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (var i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n\n        }).catch(function () {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            videoElement.setMediaKeys(null);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            log('DRM: License server certificate successfully updated.');\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\n        });\n    }\n\n    function createKeySession(initData, sessionType) {\n\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession(sessionType);\n        var sessionToken = createSessionToken(session, initData, sessionType);\n\n        // Generate initial key request\n        session.generateRequest('cenc', initData).then(function () {\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\n        });\n    }\n\n    function loadKeySession(sessionID) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        var session = mediaKeys.createSession();\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                var sessionToken = createSessionToken(session);\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\n            }\n        }).catch(function (error) {\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        var session = sessionToken.session;\n\n        session.remove().then(function () {\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n        (function (i) {\n            var keySystem = ksConfigurations[i].ks;\n            var configs = ksConfigurations[i].configs;\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\n\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function () {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case 'encrypted':\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType) {\n\n        var token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\n                        break;\n\n                    case 'message':\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    let log = config.log;\n    let api = config.api;\n\n\n    let instance,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        var retVal = [];\n        for (var i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        var found = false;\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\n            var configs = ksConfigurations[ksIdx].configs;\n            var supportedAudio = null;\n            var supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\n                var audios = configs[configIdx].audioCapabilities;\n                var videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData /*, keySystemType */) {\n\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        var capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n\n        if (capabilities === null)\n          throw new Error('Can not create sessions for unknown content types.');\n\n        var contentType = capabilities.contentType;\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\n        var sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        var session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n\n        var session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (var i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        var boundDoSetKeys = null;\n        var doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.error:\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\n                        break;\n                    case api.message:\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        log('DRM: Key added.');\n                        eventBus.trigger(Events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        var keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            var keypair = serverResponse.keys[i];\n            var keyid = keypair.kid.replace(/=/g, '');\n            var key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default FactoryMaker.getSingletonFactory(ClearKey);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport BASE64 from '../../../../externals/base64';\n\nfunction DRMToday() {\n\n    const keySystems = {\n        'com.widevine.alpha': {\n            responseType: 'json',\n            getLicenseMessage: function (response) {\n                return BASE64.decodeArray(response.license);\n            },\n            getErrorResponse: function (response) {\n                return response;\n            }\n        },\n        'com.microsoft.playready': {\n            responseType: 'arraybuffer',\n            getLicenseMessage: function (response) {\n                return response;\n            },\n            getErrorResponse: function (response) {\n                return String.fromCharCode.apply(null, new Uint8Array(response));\n            }\n        }\n    };\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default FactoryMaker.getSingletonFactory(DRMToday);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction PlayReady() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse,\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default FactoryMaker.getSingletonFactory(Widevine);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        var i;\n        var numKeys = this.keyPairs.length;\n        var jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            var key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        var jwkString = JSON.stringify(jwk);\n        var len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        var buf = new ArrayBuffer(len);\n        var bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc EME-independent KeyError\n * @ignore\n */\nclass KeyError {\n    /**\n     * @param {Object} sessionToken the key session to which this error is associated\n     * @param {string} errorString an informational error message\n     * @class\n     * @deprecated Newest versions of EME APIs will not use this error object\n     */\n    constructor(sessionToken, errorString) {\n        this.sessionToken = sessionToken;\n        this.error = errorString;\n    }\n}\n\nexport default KeyError;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        this.audioCapabilities = audioCapabilities;\n        this.videoCapabilities = videoCapabilities;\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Error {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default Error;"]}