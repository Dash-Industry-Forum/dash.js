{"version":3,"file":"dash.mss.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/global","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/webpack/runtime/node module decorator","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js","webpack://dashjs/./src/mss/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n        /**\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\n         * @public\n         */\n        this.cmsd = null;\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        loadFragmentTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function start() {\n        if (started) return;\n\n        logger.debug('Start');\n\n        started = true;\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function stop() {\n        if (!started) return;\n\n        logger.debug('Stop');\n\n        clearTimeout(loadFragmentTimeout);\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        stop();\n    }\n\n    function loadNextFragmentInfo() {\n        if (!started) return;\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n        return representation;\n    }\n\n    function requestFragment(request) {\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('End of timeline');\n            stop();\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function fragmentInfoLoaded (e) {\n        if (!started) return;\n\n        const request = e.request;\n        if (!e.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime,\n            delay;\n\n        // logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (startTime === null) {\n            startTime = new Date().getTime();\n        }\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        // Determine delay before requesting next FragmentInfo\n        deltaTime = (new Date().getTime() - startTime) / 1000;\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\n\n        // Set timeout for requesting next FragmentInfo\n        clearTimeout(loadFragmentTimeout);\n        loadFragmentTimeout = setTimeout(function () {\n            loadFragmentTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: start,\n        fragmentInfoLoaded: fragmentInfoLoaded,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n    constructor() {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the BaseURLs have been updated.\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\n         */\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is started\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\n         */\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\n\n        /**\n         * Triggered when the manifest loading is finished, providing the request object information\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\n         */\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\n\n        /**\n         * Triggered when the manifest load is complete, providing the payload\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a throughput measurement based on the last segment request has been stored\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\n         */\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The event is fired when the frame at the current playback position of the media has finished loading;\n         * often the first frame\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the video element reports that the volume has changed\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\n         */\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n\n        /**\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\n         */\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\n\n        /**\n         * Triggered when a content steering request has completed.\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\n         */\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\n\n        /**\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\n         * @event MediaPlayerEvents#INBAND_PRFT\n         */\n        this.INBAND_PRFT = 'inbandPrft';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let endTime;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n\n        // Patch previous segment duration\n        let lastSegment = segments[segments.length - 1];\n        if (lastSegment.t + lastSegment.d !== segment.t) {\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\n            lastSegment.d = segment.t - lastSegment.t;\n        }\n\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                endTime = (segment.t + segment.d) / timescale;\n                if (endTime > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\n                }\n            }\n            return;\n        } else {\n            // In case of live streams, update segment timeline according to DVR window\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n                // Get timestamp of the last segment\n                segment = segments[segments.length - 1];\n                t = segment.t;\n\n                // Determine the segments' availability start time\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\n\n                // Remove segments prior to availability start time\n                segment = segments[0];\n                endTime = (segment.t + segment.d) / timescale;\n                while (endTime < availabilityStartTime) {\n                    // Check if not currently playing the segment to be removed\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\n                        break;\n                    }\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                    segments.splice(0, 1);\n                    segment = segments[0];\n                    endTime = (segment.t + segment.d) / timescale;\n                }\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        if (type !== 'video' && type !== 'audio') return;\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n            playbackController.updateCurrentTime(type);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, streamProcessor) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, streamProcessor) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\n            protectionController: protectionController,\n            constants: config.constants,\n            ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\n            dashMetrics: dashMetrics,\n            playbackController: playbackController,\n            ISOBoxer: ISOBoxer,\n            eventBus: eventBus,\n            debug: debug,\n            errHandler: config.errHandler\n        });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, streamProcessor) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        if (e.request.type === 'MediaSegment') {\n            // MediaSegment => convert to Smooth Streaming moof format\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\n\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // FragmentInfo (live) => update segments list\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\n\n            // Stop event propagation (FragmentInfo must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov,\n        processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AACH', 'AACP', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger,\n        initialBufferSettings;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function getAttributeAsBoolean(node, attrName) {\n        const value = node.getAttribute(attrName);\n        if (!value) return false;\n        return value.toLowerCase() === 'true';\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            i,\n            index;\n\n        const name = streamIndex.getAttribute('Name');\n        const type = streamIndex.getAttribute('Type');\n        const lang = streamIndex.getAttribute('Language');\n        const fallBackId = lang ? type + '_' + lang : type;\n\n        adaptationSet.id = name || fallBackId;\n        adaptationSet.contentType = type;\n        adaptationSet.lang = lang || 'und';\n        adaptationSet.mimeType = mimeTypeMap[type];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            index = qualityLevels[i].getAttribute('Index');\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n        let width = null;\n        let height = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n        if (!isNaN(width)) representation.width = width;\n        if (!isNaN(height)) representation.height = height;\n\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\n        segmentTemplate.availabilityTimeOffset = 'INF';\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i, j, r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic') {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime to one segment duration\n                manifest.minBufferTime = segmentDuration;\n\n                if (manifest.type === 'dynamic') {\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        // 3- Set retry attempts and intervals for FragmentInfo requests\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = settings.get().streaming.delay.liveDelay;\n            if (!targetLiveDelay) {\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\n\n            // Store initial buffer settings\n            initialBufferSettings = {\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': settings.get().streaming.buffer.stableBufferTime,\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\n                    },\n                    'delay': {\n                        'liveDelay': settings.get().streaming.delay.liveDelay\n                    }\n                }\n            };\n\n            settings.update({\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': bufferTime,\n                        'bufferTimeAtTopQuality': bufferTime,\n                        'bufferTimeAtTopQualityLongForm': bufferTime\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: true\n                    },\n                    'delay': {\n                        'liveDelay': liveDelay\n                    }\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            if (timestampOffset > 0) {\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t.toString();\n                        }\n                        segments[j].t -= timestampOffset;\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    function reset() {\n        // Restore initial buffer settings\n        if (initialBufferSettings) {\n            settings.update(initialBufferSettings);\n        }\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    const playbackController = config.playbackController;\n    const streamController = config.streamController;\n    let mssParser,\n        mssFragmentProcessor,\n        fragmentInfoControllers,\n        instance;\n\n    function setup() {\n        fragmentInfoControllers = [];\n    }\n\n    function createMssFragmentProcessor() {\n        mssFragmentProcessor = MssFragmentProcessor(context).create(config);\n    }\n\n    function getStreamProcessor(type) {\n        return streamController.getActiveStreamProcessors().filter(processor => {\n            return processor.getType() === type;\n        })[0];\n    }\n\n    function getFragmentInfoController(type) {\n        return fragmentInfoControllers.filter(controller => {\n            return (controller.getType() === type);\n        })[0];\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.TEXT) {\n\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\n                if (!fragmentInfoController) {\n                    fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        baseURLController: config.baseURLController,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoControllers.push(fragmentInfoController);\n                }\n                fragmentInfoController.start();\n            }\n        });\n    }\n\n    function stopFragmentInfoControllers() {\n        fragmentInfoControllers.forEach(c => {\n            c.reset();\n        });\n        fragmentInfoControllers = [];\n    }\n\n    function onInitFragmentNeeded(e) {\n        let streamProcessor = getStreamProcessor(e.mediaType);\n        if (!streamProcessor) return;\n\n        // Create init segment request\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let mediaInfo = streamProcessor.getMediaInfo();\n\n        let request = new FragmentRequest();\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate init segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n            // Notify init segment has been loaded\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\n                { chunk: chunk },\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\n            );\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error) return;\n\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\n        if (!streamProcessor) return;\n\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\n            if (fragmentInfoController) {\n                fragmentInfoController.fragmentInfoLoaded(e);\n            }\n        }\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeeking() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEKING, onPlaybackSeeking, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        if (mssParser) {\n            mssParser.reset();\n            mssParser = undefined;\n        }\n\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n\n        // Reset FragmentInfoControllers\n        stopFragmentInfoControllers();\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset,\n        createMssParser,\n        createMssFragmentProcessor,\n        registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n"],"names":["root","factory","exports","module","define","amd","self","bigInt","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","sum","l_a","l_b","r","carry","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","prototype","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","t","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","roughLOB","integerLogarithm","tmp","p","e","min","gcd","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","definition","key","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","call","nmd","paths","children","streamId","mediaInfo","segmentType","quality","NaN","index","bytes","end","duration","representationId","endFragment","HTTPRequest","tcpid","type","url","actualurl","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","FragmentRequest","action","ACTION_DOWNLOAD","startTime","mediaStartTime","mediaType","timescale","serviceLocation","requestStartDate","firstByteDate","requestEndDate","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","info","init","ACTION_COMPLETE","MssFragmentInfoController","config","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","request","segment","getMediaInfo","adaptationIndex","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","Date","getTime","setTimeout","error","reset","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","code","message","data","MssErrors","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","ErrorsBase","errors","override","publicOnly","err","MediaPlayerEvents","AST_IN_FUTURE","BASE_URLS_UPDATED","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADING_STARTED","MANIFEST_LOADING_FINISHED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","THROUGHPUT_MEASUREMENT_STORED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_VOLUME_CHANGED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","CONTENT_STEERING_REQUEST_COMPLETED","INBAND_PRFT","EventsBase","events","evt","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","S","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","isPaused","splice","trigger","Events","sender","newDuration","DashJSError","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createOriginalFormatBox","sinf","codec","createBox","data_format","charCodeAt","stringToCharCode","createSchemeTypeBox","schm","scheme_type","scheme_version","createSchemeInformationBox","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","hexStringtoBuffer","buf","Uint8Array","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","moov","mvhd","creation_time","modification_time","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","name","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","set","createAVC1ConfigurationRecord","createAVCVisualSampleEntry","mp4a","audioSpecificConfig","esdsLength","esds","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","createMoovBox","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","context","processFragment","addBoxProcessor","MssParser","initialBufferSettings","BASE64","manifestModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","KID","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protectionHeader","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","firstChild","wrmHeader","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","getKIDFromProtectionHeader","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","targetLiveDelay","streaming","liveDelay","liveDelayFragmentCount","targetDelayCapping","bufferTime","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getMatchers","getIron","MssHandler","mssParser","mssFragmentProcessor","fragmentInfoControllers","initSegmentType","streamController","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","DataChunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeeking","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","createMssFragmentProcessor","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory","global"],"sourceRoot":""}