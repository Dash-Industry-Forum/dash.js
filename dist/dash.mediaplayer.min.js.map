{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/klambert/workspace/dash.js/externals/cea608-parser.js","/Users/klambert/workspace/dash.js/externals/objectiron.js","/Users/klambert/workspace/dash.js/externals/xml2json.js","node_modules/codem-isoboxer/dist/iso_boxer.js","node_modules/round10/round10.js","/Users/klambert/workspace/dash.js/src/core/Debug.js","/Users/klambert/workspace/dash.js/src/core/EventBus.js","/Users/klambert/workspace/dash.js/src/core/FactoryMaker.js","/Users/klambert/workspace/dash.js/src/core/Version.js","/Users/klambert/workspace/dash.js/src/core/events/CoreEvents.js","/Users/klambert/workspace/dash.js/src/core/events/Events.js","/Users/klambert/workspace/dash.js/src/core/events/EventsBase.js","/Users/klambert/workspace/dash.js/src/dash/DashAdapter.js","/Users/klambert/workspace/dash.js/src/dash/DashHandler.js","/Users/klambert/workspace/dash.js/src/dash/DashMetrics.js","/Users/klambert/workspace/dash.js/src/dash/SegmentBaseLoader.js","/Users/klambert/workspace/dash.js/src/dash/WebmSegmentBaseLoader.js","/Users/klambert/workspace/dash.js/src/dash/constants/DashMetricsList.js","/Users/klambert/workspace/dash.js/src/dash/controllers/RepresentationController.js","/Users/klambert/workspace/dash.js/src/dash/models/DashManifestModel.js","/Users/klambert/workspace/dash.js/src/dash/parser/DashParser.js","/Users/klambert/workspace/dash.js/src/dash/parser/maps/CommonProperty.js","/Users/klambert/workspace/dash.js/src/dash/parser/maps/MapNode.js","/Users/klambert/workspace/dash.js/src/dash/parser/maps/RepresentationBaseValuesMap.js","/Users/klambert/workspace/dash.js/src/dash/parser/maps/SegmentValuesMap.js","/Users/klambert/workspace/dash.js/src/dash/parser/matchers/BaseMatcher.js","/Users/klambert/workspace/dash.js/src/dash/parser/matchers/DateTimeMatcher.js","/Users/klambert/workspace/dash.js/src/dash/parser/matchers/DurationMatcher.js","/Users/klambert/workspace/dash.js/src/dash/parser/matchers/NumericMatcher.js","/Users/klambert/workspace/dash.js/src/dash/parser/matchers/StringMatcher.js","/Users/klambert/workspace/dash.js/src/dash/utils/FragmentedTextBoxParser.js","/Users/klambert/workspace/dash.js/src/dash/utils/ListSegmentsGetter.js","/Users/klambert/workspace/dash.js/src/dash/utils/SegmentsGetter.js","/Users/klambert/workspace/dash.js/src/dash/utils/SegmentsUtils.js","/Users/klambert/workspace/dash.js/src/dash/utils/TemplateSegmentsGetter.js","/Users/klambert/workspace/dash.js/src/dash/utils/TimelineConverter.js","/Users/klambert/workspace/dash.js/src/dash/utils/TimelineSegmentsGetter.js","/Users/klambert/workspace/dash.js/src/dash/vo/AdaptationSet.js","/Users/klambert/workspace/dash.js/src/dash/vo/BaseURL.js","/Users/klambert/workspace/dash.js/src/dash/vo/Event.js","/Users/klambert/workspace/dash.js/src/dash/vo/EventStream.js","/Users/klambert/workspace/dash.js/src/dash/vo/Mpd.js","/Users/klambert/workspace/dash.js/src/dash/vo/Period.js","/Users/klambert/workspace/dash.js/src/dash/vo/Representation.js","/Users/klambert/workspace/dash.js/src/dash/vo/Segment.js","/Users/klambert/workspace/dash.js/src/dash/vo/UTCTiming.js","/Users/klambert/workspace/dash.js/src/streaming/FragmentLoader.js","/Users/klambert/workspace/dash.js/src/streaming/ManifestLoader.js","/Users/klambert/workspace/dash.js/src/streaming/ManifestUpdater.js","/Users/klambert/workspace/dash.js/src/streaming/MediaPlayer.js","/Users/klambert/workspace/dash.js/src/streaming/MediaPlayerEvents.js","/Users/klambert/workspace/dash.js/src/streaming/Stream.js","/Users/klambert/workspace/dash.js/src/streaming/StreamProcessor.js","/Users/klambert/workspace/dash.js/src/streaming/TextSourceBuffer.js","/Users/klambert/workspace/dash.js/src/streaming/TextTracks.js","/Users/klambert/workspace/dash.js/src/streaming/XHRLoader.js","/Users/klambert/workspace/dash.js/src/streaming/XlinkLoader.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/AbrController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/BaseURLController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/BlacklistController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/BufferController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/EventController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/FragmentController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/MediaController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/MediaSourceController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/PlaybackController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/ScheduleController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/SourceBufferController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/StreamController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/TextController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/TimeSyncController.js","/Users/klambert/workspace/dash.js/src/streaming/controllers/XlinkController.js","/Users/klambert/workspace/dash.js/src/streaming/models/BaseURLTreeModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/FragmentModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/ManifestModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/MediaPlayerModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/MetricsModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/URIQueryAndFragmentModel.js","/Users/klambert/workspace/dash.js/src/streaming/models/VideoModel.js","/Users/klambert/workspace/dash.js/src/streaming/rules/RulesContext.js","/Users/klambert/workspace/dash.js/src/streaming/rules/RulesController.js","/Users/klambert/workspace/dash.js/src/streaming/rules/SwitchRequest.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/ABRRulesCollection.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/AbandonRequestsRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/BolaAbandonRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/BolaRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/BufferOccupancyRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/InsufficientBufferRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/abr/ThroughputRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/baseUrlResolution/BasicSelector.js","/Users/klambert/workspace/dash.js/src/streaming/rules/baseUrlResolution/DVBSelector.js","/Users/klambert/workspace/dash.js/src/streaming/rules/scheduling/BufferLevelRule.js","/Users/klambert/workspace/dash.js/src/streaming/rules/scheduling/NextFragmentRequestRule.js","/Users/klambert/workspace/dash.js/src/streaming/utils/BaseURLSelector.js","/Users/klambert/workspace/dash.js/src/streaming/utils/BoxParser.js","/Users/klambert/workspace/dash.js/src/streaming/utils/Capabilities.js","/Users/klambert/workspace/dash.js/src/streaming/utils/CustomTimeRanges.js","/Users/klambert/workspace/dash.js/src/streaming/utils/DOMStorage.js","/Users/klambert/workspace/dash.js/src/streaming/utils/EBMLParser.js","/Users/klambert/workspace/dash.js/src/streaming/utils/ErrorHandler.js","/Users/klambert/workspace/dash.js/src/streaming/utils/InitCache.js","/Users/klambert/workspace/dash.js/src/streaming/utils/IsoFile.js","/Users/klambert/workspace/dash.js/src/streaming/utils/LiveEdgeFinder.js","/Users/klambert/workspace/dash.js/src/streaming/utils/ObjectUtils.js","/Users/klambert/workspace/dash.js/src/streaming/utils/RequestModifier.js","/Users/klambert/workspace/dash.js/src/streaming/utils/TTMLParser.js","/Users/klambert/workspace/dash.js/src/streaming/utils/URLUtils.js","/Users/klambert/workspace/dash.js/src/streaming/utils/VTTParser.js","/Users/klambert/workspace/dash.js/src/streaming/vo/BitrateInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/DataChunk.js","/Users/klambert/workspace/dash.js/src/streaming/vo/Error.js","/Users/klambert/workspace/dash.js/src/streaming/vo/FragmentRequest.js","/Users/klambert/workspace/dash.js/src/streaming/vo/HeadRequest.js","/Users/klambert/workspace/dash.js/src/streaming/vo/IsoBox.js","/Users/klambert/workspace/dash.js/src/streaming/vo/ManifestInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/MediaInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/MetricsList.js","/Users/klambert/workspace/dash.js/src/streaming/vo/StreamInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/TextRequest.js","/Users/klambert/workspace/dash.js/src/streaming/vo/TextTrackInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/TrackInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/URIFragmentData.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/BolaState.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/BufferLevel.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/BufferState.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/DVRInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/DroppedFrames.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/HTTPRequest.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/ManifestUpdate.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/PlayList.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/RepresentationSwitch.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/RequestsQueue.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/SchedulingInfo.js","/Users/klambert/workspace/dash.js/src/streaming/vo/metrics/TCPConnection.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","MediaPlayer","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","specialCea608CharsCodes","42","92","94","95","96","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","getCharForByte","byte","charCode","hasOwnProperty","String","fromCharCode","NR_ROWS","NR_COLS","rowsLowCh1","17","18","21","22","23","16","19","20","rowsHighCh1","rowsLowCh2","25","26","29","30","31","24","27","28","rowsHighCh2","backgroundColors","logger","verboseFilter","DATA","DEBUG","INFO","WARNING","TEXT","ERROR","time","verboseLevel","setTime","newTime","log","severity","msg","minLevel","console","numArrayToHexArray","numArray","hexArray","j","push","toString","PenState","foreground","underline","italics","background","flash","prototype","reset","setStyles","styles","attribs","style","isDefault","equals","other","copy","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","Row","chars","pos","currPenState","equal","empty","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","char","clearFromPos","startPos","clear","clearToEndOfRow","getTextString","join","setPenStyles","currChar","CaptionScreen","rows","currRow","nrRollUpRows","row","setPen","setPAC","pacData","JSON","stringify","newRow","indent","prevPos","Math","max","color","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRowIndex","topRow","splice","asOneRow","displayText","text","rowNr","rowText","trim","getTextAndFormat","Cea608Channel","channelNumber","outputFilter","chNr","mode","verbose","displayedMemory","nonDisplayedMemory","lastOutputScreen","currRollUpRow","writeScreen","cueStartTime","modes","lastCueEndTime","getHandler","setHandler","newHandler","setMode","newMode","insertChars","screen","outputDataUpdate","cc_RCL","cc_BS","cc_AOF","cc_AON","cc_DER","cc_RU","cc_FON","cc_RDC","cc_TR","cc_RTD","cc_EDM","cc_CR","cc_ENM","cc_EOC","tmp","cc_TO","nrCols","cc_MIDROW","secondByte","colorIndex","floor","colors","updateData","newCue","cueSplitAtTime","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","startTime","lastTime","dataCounters","padding","cmd","index","addData","byteList","cmdFound","b","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","channel","cond1","cond2","case1","case2","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","hexCodes","findCea608Nalus","raw","size","nalSize","cursor","nalType","cea608NaluRanges","isCEA608SEI","payloadType","payloadSize","countryCode","getUint8","providerCode","getUint16","userIdentifier","getUint32","userDataTypeCode","extractCea608DataFromRange","cea608Range","fieldData","ccCount","ccValid","ccType","ccData1","ccData2","undefined","cea608parser","ObjectIron","map","lookup","len","isRoot","name","mergeValues","parentItem","childItem","mapProperties","properties","parent","child","property","parentValue","childValue","merge","mergeFunction","mapItem","obj","node","v","len2","array","childNode","item","children","isArray","performMapping","source","pi","pp","indexOf","run","root","factory","X2JS","config","initConfigDefaults","escapeMode","attributePrefix","arrayAccessForm","emptyNodeForm","enableToStringFunc","arrayAccessFormPaths","skipEmptyTextNodesForObj","stripWhitespaces","datetimeAccessFormPaths","useDoubleQuotes","xmlElementsFilter","jsonPropertiesFilter","keepCData","ignoreRoot","initRequiredPolyfills","getNodeLocalName","nodeLocalName","localName","baseName","nodeName","getNodePrefix","prefix","escapeXmlChars","str","replace","checkInStdFiltersArrayForm","stdFiltersArrayForm","path","idx","filterPath","RegExp","test","toArrayAccessForm","childName","Array","fromXmlDateTime","prop","bits","split","d","Date","secondBits","setHours","setMilliseconds","offsetMinutes","Number","sign","setMinutes","getMinutes","getTimezoneOffset","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","checkFromXmlDateTimePaths","value","fullPath","checkXmlElementsFilter","childType","childPath","DOMNodeTypes","ELEMENT_NODE","parseDOMChildren","nodeType","DOCUMENT_NODE","result","Object","nodeChildren","childNodes","cidx","__cnt","COMMENT_NODE","c","__children","aidx","attributes","attr","value2","m","ml","matchers","matchobj","converter","nodePrefix","__prefix","__text","__cdata","TEXT_NODE","CDATA_SECTION_NODE","nodeValue","startTag","jsonObj","element","attrList","closed","resultStr","attrName","attrVal","substr","endTag","elementName","endsWith","suffix","jsonXmlSpecialElem","jsonObjField","Function","jsonXmlElemCount","elementsCnt","it","checkJsonObjPropertiesFilter","propertyName","jsonObjPath","parseJSONAttributes","ait","parseJSONTextAttrs","jsonTxtObj","parseJSONTextObject","getJsonPropertyPath","jsonPropName","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","toISOString","subObjElementsCnt","VERSION","parseXmlString","xmlDocStr","isIEParser","ActiveXObject","xmlDoc","DOMParser","parser","parsererrorNS","parseFromString","getElementsByTagName","namespaceURI","err","getElementsByTagNameNS","async","loadXML","asArray","toXmlDateTime","dt","asDateTime","xml2json","xml_str2json","json2xml_str","json2xml","getVersion","ISOBoxer","parseBuffer","arrayBuffer","ISOFile","parse","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","decode","byteLength","Cursor","initialOffset","offset","_raw","DataView","_cursor","boxes","fetch","type","fetchAll","returnEarly","_sweep","box","ISOBox","newBox","_offset","_root","_parent","_parseBox","byteOffset","_readInt","getInt8","getInt16","getInt32","s1","s2","pow","_readUint","_readString","_readTerminatedString","_readTemplate","pre","post","buffer","_incomplete","largesize","usertype","_boxParsers","_parseFullBox","version","flags","forEach","boxType","entry_count","entries","entry","segment_duration","media_time","media_rate_integer","media_rate_fraction","scheme_id_uri","timescale","presentation_time_delta","event_duration","id","message_data","data","major_brand","minor_versions","compatible_brands","pre_defined","handler_type","reserved","creation_time","modification_time","duration","language","pad","sequence_number","rate","volume","reserved1","reserved2","matrix","next_track_ID","cue_text_raw","cue_text","reference_ID","earliest_presentation_time","first_offset","reference_count","references","ref","reference","reference_type","referenced_size","subsegment_duration","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegments","subsegment","ranges_count","ranges","range","level","range_size","baseMediaDecodeTime","track_ID","base_data_offset","sample_description_offset","default_sample_duration","default_sample_size","default_sample_flags","layer","alternate_group","reserved3","width","height","sample_count","data_offset","first_sample_flags","samples","sample","sample_duration","sample_size","sample_flags","sample_composition_time_offset","source_label_raw","source_label","config_raw","decimalAdjust","exp","isNaN","NaN","round10","floor10","ceil10","polyfill","Debug","setup","logToBrowserConsole","showLogTimestamp","getTime","setLogTimestampVisible","setLogToBrowserConsole","getLogToBrowserConsole","message","logTime","apply","arguments","eventBus","trigger","_eventsEvents2","LOG","context","_EventBus2","getInstance","instance","__dashjs_factory_name","_FactoryMaker2","getSingletonFactory","EventBus","on","listener","scope","priority","EVENT_PRIORITY_LOW","getHandlerIdx","handlers","handler","callback","inserted","some","off","payload","EVENT_PRIORITY_HIGH","FactoryMaker","extend","childInstance","override","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","setSingletonInstance","getClassFactory","classConstructor","create","args","extensionObject","extension","extensions","getVersionString","CoreEvents","_EventsBase","_get","getPrototypeOf","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","events","EventsBase","publicOnly","evt","DashAdapter","setConfig","dashManifestModel","initialize","periods","adaptations","getRepresentationForTrackInfo","trackInfo","representationController","getRepresentationForQuality","quality","getAdaptationForMediaInfo","mediaInfo","streamInfo","getPeriodForStreamInfo","ln","period","convertRepresentationToTrackInfo","manifest","representation","_streamingVoTrackInfo2","adaptation","mpd","Period_asArray","AdaptationSet_asArray","getRepresentationFor","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","MSETimeOffset","useCalculatedLiveEdgeTime","convertAdaptationToMediaInfo","viewpoint","_streamingVoMediaInfo2","convertPeriodToStreamInfo","representationCount","getRepresentationCount","lang","getLanguageForAdaptation","getViewpointForAdaptation","accessibility","getAccessibilityForAdaptation","accessibilityValue","accessibilityData","schemeIdUri","search","_externalsCea608Parser2","embeddedCaptions","audioChannelConfiguration","getAudioChannelConfigurationForAdaptation","roles","getRolesForAdaptation","role","codec","getCodec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","KID","getKID","isText","getIsTextTrack","convertVideoInfoToEmbeddedTextInfo","parseInt","substring","isEmbedded","_streamingVoStreamInfo2","THRESHOLD","start","manifestInfo","convertMpdToManifestInfo","isLast","abs","isFirst","getRegularPeriods","getMpd","_streamingVoManifestInfo2","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","getDuration","isDynamic","getIsDynamic","getMediaInfoForType","getAdaptationForType","periodInfo","periodId","getIndexForAdaptation","getAdaptationsForPeriod","getAllMediaInfoForType","media","adaptationsForType","getAdaptationsForType","mediaArr","accessibilityLength","parts","getStreamsInfo","streams","getManifestInfo","getInitRequest","streamProcessor","getRepresentationController","getIndexHandler","getNextFragmentRequest","getNextSegmentRequest","getFragmentRequestForTime","options","getSegmentRequestForTime","generateFragmentRequestForTime","generateSegmentRequestForTime","getIndexHandlerTime","getCurrentTime","setIndexHandlerTime","setCurrentTime","getStreamInfo","getMediaInfo","getType","getAdaptationForId","getAdaptationForIndex","getRepresentationInfoForQuality","getCurrentRepresentationInfo","getCurrentRepresentation","getEvent","eventBox","eventStreams","event","_voEvent2","presentationTimeDelta","messageData","presentationTime","eventStream","getEventsFor","info","getEventsForPeriod","getEventStreamForAdaptationSet","getEventStreamForRepresentation","convertDataToTrack","convertDataToMedia","convertDataToStream","getDataForTrack","getDataForMedia","getDataForStream","metricsList","METRIC_LIST","_interopRequireWildcard","_constantsDashMetricsList","_coreFactoryMaker2","DashHandler","currentTime","earliestTime","_coreEventsEvents2","onInitializationLoaded","onSegmentsLoaded","StreamProcessor","segmentsGetter","_utilsSegmentsGetter2","getStreamProcessor","getCurrentIndex","getEarliestTime","requestedTime","unescapeDollarsInTemplate","url","replaceIDForTemplate","setRequestUrl","request","destination","serviceLocation","baseURL","baseURLController","resolve","urlUtils","isRelative","generateInitRequest","mediaType","_streamingVoFragmentRequest2","presentationStartTime","_streamingVoMetricsHTTPRequest","HTTPRequest","INIT_SEGMENT_TYPE","timelineConverter","calcAvailabilityStartTimeFromPresentationTime","availabilityEndTime","calcAvailabilityEndTimeFromPresentationTime","initialization","isMediaFinished","isFinished","availableSegmentsNumber","seg","_utilsSegmentsUtils","getSegmentByIndex","segmentInfoType","updateSegments","getSegments","onSegmentListUpdated","min","getExpectedLiveEdge","lastSegment","liveEdge","metrics","metricsModel","getMetricsFor","setExpectedLiveEdge","updateManifestUpdateInfo","dashMetrics","getCurrentManifestUpdate","updateSegmentList","_streamingVoError2","updateRepresentation","keepIdx","error","hasInitialization","hasSegments","indexRange","calcSegmentAvailabilityRange","end","SEGMENTS_UNAVAILABLE_ERROR_CODE","availabilityDelay","sender","segmentBaseLoader","loadInitialization","loadSegments","getIndexForSegments","timeThreshold","epsilon","frag","ft","fd","availabilityIdx","getRequestForSegment","segment","Representation_asArray","replaceTokenForTemplate","replacementNumber","replacementTime","MEDIA_SEGMENT_TYPE","mediaRange","wallStartTime","adaptationIndex","finished","ignoreIsFinished","action","ACTION_COMPLETE","step","fragments","count","getTimeBasedSegment","_coreDebug2","_coreEventBus2","_streamingUtilsURLUtils2","DashMetrics","getBandwidthForRepresentation","representationId","manifestModel","getValue","findRepresentation","getIndexForRepresentation","periodIdx","representationIndex","findRepresentationIndex","getMaxIndexForBufferType","bufferType","maxIndex","findMaxBufferIndex","getCurrentRepresentationSwitch","getCurrent","MetricsList","TRACK_SWITCH","getLatestBufferLevelVO","BUFFER_LEVEL","getCurrentBufferLevel","vo","_round10","getRequestsQueue","RequestsQueue","getCurrentHttpRequest","httpListLength","httpListLastIndex","httpList","HttpList","currentHttpList","responsecode","getHttpRequests","metricName","list","getCurrentDroppedFrames","DROPPED_FRAMES","getCurrentSchedulingInfo","SCHEDULING_INFO","MANIFEST_UPDATE","getCurrentDVRInfo","DVR_INFO","getLatestMPDRequestHeaderValueByID","httpRequestList","httpRequest","headers","MPD_TYPE","parseResponseHeaders","_responseHeaders","getLatestFragmentRequestHeaderValueByID","headerStr","headerPairs","ilen","headerPair","returnIndex","adaptationSet","adaptationSetArray","representationArray","adaptationSetArrayIndex","representationArrayIndex","adaptationIsType","_modelsDashManifestModel2","getIsTypeOf","_streamingModelsManifestModel2","SegmentBaseLoader","errHandler","_streamingUtilsErrorHandler2","boxParser","_streamingUtilsBoxParser2","requestModifier","_streamingUtilsRequestModifier2","loadingInfo","needFailureReport","initRange","isoFile","XMLHttpRequest","baseUrl","searching","bytesLoaded","bytesToLoad","onload","status","response","findInitRange","onloadend","onerror","downloadError","sendRequest","parseFloat","onLoaded","sidx","hasRange","extraBytes","loadedLength","getBox","isComplete","loadMultiSidx","ss","se","segs","tmpCallback","concat","getSegmentsForSidx","lastBox","getLastBox","refs","_voSegment2","ftyp","moov","open","modifyRequestURL","responseType","setRequestHeader","modifyRequestHeader","send","WebmSegmentBaseLoader","WebM","EBML","tag","required","Segment","SeekHead","Info","TimecodeScale","Duration","Tracks","Cues","CuePoint","CueTime","CueTrackPositions","CueTrack","CueClusterPosition","CueBlockNumber","Void","xhrLoader","_streamingXHRLoader2","parseCues","ab","cues","cue","cueSize","cueTrack","ebmlParser","_streamingUtilsEBMLParser2","numSize","consumeTag","getMatroskaCodedNum","moreData","consumeTagAndSize","parseTag","CueTracks","Track","ClusterPosition","getPos","BlockNumber","getMatroskaUint","parseSegments","segmentStart","segmentEnd","parsed","parseEbmlHeader","theRange","skipOverElement","infoTag","infoElementSize","setPos","getFragmentRequest","load","success","init","TCP_CONNECTION","HTTP_REQUEST","BUFFER_STATE","REQUESTS_QUEUE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","RepresentationController","dataIndex","updating","availableRepresentations","abrController","_streamingControllersAbrController2","streamController","_streamingControllersStreamController2","playbackController","_streamingControllersPlaybackController2","_streamingModelsMetricsModel2","domStorage","_streamingUtilsDOMStorage2","_utilsTimelineConverter2","_DashMetrics2","mediaPlayerModel","_streamingModelsMediaPlayerModel2","QUALITY_CHANGE_REQUESTED","onQualityChanged","onRepresentationUpdated","onWallclockTimeUpdated","onBufferLevelUpdated","indexHandler","getData","getDataIndex","isUpdating","currentRepresentation","dataValue","averageThroughput","bitrate","maxQuality","getTopQualityIndexFor","updateRepresentations","getAverageThroughput","getInitialBitrateFor","getQualityForBitrate","getQualityFor","addRepresentationSwitch","now","currentVideoTimeMs","addDVRMetric","addDVRInfo","getQualityForRepresentation","isAllRepresentationsUpdated","reps","getRepresentationsForAdaptation","updateAvailabilityWindow","rep","resetAvailabilityWindow","postponeUpdate","postponeTimePeriod","delay","update","_streamingMediaPlayerEvents2","AST_IN_FUTURE","setTimeout","repInfo","repSwitch","streamMetrics","manifestUpdateInfo","alreadyAdded","segmentAvailabilityTimePeriod","liveDelay","computeLiveDelay","SEGMENTS_UPDATE_FAILED_ERROR_CODE","addManifestUpdateRepresentationInfo","presentationTimeOffset","startNumber","setPlaybackQuality","latency","oldQuality","newQuality","setSavedBitrateSettings","DashManifestModel","found","col","ContentComponent_asArray","mimeTypeRegEx","codecs","contentType","getIsAudio","getIsVideo","getIsFragmentedText","getIsText","getIsMuxed","Viewpoint","Role_asArray","Accessibility_asArray","AudioChannelConfiguration_asArray","getIsMain","filter","getRepresentationSortFunction","processAdaptation","sort","periodIndex","currentTrack","mediaController","getCurrentTrackFor","allMediaInfoForType","adaptor","isTracksEqual","ContentProtection_asArray","getIsDVR","containsDVR","isDVR","hasProfile","profile","has","profiles","getIsOnDemand","getIsDVB","mpdDuration","mediaPresentationDuration","MAX_VALUE","getManifestUpdatePeriod","latencyOfLastUpdate","minimumUpdatePeriod","segmentInfo","representations","_voRepresentation2","maxPlayoutRate","SegmentBase","SegmentList","SegmentTimeline","S_asArray","SegmentTemplate","BaseURL","Initialization","sourceURL","calcMSETimeOffset","p","_voAdaptationSet2","p1","vo1","_voPeriod2","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","_voMpd2","suggestedPresentationDelay","periodEnd","POSITIVE_INFINITY","periodArray","EventStream_asArray","_voEventStream2","Event_asArray","getEventStreams","inbandStreams","InbandEventStream_asArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","utcTiming","_voUTCTiming2","getBaseURLsFromElement","baseUrls","BaseURL_asArray","baseUri","earlyReturn","_voBaseURL2","dvb_priority","dvb_weight","getLocation","Location","Location_asArray","_streamingControllersMediaController2","_DashAdapter2","DashParser","_matchersDurationMatcher2","_matchersDateTimeMatcher2","_matchersNumericMatcher2","_matchersStringMatcher2","_externalsXml2json2","objectIron","_externalsObjectiron2","_mapsRepresentationBaseValuesMap2","_mapsSegmentValuesMap2","xlinkController","performance","jsonTime","ironedTime","setMatchers","setIron","toPrecision","errorHandler","manifestError","CommonProperty","getDefaultMergeForName","charAt","toUpperCase","_name","_merge","MapNode","_properties","_children","_isRoot","_isArray","_this","_CommonProperty2","RepresentationBaseValuesMap","_MapNode","commonProperties","_MapNode3","SegmentValuesMap","BaseMatcher","_test","_converter","SECONDS_IN_MIN","MINUTES_IN_HOUR","MILLISECONDS_IN_SECONDS","datetimeRegex","DateTimeMatcher","_BaseMatcher","match","exec","utcDate","timezoneOffset","durationRegex","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","DurationMatcher","attributeList","numericRegex","NumericMatcher","StringMatcher","stringAttrsInElements","MPD","Period","RepresentationIndex","BitstreamSwitching","SegmentURL","AssetIdentifier","EventStream","AdaptationSet","FramePacking","AudioChannelConfiguration","ContentProtection","EssentialProperty","SupplementalProperty","InbandEventStream","Accessibility","Role","Rating","ContentComponent","Representation","Subset","Metrics","Reporting","attrNames","FragmentedTextBoxParser","getSamplesInfo","sampleDuration","sampleCompositionTimeOffset","sampleCount","sampleSize","sampleDts","sampleList","dataOffset","sequenceNumber","totalDuration","sampleWithSubsIndex","tfhdBox","tfdtBox","trunBox","moofBox","mfhdBox","subsBox","sampleData","dts","cts","subSizes","samples_with_subsamples","nr","subsamples","subSize","getMediaTimescaleFromMoov","mdhdBox","ListSegmentsGetter","getSegmentsFromList","availabilityUpperLimit","periodSegIdx","startIdx","endIdx","SegmentURL_asArray","_SegmentsUtils","decideSegmentListRangeForTemplate","getIndexBasedSegment","SegmentsGetter","timelineSegmentsGetter","_TimelineSegmentsGetter2","templateSegmentsGetter","_TemplateSegmentsGetter2","listSegmentsGetter","_ListSegmentsGetter2","onSegmentListUpdatedCallback","isSegmentListUpdateRequired","upperIdx","lowerIdx","updateRequired","zeroPadToLength","numStr","minStrLength","getNumberForSegment","segmentIndex","token","endPos","formatTagPos","specifier","paddedValue","formatTag","tokenLen","formatTagLen","presentationEndTime","mediaStartTime","calcMediaTimeFromPresentationTime","calcWallTimeForSegment","fTimescale","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","decideSegmentListRangeForTimeline","givenAvailabilityUpperLimit","availabilityLowerLimit","firstIdx","lastIdx","isTimeSyncCompleted","availabilityWindow","periodRelativeRange","calcPeriodRelativeTimeFromMpdRelativeTime","currentSegmentList","originAvailabilityTime","originSegment","TemplateSegmentsGetter","getSegmentsFromTemplate","segmentRange","template","ceil","TimelineConverter","clientServerTimeShift","isClientServerTimeSyncCompleted","expectedLiveEdge","onTimeSyncComplete","setTimeSyncCompleted","getClientTimeOffset","calcAvailabilityTimeFromPresentationTime","calculateEnd","availabilityTime","calcPresentationTimeFromWallTime","wallTime","mediaTime","periodStart","presentationOffset","displayStartTime","mpdRelativeTime","periodStartTime","calcMpdRelativeTimeFromPeriodRelativeTime","periodRelativeTime","TimelineSegmentsGetter","getSegmentsFromTimeline","repeat","repeatEndTime","nextFrag","calculatedRange","hasEnoughSegments","requiredMediaTime","base","timeline","isAvailableSegmentNumberCalculated","maxSegmentsAhead","isStartSegmentForRequestedTimeFound","createSegment","availabilityEnd","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","weight","Event","adaptionSet","Mpd","UTCTiming","FragmentLoader","_XHRLoader2","checkForExistence","report","exists","headRequest","_voHeadRequest2","progress","xhr","statusText","errorText","_voError2","FRAGMENT_LOADER_ERROR_LOADING_FAILURE","FRAGMENT_LOADER_ERROR_NULL_REQUEST","FRAGMENT_LOADER_MESSAGE_NULL_REQUEST","abort","ManifestLoader","onXlinkReady","_controllersXlinkController2","_voTextRequest2","_voMetricsHTTPRequest","textStatus","actualUrl","responseURL","parseBaseUrl","location","href","originalUrl","resolveManifestOnLoad","MANIFEST_LOADER_ERROR_PARSING_FAILURE","MANIFEST_LOADER_MESSAGE_PARSING_FAILURE","MANIFEST_LOADER_ERROR_LOADING_FAILURE","_utilsURLUtils2","ManifestUpdater","loader","manifestLoader","refreshDelay","refreshTimer","isPaused","_modelsMediaPlayerModel2","onStreamsComposed","PLAYBACK_STARTED","onPlaybackStarted","PLAYBACK_PAUSED","onPlaybackPaused","onManifestLoaded","setManifest","getManifestLoader","stopManifestRefreshTimer","clearInterval","startManifestRefreshTimer","onRefreshTimer","refreshManifest","setValue","date","getScheduleWhilePaused","mediaPlayerInitialized","playbackInitialized","autoPlay","protectionController","protectionData","adapter","_MediaPlayerEvents2","view","AutoPlay","capabilities","_utilsCapabilities2","_utilsErrorHandler2","supportsMediaSource","_controllersAbrController2","_controllersPlaybackController2","_controllersMediaController2","_dashModelsDashManifestModel2","_dashDashMetrics2","_modelsMetricsModel2","createAdaptor","restoreDefaultUTCTimingSources","setAutoPlay","attachView","attachSource","capabilityError","isReady","videoModel","play","PLAYBACK_NOT_INITIALIZED_ERROR","pause","isSeeking","setMute","ELEMENT_NOT_ATTACHED_ERROR","getVideoElement","muted","isMuted","setVolume","getVolume","getBufferLength","types","getDashMetrics","getTracksFor","reduce","getDVRWindowSize","metric","getDVRInfoMetric","getDVRSeekOffset","val","seek","streamId","getTimeRelativeToStreamId","timeAsUTC","getAsUTC","durationAsUTC","formatUTC","locales","hour12","withDate","toLocaleDateString","toLocaleTimeString","convertToTimeCode","h","parentNameString","_coreVersion","getDebug","debug","getVideoModel","setLiveDelayFragmentCount","setLiveDelay","getLiveDelay","useSuggestedPresentationDelay","setUseSuggestedPresentationDelay","enableLastBitrateCaching","enable","ttl","setLastBitrateCachingInfo","enableLastMediaSettingsCaching","setLastMediaSettingsCachingInfo","setMaxAllowedBitrateFor","getMaxAllowedBitrateFor","setMaxAllowedRepresentationRatioFor","getMaxAllowedRepresentationRatioFor","getAutoPlay","setScheduleWhilePaused","getReadOnlyMetricsFor","getActiveStreamInfo","setQualityFor","updatePortalSize","setElementSize","setWindowResizeEventCalled","getLimitBitrateByPortal","setLimitBitrateByPortal","getUsePixelRatioInLimitBitrateByPortal","setUsePixelRatioInLimitBitrateByPortal","setTextTrack","textSourceBuffer","_TextSourceBuffer2","tracks","textTracks","track","getCurrentTextTrackIndex","getCurrentTrackIdx","getBitrateInfoListFor","stream","getActiveStream","getBitrateListFor","setInitialBitrateFor","setInitialRepresentationRatioFor","getInitialRepresentationRatioFor","getStreamsFromManifest","getTracksForTypeFromManifest","setInitialMediaSettingsFor","setInitialSettings","getInitialMediaSettingsFor","getInitialSettings","setCurrentTrack","setTrack","getTrackSwitchModeFor","getSwitchMode","setTrackSwitchModeFor","setSwitchMode","setSelectionModeForInitialTrack","getSelectionModeForInitialTrack","getAutoSwitchQuality","getAutoSwitchBitrateFor","setAutoSwitchQuality","setAutoSwitchBitrateFor","getAutoSwitchQualityFor","setAutoSwitchQualityFor","setFastSwitchEnabled","getFastSwitchEnabled","enableBufferOccupancyABR","setBufferOccupancyABREnabled","retrieveManifest","createManifestLoader","uriQueryFragModel","_modelsURIQueryAndFragmentModel2","parseURI","addUTCTimingSource","removeUTCTimingSource","_dashVoUTCTiming2","UTCTimingSources","clearDefaultUTCTimingSources","setUTCTimingSources","DEFAULT_UTC_TIMING_SOURCE","scheme","enableManifestDateHeaderTimeSource","setUseManifestDateHeaderTimeSource","setBufferToKeep","setBufferPruningInterval","setStableBufferTime","setBufferTimeAtTopQuality","setBufferTimeAtTopQualityLongForm","setLongFormContentDurationThreshold","setRichBufferThreshold","setBandwidthSafetyFactor","getBandwidthSafetyFactor","setAbandonLoadTimeout","setFragmentLoaderRetryAttempts","setFragmentRetryAttempts","setFragmentLoaderRetryInterval","setFragmentRetryInterval","setXHRWithCredentials","setXHRWithCredentialsForType","getXHRWithCredentialsForType","getProtectionController","detectProtection","attachProtectionController","setProtectionData","displayCaptionsOnTop","_TextTracks2","displayCConTop","getVideoContainer","attachVideoContainer","container","setVideoContainer","getElement","MEDIA_PLAYER_NOT_INITIALIZED_ERROR","_modelsVideoModel2","setElement","detectMetricsReporting","resetAndInitializePlayback","getTTMLRenderingDiv","attachTTMLRenderingDiv","div","setTTMLRenderingDiv","getSource","SOURCE_NOT_ATTACHED_ERROR","urlOrManifest","rulesController","metricsReportingController","initializePlayback","createControllers","abrRulesCollection","_rulesAbrABRRulesCollection2","sourceBufferController","_controllersSourceBufferController2","_rulesRulesController2","_controllersStreamController2","_modelsManifestModel2","liveEdgeFinder","_utilsLiveEdgeFinder2","mediaSourceController","_controllersMediaSourceController2","timeSyncController","_controllersTimeSyncController2","_controllersBaseURLController2","_dashUtilsTimelineConverter2","_ManifestLoader2","createManifestParser","_utilsRequestModifier2","_dashParserDashParser2","_dashDashAdapter2","Protection","protection","createProtectionSystem","MetricsReporting","metricsReporting","createMetricsReporting","mediaElement","valToConvert","utcValue","getStreamById","loadWithManifest","MediaPlayerEvents","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","QUALITY_CHANGE_RENDERED","STREAM_INITIALIZED","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_TIME_UPDATED","mediaPlayerEvents","Stream","streamProcessors","isStreamActivated","isMediaInitialized","updateError","initialized","fragmentController","_controllersFragmentController2","onBufferingCompleted","onDataUpdateCompleted","StreamInfo","ProtectionController","KEY_ERROR","onProtectionError","SERVER_CERTIFICATE_UPDATED","LICENSE_REQUEST_COMPLETE","KEY_SYSTEM_SELECTED","KEY_SESSION_CREATED","activate","mediaSource","onCurrentTrackChanged","initializeMedia","deactivate","clearEventController","manifestUpdater","getStartTime","getStreamIndex","getId","hasMedia","getBitrateList","startEventController","eventController","isActivated","isInitialized","mediaKeySessionError","getMimeTypeOrType","isMediaSupported","supportsEncryptedMedia","supportsCodec","newMediaInfo","processor","getProcessorForMediaInfo","oldMediaInfo","getBuffer","getMediaSource","createStreamProcessor","replaceIdx","updateMediaInfo","isWebM","toLowerCase","createIndexHandler","_dashWebmSegmentBaseLoader2","_dashSegmentBaseLoader2","_dashDashHandler2","optionalSettings","_StreamProcessor2","allMediaForType","updateTopQualityIndex","setBuffer","initializeMediaForType","initialMediaInfo","addEmbeddedTrack","isMultiTrackSupportedByType","addTrack","checkInitialMediaSettingsForType","_controllersEventController2","addInlineEvents","createBuffers","checkIfInitializationCompleted","hasError","audio","video","DATA_UPDATE_FAILED_ERROR_CODE","mediaCtrl","createBuffer","processors","getProcessors","isBufferingCompleted","sp","controller","arr","updatedStreamInfo","mediaInfoArr","Type","FragmentController","EventController","dynamic","bufferController","createBufferControllerForType","scheduleController","_controllersScheduleController2","fragmentLoader","_FragmentLoader2","fragmentModel","getFragmentModel","setLoader","_dashControllersRepresentationController2","errored","getABRController","getFragmentLoader","getFragmentController","getBufferController","getMediaInfoArr","getScheduleController","getEventController","stop","getIsBufferingCompleted","_controllersBufferController2","_controllersTextController2","TextSourceBuffer","allTracksAreDisabled","initializationSegmentReceived","fragmentedTracks","firstSubtitleStart","embeddedInitialized","initEmbedded","mediaInfos","isFragmented","_utilsBoxParser2","fragmentedTextBoxParser","_dashUtilsFragmentedTextBoxParser2","buffered","_utilsCustomTimeRanges2","currFragTrack","currFragmentedTrackIdx","embeddedTracks","embeddedInitializationSegmentReceived","embeddedTimescale","embeddedCea608FieldParsers","embeddedSequenceNumbers","embeddedLastSequenceNumber","append","bytes","chunk","createTextTrackFromMediaInfo","captionData","textTrackInfo","_voTextTrackInfo2","trackKindMap","subtitle","caption","getKind","kind","checkTTML","ttml","label","isTTML","defaultTrack","getIsDefault","totalNrTracks","addTextTrack","k","samplesInfo","ccContent","codecType","getParser","_sample","sampleStart","sampleRelStart","add","_codemIsoboxer2","images","subOffset","inData","Uint8Array","addCaptions","captionArray","slice","sampleBoxes","box1","box2","start_time","end_time","timedTextError","segmentType","makeCueAdderForIndex","trackIndex","endTime","captionScreen","captionsArray","createHTMLCaptionsFromScreen","trackIdx","getTrackIdxForId","allCcData","extractCea608Data","fieldNr","ccData","fields","fieldParser","insertInOrder","moof","tfdt","tfhd","truns","getBoxes","trun","baseOffset","baseSampleTime","accDuration","sampleTime","cea608Ranges","endSampleTime","checkIndent","line","uc","ll","getRegionProperties","region","x","y1","y2","createRGB","getStyle","videoElement","fontSize","videoHeight","ltrim","trimmed","rtrim","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","spans","currentStyle","seenRegions","styleStates","regions","prevPenState","rowIndent","contat","currPenStateString","cueID","captionId","finalDiv","document","createElement","cueRegionProperties","cssText","bodyDiv","cueUniWrapper","ptag","lastSpanRow","span","brElement","appendChild","sameRow","spanStyle","spanElement","textContent","bodyStyle","cueHTMLElement","cellResolution","isFromCEA608","regionID","videoWidth","lineHeight","linePadding","deleteAllTextTracks","resetEmbedded","getAllTracksAreDisabled","VTTParser","TTMLParser","el","nrNonEmbeddedTracks","oldTrackIdx","setCurrentTrackIdx","currentFragTrack","newFragTrack","abortRequests","deleteTrackCues","TextTracks","Cue","VTTCue","TextTrackCue","textTrackQueue","trackElementArr","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","videoSizeCheckInterval","displayCCOnTop","topZIndex","isChrome","navigator","userAgent","fullscreenElement","fullscreenAttribute","webkitIsFullScreen","msFullscreenElement","mozFullScreen","createTrackForUserAgent","srclang","zIndex","textTrackInfoVO","totalTextTracks","defaultIndex","textTrack","nonAddedCues","renderingType","getVideoVisibleVideoSize","viewWidth","viewHeight","aspectRatio","use80Percent","viewAspectRatio","videoAspectRatio","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","videoPictureAspect","y","w","checkVideoSize","getCurrentTextTrack","clientWidth","clientHeight","realVideoSize","newVideoWidth","newVideoHeight","left","top","activeCues","scaleCue","convertToPixels","percentage","pixelMeasure","percentString","round","scaleImageCue","activeCue","layout","_top","image","firstChild","key","replaceValue","valueFontSize","valueLineHeight","elements","cellUnit","valueLinePadding","elementsSpan","getElementsByClassName","timeOffset","currentItem","setInterval","bind","onenter","img","Image","src","onexit","imgs","removeChild","innerText","divs","align","position","addCue","trackId","clearCaptionContainer","setNativeCueStyle","removeNativeCueStyle","getTextTrack","removeCue","deleteTextTrack","styleElement","getElementById","head","stylesheet","sheet","insertRule","classList","XHRLoader","cfg","xhrs","delayedXhrs","retryTimers","_downloadErrorToRequestTypeMap","_defineProperty","_utilsErrorHandlerJs2","DOWNLOAD_ERROR_ID_MANIFEST","XLINK_EXPANSION_TYPE","DOWNLOAD_ERROR_ID_XLINK","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_CONTENT","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","OTHER_TYPE","downloadErrorToRequestTypeMap","internalLoad","remainingAttempts","traces","firstProgress","requestStartTime","lastTraceTime","lastTraceReceivedCount","handleLoaded","requestStartDate","requestEndDate","firstByteDate","checkExistenceOnly","addHttpRequest","getAllResponseHeaders","getRetryIntervalForType","complete","lengthComputable","total","loaded","bytesTotal","modifiedUrl","verb","withCredentials","onprogress","delayLoadingTime","delayedXhr","delayTimeout","getRetryAttemptsForType","clearTimeout","XlinkLoader","resolveObject","content","resolveToZero","resolved","resolvedContent","XLINK_LOADER_ERROR_LOADING_FAILURE","RESOLVE_TO_ZERO","XLINK_TYPE","AbrController","autoSwitchBitrate","topQualities","qualityDict","confidenceDict","bitrateDict","ratioDict","averageThroughputDict","abandonmentStateDict","streamProcessorDict","limitBitrateByPortal","usePixelRatioInLimitBitrateByPortal","windowResizeEventCalled","_utilsDOMStorage2","state","ALLOW_LOAD","onFragmentLoadProgress","checkMaxBitrate","checkMaxRepresentationRatio","checkPortalSize","savedBitrate","getSavedBitrateSettings","repIdx","DEFAULT_VIDEO_BITRATE","DEFAULT_AUDIO_BITRATE","getPlaybackQuality","completedCallback","res","topQualityIdx","setConfidenceFor","confidence","changeQuality","reason","rules","getRules","QUALITY_SWITCH_RULES","applyRules","currentValue","newValue","_rulesSwitchRequest2","NO_CHANGE","isInt","setAbandonmentStateFor","getAbandonmentStateFor","QUALITY_DEFAULT","bitrateInfo","infoList","_voBitrateInfo2","qualityIndex","setAverageThroughput","setTopQualityIndex","isPlayingAtTopQuality","isAtTop","audioQuality","videoQuality","abandonmentTimeout","getConfidenceFor","maxBitrate","maxIdx","maxRepresentationRatio","hasPixelRatio","pixelRatio","devicePixelRatio","elementWidth","elementHeight","newIdx","ABANDON_FRAGMENT_RULES","switchRequest","STRONG","getRequests","_modelsFragmentModel2","FRAGMENT_MODEL_LOADING","ABANDON_LOAD","getAbandonLoadTimeout","BaseURLController","onBlackListChanged","baseURLTreeModel","invalidateSelectedIndexes","_modelsBaseURLTreeModel2","baseURLSelector","_utilsBaseURLSelector2","chooseSelectorFromManifest","getForPath","select","_dashVoBaseURL2","BlackListController","contains","query","blacklist","updateEventName","onLoadFailed","loadFailedEventName","BufferController","requiredQuality","_AbrController2","bufferLevel","criticalBufferLevel","maxAppendedIndex","lastIndex","bufferState","wallclockTicked","appendingMediaChunk","isAppendingInProgress","isPruningInProgress","inbandEventFound","Source","setMediaSource","_PlaybackController2","initCache","_utilsInitCache2","onInitFragmentLoaded","onMediaFragmentLoaded","onStreamCompleted","onPlaybackProgression","onPlaybackRateChanged","onPlaybackSeeking","onAppended","onRemoved","sourceBuffer","createSourceBuffer","mediaSourceError","updateBufferTimestampOffset","isActive","save","appendToBuffer","switchInitData","extract","eventStreamMedia","eventStreamTrack","FRAGMENT_MODEL_EXECUTED","handleInbandEvents","addInbandEvents","deleteInbandEvents","appendedBytesInfo","hasEnoughSpaceToAppend","_SourceBufferController2","QUOTA_EXCEEDED_ERROR_CODE","getTotalBufferedTime","clearBuffer","getClearRange","checkIfBufferingCompleted","getAllRanges","bufferedRanges","updateBufferLevel","addBufferMetrics","checkIfSufficientBuffer","addBufferState","getBufferTarget","addBufferLevel","isLastIdxAppended","notifyBufferStateChanged","STALL_THRESHOLD","mediaInbandEvents","trackInbandEvents","fragmentStartTime","inbandEvents","eventBoxes","_event","expTwo","expThree","modData","identifier","subarray","totalBufferedTime","pruneBuffer","bufferToPrune","getBufferToKeep","remove","req","getBufferRange","removeEnd","from","to","timestampOffset","_MediaController2","TRACK_SWITCH_MODE_ALWAYS_REPLACE","secondsElapsed","getWallclockTimeUpdateInterval","getBufferPruningInterval","setStreamProcessor","getBufferLevel","getCriticalBufferLevel","removeSourceBuffer","isStarted","inlineEvents","activeEvents","eventInterval","presentationTimeThreshold","onEventTimer","values","removeEvents","currentVideoTime","eventIds","keys","eventId","curr","triggerEvents","MPD_RELOAD_SCHEME","MPD_RELOAD_VALUE","fragmentModels","onFragmentLoadingCompleted","getModel","model","isInitializationRequest","createDataChunk","_voDataChunk2","isInit","MediaController","resetInitialSettings","resetSwitchMode","settings","tracksForType","getSavedMediaSettings","matchSettings","selectInitialTrack","initSettings","createTrackInfo","current","isCurrentTrack","switchMode","extractSettings","storeLastSettings","setSavedMediaSettings","initialSettings","isModeSupported","validTrackSwitchModes","validTrackSelectionModes","selectionMode","DEFAULT_INIT_TRACK_SELECTION_MODE","t1","t2","sameId","sameViewpoint","sameLang","sameRoles","sameAccessibility","sameAudioChannelConfiguration","notEmpty","matchLang","matchViewPoint","matchRole","matchAccessibility","matchAudioChannelConfiguration","TRACK_SWITCH_MODE_NEVER_REPLACE","tmpArr","getTracksWithHighestBitrate","trackArr","getTracksWithWidestRange","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_WIDEST_RANGE","fragmentedText","MediaSourceController","createMediaSource","hasWebKit","hasMediaSource","MediaSource","WebKitMediaSource","attachMediaSource","objectURL","URL","createObjectURL","setSource","detachMediaSource","setDuration","signalEndOfStream","buffers","sourceBuffers","readyState","endOfStream","PlaybackController","liveStartTime","wallclockTimeIntervalId","playOnceInitialized","commonEarliestTime","addAllListeners","onBytesAppended","onBufferLevelStateChanged","onPeriodSwitchStarted","fromStreamInfo","getTimeToStreamEnd","getStreamStartTime","isPlaybackStarted","getStreamId","autoplay","Promise","paused","seeking","getPlaybackRate","playbackRate","getPlayedRanges","played","getEnded","ended","setLiveStartTime","getLiveStartTime","dvrWindowSize","END_OF_PLAYLIST_PADDING","getUseSuggestedPresentationDelay","getLiveDelayFragmentCount","targetDelayCapping","stopUpdatingWallclockTime","removeAllListeners","ignoreStartOffset","fragData","getURIFragmentData","fragS","fragT","startTimeOffset","getActiveStreamCommonEarliestTime","getActualPresentationTime","actualTime","DVRMetrics","startUpdatingWallclockTime","tick","onWallclockTime","seekToStartTimeOffset","initialSeekTime","updateCurrentTime","timeChanged","representationInfo","onCanPlay","onPlaybackStart","onPlaybackPlaying","playingTime","seekTime","onPlaybackSeeked","onPlaybackTimeUpdated","timeToEnd","onPlaybackProgress","onPlaybackMetaDataLoaded","onPlaybackEnded","onPlaybackError","target","srcElement","bufferedStart","setStallState","_BufferController2","addEventListener","removeEventListener","ScheduleController","initialRequest","lastInitQuality","lastQualityIndex","topQualityIndex","replaceRequestArray","isStopped","playListMetrics","playListTraceMetrics","playListTraceMetricsClosed","isFragmentProcessingInProgress","timeToLoadDelay","seekTarget","setScheduleController","scheduleWhilePaused","bufferLevelRule","_rulesSchedulingBufferLevelRule2","nextFragmentRequestRule","_rulesSchedulingNextFragmentRequestRule2","onTimedTextRequested","onDataUpdateStarted","onStreamInitialized","onBufferCleared","onInitRequested","onQuotaExceeded","onURLResolutionFailed","onFragmentLoadingAbandoned","currentRepresentationInfo","addPlaylistTraceMetrics","startScheduleTimer","scheduleTimeout","hasTopQualityChanged","newTopQualityIndex","schedule","validateExecutedFragmentRequest","isReplacement","execute","isVideoTrackPresent","getNextFragment","replacement","shift","executeRequest","safeBufferLevel","threshold","replaceRequest","setSeekTarget","clearPlayListTraceMetrics","_voMetricsPlayList","PlayListTrace","REPRESENTATION_SWITCH_STOP_REASON","completeQualityChange","setLiveEdgeSeekTarget","getLiveEdge","clientTimeOffset","removeExecutedRequestsBeforeTime","REBUFFERING_REASON","setTimeToLoadDelay","playbackspeed","getSeekTarget","getTimeToLoadDelay","setPlayList","playList","finalisePlayList","stopreason","trace","representationid","mstart","SourceBufferController","addSourceBuffer","ex","_StreamController2","_utilsVTTParser2","_utilsTTMLParser2","tolerance","firstStart","lastEnd","gap","toler","getRangeDifference","currentRanges","newStart","newEnd","equalStart","equalEnd","currentRange","nextCurrentRange","nextNewRange","diff","newRanges","appendMethod","acceptsChunk","waitForUpdateEnd","intervalId","CHECK_INTERVAL","checkIsUpdateEnded","updateEndHandler","StreamController","isStreamSwitchingInProgress","initialPlayback","hasMediaError","hasInitialisationError","autoPl","protData","_ManifestUpdater2","onTimeSyncCompleted","onEnded","onManifestUpdated","onStreamBufferingCompleted","playbackQuality","addDroppedFrames","STREAM_END_THRESHOLD","seekingStream","getStreamForTime","activeStream","flushPlaylistMetrics","END_OF_PERIOD_STOP_REASON","switchStream","USER_REQUEST_STOP_REASON","addPlaylistMetrics","PlayList","SEEK_START_REASON","INITIAL_PLAYOUT_START_REASON","RESUME_FROM_PAUSE_START_REASON","baseStart","streamStart","streamDur","isFinite","nextStream","getNextStream","END_OF_CONTENT_STOP_REASON","oldStream","newStream","toStreamInfo","videoTrackDetected","checkVideoPresence","openMediaSource","onMediaSourceOpen","revokeObjectURL","sourceUrl","setMediaDuration","activateStream","manifestDuration","mediaDuration","getComposedStream","composeStreams","streamsInfo","_Stream2","addManifestUpdateStreamInfo","PROTECTION_CREATED","setMediaElement","manifestUTCTimingSources","allUTCTimingSources","isHTTPS","isManifestHTTPS","getUseManifestDateHeaderTimeSource","isVideoDetected","ctrlr","addPlayList","startReason","starttype","msExtendedCode","isStreamActive","FAILURE_STOP_REASON","clearAllCurrentMetrics","PROTECTION_DESTROYED","TextController","TimeSyncController","timingSources","useManifestDateHeader","useManifestDateHeaderTimeSource","offsetToDeviceTimeMs","isSynchronizing","isInitialised","urn:mpeg:dash:utc:http-head:2014","httpHeadHandler","urn:mpeg:dash:utc:http-xsdate:2014","httpHandler","xsdatetimeDecoder","urn:mpeg:dash:utc:http-iso:2014","iso8601Decoder","urn:mpeg:dash:utc:direct:2014","directHandler","urn:mpeg:dash:utc:http-head:2012","urn:mpeg:dash:utc:http-xsdate:2012","urn:mpeg:dash:utc:http-iso:2012","urn:mpeg:dash:utc:direct:2012","urn:mpeg:dash:utc:http-ntp:2014","notSupportedHandler","urn:mpeg:dash:utc:ntp:2014","urn:mpeg:dash:utc:sntp:2014","getIsSynchronizing","attemptSync","setIsInitialised","getOffsetToDeviceTimeMs","getOffsetMs","setIsSynchronizing","setOffsetMs","alternateXsdatetimeDecoder","xsdatetimeStr","parsedDate","isoStr","rfc1123Decoder","dateStr","onSuccessCB","onFailureCB","decoder","isHeadRequest","oncomplete","urls","getResponseHeader","timeout","HTTP_TIMEOUT_MS","checkForDateHeader","dateHeaderValue","dateHeaderTime","completeTimeSyncSequence","failed","TIME_SYNC_FAILED_ERROR_CODE","sources","sourceIndex","onComplete","serverTime","deviceTime","XlinkController","onXlinkElementLoaded","xlinkLoader","_XlinkLoader2","iron","getElementsToResolve","ELEMENT_TYPE_PERIOD","RESOLVE_TYPE_ONLOAD","resolveType","onXlinkAllElementsLoaded","isHTTPURL","originalContent","openingTag","closingTag","mergedContent","isResolvingFinished","mergeElementsBack","RESOLVE_TYPE_ONACTUATE","ELEMENT_TYPE_ADAPTATIONSET","ELEMENT_TYPE_EVENTSTREAM","parentElement","xlinkObject","toResolve","createXlinkObject","resolvedElements","isInappropriateTarget","elementsToResolve","BaseURLTreeModel","Node","updateChildData","objectUtils","areSimpleEquivalent","selectedIdx","DEFAULT_INDEX","getBaseURLCollectionsFromManifest","ai","ri","walk","nodes","_utilsObjectUtils2","_baseUrls","_selectedIdx","FragmentModel","executedRequests","loadingRequests","onLoadingCompleted","isFragmentLoaded","isEqualComplete","req1","req2","_voFragmentRequest2","isEqualMedia","isEqualInit","check","requests","isLoaded","states","filteredRequests","getRequestsForState","filterRequests","addSchedulingInfoMetrics","ACTION_DOWNLOAD","loadCurrentFragment","getRequestForTime","addSchedulingInfo","addRequestsQueue","FRAGMENT_MODEL_FAILED","FRAGMENT_MODEL_CANCELED","ManifestModel","MediaPlayerModel","bufferOccupancyABREnabled","fastSwitchEnabled","lastBitrateCachingInfo","enabled","DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION","lastMediaSettingsCachingInfo","DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION","liveDelayFragmentCount","LIVE_DELAY_FRAGMENT_COUNT","bufferToKeep","BUFFER_TO_KEEP","bufferPruningInterval","BUFFER_PRUNING_INTERVAL","stableBufferTime","bufferTimeAtTopQuality","BUFFER_TIME_AT_TOP_QUALITY","bufferTimeAtTopQualityLongForm","BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM","longFormContentDurationThreshold","LONG_FORM_CONTENT_DURATION_THRESHOLD","richBufferThreshold","RICH_BUFFER_THRESHOLD","bandwidthSafetyFactor","BANDWIDTH_SAFETY_FACTOR","abandonLoadTimeout","ABANDON_LOAD_TIMEOUT","wallclockTimeUpdateInterval","WALLCLOCK_TIME_UPDATE_INTERVAL","xhrWithCredentials","default","DEFAULT_XHR_WITH_CREDENTIALS","_retryAttempts","MANIFEST_RETRY_ATTEMPTS","XLINK_RETRY_ATTEMPTS","FRAGMENT_RETRY_ATTEMPTS","retryAttempts","_retryIntervals","MANIFEST_RETRY_INTERVAL","XLINK_RETRY_INTERVAL","FRAGMENT_RETRY_INTERVAL","retryIntervals","getBufferOccupancyABREnabled","getStableBufferTime","DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH","DEFAULT_MIN_BUFFER_TIME","getBufferTimeAtTopQuality","getBufferTimeAtTopQualityLongForm","getLongFormContentDurationThreshold","getRichBufferThreshold","getLastBitrateCachingInfo","getLastMediaSettingsCachingInfo","setRetryAttemptsForType","getFragmentRetryAttempts","setRetryIntervalForType","getFragmentRetryInterval","setWallclockTimeUpdateInterval","useCreds","MetricsModel","metricsChanged","metricChanged","metricUpdated","metricType","metricAdded","clearCurrentMetricsForType","_voMetricsList2","addTcpConnection","tcpid","dest","topen","tclose","tconnect","_voMetricsTCPConnection2","TcpList","appendHttpTrace","HTTPRequestTrace","interval","actualurl","trequest","tresponse","tfinish","mediaduration","responseHeaders","_tfinish","_stream","_mediaduration","_serviceLocation","mt","lto","_voMetricsRepresentationSwitch2","RepSwitchList","_voMetricsBufferLevel2","BufferLevel","_voMetricsBufferState2","BufferState","_voMetricsDVRInfo2","DVRInfo","_voMetricsDroppedFrames2","DroppedFrames","creationTime","droppedFrames","droppedVideoFrames","_voMetricsSchedulingInfo2","SchedulingInfo","_voMetricsRequestsQueue2","addManifestUpdate","requestTime","fetchTime","_voMetricsManifestUpdate","ManifestUpdate","manifestUpdate","updatedFields","ManifestUpdateStreamInfo","streamIndex","fragmentInfoType","ManifestUpdateTrackInfo","subreplevel","addDVBErrors","DVBErrors","updateBolaState","_s","_voMetricsBolaState2","BolaState","URIQueryAndFragmentModel","URIFragmentDataVO","_voURIFragmentData2","URIQueryData","getURIQueryData","uri","reduceArray","previousValue","mapArray","isQuery","isFragment","URIFragmentData","mappedArr","testQuery","testFragment","testHTTPS","object","VideoModel","stalledStreams","onPlaybackCanPlay","previousPlaybackRate","setPlaybackRate","INVALID_STATE_ERR","preload","removeAttribute","videoContainer","TTMLRenderingDiv","display","overflow","pointerEvents","stallStream","isStalled","addStalledStream","createEvent","initEvent","dispatchEvent","removeStalledStream","hasQuality","getVideoPlaybackQuality","webkitDroppedFrameCount","RulesContext","getTrackInfo","getCurrentValue","RulesController","ABR_RULE","rulesArr","overrideFunc","rule","reasons","rulesCount","rulesContext","getRulesContext","callbackFunc","_SwitchRequest2","WEAK","DEFAULT","abrRules","allRules","_abrABRRulesCollection2","_RulesContext2","SwitchRequest","ABRRulesCollection","qualitySwitchRules","abandonFragmentRules","_BolaRule2","_BolaAbandonRule2","_ThroughputRule2","_BufferOccupancyRule2","_InsufficientBufferRule2","_AbandonRequestsRule2","AbandonRequestsRule","fragmentDict","abandonDict","throughputArray","setFragmentRequestDict","storeLastRequestThroughputByType","throughput","fragmentInfo","firstByteTime","elapsedTime","MIN_LENGTH_TO_AVERAGE","GRACE_TIME_THRESHOLD","totalSampledValue","measuredBandwidthInKbps","estimatedTimeOfDownload","toFixed","ABANDON_MULTIPLIER","bytesRemaining","estimateOtherBytesTotal","BolaAbandonRule","rememberAbandon","canAbandon","progressEvent","bolaState","nowMs","elapsedTimeMs","durationS","effectiveBufferLevel","placeholderBuffer","estimateThroughput","estimateThroughputBSF","latencyS","POOR_LATENCY_MS","estimateTotalTimeS","diagnosticMessage","BOLA_DEBUG","bitrates","estimateBytesRemainingAfterLatency","GRACE_PERIOD_MS","bufferTarget","effectiveBufferAfterLatency","maxDroppedQuality","BOLA_STATE_STARTUP","score","Vp","utilities","gp","safeByteSize","rebufferSafetyFactor","wantBufferLevel","u1","lastQuality","BolaRule","lastCallTimeDict","lastFragmentLoadedDict","lastFragmentWasSwitchDict","eventMediaTypes","onBufferEmpty","utilitiesFromBitrates","calculateParameters","minimumBufferS","bufferTargetS","highestUtilityIndex","calculateInitialState","initialState","params","MINIMUM_BUFFER_S","BUFFER_TARGET_S","BOLA_STATE_ONE_BITRATE","movieDuration","REBUFFER_SAFETY_FACTOR","throughputCount","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD","th","b1","z","getQualityFromBufferLevel","bitrateCount","getLastHttpRequests","allHttpRequests","httpRequests","getRecentThroughput","lastRequests","totalInverse","downloadSeconds","downloadBits","prev","cur","getQualityFromThroughput","q","getPlaceholderIncrementInSeconds","lctMs","wasSwitch","lastRequestFinishMs","delayMs","BOLA_STATE_STEADY","initState","initThroughput","recentThroughput","placeholderInc","bolaQuality","wantEffectiveBuffer","safeBitrate","delaySeconds","BufferOccupancyRule","lastSwitchTime","waitToSwitchTime","lastBufferLevel","lastBufferStateVO","isBufferRich","InsufficientBufferRule","bufferStateDict","setBufferInfo","firstBufferLoadedEvent","ThroughputRule","cacheLoadDict","CACHE_LOAD_THRESHOLD_AUDIO","CACHE_LOAD_THRESHOLD_VIDEO","getSample","sampleArray","THROUGHPUT_INCREASE_SCALE","THROUGHPUT_DECREASE_SCALE","MAX_MEASUREMENTS_TO_KEEP","currentQuality","lastRequest","bufferStateVO","downloadTimeInMilliseconds","lastRequestThroughput","BasicSelector","selectedBaseUrl","blacklistController","DVBSelector","getNonBlacklistedBaseUrls","removedPriorities","samePrioritiesFilter","serviceLocationFilter","selectByWeight","availableUrls","rn","prioritySorter","topPriorityFilter","totalWeight","cumulWeights","random","every","limit","BufferLevelRule","videoTrackPresent","videoBufferLevel","isLongFormContent","NextFragmentRequestRule","requestToReplace","hasSeekTarget","BaseURLSelector","serviceLocationBlacklistController","_controllersBlacklistController2","basicSelector","_rulesBaseUrlResolutionBasicSelector2","dvbSelector","_rulesBaseUrlResolutionDVBSelector2","selector","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","BoxParser","fileStart","parsedFile","dashIsoFile","_IsoFile2","setData","Capabilities","encryptedMediaSupported","setEncryptedMediaSupported","canPlay","canPlayType","CustomTimeRanges","customTimeRangeArray","mergeRanges","rangeIndex1","rangeIndex2","range1","range2","DOMStorage","isSupported","supported","storage","testKey","testValue","STORAGE_TYPE_LOCAL","STORAGE_TYPE_SESSION","setItem","removeItem","translateLegacyKeys","legacyKeysAndReplacements","localStorage","getItem","oldKey","newKey","getTimestamp","ten_minutes_ms","canStore","storageType","LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE","isExpired","timestamp","LOCAL_STORAGE_BITRATE_KEY_TEMPLATE","EBMLParser","bytesConsumed","p2","headerSize","retainMSB","bytesUsed","mask","maxBytes","num","ch","getMatroskaFloat","outFloat","getFloat32","getFloat64","ErrorHandler","cc","mediaKeyMessageError","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_SIDX","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE","InitCache","IsoFile","parsedIsoFile","convertToDashIsoBox","boxData","getOffset","commonProps","sidxProps","sidxRefProps","emsgProps","mdhdProps","mfhdProps","subsProps","tfhdProps","sample_description_index","tfdtProps","trunProps","trunSampleProps","copyProps","props","_voIsoBox2","LiveEdgeFinder","ObjectUtils","obj1","obj2","RequestModifier","getInterval","beginTime","parseTimings","begin","getCueID","cueCounter","createSpanIntervalList","startInterval","endInterval","addSpanTime","timeString","spanChangeTimeStrings","spanChangeTimes","cue_intervals","changeTime","clipStartTime","intervalStart","clipEndTime","intervalEnd","getClippedInterval","entity","inIntervalOrNoTiming","inInterval","entityInterval","imageArray","tt","body","ttExtent","errorMsg","ttNS","getNamespacePrefix","removeNamespacePrefix","ttmlLayout","region_asArray","styling","ttmlStyling","style_asArray","imageDataUrls","dataUrl","btoa","metadata","embeddedImages","image_asArray","imageType","imagetype","getCellResolution","defaultStyleProperties","processRegion","nsttp","frameRate","body_asArray","divInterval","paragraphs","p_asArray","j2","paragraph","span_asArray","cueIntervals","clippedInterval","paragraphChildren","i2","childrenInInterval","k2","constructCueRegion","cueStyleProperties","constructCueStyle","styleIDs","cueParagraph","cueDirUniWrapper","constructCue","arrayContains","getPropertyFromArray","deletePropertyFromArray","innerHTML","applyLinePadding","wholeRegionID","finalCue","defaultFontSize","textElements","spanElements","spanEl","findRegionFromID","getRelativePositioning","imgKey","timingRegex","defaultLayoutProperties","align-items","-ms-writing-mode","-webkit-writing-mode","-moz-writing-mode","writing-mode","direction","font-family","font-style","line-height","font-weight","text-align","justify-content","text-decoration","unicode-bidi","white-space","fontFamilies","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","textAlign","right","center","multiRowAlign","auto","wrapOption","wrap","noWrap","unicodeBidi","normal","embed","bidiOverride","displayAlign","before","after","writingMode","lrtb","rltb","tbrl","tblr","lr","rl","tb","timingStr","timeParts","parsedTime","json","ns","nsPrefix","fullNsPrefix","nsPrefixPos","camelCaseToDash","convertHexToRGBA","rgba","hex","hexMatrice","alpha","rgb","convertAlphaValue","rgbaTTML","resu","mergeArrays","primeArray","arrayToAdd","getSizeTypeAndDefinition","cueStyleElement","returnTab","startRef","endRef","processStyle","cueStyle","includeRegionStyles","valueFtSizeInPx","valueLHSizeInPx","valuePadding","valuePaddingInPx","fontSizeTab","valueFtSize","LineHeightTab","valueLHSize","rgbaValue","findStyleFromID","cueStyleID","currStyle","getProcessedStyle","ids","stylesFromId","pairRe","extentParts","originParts","ttExtentParts","exWidth","exHeight","cueRegion","coordsExtent","extent","coordsOrigin","origin","styleFromID","cueRegionID","currReg","getProcessedRegion","regionsFromId","defaultCellResolution","cueHTML","linePaddingLeft","linePaddingRight","outerHTMLBeforeBr","outerHTMLAfterBr","cueInnerHTML","nodeList","indices","spanStringEnd","br","clonePropertyString","styleBefore","outerHTML","styleAfter","cueElements","spanHTMLElement","textNode","createTextNode","hasChildNodes","brEl","newSpanHTMLElement","divRegion","pRegion","pRegionID","divRegionID","applyDefaultProperties","divStyle","pStyle","pStyleID","bodyStyleID","divStyleID","defaultProperties","URLUtils","resolveFunction","nativeURLResolver","dumbURLResolver","slashIndex","lastSlashIndex","lastIndexOf","parseOrigin","matches","originRegex","schemeRegex","isPathAbsolute","httpUrlRegex","baseUrlParseFunc","joinChar","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","lastStartTime","parseItemAttributes","cuePoints","getSublines","convertCuePointTimes","timeArray","vttCuePoints","getCaptionStyles","styleObject","lineCount","subline","lineData","decodeURI","BitrateInfo","DataChunk","FragmentRequest","HeadRequest","_FragmentRequest","checkForExistenceOnly","IsoBox","ManifestInfo","MediaInfo","TextRequest","TextTrackInfo","TrackInfo","xywh","METRICS_COLLECTION_START_REASON","METRICS_COLLECTION_STOP_REASON","RepresentationSwitch","TCPConnection"],"mappings":"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","file":"dash.mediaplayer.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n(function(exports) {\n\n    \"use strict\";\n\n    /**\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n     */\n\n    var specialCea608CharsCodes = {\n        0x2a : 0xe1, // lowercase a, acute accent\n        0x5c : 0xe9, // lowercase e, acute accent\n        0x5e : 0xed, // lowercase i, acute accent\n        0x5f : 0xf3, // lowercase o, acute accent\n        0x60 : 0xfa, // lowercase u, acute accent\n        0x7b : 0xe7, // lowercase c with cedilla\n        0x7c : 0xf7, // division symbol\n        0x7d : 0xd1, // uppercase N tilde\n        0x7e : 0xf1, // lowercase n tilde\n        0x7f : 0x2588, // Full block\n        // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n        // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n        0x80 : 0xae, // Registered symbol (R)\n        0x81 : 0xb0, // degree sign\n        0x82 : 0xbd, // 1/2 symbol\n        0x83 : 0xbf, // Inverted (open) question mark\n        0x84 : 0x2122, // Trademark symbol (TM)\n        0x85 : 0xa2, // Cents symbol\n        0x86 : 0xa3, // Pounds sterling\n        0x87 : 0x266a, // Music 8'th note\n        0x88 : 0xe0, // lowercase a, grave accent\n        0x89 : 0x20, // transparent space (regular)\n        0x8a : 0xe8, // lowercase e, grave accent\n        0x8b : 0xe2, // lowercase a, circumflex accent\n        0x8c : 0xea, // lowercase e, circumflex accent\n        0x8d : 0xee, // lowercase i, circumflex accent\n        0x8e : 0xf4, // lowercase o, circumflex accent\n        0x8f : 0xfb, // lowercase u, circumflex accent\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n        0x90 : 0xc1, // capital letter A with acute\n        0x91 : 0xc9, // capital letter E with acute\n        0x92 : 0xd3, // capital letter O with acute\n        0x93 : 0xda, // capital letter U with acute\n        0x94 : 0xdc, // capital letter U with diaresis\n        0x95 : 0xfc, // lowercase letter U with diaeresis\n        0x96 : 0x2018, // opening single quote\n        0x97 : 0xa1, // inverted exclamation mark\n        0x98 : 0x2a, // asterisk\n        0x99 : 0x2019, // closing single quote\n        0x9a : 0x2501, // box drawings heavy horizontal\n        0x9b : 0xa9, // copyright sign\n        0x9c : 0x2120, // Service mark\n        0x9d : 0x2022, // (round) bullet\n        0x9e : 0x201c, // Left double quotation mark\n        0x9f : 0x201d, // Right double quotation mark\n        0xa0 : 0xc0, // uppercase A, grave accent\n        0xa1 : 0xc2, // uppercase A, circumflex\n        0xa2 : 0xc7, // uppercase C with cedilla\n        0xa3 : 0xc8, // uppercase E, grave accent\n        0xa4 : 0xca, // uppercase E, circumflex\n        0xa5 : 0xcb, // capital letter E with diaresis\n        0xa6 : 0xeb, // lowercase letter e with diaresis\n        0xa7 : 0xce, // uppercase I, circumflex\n        0xa8 : 0xcf, // uppercase I, with diaresis\n        0xa9 : 0xef, // lowercase i, with diaresis\n        0xaa : 0xd4, // uppercase O, circumflex\n        0xab : 0xd9, // uppercase U, grave accent\n        0xac : 0xf9, // lowercase u, grave accent\n        0xad : 0xdb, // uppercase U, circumflex\n        0xae : 0xab, // left-pointing double angle quotation mark\n        0xaf : 0xbb, // right-pointing double angle quotation mark\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n        0xb0 : 0xc3, // Uppercase A, tilde\n        0xb1 : 0xe3, // Lowercase a, tilde\n        0xb2 : 0xcd, // Uppercase I, acute accent\n        0xb3 : 0xcc, // Uppercase I, grave accent\n        0xb4 : 0xec, // Lowercase i, grave accent\n        0xb5 : 0xd2, // Uppercase O, grave accent\n        0xb6 : 0xf2, // Lowercase o, grave accent\n        0xb7 : 0xd5, // Uppercase O, tilde\n        0xb8 : 0xf5, // Lowercase o, tilde\n        0xb9 : 0x7b, // Open curly brace\n        0xba : 0x7d, // Closing curly brace\n        0xbb : 0x5c, // Backslash\n        0xbc : 0x5e, // Caret\n        0xbd : 0x5f, // Underscore\n        0xbe : 0x7c, // Pipe (vertical line)\n        0xbf : 0x223c, // Tilde operator\n        0xc0 : 0xc4, // Uppercase A, umlaut\n        0xc1 : 0xe4, // Lowercase A, umlaut\n        0xc2 : 0xd6, // Uppercase O, umlaut\n        0xc3 : 0xf6, // Lowercase o, umlaut\n        0xc4 : 0xdf, // Esszett (sharp S)\n        0xc5 : 0xa5, // Yen symbol\n        0xc6 : 0xa4, // Generic currency sign\n        0xc7 : 0x2503, // Box drawings heavy vertical\n        0xc8 : 0xc5, // Uppercase A, ring\n        0xc9 : 0xe5, // Lowercase A, ring\n        0xca : 0xd8, // Uppercase O, stroke\n        0xcb : 0xf8, // Lowercase o, strok\n        0xcc : 0x250f, // Box drawings heavy down and right\n        0xcd : 0x2513, // Box drawings heavy down and left\n        0xce : 0x2517, // Box drawings heavy up and right\n        0xcf : 0x251b // Box drawings heavy up and left\n    };\n\n    /**\n     * Get Unicode Character from CEA-608 byte code\n     */\n    var getCharForByte = function(byte) {\n        var charCode = byte;\n        if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n            charCode = specialCea608CharsCodes[byte];\n        }\n        return String.fromCharCode(charCode);\n    };\n\n    var NR_ROWS = 15,\n        NR_COLS = 32;\n    // Tables to look up row from PAC data\n    var rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\n    var rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\n    var rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\n    var rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\n\n    var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n    /**\n     * Simple logger class to be able to write with time-stamps and filter on level.\n     */\n    var logger = {\n        verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\n        time : null,\n        verboseLevel : 0, // Only write errors\n        setTime : function(newTime) {\n            this.time = newTime;\n        },\n        log : function(severity, msg) {\n            var minLevel = this.verboseFilter[severity];\n            if (this.verboseLevel >= minLevel) {\n                console.log(this.time + \" [\" + severity + \"] \" + msg);\n            }\n        }\n    };\n\n    var numArrayToHexArray = function(numArray) {\n        var hexArray = [];\n        for (var j = 0; j < numArray.length; j++) {\n            hexArray.push(numArray[j].toString(16));\n        }\n        return hexArray;\n    };\n\n    /**\n     * State of CEA-608 pen or character\n     * @constructor\n     */\n    var PenState = function(foreground, underline, italics, background, flash) {\n        this.foreground = foreground || \"white\";\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || \"black\";\n        this.flash = flash || false;\n    };\n\n    PenState.prototype = {\n        \n        reset : function() {\n            this.foreground = \"white\";\n            this.underline = false;\n            this.italics = false;\n            this.background = \"black\";\n            this.flash = false;\n        },\n        \n        setStyles : function(styles) {\n            var attribs = [\"foreground\", \"underline\", \"italics\", \"background\", \"flash\"];\n            for (var i = 0 ; i < attribs.length; i++) {\n                var style = attribs[i];\n                if (styles.hasOwnProperty(style)) {\n                    this[style] = styles[style];\n                }\n            }\n        },\n        \n        isDefault : function() {\n            return (this.foreground === \"white\" && !this.underline && !this.italics && \n                    this.background === \"black\" && !this.flash);\n        },\n\n        equals : function(other) {\n            return ( (this.foreground === other.foreground) && \n                     (this.underline === other.underline) &&\n                     (this.italics === other.italics) &&\n                     (this.background === other.background) &&\n                     (this.flash === other.flash) );\n        },\n\n        copy : function(newPenState) {\n            this.foreground = newPenState.foreground;\n            this.underline = newPenState.underline;\n            this.italics = newPenState.italics;\n            this.background = newPenState.background;\n            this.flash = newPenState.flash;\n        },\n        \n        toString: function() {\n            return (\"color=\" + this.foreground + \", underline=\" + this.underline + \", italics=\" + this.italics +\n                \", background=\" + this.background + \", flash=\" + this.flash);\n        }\n    };\n\n    /**\n     * Unicode character with styling and background.\n     * @constructor\n     */\n    var StyledUnicodeChar = function(uchar, foreground, underline, italics, background, flash) {\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline,italics, background, flash);\n    };\n\n    StyledUnicodeChar.prototype = {\n        \n        reset: function() {\n            this.uchar = ' ';\n            this.penState.reset();\n        },\n        \n        setChar: function(uchar, newPenState) {\n            this.uchar = uchar;\n            this.penState.copy(newPenState);\n        },\n        \n        setPenState: function(newPenState) {\n            this.penState.copy(newPenState);\n        },\n        \n        equals: function(other) {\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\n        },\n        \n        copy: function(newChar) {\n            this.uchar = newChar.uchar;\n            this.penState.copy(newChar.penState);\n        },\n        \n        isEmpty : function() {\n            return this.uchar === ' ' && this.penState.isDefault();\n        }\n    };\n\n    /**\n     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n     * @constructor\n     */\n    var Row = function() {\n        this.chars = [];\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    };\n\n    Row.prototype = {\n        \n        equals: function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].equals(other.chars[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n        \n        copy: function(other) {\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                this.chars[i].copy(other.chars[i]);\n            }\n        },\n        \n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        /**\n         *  Set the cursor to a valid column.\n         */\n        setCursor : function(absPos) {\n            if (this.pos !== absPos) {\n                this.pos = absPos;\n            }\n            if (this.pos < 0) {\n                logger.log(\"ERROR\", \"Negative cursor position \" + this.pos);\n                this.pos = 0;\n            } else if (this.pos > NR_COLS) {\n                logger.log(\"ERROR\", \"Too large cursor position \" + this.pos);\n                this.pos = NR_COLS;\n            }\n        },\n\n        /** \n         * Move the cursor relative to current position.\n         */\n        moveCursor : function(relPos) {\n            var newPos = this.pos + relPos;\n            if (relPos > 1) {\n                for (var i = this.pos+1; i < newPos+1 ; i++) {\n                    this.chars[i].setPenState(this.currPenState);\n                }\n            }\n            this.setCursor(newPos);\n        },\n\n        /**\n         * Backspace, move one step back and clear character.\n         */\n        backSpace : function () {\n            this.moveCursor(-1);\n            this.chars[this.pos].setChar(' ', this.currPenState);\n        },\n\n        insertChar: function(byte) {\n            if (byte >= 0x90) { //Extended char\n                this.backSpace();\n            }\n            var char = getCharForByte(byte);\n            if (this.pos >= NR_COLS) {\n                logger.log(\"ERROR\", \"Cannot insert \" + byte.toString(16) +  \n                            \" (\" + char + \") at position \" + this.pos + \". Skipping it!\");\n                return;\n            }\n            this.chars[this.pos].setChar(char, this.currPenState);\n            this.moveCursor(1);\n        },\n\n        clearFromPos : function(startPos) {\n            var i;\n            for (i = startPos ; i < NR_COLS ; i++) {\n                this.chars[i].reset();\n            }\n        },\n\n        clear : function() {\n            this.clearFromPos(0);\n            this.pos = 0;\n            this.currPenState.reset();\n        },\n\n        clearToEndOfRow : function() {\n            this.clearFromPos(this.pos);\n        },\n\n        getTextString: function() {\n            var chars = [];\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS ; i++) {\n                var char = this.chars[i].uchar;\n                if (char !== \" \") {\n                    empty = false;\n                }\n                chars.push(char);\n            }\n            if (empty) {\n                return \"\";\n            } else {\n                return chars.join(\"\");\n            }\n        },\n\n        setPenStyles: function(styles) {\n            this.currPenState.setStyles(styles);\n            var currChar = this.chars[this.pos];\n            currChar.setPenState(this.currPenState);\n        }\n    };\n\n    /**\n     * Keep a CEA-608 screen of 32x15 styled characters\n     * @constructor\n    */\n    var CaptionScreen = function() {\n\n        this.rows = [];\n        for (var i = 0 ; i <  NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    };\n\n    CaptionScreen.prototype = {\n\n        reset : function() {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].clear();\n            }\n            this.currRow = NR_ROWS - 1;\n        },\n\n        equals : function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].equals(other.rows[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n\n        copy : function(other) {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].copy(other.rows[i]);\n            }\n        },\n\n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        backSpace : function() {\n            var row = this.rows[this.currRow]; \n            row.backSpace();\n        },\n\n        clearToEndOfRow : function() {\n            var row = this.rows[this.currRow];\n            row.clearToEndOfRow();\n        },\n\n        /**\n         * Insert a character (without styling) in the current row.\n         */\n        insertChar : function(char) {\n            var row = this.rows[this.currRow];\n            row.insertChar(char);\n        },\n\n        setPen : function(styles) {\n            var row = this.rows[this.currRow];\n            row.setPenStyles(styles);\n        },\n\n        moveCursor : function(relPos) {\n            var row = this.rows[this.currRow];\n            row.moveCursor(relPos); \n        },\n\n        setCursor : function(absPos) {\n            logger.log(\"INFO\", \"setCursor: \" + absPos);\n            var row = this.rows[this.currRow];\n            row.setCursor(absPos);\n        },\n\n        setPAC : function(pacData) {\n            logger.log(\"INFO\", \"pacData = \" + JSON.stringify(pacData));\n            var newRow = pacData.row - 1;\n            if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\n                    newRow = this.nrRollUpRows-1;\n            }\n            this.currRow = newRow;\n            var row = this.rows[this.currRow];\n            if (pacData.indent !== null) {\n                var indent = pacData.indent;\n                var prevPos = Math.max(indent-1, 0);\n                row.setCursor(pacData.indent);\n                pacData.color = row.chars[prevPos].penState.foreground;\n            }\n            var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\n            this.setPen(styles);\n        },\n\n        /**\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n         */\n        setBkgData : function(bkgData) {\n\n            logger.log(\"INFO\", \"bkgData = \" + JSON.stringify(bkgData));\n            this.backSpace();\n            this.setPen(bkgData);\n            this.insertChar(0x20); //Space\n        },\n\n        setRollUpRows : function(nrRows) {\n            this.nrRollUpRows = nrRows;\n        },\n\n        rollUp : function() {\n            if (this.nrRollUpRows === null) {\n                logger.log(\"DEBUG\", \"roll_up but nrRollUpRows not set yet\");\n                return; //Not properly setup\n            }\n            logger.log(\"TEXT\", this.getDisplayText());\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\n            topRow.clear();\n            this.rows.splice(this.currRow, 0, topRow);\n            logger.log(\"INFO\", \"Rolling up\");\n            //logger.log(\"TEXT\", this.get_display_text())\n        },\n\n       /**\n        * Get all non-empty rows with as unicode text. \n        */        \n        getDisplayText : function(asOneRow) {\n            asOneRow = asOneRow || false;\n            var displayText = [];\n            var text = \"\";\n            var rowNr = -1;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                var rowText = this.rows[i].getTextString();\n                if (rowText) {\n                    rowNr = i+1;\n                    if (asOneRow) {\n                        displayText.push(\"Row \" + rowNr + ': \"' + rowText + '\"');\n                    } else {\n                        displayText.push(rowText.trim());\n                    }\n                }\n            }\n            if (displayText.length > 0) {\n                if (asOneRow) {\n                    text = \"[\" + displayText.join(\" | \") + \"]\";\n                } else {\n                    text = displayText.join(\"\\n\");\n                }\n            }\n            return text;\n        },\n\n        getTextAndFormat : function() {\n            return this.rows;\n        }\n    };\n\n    /**\n     * Handle a CEA-608 channel and send decoded data to outputFilter\n     * @constructor\n     * @param {Number} channelNumber (1 or 2)\n     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)\n    */\n    var Cea608Channel = function(channelNumber, outputFilter) {\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    };\n\n    Cea608Channel.prototype = {\n        \n        modes : [\"MODE_ROLL-UP\", \"MODE_POP-ON\", \"MODE_PAINT-ON\", \"MODE_TEXT\"],\n        \n        reset : function() {\n            this.mode = null;\n            this.displayedMemory.reset();\n            this.nonDisplayedMemory.reset();\n            this.lastOutputScreen.reset();\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n            this.writeScreen = this.displayedMemory;\n            this.mode = null;\n            this.cueStartTime = null;\n            this.lastCueEndTime = null;\n        },\n\n        getHandler : function() {\n            return this.outputFilter;\n        },\n\n        setHandler : function(newHandler) {\n            this.outputFilter = newHandler;\n        },\n\n        setPAC : function(pacData) {\n            this.writeScreen.setPAC(pacData);\n        },\n\n        setBkgData : function(bkgData) {\n            this.writeScreen.setBkgData(bkgData);\n        },\n\n        setMode : function(newMode) {\n            if (newMode === this.mode) {\n                return;\n            }\n            this.mode = newMode;\n            logger.log(\"INFO\", \"MODE=\" + newMode);\n            if (this.mode == \"MODE_POP-ON\") {\n                this.writeScreen = this.nonDisplayedMemory;\n            } else {\n                this.writeScreen = this.displayedMemory;\n                this.writeScreen.reset();\n            }\n            if (this.mode !== \"MODE_ROLL-UP\") {\n                this.displayedMemory.nrRollUpRows = null;\n                this.nonDisplayedMemory.nrRollUpRows = null;\n            }\n            this.mode = newMode;\n        },\n\n        insertChars : function(chars) {\n            for (var i = 0 ; i < chars.length ; i++) {\n                this.writeScreen.insertChar(chars[i]);\n            }\n            var screen = this.writeScreen === this.displayedMemory ? \"DISP\" : \"NON_DISP\";\n            logger.log(\"INFO\", screen + \": \" + this.writeScreen.getDisplayText(true));\n            if (this.mode === \"MODE_PAINT-ON\" || this.mode === \"MODE_ROLL-UP\") {\n                logger.log(\"TEXT\", \"DISPLAYED: \" + this.displayedMemory.getDisplayText(true));\n                this.outputDataUpdate();\n            }\n        },\n\n        cc_RCL: function() { // Resume Caption Loading (switch mode to Pop On)\n            logger.log(\"INFO\", \"RCL - Resume Caption Loading\");\n            this.setMode(\"MODE_POP-ON\");\n        },\n        cc_BS: function() { // BackSpace\n            logger.log(\"INFO\", \"BS - BackSpace\");\n            if (this.mode === \"MODE_TEXT\") {\n                return;\n            }\n            this.writeScreen.backSpace();\n            if (this.writeScreen === this.displayedMemory) {\n                this.outputDataUpdate();\n            }\n        },\n        cc_AOF : function() { // Reserved (formerly Alarm Off)\n            return;\n        },\n        cc_AON: function() { // Reserved (formerly Alarm On)\n            return;\n        },\n        cc_DER: function() { // Delete to End of Row\n            logger.log(\"INFO\", \"DER- Delete to End of Row\");\n            this.writeScreen.clearToEndOfRow();\n            this.outputDataUpdate();\n        },\n        cc_RU: function(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\n            logger.log(\"INFO\", \"RU(\" + nrRows +\") - Roll Up\");\n            this.writeScreen = this.displayedMemory;\n            this.setMode(\"MODE_ROLL-UP\");\n            this.writeScreen.setRollUpRows(nrRows);\n        },\n        cc_FON: function() { //Flash On\n            logger.log(\"INFO\", \"FON - Flash On\");\n            this.writeScreen.setPen({flash : true});\n        },\n        cc_RDC: function() { // Resume Direct Captioning (switch mode to PaintOn)\n            logger.log(\"INFO\", \"RDC - Resume Direct Captioning\");\n            this.setMode(\"MODE_PAINT-ON\");\n        },\n        cc_TR: function() { // Text Restart in text mode (not supported, however)\n            logger.log(\"INFO\", \"TR\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_RTD: function() { // Resume Text Display in Text mode (not supported, however)\n            logger.log(\"INFO\", \"RTD\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_EDM: function() { // Erase Displayed Memory\n            logger.log(\"INFO\", \"EDM - Erase Displayed Memory\");\n            this.displayedMemory.reset();\n            this.outputDataUpdate();\n        },\n        cc_CR: function() { // Carriage Return\n            logger.log(\"CR - Carriage Return\");\n            this.writeScreen.rollUp();\n            this.outputDataUpdate();\n        },\n        cc_ENM: function() { //Erase Non-Displayed Memory\n            logger.log(\"INFO\", \"ENM - Erase Non-displayed Memory\");\n            this.nonDisplayedMemory.reset();\n        },\n        cc_EOC: function() { //End of Caption (Flip Memories)\n            logger.log(\"INFO\", \"EOC - End Of Caption\");\n            if (this.mode === \"MODE_POP-ON\") {\n                var tmp = this.displayedMemory;\n                this.displayedMemory = this.nonDisplayedMemory;\n                this.nonDisplayedMemory = tmp;\n                this.writeScreen = this.nonDisplayedMemory;\n                logger.log(\"TEXT\", \"DISP: \" + this.displayedMemory.getDisplayText());\n            }\n            this.outputDataUpdate();\n        },\n        cc_TO: function(nrCols) { // Tab Offset 1,2, or 3 columns\n            logger.log(\"INFO\", \"TO(\" + nrCols + \") - Tab Offset\");\n            this.writeScreen.moveCursor(nrCols);\n        },\n        cc_MIDROW: function(secondByte) { // Parse MIDROW command\n            var styles = {flash : false};\n            styles.underline = secondByte % 2 === 1;\n            styles.italics = secondByte >= 0x2e;\n            if (!styles.italics) {\n                var colorIndex = Math.floor(secondByte/2) - 0x10;\n                var colors = [\"white\", \"green\", \"blue\", \"cyan\", \"red\", \"yellow\", \"magenta\"];\n                styles.foreground = colors[colorIndex];\n            } else {\n                styles.foreground = \"white\";\n            }\n            logger.log(\"INFO\", \"MIDROW: \" + JSON.stringify(styles));\n            this.writeScreen.setPen(styles);\n        },\n\n        outputDataUpdate: function() {\n            var t = logger.time;\n            if (t === null) {\n                return;\n            }\n            if (this.outputFilter) {\n                if (this.outputFilter.updateData) {\n                    this.outputFilter.updateData(t, this.displayedMemory);\n                }\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\n                    this.cueStartTime = t;\n                } else {\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) { \n                        if (this.outputFilter.newCue) {\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                        }\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                    }\n                }\n                this.lastOutputScreen.copy(this.displayedMemory);\n            }\n        },\n\n        cueSplitAtTime : function(t) {\n            if (this.outputFilter) {\n                if (!this.displayedMemory.isEmpty()) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                    }\n                    this.cueStartTime = t;\n                }\n            }\n        }\n    };\n\n    /**\n     * Parse CEA-608 data and send decoded data to out1 and out2.\n     * @constructor\n     * @param {Number} field  CEA-608 field (1 or 2)\n     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)\n     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)\n     */\n    var Cea608Parser = function(field, out1, out2) {\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\n    };\n\n    Cea608Parser.prototype = {\n        \n        getHandler : function(index) {\n            return this.channels[index].getHandler();\n        },\n        \n        setHandler : function(index, newHandler) {\n            this.channels[index].setHandler(newHandler);\n        },\n\n        /**\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n         */\n        addData : function(t, byteList) {\n            var cmdFound, a, b, \n            charsFound = false;\n            \n            this.lastTime = t;\n            logger.setTime(t);\n\n            for (var i = 0 ; i < byteList.length ; i+=2) {\n                a = byteList[i] & 0x7f;\n                b = byteList[i+1] & 0x7f;\n                if (a === 0 && b === 0) {\n                    this.dataCounters.padding += 2;\n                    continue;\n                } else {\n                    logger.log(\"DATA\", \"[\" + numArrayToHexArray([byteList[i], byteList[i+1]]) +\"] -> (\" + numArrayToHexArray([a, b]) + \")\");\n                }\n                cmdFound = this.parseCmd(a, b);\n                if (!cmdFound) {\n                    cmdFound = this.parseMidrow(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parsePAC(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parseBackgroundAttributes(a, b);\n                }\n                if (!cmdFound) {\n                    charsFound = this.parseChars(a, b);\n                    if (charsFound) {\n                        if (this.currChNr && this.currChNr >=0) {\n                            var channel = this.channels[this.currChNr-1];\n                            channel.insertChars(charsFound);\n                        } else {\n                            logger.log(\"WARNING\", \"No channel found yet. TEXT-MODE?\");\n                        }\n                    }\n                }\n                if (cmdFound) {\n                    this.dataCounters.cmd += 2;\n                } else if (charsFound) {\n                    this.dataCounters.char += 2;\n                } else {\n                    this.dataCounters.other += 2;\n                    logger.log(\"WARNING\", \"Couldn't parse cleaned data \" + numArrayToHexArray([a, b]) +\n                                \" orig: \" + numArrayToHexArray([byteList[i], byteList[i+1]]));\n                }\n            }\n        },\n\n        /**\n         * Parse Command.\n         * @returns {Boolean} Tells if a command was found\n         */\n        parseCmd: function(a, b) {\n            var chNr = null;\n\n            var cond1 = (a === 0x14 || a === 0x1C) && (0x20 <= b && b <= 0x2F);\n            var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\n            if (!(cond1 || cond2)) {\n                return false;\n            }\n                 \n            if (a === this.lastCmdA && b === this.lastCmdB) {\n                this.lastCmdA = null;\n                this.lastCmdB = null; // Repeated commands are dropped (once)\n                logger.log(\"DEBUG\", \"Repeated command (\" + numArrayToHexArray([a, b]) + \") is dropped\");\n                return true;\n            }\n\n            if (a === 0x14 || a === 0x17) {\n                chNr = 1;\n            } else {\n                chNr = 2; // (a === 0x1C || a=== 0x1f)\n            }\n\n            var channel = this.channels[chNr - 1];\n\n            if (a === 0x14 || a === 0x1C) {\n                if (b === 0x20) {\n                    channel.cc_RCL();\n                } else if (b === 0x21) {\n                    channel.cc_BS();\n                } else if (b === 0x22) {\n                    channel.cc_AOF();\n                } else if (b === 0x23) {\n                    channel.cc_AON();\n                } else if (b === 0x24) {\n                    channel.cc_DER();\n                } else if (b === 0x25) {\n                    channel.cc_RU(2);\n                } else if (b === 0x26) {\n                    channel.cc_RU(3);\n                } else if (b === 0x27) {\n                    channel.cc_RU(4);\n                } else if (b === 0x28) {\n                    channel.cc_FON();\n                } else if (b === 0x29) {\n                    channel.cc_RDC();\n                } else if (b === 0x2A) {\n                    channel.cc_TR();\n                } else if (b === 0x2B) {\n                    channel.cc_RTD();\n                } else if (b === 0x2C) {\n                    channel.cc_EDM();\n                } else if (b === 0x2D) {\n                    channel.cc_CR();\n                } else if (b === 0x2E) {\n                    channel.cc_ENM();\n                } else if (b === 0x2F) {\n                    channel.cc_EOC();\n                }\n            } else { //a == 0x17 || a == 0x1F\n                channel.cc_TO(b - 0x20);\n            }\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Parse midrow styling command\n         * @returns {Boolean}\n         */\n        parseMidrow : function(a, b) {\n            var chNr = null;\n                \n            if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\n                if (a === 0x11) {\n                    chNr = 1;\n                } else  {\n                    chNr = 2;\n                }\n                if (chNr !== this.currChNr) {\n                    logger.log(\"ERROR\", \"Mismatch channel in midrow parsing\");\n                    return false;\n                }\n                var channel = this.channels[chNr-1];\n                channel.cc_MIDROW(b);\n                logger.log(\"DEBUG\", \"MIDROW (\" + numArrayToHexArray([a, b]) + \")\");\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Parse Preable Access Codes (Table 53).\n         * @returns {Boolean} Tells if PAC found\n         */\n        parsePAC : function(a, b) {\n\n           var chNr = null;\n           var row = null;\n            \n            var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\n            var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\n            if (! (case1 || case2)) {\n                return false;\n            }\n\n            if (a === this.lastCmdA && b === this.lastCmdB) {\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n                return true; // Repeated commands are dropped (once)\n            }\n\n            chNr = (a <= 0x17) ? 1 : 2;\n\n            if (0x40 <= b && b <= 0x5F) {\n                row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\n            } else { // 0x60 <= b <= 0x7F\n                row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\n            }\n            var pacData = this.interpretPAC(row, b);\n            var channel = this.channels[chNr-1];\n            channel.setPAC(pacData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Interpret the second byte of the pac, and return the information.\n         * @returns {Object} pacData with style parameters.\n         */\n        interpretPAC : function (row, byte) {\n            var pacIndex = byte;\n            var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\n            \n            if (byte > 0x5F) {\n                pacIndex = byte - 0x60;\n            } else {\n                pacIndex = byte - 0x40;\n            }\n            pacData.underline = (pacIndex & 1) === 1;\n            if (pacIndex <= 0xd) {\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\n            } else if (pacIndex <= 0xf) {\n                pacData.italics = true;\n                pacData.color = 'white';\n            } else {\n                pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\n            }\n            return pacData; // Note that row has zero offset. The spec uses 1.\n        },\n\n        /**\n         * Parse characters.\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n         */\n        parseChars : function(a, b) {\n\n           var  channelNr = null,\n                charCodes = null,\n                charCode1 = null,\n                charCode2 = null;\n\n            if (a >= 0x19) {\n                channelNr = 2;\n                charCode1 = a - 8;\n            } else {\n                channelNr = 1;\n                charCode1 = a;\n            }\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n                // Special character\n                var oneCode = b;\n                if (charCode1 === 0x11) {\n                    oneCode = b + 0x50;\n                } else if (charCode1 === 0x12) {\n                    oneCode = b + 0x70;\n                } else {\n                    oneCode = b + 0x90;\n                }\n                logger.log(\"INFO\", \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr);\n                charCodes = [oneCode];\n            } else if (0x20 <= a && a <= 0x7f) {\n                charCodes = (b === 0) ? [a] : [a, b];\n            }\n            if (charCodes) {\n                var hexCodes = numArrayToHexArray(charCodes);\n                logger.log(\"DEBUG\", \"Char codes =  \" + hexCodes.join(\",\"));\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n            }\n            return charCodes;\n        },\n        \n        /**\n        * Parse extended background attributes as well as new foreground color black.\n        * @returns{Boolean} Tells if background attributes are found\n        */\n        parseBackgroundAttributes : function(a, b) {\n           var  bkgData,\n                index,\n                chNr,\n                channel;\n\n            var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\n            var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\n            if (!(case1 || case2)) {\n                return false;\n            }\n            bkgData = {};\n            if (a  === 0x10 || a === 0x18) {\n                index = Math.floor((b-0x20)/2);\n                bkgData.background = backgroundColors[index];\n                if (b % 2 === 1) {\n                    bkgData.background = bkgData.background + \"_semi\";\n                }\n            } else if (b === 0x2d) {\n                bkgData.background = \"transparent\";\n            } else {\n                bkgData.foreground = \"black\";\n                if (b === 0x2f) {\n                    bkgData.underline = true;\n                }\n            }\n            chNr = (a < 0x18) ? 1 : 2;\n            channel = this.channels[chNr-1];\n            channel.setBkgData(bkgData);\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n            return true;\n        },\n\n        /**\n         * Reset state of parser and its channels.\n         */\n        reset : function() {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].reset();\n                }\n            }\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        },\n\n        /**\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n         */\n        cueSplitAtTime : function(t) {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].cueSplitAtTime(t);\n                }\n            }\n        },\n    };\n\n    /**\n     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.\n     * @param {raw} dataView of binary data\n     * @param {startPos} start position in raw\n     * @param {size} total size of data in raw to consider\n     * @returns \n     */\n    var findCea608Nalus = function(raw, startPos, size) {\n        var nalSize = 0,\n            cursor = startPos,\n            nalType = 0,\n            cea608NaluRanges = [],\n            // Check SEI data according to ANSI-SCTE 128\n            isCEA608SEI = function (payloadType, payloadSize, raw, pos) {\n                if (payloadType !== 4 || payloadSize < 8) {\n                    return null;\n                }\n                var countryCode = raw.getUint8(pos);\n                var providerCode = raw.getUint16(pos + 1);\n                var userIdentifier = raw.getUint32(pos + 3);\n                var userDataTypeCode = raw.getUint8(pos + 7);\n                return countryCode == 0xB5 && providerCode == 0x31 && userIdentifier == 0x47413934 && userDataTypeCode == 0x3;\n            };\n        while (cursor < startPos + size) {\n            nalSize = raw.getUint32(cursor);\n            nalType = raw.getUint8(cursor + 4) & 0x1F;\n            //console.log(time + \"  NAL \" + nalType);\n            if (nalType === 6) {\n                // SEI NAL Unit. The NAL header is the first byte\n                //console.log(\"SEI NALU of size \" + nalSize + \" at time \" + time);\n                var pos = cursor + 5;\n                var payloadType = -1;\n                while (pos < cursor + 4 + nalSize - 1) { // The last byte should be rbsp_trailing_bits\n                    payloadType = 0;\n                    var b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadType += b;\n                        pos++;\n                    }\n                    var payloadSize = 0;\n                    b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadSize += b;\n                        pos++;\n                    }\n                    if (isCEA608SEI(payloadType, payloadSize, raw, pos)) {\n                        //console.log(\"CEA608 SEI \" + time + \" \" + payloadSize);\n                        cea608NaluRanges.push([pos, payloadSize]);\n                    }\n                    pos += payloadSize;\n                }\n            }\n            cursor += nalSize + 4;\n        }\n        return cea608NaluRanges;\n    };\n    \n    var extractCea608DataFromRange = function(raw, cea608Range) {\n        var pos = cea608Range[0];\n        var fieldData = [[], []];\n\n        pos += 8; // Skip the identifier up to userDataTypeCode\n        var ccCount = raw.getUint8(pos) & 0x1f;\n        pos += 2; // Advance 1 and skip reserved byte\n          \n        for (var i = 0; i < ccCount; i++) {\n            var byte = raw.getUint8(pos);\n            var ccValid = byte & 0x4;\n            var ccType = byte & 0x3;\n            pos++;\n            var ccData1 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            var ccData2 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            if (ccValid && ((ccData1 & 0x7f) + (ccData2 & 0x7f) !== 0)) { //Check validity and non-empty data\n                if (ccType === 0) {\n                    fieldData[0].push(ccData1);\n                    fieldData[0].push(ccData2);\n                } else if (ccType === 1) {\n                    fieldData[1].push(ccData1);\n                    fieldData[1].push(ccData2);\n                }\n            }\n        }\n        return fieldData;\n    };\n\n    exports.logger = logger;\n    exports.PenState = PenState;\n    exports.CaptionScreen = CaptionScreen;  \n    exports.Cea608Parser = Cea608Parser;\n    exports.findCea608Nalus = findCea608Nalus;\n    exports.extractCea608DataFromRange = extractCea608DataFromRange;\n\n}(typeof exports === 'undefined' ? this.cea608parser = {} : exports));\n","/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * author Digital Primates\n * copyright dash-if 2012\n */\n\n/*\n * var parent,\n *     child,\n *     properties = [\n                    {\n                        name: 'profiles',\n                        merge: false\n                    }\n                ];\n *\n * parent = {};\n * parent.name = \"ParentNode\";\n * parent.isRoor = false;\n * parent.isArray = false;\n * parent.children = [];\n * parent.properties = properties;\n *\n * child = {};\n * child.name = \"ChildNode\";\n * child.isRoor = false;\n * child.isArray = true;\n * child.children = null;\n * child.properties = properties;\n * parent.children.push(child);\n *\n */\n\nfunction ObjectIron(map) {\n\n    var lookup,\n        len,\n        i;\n\n    // create a list of top level items to search for\n    lookup = [];\n    for (i = 0, len = map.length; i < len; i += 1) {\n        if (map[i].isRoot) {\n            lookup.push(\"root\");\n        } else {\n            lookup.push(map[i].name);\n        }\n    }\n\n    var mergeValues = function (parentItem, childItem) {\n            var name,\n                parentValue,\n                childValue;\n\n            if (parentItem === null || childItem === null) {\n                return;\n            }\n\n            for (name in parentItem) {\n                if (parentItem.hasOwnProperty(name)) {\n                    if (!childItem.hasOwnProperty(name)) {\n                        childItem[name] = parentItem[name];\n                    }\n                }\n            }\n        },\n\n        mapProperties = function (properties, parent, child) {\n            var i,\n                len,\n                property,\n                parentValue,\n                childValue;\n\n            if (properties === null || properties.length === 0) {\n                return;\n            }\n\n            for (i = 0, len = properties.length; i < len; i += 1) {\n                property = properties[i];\n\n                if (parent.hasOwnProperty(property.name)) {\n                    if (child.hasOwnProperty(property.name)) {\n                        // check to see if we should merge\n                        if (property.merge) {\n                           parentValue = parent[property.name];\n                           childValue = child[property.name];\n\n                            // complex objects; merge properties\n                            if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                                mergeValues(parentValue, childValue);\n                            }\n                            // simple objects; merge them together\n                            else {\n                                if (property.mergeFunction != null) {\n                                    child[property.name] = property.mergeFunction(parentValue, childValue);\n                                } else {\n                                    child[property.name] = parentValue + childValue;\n                                }\n                            }\n                        }\n                    } else {\n                        // just add the property\n                        child[property.name] = parent[property.name];\n                    }\n                }\n            }\n        },\n\n        mapItem = function (obj, node) {\n            var item = obj,\n                i,\n                len,\n                v,\n                len2,\n                array,\n                childItem,\n                childNode,\n                property;\n\n            if (item.children === null || item.children.length === 0) {\n                return;\n            }\n\n            for (i = 0, len = item.children.length; i < len; i += 1) {\n                childItem = item.children[i];\n\n                if (node.hasOwnProperty(childItem.name)) {\n                    if (childItem.isArray) {\n                        array = node[childItem.name + \"_asArray\"];\n                        for (v = 0, len2 = array.length; v < len2; v += 1) {\n                            childNode = array[v];\n                            mapProperties(item.properties, node, childNode);\n                            mapItem(childItem, childNode);\n                        }\n                    } else {\n                        childNode = node[childItem.name];\n                        mapProperties(item.properties, node, childNode);\n                        mapItem(childItem, childNode);\n                    }\n                }\n            }\n        },\n\n        performMapping = function (source) {\n            var i,\n                len,\n                pi,\n                pp,\n                item,\n                node,\n                array;\n\n            if (source === null) {\n                return source;\n            }\n\n            if (typeof source !== 'object') {\n                return source;\n            }\n\n            // first look to see if anything cares about the root node\n            for (i = 0, len = lookup.length; i < len; i += 1) {\n                if (lookup[i] === \"root\") {\n                    item = map[i];\n                    node = source;\n                    mapItem(item, node);\n                }\n            }\n\n            // iterate over the objects and look for any of the items we care about\n            for (pp in source) {\n                if (source.hasOwnProperty(pp) && pp != \"__children\") {\n                    pi = lookup.indexOf(pp);\n                    if (pi !== -1) {\n                        item = map[pi];\n\n                        if (item.isArray) {\n                            array = source[pp + \"_asArray\"];\n                            for (i = 0, len = array.length; i < len; i += 1) {\n                                node = array[i];\n                                mapItem(item, node);\n                            }\n                        } else {\n                            node = source[pp];\n                            mapItem(item, node);\n                        }\n                    }\n                    // now check this to see if he has any of the properties we care about\n                    performMapping(source[pp]);\n                }\n            }\n\n            return source;\n        };\n\n    return {\n        run: performMapping\n    };\n}\n\nexport default ObjectIron;\n","/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\n/*\n  Further modified for dashjs to:\n  - keep track of children nodes in order in attribute __children.\n  - add type conversion matchers\n  - re-add ignoreRoot\n  - allow zero-length attributePrefix\n  - don't add white-space text nodes\n*/\n\n(function (root, factory) {\n     if (typeof define === \"function\" && define.amd) {\n         define([], factory);\n     } else if (typeof exports === \"object\") {\n         module.exports = factory();\n     } else {\n         root.X2JS = factory();\n     }\n }(this, function () {\n    return function (config) {\n        'use strict';\n\n        var VERSION = \"1.2.0\";\n\n        config = config || {};\n        initConfigDefaults();\n        initRequiredPolyfills();\n\n        function initConfigDefaults() {\n            if(config.escapeMode === undefined) {\n                config.escapeMode = true;\n            }\n\n            if (config.attributePrefix === undefined) {\n                config.attributePrefix = \"_\";\n            }\n\n            config.arrayAccessForm = config.arrayAccessForm || \"none\";\n            config.emptyNodeForm = config.emptyNodeForm || \"text\";\n\n            if(config.enableToStringFunc === undefined) {\n                config.enableToStringFunc = true;\n            }\n            config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n            if(config.skipEmptyTextNodesForObj === undefined) {\n                config.skipEmptyTextNodesForObj = true;\n            }\n            if(config.stripWhitespaces === undefined) {\n                config.stripWhitespaces = true;\n            }\n            config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n\n            if(config.useDoubleQuotes === undefined) {\n                config.useDoubleQuotes = false;\n            }\n\n            config.xmlElementsFilter = config.xmlElementsFilter || [];\n            config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\n\n            if(config.keepCData === undefined) {\n                config.keepCData = false;\n            }\n\n            if (config.ignoreRoot === undefined) {\n                config.ignoreRoot = false;\n            }\n        }\n\n        var DOMNodeTypes = {\n            ELEMENT_NODE \t   : 1,\n            TEXT_NODE    \t   : 3,\n            CDATA_SECTION_NODE : 4,\n            COMMENT_NODE\t   : 8,\n            DOCUMENT_NODE \t   : 9\n        };\n\n        function initRequiredPolyfills() {\n        }\n\n        function getNodeLocalName( node ) {\n            var nodeLocalName = node.localName;\n            if(nodeLocalName == null) // Yeah, this is IE!!\n                nodeLocalName = node.baseName;\n            if(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\n                nodeLocalName = node.nodeName;\n            return nodeLocalName;\n        }\n\n        function getNodePrefix(node) {\n            return node.prefix;\n        }\n\n        function escapeXmlChars(str) {\n            if(typeof(str) == \"string\")\n                return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n            else\n                return str;\n        }\n\n        function unescapeXmlChars(str) {\n            return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n        }\n\n        function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\n            var idx = 0;\n            for(; idx < stdFiltersArrayForm.length; idx++) {\n                var filterPath = stdFiltersArrayForm[idx];\n                if( typeof filterPath === \"string\" ) {\n                    if(filterPath == path)\n                        break;\n                }\n                else\n                if( filterPath instanceof RegExp) {\n                    if(filterPath.test(path))\n                        break;\n                }\n                else\n                if( typeof filterPath === \"function\") {\n                    if(filterPath(obj, name, path))\n                        break;\n                }\n            }\n            return idx!=stdFiltersArrayForm.length;\n        }\n\n        function toArrayAccessForm(obj, childName, path) {\n            switch(config.arrayAccessForm) {\n                case \"property\":\n                    if(!(obj[childName] instanceof Array))\n                        obj[childName+\"_asArray\"] = [obj[childName]];\n                    else\n                        obj[childName+\"_asArray\"] = obj[childName];\n                    break;\n                /*case \"none\":\n                    break;*/\n            }\n\n            if(!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n                if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\n                    obj[childName] = [obj[childName]];\n                }\n            }\n        }\n\n        function fromXmlDateTime(prop) {\n            // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n            // Improved to support full spec and optional parts\n            var bits = prop.split(/[-T:+Z]/g);\n\n            var d = new Date(bits[0], bits[1]-1, bits[2]);\n            var secondBits = bits[5].split(\"\\.\");\n            d.setHours(bits[3], bits[4], secondBits[0]);\n            if(secondBits.length>1)\n                d.setMilliseconds(secondBits[1]);\n\n            // Get supplied time zone offset in minutes\n            if(bits[6] && bits[7]) {\n                var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n                var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop)? '-' : '+';\n\n                // Apply the sign\n                offsetMinutes = 0 + (sign == '-'? -1 * offsetMinutes : offsetMinutes);\n\n                // Apply offset and local timezone\n                d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n            }\n            else\n                if(prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n                }\n\n            // d is now a local time equivalent to the supplied time\n            return d;\n        }\n\n        function checkFromXmlDateTimePaths(value, childName, fullPath) {\n            if(config.datetimeAccessFormPaths.length > 0) {\n                var path = fullPath.split(\"\\.#\")[0];\n                if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\n                    return fromXmlDateTime(value);\n                }\n                else\n                    return value;\n            }\n            else\n                return value;\n        }\n\n        function checkXmlElementsFilter(obj, childType, childName, childPath) {\n            if( childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\n                return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\n            }\n            else\n                return true;\n        }\n\n        function parseDOMChildren( node, path ) {\n            if(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n                var result = new Object;\n                var nodeChildren = node.childNodes;\n                // Alternative for firstElementChild which is not supported in some environments\n                for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx);\n                    if(child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                        if (config.ignoreRoot) {\n                            result = parseDOMChildren(child);\n                        } else {\n                            result = {};\n                            var childName = getNodeLocalName(child);\n                            result[childName] = parseDOMChildren(child);\n                        }\n                    }\n                }\n                return result;\n            }\n            else\n            if(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                var result = new Object;\n                result.__cnt=0;\n\n                var children = [];\n                var nodeChildren = node.childNodes;\n\n                // Children nodes\n                for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx); // nodeChildren[cidx];\n                    var childName = getNodeLocalName(child);\n\n                    if(child.nodeType!= DOMNodeTypes.COMMENT_NODE) {\n                        var childPath = path+\".\"+childName;\n                        if (checkXmlElementsFilter(result,child.nodeType,childName,childPath)) {\n                            result.__cnt++;\n                            if(result[childName] == null) {\n                                var c = parseDOMChildren(child, childPath);\n                                if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                                    var o = {};\n                                    o[childName] = c;\n                                    children.push(o);\n                                }\n                                result[childName] = c;\n                                toArrayAccessForm(result, childName, childPath);\n                            }\n                            else {\n                                if(result[childName] != null) {\n                                    if( !(result[childName] instanceof Array)) {\n                                        result[childName] = [result[childName]];\n                                        toArrayAccessForm(result, childName, childPath);\n                                    }\n                                }\n\n                                var c = parseDOMChildren(child, childPath);\n                                if (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\n                                    var o = {};\n                                    o[childName] = c;\n                                    children.push( o );\n                                }\n                                (result[childName])[result[childName].length] = c;\n                            }\n                        }\n                    }\n                }\n\n                result.__children = children;\n\n                // Attributes\n                var nodeLocalName = getNodeLocalName(node)\n                for(var aidx=0; aidx <node.attributes.length; aidx++) {\n                    var attr = node.attributes.item(aidx); // [aidx];\n                    result.__cnt++;\n\n                    var value2 = attr.value;\n                    for(var m=0, ml=config.matchers.length; m < ml; m++) {\n                        var matchobj = config.matchers[m];\n                        if (matchobj.test(attr, nodeLocalName))\n                            value2 = matchobj.converter(attr.value);\n                    }\n\n                    result[config.attributePrefix+attr.name]=value2;\n                }\n\n                // Node namespace prefix\n                var nodePrefix = getNodePrefix(node);\n                if(nodePrefix!=null && nodePrefix!=\"\") {\n                    result.__cnt++;\n                    result.__prefix=nodePrefix;\n                }\n\n                if(result[\"#text\"]!=null) {\n                    result.__text = result[\"#text\"];\n                    if(result.__text instanceof Array) {\n                        result.__text = result.__text.join(\"\\n\");\n                    }\n                    //if(config.escapeMode)\n                    //\tresult.__text = unescapeXmlChars(result.__text);\n                    if(config.stripWhitespaces)\n                        result.__text = result.__text.trim();\n                    delete result[\"#text\"];\n                    if(config.arrayAccessForm==\"property\")\n                        delete result[\"#text_asArray\"];\n                    result.__text = checkFromXmlDateTimePaths(result.__text, childName, path+\".\"+childName);\n                }\n                if(result[\"#cdata-section\"]!=null) {\n                    result.__cdata = result[\"#cdata-section\"];\n                    delete result[\"#cdata-section\"];\n                    if(config.arrayAccessForm==\"property\")\n                        delete result[\"#cdata-section_asArray\"];\n                }\n\n                if( result.__cnt == 0 && config.emptyNodeForm==\"text\" ) {\n                    result = '';\n                }\n                else\n                if( result.__cnt == 1 && result.__text!=null  ) {\n                    result = result.__text;\n                }\n                else\n                if( result.__cnt == 1 && result.__cdata!=null && !config.keepCData  ) {\n                    result = result.__cdata;\n                }\n                else\n                if ( result.__cnt > 1 && result.__text!=null && config.skipEmptyTextNodesForObj) {\n                    if( (config.stripWhitespaces && result.__text==\"\") || (result.__text.trim()==\"\")) {\n                        delete result.__text;\n                    }\n                }\n                delete result.__cnt;\n\n                if( config.enableToStringFunc && (result.__text!=null || result.__cdata!=null )) {\n                    result.toString = function() {\n                        return (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\n                    };\n                }\n\n                return result;\n            }\n            else\n            if(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n                return node.nodeValue;\n            }\n        }\n\n        function startTag(jsonObj, element, attrList, closed) {\n            var resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\n            if(attrList!=null) {\n                for(var aidx = 0; aidx < attrList.length; aidx++) {\n                    var attrName = attrList[aidx];\n                    var attrVal = jsonObj[attrName];\n                    if(config.escapeMode)\n                        attrVal=escapeXmlChars(attrVal);\n                    resultStr+=\" \"+attrName.substr(config.attributePrefix.length)+\"=\";\n                    if(config.useDoubleQuotes)\n                        resultStr+='\"'+attrVal+'\"';\n                    else\n                        resultStr+=\"'\"+attrVal+\"'\";\n                }\n            }\n            if(!closed)\n                resultStr+=\">\";\n            else\n                resultStr+=\"/>\";\n            return resultStr;\n        }\n\n        function endTag(jsonObj,elementName) {\n            return \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\n        }\n\n        function endsWith(str, suffix) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\n            if((config.arrayAccessForm==\"property\" && endsWith(jsonObjField.toString(),(\"_asArray\")))\n                    || jsonObjField.toString().indexOf(config.attributePrefix)==0\n                    || jsonObjField.toString().indexOf(\"__\")==0\n                    || (jsonObj[jsonObjField] instanceof Function) )\n                return true;\n            else\n                return false;\n        }\n\n        function jsonXmlElemCount ( jsonObj ) {\n            var elementsCnt = 0;\n            if(jsonObj instanceof Object ) {\n                for( var it in jsonObj  ) {\n                    if(jsonXmlSpecialElem ( jsonObj, it) )\n                        continue;\n                    elementsCnt++;\n                }\n            }\n            return elementsCnt;\n        }\n\n        function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\n            return config.jsonPropertiesFilter.length == 0\n                || jsonObjPath==\"\"\n                || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\n        }\n\n        function parseJSONAttributes ( jsonObj ) {\n            var attrList = [];\n            if(jsonObj instanceof Object ) {\n                for( var ait in jsonObj  ) {\n                    if(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(config.attributePrefix)==0) {\n                        attrList.push(ait);\n                    }\n                }\n            }\n            return attrList;\n        }\n\n        function parseJSONTextAttrs ( jsonTxtObj ) {\n            var result =\"\";\n\n            if(jsonTxtObj.__cdata!=null) {\n                result+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\n            }\n\n            if(jsonTxtObj.__text!=null) {\n                if(config.escapeMode)\n                    result+=escapeXmlChars(jsonTxtObj.__text);\n                else\n                    result+=jsonTxtObj.__text;\n            }\n            return result;\n        }\n\n        function parseJSONTextObject ( jsonTxtObj ) {\n            var result =\"\";\n\n            if( jsonTxtObj instanceof Object ) {\n                result+=parseJSONTextAttrs ( jsonTxtObj );\n            }\n            else\n                if(jsonTxtObj!=null) {\n                    if(config.escapeMode)\n                        result+=escapeXmlChars(jsonTxtObj);\n                    else\n                        result+=jsonTxtObj;\n                }\n\n            return result;\n        }\n\n        function getJsonPropertyPath(jsonObjPath, jsonPropName) {\n            if (jsonObjPath===\"\") {\n                return jsonPropName;\n            }\n            else\n                return jsonObjPath+\".\"+jsonPropName;\n        }\n\n        function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {\n            var result = \"\";\n            if(jsonArrRoot.length == 0) {\n                result+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\n            }\n            else {\n                for(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                    result+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                    result+=parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath,jsonArrObj));\n                    result+=endTag(jsonArrRoot[arIdx],jsonArrObj);\n                }\n            }\n            return result;\n        }\n\n        function parseJSONObject ( jsonObj, jsonObjPath ) {\n            var result = \"\";\n\n            var elementsCnt = jsonXmlElemCount ( jsonObj );\n\n            if(elementsCnt > 0) {\n                for( var it in jsonObj ) {\n\n                    if(jsonXmlSpecialElem ( jsonObj, it) || (jsonObjPath!=\"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath,it))) )\n                        continue;\n\n                    var subObj = jsonObj[it];\n\n                    var attrList = parseJSONAttributes( subObj )\n\n                    if(subObj == null || subObj == undefined) {\n                        result+=startTag(subObj, it, attrList, true);\n                    }\n                    else\n                    if(subObj instanceof Object) {\n\n                        if(subObj instanceof Array) {\n                            result+=parseJSONArray( subObj, it, attrList, jsonObjPath );\n                        }\n                        else if(subObj instanceof Date) {\n                            result+=startTag(subObj, it, attrList, false);\n                            result+=subObj.toISOString();\n                            result+=endTag(subObj,it);\n                        }\n                        else {\n                            var subObjElementsCnt = jsonXmlElemCount ( subObj );\n                            if(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\n                                result+=startTag(subObj, it, attrList, false);\n                                result+=parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath,it));\n                                result+=endTag(subObj,it);\n                            }\n                            else {\n                                result+=startTag(subObj, it, attrList, true);\n                            }\n                        }\n                    }\n                    else {\n                        result+=startTag(subObj, it, attrList, false);\n                        result+=parseJSONTextObject(subObj);\n                        result+=endTag(subObj,it);\n                    }\n                }\n            }\n            result+=parseJSONTextObject(jsonObj);\n\n            return result;\n        }\n\n        this.parseXmlString = function(xmlDocStr) {\n            var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n            if (xmlDocStr === undefined) {\n                return null;\n            }\n            var xmlDoc;\n            if (window.DOMParser) {\n                var parser=new window.DOMParser();\n                var parsererrorNS = null;\n                // IE9+ now is here\n                if(!isIEParser) {\n                    try {\n                        parsererrorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI;\n                    }\n                    catch(err) {\n                        parsererrorNS = null;\n                    }\n                }\n                try {\n                    xmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\n                    if( parsererrorNS!= null && xmlDoc.getElementsByTagNameNS(parsererrorNS, \"parsererror\").length > 0) {\n                        //throw new Error('Error parsing XML: '+xmlDocStr);\n                        xmlDoc = null;\n                    }\n                }\n                catch(err) {\n                    xmlDoc = null;\n                }\n            }\n            else {\n                // IE :(\n                if(xmlDocStr.indexOf(\"<?\")==0) {\n                    xmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\n                }\n                xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n                xmlDoc.async=\"false\";\n                xmlDoc.loadXML(xmlDocStr);\n            }\n            return xmlDoc;\n        };\n\n        this.asArray = function(prop) {\n            if (prop === undefined || prop == null)\n                return [];\n            else\n            if(prop instanceof Array)\n                return prop;\n            else\n                return [prop];\n        };\n\n        this.toXmlDateTime = function(dt) {\n            if(dt instanceof Date)\n                return dt.toISOString();\n            else\n            if(typeof(dt) === 'number' )\n                return new Date(dt).toISOString();\n            else\n                return null;\n        };\n\n        this.asDateTime = function(prop) {\n            if(typeof(prop) == \"string\") {\n                return fromXmlDateTime(prop);\n            }\n            else\n                return prop;\n        };\n\n        this.xml2json = function (xmlDoc) {\n            return parseDOMChildren ( xmlDoc );\n        };\n\n        this.xml_str2json = function (xmlDocStr) {\n            var xmlDoc = this.parseXmlString(xmlDocStr);\n            if(xmlDoc!=null)\n                return this.xml2json(xmlDoc);\n            else\n                return null;\n        };\n\n        this.json2xml_str = function (jsonObj) {\n            return parseJSONObject ( jsonObj, \"\" );\n        };\n\n        this.json2xml = function (jsonObj) {\n            var xmlDocStr = this.json2xml_str (jsonObj);\n            return this.parseXmlString(xmlDocStr);\n        };\n\n        this.getVersion = function () {\n            return VERSION;\n        };\n    }\n}))\n","/*! codem-isoboxer v0.2.2 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8'\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n  \n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at \n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n  \n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');  \n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer = ISOBoxer.parseBuffer;\n  exports.Utils       = ISOBoxer.Utils;\n};\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\nvar ISOFile = function(arrayBuffer) {\n  this._raw = new DataView(arrayBuffer);\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n}\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n}\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n}\n\nISOBox.prototype._readInt = function(size) {\n  var result = null;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 16:\n    result = this._raw.getInt16(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 32:\n    result = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getInt32(this._cursor.offset - this._raw.byteOffset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;        \n}\n\nISOBox.prototype._readUint = function(size) {\n  var result = null;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 16:\n    result = this._raw.getUint16(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 24:\n    var s1 = this._raw.getUint16(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getUint8(this._cursor.offset - this._raw.byteOffset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset);\n    var s2 = this._raw.getUint32(this._cursor.offset - this._raw.byteOffset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;        \n}\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;    \n}\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (true) {\n    var char = this._readUint(8);\n    if (char == 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n}\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n}\n\nISOBox.prototype._parseBox = function() {\n  this._cursor.offset = this._offset;\n  \n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n  \n  this.size = this._readUint(32);\n  this.type = this._readString(4);\n\n  if (this.size == 1)      { this.largesize = this._readUint(64); }\n  if (this.type == 'uuid') { this.usertype = this._readString(16); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);      \n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);      \n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete && this._boxParsers[this.type]) this._boxParsers[this.type].call(this);    \n}\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n}\n\nISOBox.prototype._boxParsers = {};;\n// Simple container boxes, all from ISO/IEC 14496-12:2012 except vttc which is from 14496-30.\n[\n  'moov', 'trak', 'tref', 'mdia', 'minf', 'stbl', 'edts', 'dinf',\n  'mvex', 'moof', 'traf', 'mfra', 'udta', 'meco', 'strk', 'vttc'\n].forEach(function(boxType) {\n  ISOBox.prototype._boxParsers[boxType] = function() {\n    this.boxes = [];\n    while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n      this.boxes.push(ISOBox.parse(this));\n    }  \n  }  \n})\n;\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxParsers['elst'] = function() {\n  this._parseFullBox();\n  this.entry_count = this._readUint(32);\n  this.entries = [];\n  \n  for (var i=1; i <= this.entry_count; i++) {\n    var entry = {};\n    if (this.version == 1) {\n      entry.segment_duration  = this._readUint(64);\n      entry.media_time        = this._readInt(64);\n    } else {\n      entry.segment_duration  = this._readUint(32);\n      entry.media_time        = this._readInt(32);\n    }\n    entry.media_rate_integer  = this._readInt(16);\n    entry.media_rate_fraction = this._readInt(16);\n    this.entries.push(entry);\n  }\n};\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxParsers['emsg'] = function() {\n  this._parseFullBox();\n  this.scheme_id_uri           = this._readTerminatedString();\n  this.value                   = this._readTerminatedString();\n  this.timescale               = this._readUint(32);\n  this.presentation_time_delta = this._readUint(32);\n  this.event_duration          = this._readUint(32);\n  this.id                      = this._readUint(32);\n  this.message_data            = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxParsers['free'] = ISOBox.prototype._boxParsers['skip'] = function() {\n  this.data = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxParsers['ftyp'] = ISOBox.prototype._boxParsers['styp'] = function() {\n  this.major_brand = this._readString(4);\n  this.minor_versions = this._readUint(32);\n  this.compatible_brands = [];\n  \n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.compatible_brands.push(this._readString(4));\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxParsers['hdlr'] = function() {\n  this._parseFullBox();\n  this.pre_defined = this._readUint(32);\n  this.handler_type = this._readString(4);\n  this.reserved = [this._readUint(32), this._readUint(32), this._readUint(32)]\n  this.name = this._readTerminatedString()\n};\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxParsers['mdat'] = function() {\n  this.data = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n};\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxParsers['mdhd'] = function() {\n  this._parseFullBox();\n  if (this.version == 1) {\n    this.creation_time = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.timescale = this._readUint(32);\n    this.duration = this._readUint(64);\n  } else {\n    this.creation_time = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.timescale = this._readUint(32);\n    this.duration = this._readUint(32);\n  }\n  var language = this._readUint(16);\n  this.pad = (language >> 15);\n  this.language = String.fromCharCode(\n    ((language >> 10) & 0x1F) + 0x60,\n    ((language >> 5) & 0x1F) + 0x60,\n    (language & 0x1F) + 0x60\n  );\n  this.pre_defined = this._readUint(16);\n};\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxParsers['mfhd'] = function() {\n  this._parseFullBox();\n  this.sequence_number = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxParsers['mvhd'] = function() {\n  this._parseFullBox();\n  \n  if (this.version == 1) {\n    this.creation_time     = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.timescale         = this._readUint(32);\n    this.duration          = this._readUint(64);\n  } else {\n    this.creation_time     = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.timescale         = this._readUint(32);\n    this.duration          = this._readUint(32);      \n  }\n  \n  this.rate      = this._readTemplate(32);\n  this.volume    = this._readTemplate(16);\n  this.reserved1 = this._readUint(16);\n  this.reserved2 = [ this._readUint(32), this._readUint(32) ];\n  this.matrix = [];\n  for (var i=0; i<9; i++) {\n    this.matrix.push(this._readTemplate(32));\n  }\n  this.pre_defined = [];\n  for (var i=0; i<6; i++) {\n    this.pre_defined.push(this._readUint(32));\n  }\n  this.next_track_ID = this._readUint(32);\n};\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxParsers['payl'] = function() {\n  var cue_text_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.cue_text = ISOBoxer.Utils.dataViewToString(cue_text_raw);\n}\n;\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxParsers['sidx'] = function() {\n  this._parseFullBox();\n  this.reference_ID = this._readUint(32);\n  this.timescale = this._readUint(32);\n  if (this.version == 0) {\n    this.earliest_presentation_time = this._readUint(32);\n    this.first_offset = this._readUint(32);\n  } else {\n    this.earliest_presentation_time = this._readUint(64);\n    this.first_offset = this._readUint(64);    \n  }\n  this.reserved = this._readUint(16);\n  this.reference_count = this._readUint(16);\n  this.references = [];\n  for (var i=0; i<this.reference_count; i++) {\n    var ref = {};\n    var reference = this._readUint(32);\n    ref.reference_type = (reference >> 31) & 0x1;\n    ref.referenced_size = reference & 0x7FFFFFFF;\n    ref.subsegment_duration = this._readUint(32);\n    var sap = this._readUint(32);\n    ref.starts_with_SAP = (sap >> 31) & 0x1;\n    ref.SAP_type = (sap >> 28) & 0x7;\n    ref.SAP_delta_time = sap & 0xFFFFFFF;\n    this.references.push(ref);\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxParsers['ssix'] = function() {\n  this._parseFullBox();\n  this.subsegment_count = this._readUint(32);\n  this.subsegments = [];\n\n  for (var i=0; i<this.subsegment_count; i++) {\n    var subsegment = {};\n    subsegment.ranges_count = this._readUint(32);\n    subsegment.ranges = [];\n    \n    for (var j=0; j<subsegment.ranges_count; j++) {\n      var range = {};\n      range.level = this._readUint(8);\n      range.range_size = this._readUint(24);\n      subsegment.ranges.push(range);\n    }\n    this.subsegments.push(subsegment);\n  }\n};\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxParsers['tfdt'] = function() {\n  this._parseFullBox();\n  if (this.version == 1) {\n    this.baseMediaDecodeTime = this._readUint(64);\n  } else {\n    this.baseMediaDecodeTime = this._readUint(32);    \n  }\n};\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxParsers['tfhd'] = function() {\n  this._parseFullBox();\n  this.track_ID = this._readUint(32);\n  if (this.flags & 0x1) this.base_data_offset = this._readUint(64);\n  if (this.flags & 0x2) this.sample_description_offset = this._readUint(32);\n  if (this.flags & 0x8) this.default_sample_duration = this._readUint(32);\n  if (this.flags & 0x10) this.default_sample_size = this._readUint(32);\n  if (this.flags & 0x20) this.default_sample_flags = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxParsers['tkhd'] = function() {\n  this._parseFullBox();\n  \n  if (this.version == 1) {\n    this.creation_time     = this._readUint(64);\n    this.modification_time = this._readUint(64);\n    this.track_ID          = this._readUint(32);\n    this.reserved1         = this._readUint(32);\n    this.duration          = this._readUint(64);\n  } else {\n    this.creation_time     = this._readUint(32);\n    this.modification_time = this._readUint(32);\n    this.track_ID          = this._readUint(32);\n    this.reserved1         = this._readUint(32);\n    this.duration          = this._readUint(32);\n  }\n  \n  this.reserved2 = [\n    this._readUint(32),\n    this._readUint(32)\n  ];\n  this.layer = this._readUint(16);\n  this.alternate_group = this._readUint(16);\n  this.volume = this._readTemplate(16);\n  this.reserved3 = this._readUint(16);\n  this.matrix = [];\n  for (var i=0; i<9; i++) {\n    this.matrix.push(this._readTemplate(32));\n  }\n  this.width = this._readUint(32);\n  this.height = this._readUint(32);\n};\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxParsers['trun'] = function() {\n  this._parseFullBox();\n  this.sample_count = this._readUint(32);\n  if (this.flags & 0x1) this.data_offset = this._readInt(32);\n  if (this.flags & 0x4) this.first_sample_flags = this._readUint(32);\n  this.samples = [];\n  for (var i=0; i<this.sample_count; i++) {\n    var sample = {};\n    if (this.flags & 0x100) sample.sample_duration = this._readUint(32);\n    if (this.flags & 0x200) sample.sample_size = this._readUint(32);\n    if (this.flags & 0x400) sample.sample_flags = this._readUint(32);\n    if (this.flags & 0x800) {\n      if (this.version == 0) {\n        sample.sample_composition_time_offset = this._readUint(32);\n      } else {\n        sample.sample_composition_time_offset = this._readInt(32);\n      }\n    }\n    this.samples.push(sample);\n  }\n};\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxParsers['vlab'] = function() {\n  var source_label_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.source_label = ISOBoxer.Utils.dataViewToString(source_label_raw);\n}\n;\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxParsers['vttC'] = function() {\n  var config_raw = new DataView(this._raw.buffer, this._cursor.offset, this._raw.byteLength - (this._cursor.offset - this._offset));\n  this.config = ISOBoxer.Utils.dataViewToString(config_raw);\n}\n;\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxParsers['vtte'] = function() {\n  // Nothing should happen here.\n}\n","/**\n * Decimal adjustment of a number.\n *\n * @param {String}  type  The type of adjustment.\n * @param {Number}  value The number.\n * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n * @returns {Number} The adjusted value.\n */\nvar decimalAdjust = exports.decimalAdjust = function(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n        return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n        return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}\n\nmodule.exports = {\n    round10: function(value, exp) {\n        return decimalAdjust('round', value, exp);\n    },\n    floor10: function(value, exp) {\n        return decimalAdjust('floor', value, exp);\n    },\n    ceil10: function(value, exp) {\n        return decimalAdjust('ceil', value, exp);\n    },\n};\n\nmodule.exports.polyfill = function() {\n    // Decimal round\n    if (!Math.round10) {\n        Math.round10 = module.exports.round10;\n    }\n    // Decimal floor\n    if (!Math.floor10) {\n        Math.floor10 = module.exports.floor10;\n    }\n    // Decimal ceil\n    if (!Math.ceil10) {\n        Math.ceil10 = module.exports.ceil10;\n    }\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\n/**\n * @module Debug\n */\nfunction Debug() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logToBrowserConsole,\n        showLogTimestamp,\n        startTime;\n\n    function setup() {\n        logToBrowserConsole = true;\n        showLogTimestamp = true;\n        startTime = new Date().getTime();\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default false\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n    /**\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogToBrowserConsole(value) {\n        logToBrowserConsole = value;\n    }\n    /**\n     * Use this method to get the state of logToBrowserConsole.\n     * @returns {boolean} The current value of logToBrowserConsole\n     * @memberof module:Debug\n     * @instance\n     */\n    function getLogToBrowserConsole() {\n        return logToBrowserConsole;\n    }\n    /**\n     * This method will allow you send log messages to either the browser's console and/or dispatch an event to capture at the media player level.\n     * @param {...*} arguments The message you want to log. The Arguments object is supported for this method so you can send in comma separated logging items.\n     * @memberof module:Debug\n     * @instance\n     */\n    function log() {\n\n        var message = '';\n        var logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, arguments).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        if (logToBrowserConsole) {\n            console.log(message);\n        }\n\n        eventBus.trigger(Events.LOG, {message: message});\n    }\n\n    instance = {\n        log: log,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setLogToBrowserConsole: setLogToBrowserConsole,\n        getLogToBrowserConsole: getLogToBrowserConsole,\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\nexport default FactoryMaker.getSingletonFactory(Debug);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type].splice(idx, 1);\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type].forEach( handler => handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","const VERSION = '2.4.0';\nexport function getVersionString() {\n    return VERSION;\n}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * These are internal events that should not be needed at the player level.\n * If you find and event in here that you would like access to from MediaPlayer level\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport TrackInfo from '../streaming/vo/TrackInfo';\nimport MediaInfo from '../streaming/vo/MediaInfo';\nimport StreamInfo from '../streaming/vo/StreamInfo';\nimport ManifestInfo from '../streaming/vo/ManifestInfo';\nimport Event from './vo/Event';\nimport FactoryMaker from '../core/FactoryMaker';\nimport cea608parser from '../../externals/cea608-parser';\nimport * as METRIC_LIST from './constants/DashMetricsList';\n\nfunction DashAdapter() {\n\n    //let context = this.context;\n\n    let instance,\n        dashManifestModel,\n        periods,\n        adaptations;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function initialize() {\n        periods = [];\n        adaptations = {};\n    }\n\n\n    function getRepresentationForTrackInfo(trackInfo, representationController) {\n        return representationController.getRepresentationForQuality(trackInfo.quality);\n    }\n\n    function getAdaptationForMediaInfo(mediaInfo) {\n        if (!adaptations) return null;\n        return adaptations[mediaInfo.streamInfo.id][mediaInfo.index];\n    }\n\n    function getPeriodForStreamInfo(streamInfo) {\n        var ln = periods.length;\n\n        for (let i = 0; i < ln; i++) {\n            let period = periods[i];\n\n            if (streamInfo.id === period.id) return period;\n        }\n\n        return null;\n    }\n\n    function convertRepresentationToTrackInfo(manifest, representation) {\n        var trackInfo = new TrackInfo();\n        var a = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        var r = dashManifestModel.getRepresentationFor(representation.index, a);\n\n        trackInfo.id = representation.id;\n        trackInfo.quality = representation.index;\n        trackInfo.bandwidth = dashManifestModel.getBandwidth(r);\n        trackInfo.DVRWindow = representation.segmentAvailabilityRange;\n        trackInfo.fragmentDuration = representation.segmentDuration || (representation.segments && representation.segments.length > 0 ? representation.segments[0].duration : NaN);\n        trackInfo.MSETimeOffset = representation.MSETimeOffset;\n        trackInfo.useCalculatedLiveEdgeTime = representation.useCalculatedLiveEdgeTime;\n        trackInfo.mediaInfo = convertAdaptationToMediaInfo(manifest, representation.adaptation);\n\n        return trackInfo;\n    }\n\n    function convertAdaptationToMediaInfo(manifest, adaptation) {\n        var mediaInfo = new MediaInfo();\n        var a = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\n        var viewpoint;\n\n        mediaInfo.id = adaptation.id;\n        mediaInfo.index = adaptation.index;\n        mediaInfo.type = adaptation.type;\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(manifest, adaptation.period);\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(a);\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(a);\n        viewpoint = dashManifestModel.getViewpointForAdaptation(a);\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(a).map(function (accessibility) {\n            let accessibilityValue = accessibility.value;\n            let accessibilityData = accessibilityValue;\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\n                if (accessibilityValue) {\n                    accessibilityData = 'cea-608:' + accessibilityValue;\n                } else {\n                    accessibilityData = 'cea-608';\n                }\n                mediaInfo.embeddedCaptions = true;\n            }\n            return accessibilityData;\n        });\n        mediaInfo.audioChannelConfiguration =  dashManifestModel.getAudioChannelConfigurationForAdaptation(a).map(function (audioChannelConfiguration) {\n            return audioChannelConfiguration.value;\n        });\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(a).map(function (role) {\n            return role.value;\n        });\n        mediaInfo.codec = dashManifestModel.getCodec(a);\n        mediaInfo.mimeType = dashManifestModel.getMimeType(a);\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(a);\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(a);\n\n        if (mediaInfo.contentProtection) {\n            mediaInfo.contentProtection.forEach(function (item) {\n                item.KID = dashManifestModel.getKID(item);\n            });\n        }\n\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\n\n        return mediaInfo;\n    }\n\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\n        mediaInfo.type = 'embeddedText';\n        mediaInfo.codec = 'cea-608-in-SEI';\n        mediaInfo.isText = true;\n        mediaInfo.isEmbedded = true;\n        mediaInfo.lang = channel + ' ' + lang;\n        mediaInfo.roles = ['caption'];\n    }\n\n    function convertPeriodToStreamInfo(manifest, period) {\n        let streamInfo = new StreamInfo();\n        const THRESHOLD = 1;\n\n        streamInfo.id = period.id;\n        streamInfo.index = period.index;\n        streamInfo.start = period.start;\n        streamInfo.duration = period.duration;\n        streamInfo.manifestInfo = convertMpdToManifestInfo(manifest, period.mpd);\n        streamInfo.isLast = manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\n        streamInfo.isFirst = manifest.Period_asArray.length === 1 || dashManifestModel.getRegularPeriods(manifest, dashManifestModel.getMpd(manifest))[0].id === period.id;\n\n        return streamInfo;\n    }\n\n    function convertMpdToManifestInfo(manifest, mpd) {\n        var manifestInfo = new ManifestInfo();\n\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\n        manifestInfo.duration = dashManifestModel.getDuration(manifest);\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(manifest);\n\n        return manifestInfo;\n    }\n\n    function getMediaInfoForType(manifest, streamInfo, type) {\n\n        let data = dashManifestModel.getAdaptationForType(manifest, streamInfo.index, type, streamInfo);\n        if (!data) return null;\n\n        let periodInfo = getPeriodForStreamInfo(streamInfo);\n        let periodId = periodInfo.id;\n        let idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n\n        adaptations[periodId] = adaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(manifest, periodInfo);\n\n        return convertAdaptationToMediaInfo(manifest, adaptations[periodId][idx]);\n    }\n\n    function getAllMediaInfoForType(manifest, streamInfo, type) {\n        var periodInfo = getPeriodForStreamInfo(streamInfo);\n        var periodId = periodInfo.id;\n        var adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo.index, type !== 'embeddedText' ? type : 'video');\n\n        var mediaArr = [];\n\n        var data,\n            media,\n            idx,\n            i,\n            j,\n            ln;\n\n        if (!adaptationsForType) return mediaArr;\n\n        adaptations[periodId] = adaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(manifest, periodInfo);\n\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\n            data = adaptationsForType[i];\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n            media = convertAdaptationToMediaInfo(manifest, adaptations[periodId][idx]);\n\n            if (type === 'embeddedText') {\n                var accessibilityLength = media.accessibility.length;\n                for (j = 0; j < accessibilityLength; j++) {\n                    if (!media) {\n                        continue;\n                    }\n                    var accessibility = media.accessibility[j];\n                    if (accessibility.indexOf('cea-608:') === 0) {\n                        var value = accessibility.substring(8);\n                        var parts = value.split(';');\n                        if (parts[0].substring(0, 2) === 'CC') {\n                            for (j = 0; j < parts.length; j++) {\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, manifest, adaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        } else {\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, manifest, adaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        }\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\n                        convertVideoInfoToEmbeddedTextInfo(media, 'CC1', 'eng');\n                        mediaArr.push(media);\n                        media = null;\n                    }\n                }\n            }\n            if (media && type !== 'embeddedText') {\n                mediaArr.push(media);\n            }\n        }\n\n        return mediaArr;\n    }\n\n    function getStreamsInfo(manifest) {\n\n        if (!manifest) return null;\n\n        const streams = [];\n        const mpd = dashManifestModel.getMpd(manifest);\n\n        periods = dashManifestModel.getRegularPeriods(manifest, mpd);\n        adaptations = {};\n\n        for (let i = 0, ln = periods.length; i < ln; i++) {\n            streams.push(convertPeriodToStreamInfo(manifest, periods[i]));\n        }\n\n        return streams;\n    }\n\n    function getManifestInfo(manifest) {\n        var mpd = dashManifestModel.getMpd(manifest);\n        return convertMpdToManifestInfo(manifest, mpd);\n    }\n\n    function getInitRequest(streamProcessor, quality) {\n        var representation = streamProcessor.getRepresentationController().getRepresentationForQuality(quality);\n        return streamProcessor.getIndexHandler().getInitRequest(representation);\n    }\n\n    function getNextFragmentRequest(streamProcessor, trackInfo) {\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\n        return streamProcessor.getIndexHandler().getNextSegmentRequest(representation);\n    }\n\n    function getFragmentRequestForTime(streamProcessor, trackInfo, time, options) {\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\n        return streamProcessor.getIndexHandler().getSegmentRequestForTime(representation, time, options);\n    }\n\n    function generateFragmentRequestForTime(streamProcessor, trackInfo, time) {\n        var representation = getRepresentationForTrackInfo(trackInfo, streamProcessor.getRepresentationController());\n        return streamProcessor.getIndexHandler().generateSegmentRequestForTime(representation, time);\n    }\n\n    function getIndexHandlerTime(streamProcessor) {\n        return streamProcessor.getIndexHandler().getCurrentTime();\n    }\n\n    function setIndexHandlerTime(streamProcessor, value) {\n        return streamProcessor.getIndexHandler().setCurrentTime(value);\n    }\n\n    function updateData(manifest, streamProcessor) {\n        var periodInfo = getPeriodForStreamInfo(streamProcessor.getStreamInfo());\n        var mediaInfo = streamProcessor.getMediaInfo();\n        var adaptation = getAdaptationForMediaInfo(mediaInfo);\n        var type = streamProcessor.getType();\n\n        var id,\n            data;\n\n        id = mediaInfo.id;\n        data = id ? dashManifestModel.getAdaptationForId(id, manifest, periodInfo.index) : dashManifestModel.getAdaptationForIndex(mediaInfo.index, manifest, periodInfo.index);\n        streamProcessor.getRepresentationController().updateData(data, adaptation, type);\n    }\n\n    function getRepresentationInfoForQuality(manifest, representationController, quality) {\n        var representation = representationController.getRepresentationForQuality(quality);\n        return representation ? convertRepresentationToTrackInfo(manifest, representation) : null;\n    }\n\n    function getCurrentRepresentationInfo(manifest, representationController) {\n        var representation = representationController.getCurrentRepresentation();\n        return representation ? convertRepresentationToTrackInfo(manifest, representation) : null;\n    }\n\n    function getEvent(eventBox, eventStreams, startTime) {\n        var event = new Event();\n        var schemeIdUri = eventBox.scheme_id_uri;\n        var value = eventBox.value;\n        var timescale = eventBox.timescale;\n        var presentationTimeDelta = eventBox.presentation_time_delta;\n        var duration = eventBox.event_duration;\n        var id = eventBox.id;\n        var messageData = eventBox.message_data;\n        var presentationTime = startTime * timescale + presentationTimeDelta;\n\n        if (!eventStreams[schemeIdUri]) return null;\n\n        event.eventStream = eventStreams[schemeIdUri];\n        event.eventStream.value = value;\n        event.eventStream.timescale = timescale;\n        event.duration = duration;\n        event.id = id;\n        event.presentationTime = presentationTime;\n        event.messageData = messageData;\n        event.presentationTimeDelta = presentationTimeDelta;\n\n        return event;\n    }\n\n    function getEventsFor(manifest, info, streamProcessor) {\n        var events = [];\n\n        if (info instanceof StreamInfo) {\n            events = dashManifestModel.getEventsForPeriod(manifest, getPeriodForStreamInfo(info));\n        } else if (info instanceof MediaInfo) {\n            events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\n        } else if (info instanceof TrackInfo) {\n            events = dashManifestModel.getEventStreamForRepresentation(manifest, getRepresentationForTrackInfo(info, streamProcessor.getRepresentationController()));\n        }\n\n        return events;\n    }\n\n    function reset() {\n        periods = [];\n        adaptations = {};\n    }\n\n    instance = {\n        initialize: initialize,\n        convertDataToTrack: convertRepresentationToTrackInfo,\n        convertDataToMedia: convertAdaptationToMediaInfo,\n        convertDataToStream: convertPeriodToStreamInfo,\n        getDataForTrack: getRepresentationForTrackInfo,\n        getDataForMedia: getAdaptationForMediaInfo,\n        getDataForStream: getPeriodForStreamInfo,\n        getStreamsInfo: getStreamsInfo,\n        getManifestInfo: getManifestInfo,\n        getMediaInfoForType: getMediaInfoForType,\n        getAllMediaInfoForType: getAllMediaInfoForType,\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\n        updateData: updateData,\n        getInitRequest: getInitRequest,\n        getNextFragmentRequest: getNextFragmentRequest,\n        getFragmentRequestForTime: getFragmentRequestForTime,\n        generateFragmentRequestForTime: generateFragmentRequestForTime,\n        getIndexHandlerTime: getIndexHandlerTime,\n        setIndexHandlerTime: setIndexHandlerTime,\n        getEventsFor: getEventsFor,\n        getEvent: getEvent,\n        setConfig: setConfig,\n        reset: reset,\n        metricsList: METRIC_LIST\n    };\n\n    return instance;\n}\n\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport Error from '../streaming/vo/Error';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport URLUtils from '../streaming/utils/URLUtils';\n\nimport {replaceTokenForTemplate, getTimeBasedSegment, getSegmentByIndex} from './utils/SegmentsUtils';\nimport SegmentsGetter from './utils/SegmentsGetter';\n\nconst SEGMENTS_UNAVAILABLE_ERROR_CODE = 1;\n\nfunction DashHandler(config) {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let segmentBaseLoader = config.segmentBaseLoader;\n    let timelineConverter = config.timelineConverter;\n    let dashMetrics = config.dashMetrics;\n    let metricsModel = config.metricsModel;\n    const baseURLController = config.baseURLController;\n\n    let instance,\n        index,\n        requestedTime,\n        isDynamic,\n        type,\n        currentTime,\n        earliestTime,\n        streamProcessor,\n        segmentsGetter;\n\n    function setup() {\n        index = -1;\n        currentTime = 0;\n        earliestTime = NaN;\n        eventBus.on(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\n        eventBus.on(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\n    }\n\n    function initialize(StreamProcessor) {\n        streamProcessor = StreamProcessor;\n        type = streamProcessor.getType();\n        isDynamic = streamProcessor.isDynamic();\n\n        segmentsGetter = SegmentsGetter(context).create(config, isDynamic);\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function setCurrentTime(value) {\n        currentTime = value;\n    }\n\n    function getCurrentTime() {\n        return currentTime;\n    }\n\n    function getCurrentIndex() {\n        return index;\n    }\n\n    function getEarliestTime() {\n        return earliestTime;\n    }\n\n    function reset() {\n        segmentsGetter = null;\n        currentTime = 0;\n        earliestTime = NaN;\n        requestedTime = NaN;\n        index = -1;\n        isDynamic = null;\n        type = null;\n        streamProcessor = null;\n        eventBus.off(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\n        eventBus.off(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\n    }\n\n    function unescapeDollarsInTemplate(url) {\n        return url.split('$$').join('$');\n    }\n\n    function replaceIDForTemplate(url, value) {\n        if (value === null || url.indexOf('$RepresentationID$') === -1) { return url; }\n        var v = value.toString();\n        return url.split('$RepresentationID$').join(v);\n    }\n\n    function setRequestUrl(request, destination, representation) {\n        var baseURL = baseURLController.resolve(representation.path);\n        var url;\n        var serviceLocation;\n\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\n            url = destination;\n        } else {\n            url = baseURL.url;\n            serviceLocation = baseURL.serviceLocation;\n\n            if (destination) {\n                url = urlUtils.resolve(destination, url);\n            }\n        }\n\n        if (urlUtils.isRelative(url)) {\n            return false;\n        }\n\n        request.url = url;\n        request.serviceLocation = serviceLocation;\n\n        return true;\n    }\n\n    function generateInitRequest(representation, mediaType) {\n\n        const request = new FragmentRequest();\n        const period = representation.adaptation.period;\n        const presentationStartTime = period.start;\n\n        request.mediaType = mediaType;\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\n        request.range = representation.range;\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, period.mpd, isDynamic);\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, period.mpd, isDynamic);\n        request.quality = representation.index;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n\n        if (setRequestUrl(request, representation.initialization, representation)) {\n            return request;\n        }\n    }\n\n    function getInitRequest(representation) {\n        if (!representation) return null;\n        const request = generateInitRequest(representation, type);\n        return request;\n    }\n\n    function isMediaFinished(representation) {\n\n        let isFinished = false;\n\n        if (!isDynamic && index === representation.availableSegmentsNumber) {\n            isFinished = true;\n        } else {\n            const seg = getSegmentByIndex(index, representation);\n            if (seg) {\n                const time = seg.presentationStartTime - representation.adaptation.period.start;\n                const duration = representation.adaptation.period.duration;\n                log(representation.segmentInfoType + ': ' + time + ' / ' + duration);\n                isFinished = representation.segmentInfoType === 'SegmentTimeline' && isDynamic ? false : time >= duration;\n            }\n        }\n\n        return isFinished;\n    }\n\n    function updateSegments(representation) {\n        return segmentsGetter.getSegments(representation, requestedTime, index, onSegmentListUpdated);\n    }\n\n    function onSegmentListUpdated(representation, segments) {\n\n        representation.segments = segments;\n\n        if (segments && segments.length > 0) {\n            earliestTime = isNaN(earliestTime) ? segments[0].presentationStartTime : Math.min(segments[0].presentationStartTime,  earliestTime);\n        }\n\n        if (isDynamic && isNaN(timelineConverter.getExpectedLiveEdge())) {\n            const lastSegment = segments[segments.length - 1];\n            const liveEdge = lastSegment.presentationStartTime;\n            const metrics = metricsModel.getMetricsFor('stream');\n            // the last segment is the Expected, not calculated, live edge.\n            timelineConverter.setExpectedLiveEdge(liveEdge);\n            metricsModel.updateManifestUpdateInfo(dashMetrics.getCurrentManifestUpdate(metrics), {presentationStartTime: liveEdge});\n        }\n    }\n\n    function updateSegmentList(representation) {\n\n        if (!representation) {\n            throw new Error('no representation');\n        }\n\n        representation.segments = null;\n\n        updateSegments(representation);\n\n        return representation;\n    }\n\n    function updateRepresentation(representation, keepIdx) {\n        var hasInitialization = representation.initialization;\n        var hasSegments = representation.segmentInfoType !== 'BaseURL' && representation.segmentInfoType !== 'SegmentBase' && !representation.indexRange;\n        var error;\n\n        if (!representation.segmentDuration && !representation.segments) {\n            updateSegmentList(representation);\n        }\n\n        representation.segmentAvailabilityRange = null;\n        representation.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(representation, isDynamic);\n\n        if ((representation.segmentAvailabilityRange.end < representation.segmentAvailabilityRange.start) && !representation.useCalculatedLiveEdgeTime) {\n            error = new Error(SEGMENTS_UNAVAILABLE_ERROR_CODE, 'no segments are available yet', {availabilityDelay: representation.segmentAvailabilityRange.start - representation.segmentAvailabilityRange.end});\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation, error: error});\n            return;\n        }\n\n        if (!keepIdx) index = -1;\n\n        if (representation.segmentDuration) {\n            updateSegmentList(representation);\n        }\n\n        if (!hasInitialization) {\n            segmentBaseLoader.loadInitialization(representation);\n        }\n\n        if (!hasSegments) {\n            segmentBaseLoader.loadSegments(representation, type, representation.indexRange);\n        }\n\n        if (hasInitialization && hasSegments) {\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\n        }\n    }\n\n    function getIndexForSegments(time, representation, timeThreshold) {\n        var segments = representation.segments;\n        var ln = segments ? segments.length : null;\n\n        var idx = -1;\n        var epsilon,\n            frag,\n            ft,\n            fd,\n            i;\n\n        if (segments && ln > 0) {\n            for (i = 0; i < ln; i++) {\n                frag = segments[i];\n                ft = frag.presentationStartTime;\n                fd = frag.duration;\n                epsilon = (timeThreshold === undefined || timeThreshold === null) ? fd / 2 : timeThreshold;\n                if ((time + epsilon) >= ft &&\n                    (time - epsilon) < (ft + fd)) {\n                    idx = frag.availabilityIdx;\n                    break;\n                }\n            }\n        }\n\n        return idx;\n    }\n\n    function getRequestForSegment(segment) {\n        if (segment === null || segment === undefined) {\n            return null;\n        }\n\n        var request = new FragmentRequest();\n        var representation = segment.representation;\n        var bandwidth = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;\n        var url = segment.media;\n\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\n        url = replaceIDForTemplate(url, representation.id);\n        url = unescapeDollarsInTemplate(url);\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.range = segment.mediaRange;\n        request.startTime = segment.presentationStartTime;\n        request.duration = segment.duration;\n        request.timescale = representation.timescale;\n        request.availabilityStartTime = segment.availabilityStartTime;\n        request.availabilityEndTime = segment.availabilityEndTime;\n        request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = segment.availabilityIdx;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n\n        if (setRequestUrl(request, url, representation)) {\n            return request;\n        }\n    }\n\n    function getSegmentRequestForTime(representation, time, options) {\n        var request,\n            segment,\n            finished;\n\n        var idx = index;\n\n        var keepIdx = options ? options.keepIdx : false;\n        var timeThreshold = options ? options.timeThreshold : null;\n        var ignoreIsFinished = (options && options.ignoreIsFinished) ? true : false;\n\n        if (!representation) {\n            return null;\n        }\n\n        if (requestedTime !== time) { // When playing at live edge with 0 delay we may loop back with same time and index until it is available. Reduces verboseness of logs.\n            requestedTime = time;\n            log('Getting the request for ' + type + ' time : ' + time);\n        }\n\n        index = getIndexForSegments(time, representation, timeThreshold);\n        //Index may be -1 if getSegments needs to update.  So after getSegments is called and updated then try to get index again.\n        updateSegments(representation);\n        if (index < 0) {\n            index = getIndexForSegments(time, representation, timeThreshold);\n        }\n\n        if (index > 0) {\n            log('Index for ' + type + ' time ' + time + ' is ' + index );\n        }\n\n        finished = !ignoreIsFinished ? isMediaFinished(representation) : false;\n        if (finished) {\n            request = new FragmentRequest();\n            request.action = FragmentRequest.ACTION_COMPLETE;\n            request.index = index;\n            request.mediaType = type;\n            request.mediaInfo = streamProcessor.getMediaInfo();\n            log('Signal complete.', request);\n\n        } else {\n            segment = getSegmentByIndex(index, representation);\n            request = getRequestForSegment(segment);\n        }\n\n        if (keepIdx && idx >= 0) {\n            index = representation.segmentInfoType === 'SegmentTimeline' && isDynamic ? index : idx;\n        }\n\n        return request;\n    }\n\n    function generateSegmentRequestForTime(representation, time) {\n        var step = (representation.segmentAvailabilityRange.end - representation.segmentAvailabilityRange.start) / 2;\n\n        representation.segments = null;\n        representation.segmentAvailabilityRange = {start: time - step, end: time + step};\n        return getSegmentRequestForTime(representation, time, {keepIdx: false, ignoreIsFinished: true});\n    }\n\n    function getNextSegmentRequest(representation) {\n        var request,\n            segment,\n            finished;\n\n        if (!representation || index === -1) {\n            return null;\n        }\n\n        requestedTime = null;\n        index++;\n\n        log('Getting the next request at index: ' + index);\n\n        finished = isMediaFinished(representation);\n        if (finished) {\n            request = new FragmentRequest();\n            request.action = FragmentRequest.ACTION_COMPLETE;\n            request.index = index;\n            request.mediaType = type;\n            request.mediaInfo = streamProcessor.getMediaInfo();\n            log('Signal complete.');\n        } else {\n            updateSegments(representation);\n            segment = getSegmentByIndex(index, representation);\n            request = getRequestForSegment(segment);\n            if (!segment && isDynamic) {\n                /*\n                 Sometimes when playing dynamic streams with 0 fragment delay at live edge we ask for\n                 an index before it is available so we decrement index back and send null request\n                 which triggers the validate loop to rerun and the next time the segment should be\n                 available.\n                 */\n                index-- ;\n            }\n        }\n\n        return request;\n    }\n\n    function onInitializationLoaded(e) {\n        var representation = e.representation;\n        //log(\"Got an initialization.\");\n        if (!representation.segments) return;\n\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\n    }\n\n    function onSegmentsLoaded(e) {\n        if (e.error || (type !== e.mediaType)) return;\n\n        var fragments = e.segments;\n        var representation = e.representation;\n        var segments = [];\n        var count = 0;\n\n        var i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = fragments.length; i < len; i++) {\n            s = fragments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            segments.push(seg);\n            seg = null;\n            count++;\n        }\n\n        representation.segmentAvailabilityRange = {start: segments[0].presentationStartTime, end: segments[len - 1].presentationStartTime};\n        representation.availableSegmentsNumber = len;\n\n        onSegmentListUpdated(representation, segments);\n\n        if (!representation.initialization) return;\n\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\n    }\n\n    instance = {\n        initialize: initialize,\n        getStreamProcessor: getStreamProcessor,\n        getInitRequest: getInitRequest,\n        getSegmentRequestForTime: getSegmentRequestForTime,\n        getNextSegmentRequest: getNextSegmentRequest,\n        generateSegmentRequestForTime: generateSegmentRequestForTime,\n        updateRepresentation: updateRepresentation,\n        setCurrentTime: setCurrentTime,\n        getCurrentTime: getCurrentTime,\n        getCurrentIndex: getCurrentIndex,\n        getEarliestTime: getEarliestTime,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashHandler.__dashjs_factory_name = 'DashHandler';\nlet factory = FactoryMaker.getClassFactory(DashHandler);\nfactory.SEGMENTS_UNAVAILABLE_ERROR_CODE = SEGMENTS_UNAVAILABLE_ERROR_CODE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport ManifestModel from '../streaming/models/ManifestModel';\nimport DashManifestModel from './models/DashManifestModel';\nimport FactoryMaker from '../core/FactoryMaker';\nimport * as MetricsList from './constants/DashMetricsList';\nimport { round10 } from 'round10';\n\n/**\n * @module DashMetrics\n */\nfunction DashMetrics() {\n\n    let instance;\n    let context = this.context;\n    let manifestModel = ManifestModel(context).getInstance();//TODO Need to pass this in not bake in\n\n    function getBandwidthForRepresentation(representationId, periodId) {\n        var representation;\n        var manifest = manifestModel.getValue();\n        var period = manifest.Period_asArray[periodId];\n\n        representation = findRepresentation(period, representationId);\n\n        if (representation === null) {\n            return null;\n        }\n\n        return representation.bandwidth;\n    }\n\n\n    /**\n     *\n     * @param {string} representationId\n     * @param {number} periodIdx\n     * @returns {*}\n     */\n    function getIndexForRepresentation(representationId, periodIdx) {\n        var representationIndex;\n        var manifest = manifestModel.getValue();\n        var period = manifest.Period_asArray[periodIdx];\n\n        representationIndex = findRepresentationIndex(period, representationId);\n        return representationIndex;\n    }\n\n    /**\n     * This method returns the current max index based on what is defined in the MPD.\n     *\n     * @param {string} bufferType - String 'audio' or 'video',\n     * @param {number} periodIdx - Make sure this is the period index not id\n     * @return {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getMaxIndexForBufferType(bufferType, periodIdx) {\n        var maxIndex;\n        var manifest = manifestModel.getValue();\n        var period = manifest.Period_asArray[periodIdx];\n\n        maxIndex = findMaxBufferIndex(period, bufferType);\n        return maxIndex;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentRepresentationSwitch(metrics) {\n        return getCurrent(metrics, MetricsList.TRACK_SWITCH);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestBufferLevelVO(metrics) {\n        return getCurrent(metrics, MetricsList.BUFFER_LEVEL);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferLevel(metrics) {\n        const vo = getLatestBufferLevelVO(metrics);\n\n        if (vo) {\n            return round10(vo.level / 1000, -3);\n        }\n\n        return 0;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {null|*|vo}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getRequestsQueue(metrics) {\n        return metrics.RequestsQueue;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentHttpRequest(metrics) {\n        if (metrics === null) {\n            return null;\n        }\n\n        var httpList = metrics.HttpList;\n        var currentHttpList = null;\n\n        var httpListLength,\n            httpListLastIndex;\n\n        if (httpList === null || httpList.length <= 0) {\n            return null;\n        }\n\n        httpListLength = httpList.length;\n        httpListLastIndex = httpListLength - 1;\n\n        while (httpListLastIndex >= 0) {\n            if (httpList[httpListLastIndex].responsecode) {\n                currentHttpList = httpList[httpListLastIndex];\n                break;\n            }\n            httpListLastIndex--;\n        }\n        return currentHttpList;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getHttpRequests(metrics) {\n        if (metrics === null) {\n            return [];\n        }\n\n        return !!metrics.HttpList ? metrics.HttpList : [];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} metricName\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrent(metrics, metricName) {\n        if (metrics === null) {\n            return null;\n        }\n\n        const list = metrics[metricName];\n\n        if (list === null) {\n            return null;\n        }\n\n        const length = list.length;\n\n        if (length <= 0) {\n            return null;\n        }\n\n        return list[length - 1];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDroppedFrames(metrics) {\n        return getCurrent(metrics, MetricsList.DROPPED_FRAMES);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentSchedulingInfo(metrics) {\n        return getCurrent(metrics, MetricsList.SCHEDULING_INFO);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentManifestUpdate(metrics) {\n        return getCurrent(metrics, MetricsList.MANIFEST_UPDATE);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDVRInfo(metrics) {\n        return getCurrent(metrics, MetricsList.DVR_INFO);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestMPDRequestHeaderValueByID(metrics, id) {\n        var headers = {};\n        var httpRequestList,\n            httpRequest,\n            i;\n\n        if (metrics === null) {\n            return null;\n        }\n\n        httpRequestList = getHttpRequests(metrics);\n\n        for (i = httpRequestList.length - 1; i >= 0; i--) {\n            httpRequest = httpRequestList[i];\n\n            if (httpRequest.type === HTTPRequest.MPD_TYPE) {\n                headers = parseResponseHeaders(httpRequest._responseHeaders);\n                break;\n            }\n        }\n\n        return headers[id] === undefined ? null :  headers[id];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestFragmentRequestHeaderValueByID(metrics, id) {\n\n        if (metrics === null) return null;\n\n        var httpRequest = getCurrentHttpRequest(metrics);\n        var headers;\n\n        if (httpRequest === null || httpRequest._responseHeaders === null) return null;\n\n        headers = parseResponseHeaders(httpRequest._responseHeaders);\n        return headers[id] === undefined ? null :  headers[id];\n    }\n\n    function parseResponseHeaders(headerStr) {\n        var headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n        var headerPairs = headerStr.split('\\u000d\\u000a');\n        for (var i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            var headerPair = headerPairs[i];\n            var index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    function findRepresentationIndex(period, representationId) {\n        const index = findRepresentation(period, representationId, true);\n\n        if (index !== null) {\n            return index;\n        }\n\n        return -1;\n    }\n\n    function findRepresentation(period, representationId, returnIndex) {\n        var adaptationSet,\n            adaptationSetArray,\n            representation,\n            representationArray,\n            adaptationSetArrayIndex,\n            representationArrayIndex;\n\n        adaptationSetArray = period.AdaptationSet_asArray;\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n            representationArray = adaptationSet.Representation_asArray;\n            for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\n                representation = representationArray[representationArrayIndex];\n                if (representationId === representation.id) {\n                    if (returnIndex) {\n                        return representationArrayIndex;\n                    } else {\n                        return representation;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function adaptationIsType(adaptation, bufferType) {\n        return DashManifestModel(context).getInstance().getIsTypeOf(adaptation, bufferType);\n    }\n\n    function findMaxBufferIndex(period, bufferType) {\n        var adaptationSet,\n            adaptationSetArray,\n            representationArray,\n            adaptationSetArrayIndex;\n\n        if (!period || !bufferType) return -1;\n\n        adaptationSetArray = period.AdaptationSet_asArray;\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n            representationArray = adaptationSet.Representation_asArray;\n            if (adaptationIsType(adaptationSet, bufferType)) {\n                return representationArray.length;\n            }\n        }\n\n        return -1;\n    }\n\n    instance = {\n        getBandwidthForRepresentation: getBandwidthForRepresentation,\n        getIndexForRepresentation: getIndexForRepresentation,\n        getMaxIndexForBufferType: getMaxIndexForBufferType,\n        getCurrentRepresentationSwitch: getCurrentRepresentationSwitch,\n        getLatestBufferLevelVO: getLatestBufferLevelVO,\n        getCurrentBufferLevel: getCurrentBufferLevel,\n        getCurrentHttpRequest: getCurrentHttpRequest,\n        getHttpRequests: getHttpRequests,\n        getCurrentDroppedFrames: getCurrentDroppedFrames,\n        getCurrentSchedulingInfo: getCurrentSchedulingInfo,\n        getCurrentDVRInfo: getCurrentDVRInfo,\n        getCurrentManifestUpdate: getCurrentManifestUpdate,\n        getLatestFragmentRequestHeaderValueByID: getLatestFragmentRequestHeaderValueByID,\n        getLatestMPDRequestHeaderValueByID: getLatestMPDRequestHeaderValueByID,\n        getRequestsQueue: getRequestsQueue\n    };\n\n    return instance;\n}\n\nDashMetrics.__dashjs_factory_name = 'DashMetrics';\nexport default FactoryMaker.getSingletonFactory(DashMetrics);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport Error from '../streaming/vo/Error';\nimport ErrorHandler from '../streaming/utils/ErrorHandler';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport BoxParser from '../streaming/utils/BoxParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\n\nfunction SegmentBaseLoader() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        errHandler,\n        boxParser,\n        requestModifier,\n        baseURLController;\n\n    function initialize() {\n        errHandler = ErrorHandler(context).getInstance();\n        boxParser = BoxParser(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        var needFailureReport = true;\n        var initRange = null;\n        var isoFile = null;\n        var request = new XMLHttpRequest();\n        var baseUrl = baseURLController.resolve(representation.path);\n        var info = loadingInfo || {\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500,\n            request: request\n        };\n\n        log('Start searching for initialization.');\n\n        request.onload = function () {\n            if (request.status < 200 || request.status > 299) return;\n\n            needFailureReport = false;\n\n            info.bytesLoaded = info.range.end;\n            isoFile = boxParser.parse(request.response);\n            initRange = findInitRange(isoFile);\n\n            if (initRange) {\n                representation.range = initRange;\n                representation.initialization = info.url;\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(representation, info);\n            }\n\n        };\n\n        request.onloadend = request.onerror = function () {\n            if (!needFailureReport) return;\n            needFailureReport = false;\n\n            errHandler.downloadError('initialization', info.url, request);\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        sendRequest(request, info);\n        log('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, type, range, loadingInfo, callback) {\n        if (range && (range.start === undefined || range.end === undefined)) {\n            var parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        var needFailureReport = true;\n        var isoFile = null;\n        var sidx = null;\n        var hasRange = !!range;\n        var request = new XMLHttpRequest();\n        var baseUrl = baseURLController.resolve(representation.path);\n        var info = {\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500,\n            request: request\n        };\n\n        request.onload = function () {\n            if (request.status < 200 || request.status > 299) return;\n\n            var extraBytes = info.bytesToLoad;\n            var loadedLength = request.response.byteLength;\n\n            needFailureReport = false;\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(request.response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, type);\n                    return;\n                } else {\n                    var lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(representation, type, info.range, info, callback);\n            } else {\n                var ref = sidx.references;\n                var loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    log('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    var j, len, ss, se, r;\n                    var segs = [];\n                    var count = 0;\n                    var offset = (sidx.offset || info.range.start) + sidx.size;\n                    var tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                callback(segs, representation, type);\n                            }\n                        } else {\n                            callback(null, representation, type);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(representation, null, r, info, tmpCallback);\n                    }\n\n                } else {\n                    log('Parsing segments from SIDX.');\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, type);\n                }\n            }\n        };\n\n        request.onloadend = request.onerror = function () {\n            if (!needFailureReport) return;\n\n            needFailureReport = false;\n            errHandler.downloadError('SIDX', info.url, request);\n            callback(null, representation, type);\n        };\n\n        sendRequest(request, info);\n        log('Perform SIDX load: ' + info.url);\n    }\n\n    function reset() {\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n        log = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n\n        var refs = sidx.references;\n        var len = refs.length;\n        var timescale = sidx.timescale;\n        var time = sidx.earliest_presentation_time;\n        var start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        var segments = [];\n        var segment,\n            end,\n            duration,\n            size;\n\n        for (var i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            segment.duration = duration;\n            segment.media = info.url;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function findInitRange(isoFile) {\n        var ftyp = isoFile.getBox('ftyp');\n        var moov = isoFile.getBox('moov');\n\n        var initRange = null;\n        var start,\n            end;\n\n        log('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            log('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    function sendRequest(request, info) {\n        if (!info.url) {\n            return;\n        }\n\n        request.open('GET', requestModifier.modifyRequestURL(info.url));\n        request.responseType = 'arraybuffer';\n        request.setRequestHeader('Range', 'bytes=' + info.range.start + '-' + info.range.end);\n        request = requestModifier.modifyRequestHeader(request);\n        request.send(null);\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new Error(null, 'error loading segments', null)});\n        }\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n","import Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport EBMLParser from '../streaming/utils/EBMLParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport ErrorHandler from '../streaming/utils/ErrorHandler';\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport XHRLoader from '../streaming/XHRLoader';\n\nfunction WebmSegmentBaseLoader() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        WebM,\n        errHandler,\n        requestModifier,\n        metricsModel,\n        xhrLoader,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueBlockNumber: {\n                                tag: 0x5378\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        errHandler = ErrorHandler(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n        xhrLoader = XHRLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.metricsModel) {\n            throw new Error('Missing config parameter(s)');\n        }\n\n        baseURLController = config.baseURLController;\n        metricsModel = config.metricsModel;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let cue;\n        let cueSize;\n        let cueTrack;\n        let ebmlParser = EBMLParser(context).create({data: ab});\n        let numSize;\n\n        ebmlParser.consumeTag(WebM.Segment.Cues);\n        cueSize = ebmlParser.getMatroskaCodedNum();\n\n        while (ebmlParser.moreData() &&\n                ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                    ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                // block number is strictly optional.\n                // we also have to make sure we don't go beyond the end\n                // of the cues\n                if (ebmlParser.getPos() + 4 > cueSize ||\n                        !ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueBlockNumber, true)) {\n                    cue.CueTracks.push(cueTrack);\n                } else {\n                    // since we have already consumed the tag, get the size of\n                    // the tag's payload, and manually parse an unsigned int\n                    // from the bit stream\n                    numSize = ebmlParser.getMatroskaCodedNum();\n                    cueTrack.BlockNumber = ebmlParser.getMatroskaUint(numSize);\n\n                    cue.CueTracks.push(cueTrack);\n                }\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, media, segmentStart, segmentEnd, segmentDuration) {\n        let duration;\n        let parsed;\n        let segments;\n        let segment;\n        let i;\n        let len;\n        let start;\n        let end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            segment.duration = duration;\n            segment.media = media;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        log('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        let ebmlParser = EBMLParser(context).create({data: data});\n        let duration;\n        let segments;\n        let parts = theRange.split('-');\n        let request = null;\n        let info = {\n                url: media,\n                range: {\n                    start: parseFloat(parts[0]),\n                    end: parseFloat(parts[1])\n                },\n                request: request\n            };\n        let segmentEnd;\n        let segmentStart;\n\n        log('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n            case WebM.Segment.Info.Duration.tag:\n                duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                break;\n            default:\n                ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, info.url, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            log('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n\n        log('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let initRange = representation.range.split('-');\n        let info = loadingInfo || {\n                range: {\n                    start: parseFloat(initRange[0]),\n                    end: parseFloat(initRange[1])\n                },\n                request: request,\n                url: media,\n                init: true\n            };\n\n        log('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            representation.initialization = info.url;\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n\n        log('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n                bytesLoaded: 0,\n                bytesToLoad: bytesToLoad,\n                range: {\n                    start: 0,\n                    end: bytesToLoad\n                },\n                request: request,\n                url: media,\n                init: false\n            };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        log('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new Error(null, 'error loading segments', null)});\n        }\n    }\n\n    function getFragmentRequest(info) {\n        let request = new FragmentRequest();\n\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n        log = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport const TCP_CONNECTION = 'TcpList';\nexport const HTTP_REQUEST = 'HttpList';\nexport const TRACK_SWITCH = 'RepSwitchList';\nexport const BUFFER_LEVEL = 'BufferLevel';\nexport const BUFFER_STATE = 'BufferState';\nexport const DVR_INFO = 'DVRInfo';\nexport const DROPPED_FRAMES = 'DroppedFrames';\nexport const SCHEDULING_INFO = 'SchedulingInfo';\nexport const REQUESTS_QUEUE = 'RequestsQueue';\nexport const MANIFEST_UPDATE = 'ManifestUpdate';\nexport const MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo';\nexport const MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo';\nexport const PLAY_LIST = 'PlayList';\nexport const DVB_ERRORS = 'DVBErrors';\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashManifestModel from '../models/DashManifestModel';\nimport DashMetrics from '../DashMetrics';\nimport TimelineConverter from '../utils/TimelineConverter';\nimport AbrController from '../../streaming/controllers/AbrController';\nimport PlaybackController from '../../streaming/controllers/PlaybackController';\nimport StreamController from '../../streaming/controllers/StreamController';\nimport ManifestModel from '../../streaming/models/ManifestModel';\nimport MetricsModel from '../../streaming/models/MetricsModel';\nimport MediaPlayerModel from '../../streaming/models/MediaPlayerModel';\nimport DOMStorage from '../../streaming/utils/DOMStorage';\nimport Error from '../../streaming/vo/Error';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RepresentationController() {\n\n    const SEGMENTS_UPDATE_FAILED_ERROR_CODE = 1;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        data,\n        dataIndex,\n        updating,\n        availableRepresentations,\n        currentRepresentation,\n        streamProcessor,\n        abrController,\n        indexHandler,\n        streamController,\n        playbackController,\n        manifestModel,\n        metricsModel,\n        domStorage,\n        timelineConverter,\n        dashManifestModel,\n        dashMetrics,\n        mediaPlayerModel;\n\n    function setup() {\n        data = null;\n        dataIndex = -1;\n        updating = true;\n        availableRepresentations = [];\n\n        abrController = AbrController(context).getInstance();\n        streamController = StreamController(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        manifestModel = ManifestModel(context).getInstance();\n        metricsModel = MetricsModel(context).getInstance();\n        domStorage = DOMStorage(context).getInstance();\n        timelineConverter = TimelineConverter(context).getInstance();\n        dashManifestModel = DashManifestModel(context).getInstance();\n        dashMetrics = DashMetrics(context).getInstance();\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, instance);\n        eventBus.on(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\n        eventBus.on(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\n\n    }\n\n    function setConfig(config) {\n        // allow the abrController created in setup to be overidden\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n    }\n\n    function initialize(StreamProcessor) {\n        streamProcessor = StreamProcessor;\n        indexHandler = streamProcessor.getIndexHandler();\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getData() {\n        return data;\n    }\n\n    function getDataIndex() {\n        return dataIndex;\n    }\n\n    function isUpdating() {\n        return updating;\n    }\n\n    function getCurrentRepresentation() {\n        return currentRepresentation;\n    }\n\n    function reset() {\n\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, instance);\n        eventBus.off(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\n        eventBus.off(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\n\n\n        data = null;\n        dataIndex = -1;\n        updating = true;\n        availableRepresentations = [];\n        abrController = null;\n        streamController = null;\n        playbackController = null;\n        manifestModel = null;\n        metricsModel = null;\n        domStorage = null;\n        timelineConverter = null;\n        dashManifestModel = null;\n        dashMetrics = null;\n        mediaPlayerModel = null;\n\n    }\n\n    function updateData(dataValue, adaptation, type) {\n        var quality,\n            averageThroughput;\n\n        var bitrate = null;\n        var streamInfo = streamProcessor.getStreamInfo();\n        var maxQuality = abrController.getTopQualityIndexFor(type, streamInfo.id);\n\n        updating = true;\n        eventBus.trigger(Events.DATA_UPDATE_STARTED, {sender: this});\n\n        availableRepresentations = updateRepresentations(adaptation);\n\n        if (data === null && type !== 'fragmentedText') {\n            averageThroughput = abrController.getAverageThroughput(type);\n            bitrate = averageThroughput || abrController.getInitialBitrateFor(type, streamInfo);\n            quality = abrController.getQualityForBitrate(streamProcessor.getMediaInfo(), bitrate);\n        } else {\n            quality = abrController.getQualityFor(type, streamInfo);\n        }\n\n        if (quality > maxQuality) {\n            quality = maxQuality;\n        }\n\n        currentRepresentation = getRepresentationForQuality(quality);\n        data = dataValue;\n\n        if (type !== 'video' && type !== 'audio' && type !== 'fragmentedText') {\n            updating = false;\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation});\n            return;\n        }\n\n        for (var i = 0; i < availableRepresentations.length; i++) {\n            indexHandler.updateRepresentation(availableRepresentations[i], true);\n        }\n    }\n\n    function addRepresentationSwitch() {\n        var now = new Date();\n        var currentRepresentation = getCurrentRepresentation();\n        var currentVideoTimeMs = playbackController.getTime() * 1000;\n\n        metricsModel.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\n    }\n\n    function addDVRMetric() {\n        var range = timelineConverter.calcSegmentAvailabilityRange(currentRepresentation, streamProcessor.isDynamic());\n        metricsModel.addDVRInfo(streamProcessor.getType(), playbackController.getTime(), streamProcessor.getStreamInfo().manifestInfo, range);\n    }\n\n    function getRepresentationForQuality(quality) {\n        return availableRepresentations[quality];\n    }\n\n    function getQualityForRepresentation(representation) {\n        return availableRepresentations.indexOf(representation);\n    }\n\n    function isAllRepresentationsUpdated() {\n        for (var i = 0, ln = availableRepresentations.length; i < ln; i++) {\n            var segmentInfoType = availableRepresentations[i].segmentInfoType;\n            if (availableRepresentations[i].segmentAvailabilityRange === null || availableRepresentations[i].initialization === null ||\n                    ((segmentInfoType === 'SegmentBase' || segmentInfoType === 'BaseURL') && !availableRepresentations[i].segments)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function updateRepresentations(adaptation) {\n        var reps;\n        var manifest = manifestModel.getValue();\n\n        dataIndex = dashManifestModel.getIndexForAdaptation(data, manifest, adaptation.period.index);\n        reps = dashManifestModel.getRepresentationsForAdaptation(manifest, adaptation);\n\n        return reps;\n    }\n\n    function updateAvailabilityWindow(isDynamic) {\n        var rep;\n\n        for (var i = 0, ln = availableRepresentations.length; i < ln; i++) {\n            rep = availableRepresentations[i];\n            rep.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(rep, isDynamic);\n        }\n    }\n\n    function resetAvailabilityWindow() {\n        availableRepresentations.forEach(rep => {\n            rep.segmentAvailabilityRange = null;\n        });\n    }\n\n    function postponeUpdate(postponeTimePeriod) {\n        var delay = postponeTimePeriod;\n        var update = function () {\n            if (isUpdating()) return;\n\n            updating = true;\n            eventBus.trigger(Events.DATA_UPDATE_STARTED, { sender: instance });\n\n            // clear the segmentAvailabilityRange for all reps.\n            // this ensures all are updated before the live edge search starts\n            resetAvailabilityWindow();\n\n            for (var i = 0; i < availableRepresentations.length; i++) {\n                indexHandler.updateRepresentation(availableRepresentations[i], true);\n            }\n        };\n\n        updating = false;\n        eventBus.trigger(MediaPlayerEvents.AST_IN_FUTURE, { delay: delay });\n        setTimeout(update, delay);\n    }\n\n    function onRepresentationUpdated(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor || !isUpdating()) return;\n\n        var r = e.representation;\n        var streamMetrics = metricsModel.getMetricsFor('stream');\n        var metrics = metricsModel.getMetricsFor(getCurrentRepresentation().adaptation.type);\n        var manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(streamMetrics);\n        var alreadyAdded = false;\n        var postponeTimePeriod = 0;\n        var repInfo;\n        var err;\n        var repSwitch;\n\n        if (r.adaptation.period.mpd.manifest.type === 'dynamic')\n        {\n            let segmentAvailabilityTimePeriod = r.segmentAvailabilityRange.end - r.segmentAvailabilityRange.start;\n            // We must put things to sleep unless till e.g. the startTime calculation in ScheduleController.onLiveEdgeSearchCompleted fall after the segmentAvailabilityRange.start\n            let liveDelay = playbackController.computeLiveDelay(currentRepresentation.segmentDuration, streamProcessor.getStreamInfo().manifestInfo.DVRWindowSize);\n            postponeTimePeriod = (liveDelay - segmentAvailabilityTimePeriod) * 1000;\n        }\n\n        if (postponeTimePeriod > 0) {\n            addDVRMetric();\n            postponeUpdate(postponeTimePeriod);\n            err = new Error(SEGMENTS_UPDATE_FAILED_ERROR_CODE, 'Segments update failed', null);\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation, error: err});\n\n            return;\n        }\n\n        if (manifestUpdateInfo) {\n            for (var i = 0; i < manifestUpdateInfo.trackInfo.length; i++) {\n                repInfo = manifestUpdateInfo.trackInfo[i];\n                if (repInfo.index === r.index && repInfo.mediaType === streamProcessor.getType()) {\n                    alreadyAdded = true;\n                    break;\n                }\n            }\n\n            if (!alreadyAdded) {\n                metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo, r.id, r.index, r.adaptation.period.index,\n                        streamProcessor.getType(),r.presentationTimeOffset, r.startNumber, r.segmentInfoType);\n            }\n        }\n\n        if (isAllRepresentationsUpdated()) {\n            updating = false;\n            abrController.setPlaybackQuality(streamProcessor.getType(), streamProcessor.getStreamInfo(), getQualityForRepresentation(currentRepresentation));\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {latency: currentRepresentation.segmentAvailabilityRange.end - playbackController.getTime()});\n\n            repSwitch = dashMetrics.getCurrentRepresentationSwitch(metrics);\n\n            if (!repSwitch) {\n                addRepresentationSwitch();\n            }\n\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: data, currentRepresentation: currentRepresentation});\n        }\n    }\n\n    function onWallclockTimeUpdated(e) {\n        if (e.isDynamic) {\n            updateAvailabilityWindow(e.isDynamic);\n        }\n    }\n\n    function onBufferLevelUpdated(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        addDVRMetric();\n    }\n\n    function onQualityChanged(e) {\n        if (e.mediaType !== streamProcessor.getType() || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n\n        if (e.oldQuality !== e.newQuality) {\n            currentRepresentation = getRepresentationForQuality(e.newQuality);\n            domStorage.setSavedBitrateSettings(e.mediaType, currentRepresentation.bandwidth);\n            addRepresentationSwitch();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getData: getData,\n        getDataIndex: getDataIndex,\n        isUpdating: isUpdating,\n        updateData: updateData,\n        getStreamProcessor: getStreamProcessor,\n        getCurrentRepresentation: getCurrentRepresentation,\n        getRepresentationForQuality: getRepresentationForQuality,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\nexport default FactoryMaker.getClassFactory(RepresentationController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport TimelineConverter from '../utils/TimelineConverter';\nimport MediaController from '../../streaming/controllers/MediaController';\nimport DashAdapter from '../DashAdapter';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction DashManifestModel() {\n\n    let instance;\n    let context = this.context;\n    let timelineConverter = TimelineConverter(context).getInstance();//TODO Need to pass this in not bake in\n    let mediaController = MediaController(context).getInstance();\n    let adaptor = DashAdapter(context).getInstance();\n\n    const urlUtils = URLUtils(context).getInstance();\n\n    function getIsTypeOf(adaptation, type) {\n\n        var i,\n            len,\n            representation;\n        var result = false;\n        var found = false;\n\n        var col = adaptation.ContentComponent_asArray;\n        var mimeTypeRegEx = (type !== 'text') ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if ((adaptation.Representation_asArray.length > 0) &&\n            (adaptation.Representation_asArray[0].hasOwnProperty('codecs'))) {\n            // Just check the start of the codecs string\n            var codecs = adaptation.Representation_asArray[0].codecs;\n            if (codecs.search('stpp') === 0 || codecs.search('wvtt') === 0) {\n                return type === 'fragmentedText';\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === 'muxed');\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty('mimeType')) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray.length;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty('mimeType')) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, 'audio');\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, 'video');\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, 'fragmentedText');\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, 'text');\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, 'muxed');\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        var lang = '';\n\n        if (adaptation.hasOwnProperty('lang')) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g,'');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation.hasOwnProperty('Viewpoint') ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation.hasOwnProperty('Role_asArray') ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation.hasOwnProperty('Accessibility_asArray') ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation.hasOwnProperty('AudioChannelConfiguration_asArray') ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getIsMain(adaptation) {\n        return getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === 'main';\n        })[0];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(adaptation) {\n        if (adaptation.Representation_asArray !== undefined && adaptation.Representation_asArray !== null) {\n            adaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return adaptation;\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\n        var i,\n            len;\n\n        for (i = 0, len = adaptations.length; i < len; i++) {\n            if (adaptations[i].hasOwnProperty('id') && adaptations[i].id === id) {\n                return adaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\n        return adaptations[index];\n    }\n\n    function getIndexForAdaptation(adaptation, manifest, periodIndex) {\n\n        var adaptations = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\n        var i,\n            len;\n\n        for (i = 0, len = adaptations.length; i < len; i++) {\n            if (adaptations[i] === adaptation) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n\n        var adaptationSet = manifest.Period_asArray[periodIndex].AdaptationSet_asArray;\n        var i,\n            len;\n        var adaptations = [];\n\n        for (i = 0, len = adaptationSet.length; i < len; i++) {\n            if (getIsTypeOf(adaptationSet[i], type)) {\n                adaptations.push(processAdaptation(adaptationSet[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\n\n        let adaptations = getAdaptationsForType(manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            let currentTrack = mediaController.getCurrentTrackFor(type, streamInfo);\n            let allMediaInfoForType = adaptor.getAllMediaInfoForType(manifest, streamInfo, type);\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (currentTrack && mediaController.isTracksEqual(currentTrack, allMediaInfoForType[i])) {\n                    return adaptations[i];\n                }\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    function getCodec(adaptation) {\n        var representation = adaptation.Representation_asArray[0];\n        return (representation.mimeType + ';codecs=\"' + representation.codecs + '\"');\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation.Representation_asArray[0].mimeType;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty('cenc:default_KID')) {\n            return null;\n        }\n        return adaptation['cenc:default_KID'];\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty('ContentProtection_asArray') || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        var isDynamic = false;\n        if (manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === 'dynamic');\n        }\n        return isDynamic;\n    }\n\n    function getIsDVR(manifest) {\n        var isDynamic = getIsDynamic(manifest);\n        var containsDVR,\n            isDVR;\n\n        containsDVR = !isNaN(manifest.timeShiftBufferDepth);\n        isDVR = (isDynamic && containsDVR);\n\n        return isDVR;\n    }\n\n    function hasProfile(manifest, profile) {\n        var has = false;\n\n        if (manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsOnDemand(manifest) {\n        return hasProfile(manifest, 'urn:mpeg:dash:profile:isoff-on-demand:2011');\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, 'urn:dvb:dash:profile:dvb-dash:2014');\n    }\n\n    function getDuration(manifest) {\n        var mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest.hasOwnProperty('mediaPresentationDuration')) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation.bandwidth;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest.hasOwnProperty('minimumUpdatePeriod')) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation.Representation_asArray.length;\n    }\n\n    function getBitrateListForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.Representation_asArray || !adaptation.Representation_asArray.length) return null;\n\n        var a = processAdaptation(adaptation);\n        var reps = a.Representation_asArray;\n        var ln = reps.length;\n        var bitrateList = [];\n\n        for (var i = 0; i < ln; i++) {\n            bitrateList.push({\n                bandwidth: reps[i].bandwidth,\n                width: reps[i].width || 0,\n                height: reps[i].height || 0\n            });\n        }\n\n        return bitrateList;\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation.Representation_asArray[index];\n    }\n\n    function getRepresentationsForAdaptation(manifest, adaptation) {\n        var a = processAdaptation(manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index]);\n        var representations = [];\n        var representation,\n            initialization,\n            segmentInfo,\n            r,\n            s;\n\n        for (var i = 0; i < a.Representation_asArray.length; i++) {\n            r = a.Representation_asArray[i];\n            representation = new Representation();\n            representation.index = i;\n            representation.adaptation = adaptation;\n\n            if (r.hasOwnProperty('id')) {\n                representation.id = r.id;\n            }\n\n            if (r.hasOwnProperty('bandwidth')) {\n                representation.bandwidth = r.bandwidth;\n            }\n            if (r.hasOwnProperty('maxPlayoutRate')) {\n                representation.maxPlayoutRate = r.maxPlayoutRate;\n            }\n            if (r.hasOwnProperty('SegmentBase')) {\n                segmentInfo = r.SegmentBase;\n                representation.segmentInfoType = 'SegmentBase';\n            }\n            else if (r.hasOwnProperty('SegmentList')) {\n                segmentInfo = r.SegmentList;\n\n                if (segmentInfo.hasOwnProperty('SegmentTimeline')) {\n                    representation.segmentInfoType = 'SegmentTimeline';\n                    s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                    if (!s.hasOwnProperty('r') || s.r >= 0) {\n                        representation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else {\n                    representation.segmentInfoType = 'SegmentList';\n                    representation.useCalculatedLiveEdgeTime = true;\n                }\n            }\n            else if (r.hasOwnProperty('SegmentTemplate')) {\n                segmentInfo = r.SegmentTemplate;\n\n                if (segmentInfo.hasOwnProperty('SegmentTimeline')) {\n                    representation.segmentInfoType = 'SegmentTimeline';\n                    s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                    if (!s.hasOwnProperty('r') || s.r >= 0) {\n                        representation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else {\n                    representation.segmentInfoType = 'SegmentTemplate';\n                }\n\n                if (segmentInfo.hasOwnProperty('initialization')) {\n                    representation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                        .join(r.bandwidth).split('$RepresentationID$').join(r.id);\n                }\n            } else {\n                segmentInfo = r.BaseURL;\n                representation.segmentInfoType = 'BaseURL';\n            }\n\n            if (segmentInfo.hasOwnProperty('Initialization')) {\n                initialization = segmentInfo.Initialization;\n                if (initialization.hasOwnProperty('sourceURL')) {\n                    representation.initialization = initialization.sourceURL;\n                } else if (initialization.hasOwnProperty('range')) {\n                    representation.range = initialization.range;\n                    representation.initialization = r.BaseURL;\n                }\n            } else if (r.hasOwnProperty('mimeType') && getIsTextTrack(r.mimeType)) {\n                representation.range = 0;\n            }\n\n            if (segmentInfo.hasOwnProperty('timescale')) {\n                representation.timescale = segmentInfo.timescale;\n            }\n            if (segmentInfo.hasOwnProperty('duration')) {\n                // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                // exceeds @maxSegmentDuration\n                //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                representation.segmentDuration = segmentInfo.duration / representation.timescale;\n            }\n            if (segmentInfo.hasOwnProperty('startNumber')) {\n                representation.startNumber = segmentInfo.startNumber;\n            }\n            if (segmentInfo.hasOwnProperty('indexRange')) {\n                representation.indexRange = segmentInfo.indexRange;\n            }\n            if (segmentInfo.hasOwnProperty('presentationTimeOffset')) {\n                representation.presentationTimeOffset = segmentInfo.presentationTimeOffset / representation.timescale;\n            }\n\n            representation.MSETimeOffset = timelineConverter.calcMSETimeOffset(representation);\n\n            representation.path = [adaptation.period.index, adaptation.index, i];\n\n            representations.push(representation);\n        }\n\n        return representations;\n    }\n\n    function getAdaptationsForPeriod(manifest, period) {\n        var p = manifest.Period_asArray[period.index];\n        var adaptations = [];\n        var adaptationSet,\n            a;\n\n        for (var i = 0; i < p.AdaptationSet_asArray.length; i++) {\n            a = p.AdaptationSet_asArray[i];\n            adaptationSet = new AdaptationSet();\n\n            if (a.hasOwnProperty('id')) {\n                adaptationSet.id = a.id;\n            }\n\n            adaptationSet.index = i;\n            adaptationSet.period = period;\n\n            if (getIsMuxed(a)) {\n                adaptationSet.type = 'muxed';\n            } else if (getIsAudio(a)) {\n                adaptationSet.type = 'audio';\n            }else if (getIsVideo(a)) {\n                adaptationSet.type = 'video';\n            }else if (getIsFragmentedText(a)) {\n                adaptationSet.type = 'fragmentedText';\n            }else {\n                adaptationSet.type = 'text';\n            }\n\n            adaptations.push(adaptationSet);\n        }\n\n        return adaptations;\n    }\n\n    function getRegularPeriods(manifest, mpd) {\n        var isDynamic = getIsDynamic(manifest);\n        var periods = [];\n        var p1 = null;\n        var p = null;\n        var vo1 = null;\n        var vo = null;\n        var len,\n            i;\n\n        for (i = 0, len = manifest.Period_asArray.length; i < len; i++) {\n            p = manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (p.hasOwnProperty('start')) {\n                vo = new Period();\n                vo.start = p.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (p1 !== null && p.hasOwnProperty('duration') && vo1 !== null) {\n                vo = new Period();\n                vo.start = vo1.start + vo1.duration;\n                vo.duration = p.duration;\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                vo = new Period();\n                vo.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (vo1 !== null && isNaN(vo1.duration))\n            {\n                vo1.duration = vo.start - vo1.start;\n            }\n\n            if (vo !== null) {\n                vo.id = getPeriodId(p, i);\n            }\n\n            if (vo !== null && p.hasOwnProperty('duration')) {\n                vo.duration = p.duration;\n            }\n\n            if (vo !== null) {\n                vo.index = i;\n                vo.mpd = mpd;\n                periods.push(vo);\n                p1 = p;\n                vo1 = vo;\n            }\n\n            p = null;\n            vo = null;\n        }\n\n        if (periods.length === 0) {\n            return periods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (vo1 !== null && isNaN(vo1.duration)) {\n            vo1.duration = getEndTimeForLastPeriod(manifest, vo1) - vo1.start;\n        }\n\n        return periods;\n    }\n\n    function getPeriodId(p, i) {\n        if (!p) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (p.hasOwnProperty('id') && p.id !== '__proto__') {\n            id = p.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        var mpd = new Mpd();\n\n        mpd.manifest = manifest;\n\n        if (manifest.hasOwnProperty('availabilityStartTime')) {\n            mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n        } else {\n            mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n        }\n\n        if (manifest.hasOwnProperty('availabilityEndTime')) {\n            mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n        }\n\n        if (manifest.hasOwnProperty('minimumUpdatePeriod')) {\n            mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n        }\n\n        if (manifest.hasOwnProperty('mediaPresentationDuration')) {\n            mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n        }\n\n        if (manifest.hasOwnProperty('suggestedPresentationDelay')) {\n            mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n        }\n\n        if (manifest.hasOwnProperty('timeShiftBufferDepth')) {\n            mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n        }\n\n        if (manifest.hasOwnProperty('maxSegmentDuration')) {\n            mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(manifest, period) {\n        const isDynamic = getIsDynamic(manifest);\n\n        let periodEnd;\n        if (manifest.mediaPresentationDuration) {\n            periodEnd = manifest.mediaPresentationDuration;\n        } else if (period.duration) {\n            periodEnd = period.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            throw new Error('Must have @mediaPresentationDuratio on MPD or an explicit @duration on the last period.');\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(manifest, period) {\n\n        var periodArray = manifest.Period_asArray;\n        var eventStreams = periodArray[period.index].EventStream_asArray;\n        var events = [];\n\n        if (eventStreams) {\n            for (var i = 0; i < eventStreams.length; i++) {\n                var eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty('schemeIdUri')) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty('timescale')) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty('value')) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (var j = 0; j < eventStreams[i].Event_asArray.length; j++) {\n                    var event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('presentationTime')) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('duration')) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty('id')) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        var eventStreams = [];\n\n        if (!inbandStreams) return eventStreams;\n\n        for (var i = 0; i < inbandStreams.length ; i++ ) {\n            var eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation =  representation;\n\n            if (inbandStreams[i].hasOwnProperty('schemeIdUri')) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty('timescale')) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty('value')) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        var inbandStreams = manifest.Period_asArray[adaptation.period.index].\n            AdaptationSet_asArray[adaptation.index].InbandEventStream_asArray;\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        var inbandStreams = manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].InbandEventStream_asArray;\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n\n        var isDynamic = getIsDynamic(manifest);\n        var hasAST = manifest.hasOwnProperty('availabilityStartTime');\n        var utcTimingsArray = manifest.UTCTiming_asArray;\n        var utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    var entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty('schemeIdUri')) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty('value')) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        let baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        let entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = node.baseUri + text;\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty('serviceLocation') &&\n                        entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty('dvb:priority')) {\n                    baseUrl.dvb_priority = entry['dvb:priority'];\n                }\n\n                if (entry.hasOwnProperty('dvb:weight')) {\n                    baseUrl.dvb_weight = entry['dvb:weight'];\n                }\n\n                /* NOTE: byteRange, availabilityTimeOffset,\n                 * availabilityTimeComplete currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest.hasOwnProperty('Location')) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n        }\n\n        // may well be undefined\n        return manifest.Location;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsAudio: getIsAudio,\n        getIsVideo: getIsVideo,\n        getIsText: getIsText,\n        getIsMuxed: getIsMuxed,\n        getIsTextTrack: getIsTextTrack,\n        getIsFragmentedText: getIsFragmentedText,\n        getIsMain: getIsMain,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        processAdaptation: processAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getAdaptationForType: getAdaptationForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVR: getIsDVR,\n        getIsOnDemand: getIsOnDemand,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreams: getEventStreams,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation\n    };\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorHandler from '../../streaming/utils/ErrorHandler';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport ObjectIron from '../../../externals/objectiron';\nimport X2JS from '../../../externals/xml2json';\nimport StringMatcher from './matchers/StringMatcher';\nimport DurationMatcher from './matchers/DurationMatcher';\nimport DateTimeMatcher from './matchers/DateTimeMatcher';\nimport NumericMatcher from './matchers/NumericMatcher';\nimport RepresentationBaseValuesMap from './maps/RepresentationBaseValuesMap';\nimport SegmentValuesMap from './maps/SegmentValuesMap';\n\nfunction DashParser(/*config*/) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const errorHandler = ErrorHandler(context).getInstance();\n\n    let instance,\n        matchers,\n        converter,\n        objectIron;\n\n    function setup() {\n        matchers = [\n            new DurationMatcher(),\n            new DateTimeMatcher(),\n            new NumericMatcher(),\n            new StringMatcher()   // last in list to take precedence over NumericMatcher\n        ];\n\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        objectIron = new ObjectIron([\n            new RepresentationBaseValuesMap(),\n            new SegmentValuesMap()\n        ]);\n    }\n\n    function parse(data, xlinkController) {\n        var manifest;\n\n        try {\n            const startTime = window.performance.now();\n\n            manifest = converter.xml_str2json(data);\n\n            if (!manifest) {\n                throw new Error('parser error');\n            }\n\n            const jsonTime = window.performance.now();\n\n            objectIron.run(manifest);\n\n            const ironedTime = window.performance.now();\n\n            xlinkController.setMatchers(matchers);\n            xlinkController.setIron(objectIron);\n\n            log('Parsing complete: ( xml2json: ' + (jsonTime - startTime).toPrecision(3) + 'ms, objectiron: ' + (ironedTime - jsonTime).toPrecision(3) + 'ms, total: ' + ((ironedTime - startTime) / 1000).toPrecision(3) + 's)');\n        } catch (err) {\n            errorHandler.manifestError('parsing the manifest failed', 'parse', data, err);\n            return null;\n        }\n\n        return manifest;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashParser.__dashjs_factory_name = 'DashParser';\nexport default FactoryMaker.getClassFactory(DashParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a property belonging to a MapNode\n */\n\nclass CommonProperty {\n    constructor(name, merge) {\n        const getDefaultMergeForName =\n              (n) => n && n.length && n.charAt(0) === n.charAt(0).toUpperCase();\n\n        this._name = name;\n        this._merge = merge !== undefined ?\n            merge :\n            getDefaultMergeForName(name);\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get merge() {\n        return this._merge;\n    }\n}\n\nexport default CommonProperty;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a node at some level in a ValueMap\n */\nimport CommonProperty from './CommonProperty';\n\nclass MapNode {\n    constructor(name, properties, children, isRoot, isArray) {\n        this._name = name || '';\n        this._properties = [];\n        this._children = children || [];\n        this._isRoot = isRoot || false;\n        this._isArray = isArray || true ;\n\n        if (Array.isArray(properties)) {\n            properties.forEach(p => {\n                this._properties.push(new CommonProperty(p));\n            });\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    get isArray() {\n        return this._isArray;\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    get properties() {\n        return this._properties;\n    }\n}\n\nexport default MapNode;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            'profiles', 'width', 'height', 'sar', 'frameRate', 'audioSamplingRate', 'mimeType','segmentProfiles', 'codecs', 'maximumSAPPeriod', 'startWithSAP', 'maxPlayoutRate', 'codingDependency', 'scanType', 'FramePacking', 'AudioChannelConfiguration', 'ContentProtection', 'EssentialProperty', 'SupplementalProperty', 'InbandEventStream'\n        ];\n\n        super('AdaptationSet', commonProperties, [\n            new MapNode('Representation', commonProperties, [\n                new MapNode('SubRepresentation', commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a SegmentValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\n\nclass SegmentValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            'SegmentBase', 'SegmentTemplate', 'SegmentList'\n        ];\n\n        super('Period', commonProperties, [\n            new MapNode('AdaptationSet', commonProperties, [\n                new MapNode('Representation', commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default SegmentValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a base type for matching and converting types in manifest to\n * something more useful\n */\n\nclass BaseMatcher {\n    constructor(test, converter) {\n        this._test = test;\n        this._converter = converter;\n    }\n\n    get test() {\n        return this._test;\n    }\n\n    get converter() {\n        return this._converter;\n    }\n}\n\nexport default BaseMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:datetime to Date\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst SECONDS_IN_MIN = 60;\nconst MINUTES_IN_HOUR = 60;\nconst MILLISECONDS_IN_SECONDS = 1000;\n\nconst datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;\n\nclass DateTimeMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => datetimeRegex.test(attr.value),\n            str => {\n                const match = datetimeRegex.exec(str);\n                let utcDate;\n\n                // If the string does not contain a timezone offset different browsers can interpret it either\n                // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n                // all browsers\n                utcDate = Date.UTC(\n                    parseInt(match[1], 10),\n                    parseInt(match[2], 10) - 1, // months start from zero\n                    parseInt(match[3], 10),\n                    parseInt(match[4], 10),\n                    parseInt(match[5], 10),\n                    (match[6] && parseInt(match[6], 10) || 0),\n                    (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\n\n                // If the date has timezone offset take it into account as well\n                if (match[9] && match[10]) {\n                    const timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n                    utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n                }\n\n                return new Date(utcDate);\n            }\n        );\n    }\n}\n\nexport default DateTimeMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    'minBufferTime', 'mediaPresentationDuration',\n                    'minimumUpdatePeriod', 'timeShiftBufferDepth', 'maxSegmentDuration',\n                    'maxSubsegmentDuration', 'suggestedPresentationDelay', 'start',\n                    'starttime', 'duration'\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[2] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[4] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[6] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[8] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[10] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[12] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:numeric to float\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\n\nclass NumericMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => numericRegex.test(attr.value),\n            str => parseFloat(str)\n        );\n    }\n}\n\nexport default NumericMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    'MPD':                        [ 'id', 'profiles' ],\n                    'Period':                     [ 'id', ],\n                    'BaseURL':                    [ 'serviceLocation', 'byteRange' ],\n                    'SegmentBase':                [ 'indexRange' ],\n                    'Initialization':             [ 'range' ],\n                    'RepresentationIndex':        [ 'range' ],\n                    'SegmentList':                [ 'indexRange' ],\n                    'BitstreamSwitching':         [ 'range' ],\n                    'SegmentURL':                 [ 'mediaRange', 'indexRange' ],\n                    'SegmentTemplate':            [ 'indexRange', 'media', 'index', 'initialization', 'bitstreamSwitching' ],\n                    'AssetIdentifier':            [ 'value', 'id' ],\n                    'EventStream':                [ 'value' ],\n                    'AdaptationSet':              [ 'profiles', 'mimeType', 'segmentProfiles', 'codecs', 'contentType' ],\n                    'FramePacking':               [ 'value', 'id' ],\n                    'AudioChannelConfiguration':  [ 'value', 'id' ],\n                    'ContentProtection':          [ 'value', 'id' ],\n                    'EssentialProperty':          [ 'value', 'id' ],\n                    'SupplementalProperty':       [ 'value', 'id' ],\n                    'InbandEventStream':          [ 'value', 'id' ],\n                    'Accessibility':              [ 'value', 'id' ],\n                    'Role':                       [ 'value', 'id' ],\n                    'Rating':                     [ 'value', 'id' ],\n                    'Viewpoint':                  [ 'value', 'id' ],\n                    'ContentComponent':           [ 'contentType' ],\n                    'Representation':             [ 'id', 'dependencyId', 'mediaStreamStructureId' ],\n                    'Subset':                     [ 'id' ],\n                    'Metrics':                    [ 'metrics' ],\n                    'Reporting':                  [ 'value', 'id' ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    var attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction FragmentedTextBoxParser() {\n\n    let instance,\n        boxParser;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n    }\n\n    function getSamplesInfo(ab) {\n        var isoFile = boxParser.parse(ab);\n        var tfhdBox = isoFile.getBox('tfhd');\n        var tfdtBox = isoFile.getBox('tfdt');\n        var trunBox = isoFile.getBox('trun');\n        var moofBox = isoFile.getBox('moof');\n        var mfhdBox = isoFile.getBox('mfhd');\n        var subsBox = isoFile.getBox('subs');\n\n        var sampleDuration,\n            sampleCompositionTimeOffset,\n            sampleCount,\n            sampleSize,\n            sampleDts,\n            sampleList,\n            sample,\n            i, j,\n            dataOffset,\n            sequenceNumber,\n            totalDuration,\n            sampleWithSubsIndex;\n\n        sequenceNumber = mfhdBox.sequence_number;\n        sampleCount = trunBox.sample_count;\n        sampleDts = tfdtBox.baseMediaDecodeTime;\n        dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\n\n        sampleList = [];\n        sampleWithSubsIndex = 0;\n        for (i = 0; i < sampleCount; i++) {\n            sample = trunBox.samples[i];\n            sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\n            sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\n            sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\n            var sampleData = {\n                'dts': sampleDts,\n                'cts': (sampleDts + sampleCompositionTimeOffset),\n                'duration': sampleDuration,\n                'offset': moofBox.offset + dataOffset,\n                'size': sampleSize,\n                'subSizes': [sampleSize]\n            };\n            if (subsBox && sampleWithSubsIndex < subsBox.samples_with_subsamples.length &&\n                subsBox.samples_with_subsamples[sampleWithSubsIndex].nr == (i + 1)) {\n                sampleData.subSizes = [];\n                for (j = 0; j < subsBox.samples_with_subsamples[sampleWithSubsIndex].subsamples.length; j++) {\n                    let subSize = subsBox.samples_with_subsamples[sampleWithSubsIndex].subsamples[j].size;\n                    sampleData.subSizes.push(subSize);\n                }\n                sampleWithSubsIndex++;\n            }\n            sampleList.push(sampleData);\n            dataOffset += sampleSize;\n            sampleDts += sampleDuration;\n        }\n        totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\n        return {sampleList: sampleList, sequenceNumber: sequenceNumber, totalDuration: totalDuration};\n    }\n\n    function getMediaTimescaleFromMoov(ab) {\n        var isoFile = boxParser.parse(ab);\n        var mdhdBox = isoFile.getBox('mdhd');\n\n        return mdhdBox ? mdhdBox.timescale : NaN;\n    }\n\n    instance = {\n        getSamplesInfo: getSamplesInfo,\n        getMediaTimescaleFromMoov: getMediaTimescaleFromMoov,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nFragmentedTextBoxParser.__dashjs_factory_name = 'FragmentedTextBoxParser';\nexport default FactoryMaker.getSingletonFactory(FragmentedTextBoxParser);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils';\n\nfunction ListSegmentsGetter(config, isDynamic) {\n\n    let timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromList(representation, requestedTime, index, availabilityUpperLimit) {\n        var list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        var len = list.SegmentURL_asArray.length;\n\n        var segments = [];\n\n        var periodSegIdx,\n            seg,\n            s,\n            range,\n            startIdx,\n            endIdx,\n            start;\n\n        start = representation.startNumber;\n\n        range = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\n        startIdx = Math.max(range.start, 0);\n        endIdx = Math.min(range.end, list.SegmentURL_asArray.length - 1);\n\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\n            s = list.SegmentURL_asArray[periodSegIdx];\n\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\n            seg.media = s.media ? s.media : '';\n            seg.mediaRange = s.mediaRange;\n            seg.index = s.index;\n            seg.indexRange = s.indexRange;\n\n            segments.push(seg);\n            seg = null;\n        }\n\n        representation.availableSegmentsNumber = len;\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromList\n    };\n\n    return instance;\n}\n\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport TimelineSegmentsGetter from './TimelineSegmentsGetter';\nimport TemplateSegmentsGetter from './TemplateSegmentsGetter';\nimport ListSegmentsGetter from './ListSegmentsGetter';\n\nfunction SegmentsGetter(config, isDynamic) {\n\n    let context = this.context;\n\n    let instance,\n        timelineSegmentsGetter,\n        templateSegmentsGetter,\n        listSegmentsGetter;\n\n    function setup() {\n        timelineSegmentsGetter = TimelineSegmentsGetter(context).create(config, isDynamic);\n        templateSegmentsGetter = TemplateSegmentsGetter(context).create(config, isDynamic);\n        listSegmentsGetter = ListSegmentsGetter(context).create(config, isDynamic);\n    }\n\n    function getSegments(representation, requestedTime, index, onSegmentListUpdatedCallback, availabilityUpperLimit) {\n        var segments;\n        var type = representation.segmentInfoType;\n\n        // Already figure out the segments.\n        if (type === 'SegmentBase' || type === 'BaseURL' || !isSegmentListUpdateRequired(representation, index)) {\n            segments = representation.segments;\n        } else {\n            if (type === 'SegmentTimeline') {\n                segments = timelineSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            } else if (type === 'SegmentTemplate') {\n                segments = templateSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            } else if (type === 'SegmentList') {\n                segments = listSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            }\n\n            if (onSegmentListUpdatedCallback) {\n                onSegmentListUpdatedCallback(representation, segments);\n            }\n        }\n\n        return segments;\n    }\n\n    function isSegmentListUpdateRequired(representation, index) {\n        var segments = representation.segments;\n        var updateRequired = false;\n\n        var upperIdx,\n            lowerIdx;\n\n        if (!segments || segments.length === 0) {\n            updateRequired = true;\n        } else {\n            lowerIdx = segments[0].availabilityIdx;\n            upperIdx = segments[segments.length - 1].availabilityIdx;\n            updateRequired = (index < lowerIdx) || (index > upperIdx);\n        }\n\n        return updateRequired;\n    }\n\n    instance = {\n        getSegments: getSegments\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentsGetter.__dashjs_factory_name = 'SegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(SegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Segment from './../vo/Segment';\n\nfunction zeroPadToLength(numStr, minStrLength) {\n    while (numStr.length < minStrLength) {\n        numStr = '0' + numStr;\n    }\n    return numStr;\n}\n\nfunction getNumberForSegment(segment, segmentIndex) {\n    return segment.representation.startNumber + segmentIndex;\n}\n\nexport function replaceTokenForTemplate(url, token, value) {\n    var formatTag = '%0';\n\n    var startPos,\n        endPos,\n        formatTagPos,\n        specifier,\n        width,\n        paddedValue;\n\n    var tokenLen = token.length;\n    var formatTagLen = formatTag.length;\n\n    // keep looping round until all instances of <token> have been\n    // replaced. once that has happened, startPos below will be -1\n    // and the completed url will be returned.\n    while (true) {\n\n        // check if there is a valid $<token>...$ identifier\n        // if not, return the url as is.\n        startPos = url.indexOf('$' + token);\n        if (startPos < 0) {\n            return url;\n        }\n\n        // the next '$' must be the end of the identifier\n        // if there isn't one, return the url as is.\n        endPos = url.indexOf('$', startPos + tokenLen);\n        if (endPos < 0) {\n            return url;\n        }\n\n        // now see if there is an additional format tag suffixed to\n        // the identifier within the enclosing '$' characters\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\n        if (formatTagPos > startPos && formatTagPos < endPos) {\n\n            specifier = url.charAt(endPos - 1);\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\n\n            // support the minimum specifiers required by IEEE 1003.1\n            // (d, i , o, u, x, and X) for completeness\n            switch (specifier) {\n                // treat all int types as uint,\n                // hence deliberate fallthrough\n                case 'd':\n                case 'i':\n                case 'u':\n                    paddedValue = zeroPadToLength(value.toString(), width);\n                    break;\n                case 'x':\n                    paddedValue = zeroPadToLength(value.toString(16), width);\n                    break;\n                case 'X':\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\n                    break;\n                case 'o':\n                    paddedValue = zeroPadToLength(value.toString(8), width);\n                    break;\n                default:\n                    //TODO: commented out logging to supress jshint warning -- `log` is undefined here\n                    //log('Unsupported/invalid IEEE 1003.1 format identifier string in URL');\n                    return url;\n            }\n        } else {\n            paddedValue = value;\n        }\n\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\n    }\n}\n\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\n    var seg,\n        duration,\n        presentationStartTime,\n        presentationEndTime;\n\n    duration = representation.segmentDuration;\n\n    /*\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\n     * in the same way as for the last Media Segment in the Representation.\n     */\n    if (isNaN(duration)) {\n        duration = representation.adaptation.period.duration;\n    }\n\n    presentationStartTime = representation.adaptation.period.start + (index * duration);\n    presentationEndTime = presentationStartTime + duration;\n\n    seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = duration;\n    seg.presentationStartTime = presentationStartTime;\n\n    seg.mediaStartTime = timelineConverter.calcMediaTimeFromPresentationTime(seg.presentationStartTime, representation);\n\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(seg.presentationStartTime, representation.adaptation.period.mpd, isDynamic);\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\n\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n\n    seg.replacementNumber = getNumberForSegment(seg, index);\n    seg.availabilityIdx = index;\n\n    return seg;\n}\n\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index) {\n    var scaledTime = time / fTimescale;\n    var scaledDuration = Math.min(duration / fTimescale, representation.adaptation.period.mpd.maxSegmentDuration);\n\n    var presentationStartTime,\n        presentationEndTime,\n        seg;\n\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\n    presentationEndTime = presentationStartTime + scaledDuration;\n\n    seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = scaledDuration;\n    seg.mediaStartTime = scaledTime;\n\n    seg.presentationStartTime = presentationStartTime;\n\n    // For SegmentTimeline every segment is available at loadedTime\n    seg.availabilityStartTime = representation.adaptation.period.mpd.manifest.loadedTime;\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\n\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n\n    seg.replacementTime = time;\n\n    seg.replacementNumber = getNumberForSegment(seg, index);\n\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n    seg.media = url;\n    seg.mediaRange = range;\n    seg.availabilityIdx = index;\n\n    return seg;\n}\n\nexport function getSegmentByIndex(index, representation) {\n    if (!representation || !representation.segments) return null;\n\n    var ln = representation.segments.length;\n    var seg,\n        i;\n\n    if (index < ln) {\n        seg = representation.segments[index];\n        if (seg && seg.availabilityIdx === index) {\n            return seg;\n        }\n    }\n\n    for (i = 0; i < ln; i++) {\n        seg = representation.segments[i];\n\n        if (seg && seg.availabilityIdx === index) {\n            return seg;\n        }\n    }\n\n    return null;\n}\n\n\nexport function decideSegmentListRangeForTimeline(timelineConverter, isDynamic, requestedTime, index, givenAvailabilityUpperLimit) {\n    var availabilityLowerLimit = 2;\n    var availabilityUpperLimit = givenAvailabilityUpperLimit || 10;\n    var firstIdx = 0;\n    var lastIdx = Number.POSITIVE_INFINITY;\n\n    var start,\n        end,\n        range;\n\n    if (isDynamic && !timelineConverter.isTimeSyncCompleted()) {\n        range = {start: firstIdx, end: lastIdx};\n        return range;\n    }\n\n    if ((!isDynamic && requestedTime) || index < 0) return null;\n\n    // segment list should not be out of the availability window range\n    start = Math.max(index - availabilityLowerLimit, firstIdx);\n    end = Math.min(index + availabilityUpperLimit, lastIdx);\n\n    range = {start: start, end: end};\n\n    return range;\n}\n\nexport function decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, givenAvailabilityUpperLimit) {\n    var duration = representation.segmentDuration;\n    var minBufferTime = representation.adaptation.period.mpd.manifest.minBufferTime;\n    var availabilityWindow = representation.segmentAvailabilityRange;\n    var periodRelativeRange = {\n        start: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.start),\n        end: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.end)\n    };\n    var currentSegmentList = representation.segments;\n    var availabilityLowerLimit = 2 * duration;\n    var availabilityUpperLimit = givenAvailabilityUpperLimit || Math.max(2 * minBufferTime, 10 * duration);\n\n    var originAvailabilityTime = NaN;\n    var originSegment = null;\n\n    var start,\n        end,\n        range;\n\n    periodRelativeRange.start = Math.max(periodRelativeRange.start, 0);\n\n    if (isDynamic && !timelineConverter.isTimeSyncCompleted()) {\n        start = Math.floor(periodRelativeRange.start / duration);\n        end = Math.floor(periodRelativeRange.end / duration);\n        range = {start: start, end: end};\n        return range;\n    }\n\n    // if segments exist we should try to find the latest buffered time, which is the presentation time of the\n    // segment for the current index\n    if (currentSegmentList && currentSegmentList.length > 0) {\n        originSegment = getSegmentByIndex(index, representation);\n        if (originSegment) {\n            originAvailabilityTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, originSegment.presentationStartTime);\n        } else {\n            originAvailabilityTime = index > 0 ? index * duration :\n                timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        }\n\n    } else {\n        // If no segments exist, but index > 0, it means that we switch to the other representation, so\n        // we should proceed from this time.\n        // Otherwise we should start from the beginning for static mpds or from the end (live edge) for dynamic mpds\n        originAvailabilityTime = index > 0 ? index * duration : isDynamic ? periodRelativeRange.end : periodRelativeRange.start;\n    }\n\n    // segment list should not be out of the availability window range\n    start = Math.floor(Math.max(originAvailabilityTime - availabilityLowerLimit, periodRelativeRange.start) / duration);\n    end = Math.floor(Math.min(start + availabilityUpperLimit / duration, periodRelativeRange.end / duration));\n\n    range = {start: start, end: end};\n\n    return range;\n}\n\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {replaceTokenForTemplate, getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils';\n\nfunction TemplateSegmentsGetter(config, isDynamic) {\n\n    let timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromTemplate(representation, requestedTime, index, availabilityUpperLimit) {\n        var template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\n        var duration = representation.segmentDuration;\n        var availabilityWindow = representation.segmentAvailabilityRange;\n\n        var segments = [];\n        var url = null;\n        var seg = null;\n\n        var segmentRange,\n            periodSegIdx,\n            startIdx,\n            endIdx,\n            start;\n\n        start = representation.startNumber;\n\n        if (isNaN(duration) && !isDynamic) {\n            segmentRange = {start: start, end: start};\n        }\n        else {\n            segmentRange = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\n        }\n\n        startIdx = segmentRange.start;\n        endIdx = segmentRange.end;\n\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\n\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\n            url = template.media;\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n            seg.media = url;\n\n            segments.push(seg);\n            seg = null;\n        }\n\n        if (isNaN(duration)) {\n            representation.availableSegmentsNumber = 1;\n        }\n        else {\n            representation.availableSegmentsNumber = Math.ceil((availabilityWindow.end - availabilityWindow.start) / duration);\n        }\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromTemplate\n    };\n\n    return instance;\n}\n\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction TimelineConverter() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        clientServerTimeShift,\n        isClientServerTimeSyncCompleted,\n        expectedLiveEdge;\n\n    function initialize() {\n\n        clientServerTimeShift = 0;\n        isClientServerTimeSyncCompleted = false;\n        expectedLiveEdge = NaN;\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\n    }\n\n    function isTimeSyncCompleted() {\n        return isClientServerTimeSyncCompleted;\n    }\n\n    function setTimeSyncCompleted(value) {\n        isClientServerTimeSyncCompleted = value;\n    }\n\n    function getClientTimeOffset() {\n        return clientServerTimeShift;\n    }\n\n    function getExpectedLiveEdge() {\n        return expectedLiveEdge;\n    }\n\n    function setExpectedLiveEdge(value) {\n        expectedLiveEdge = value;\n    }\n\n    function calcAvailabilityTimeFromPresentationTime(presentationTime, mpd, isDynamic, calculateEnd) {\n        var availabilityTime = NaN;\n\n        if (calculateEnd) {\n            //@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed\n            // to be available for a Media Presentation with type 'dynamic'.\n            // When not present, the value is infinite.\n            if (isDynamic && (mpd.timeShiftBufferDepth != Number.POSITIVE_INFINITY)) {\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + ((presentationTime + mpd.timeShiftBufferDepth) * 1000));\n            } else {\n                availabilityTime = mpd.availabilityEndTime;\n            }\n        } else {\n            if (isDynamic) {\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + (presentationTime - clientServerTimeShift) * 1000);\n            } else {\n                // in static mpd, all segments are available at the same time\n                availabilityTime = mpd.availabilityStartTime;\n            }\n        }\n\n        return availabilityTime;\n    }\n\n    function calcAvailabilityStartTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic);\n    }\n\n    function calcAvailabilityEndTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic, true);\n    }\n\n    function calcPresentationTimeFromWallTime(wallTime, period) {\n        //console.log(\"XXX\", wallTime.getTime() - period.mpd.availabilityStartTime.getTime(), clientServerTimeShift * 1000, clientServerTimeShift, period.mpd.availabilityStartTime.getTime())\n        return ((wallTime.getTime() - period.mpd.availabilityStartTime.getTime() + clientServerTimeShift * 1000) / 1000);\n    }\n\n    function calcPresentationTimeFromMediaTime(mediaTime, representation) {\n        var periodStart = representation.adaptation.period.start;\n        var presentationOffset = representation.presentationTimeOffset;\n\n        return mediaTime + (periodStart - presentationOffset);\n    }\n\n    function calcMediaTimeFromPresentationTime(presentationTime, representation) {\n        var periodStart = representation.adaptation.period.start;\n        var presentationOffset = representation.presentationTimeOffset;\n\n        return presentationTime - periodStart + presentationOffset;\n    }\n\n    function calcWallTimeForSegment(segment, isDynamic) {\n        var suggestedPresentationDelay,\n            displayStartTime,\n            wallTime;\n\n        if (isDynamic) {\n            suggestedPresentationDelay = segment.representation.adaptation.period.mpd.suggestedPresentationDelay;\n            displayStartTime = segment.presentationStartTime + suggestedPresentationDelay;\n            wallTime = new Date(segment.availabilityStartTime.getTime() + (displayStartTime * 1000));\n        }\n\n        return wallTime;\n    }\n\n    function calcSegmentAvailabilityRange(representation, isDynamic) {\n\n        // Static Range Finder\n        const period = representation.adaptation.period;\n        const range = { start: period.start, end: period.start + period.duration };\n        if (!isDynamic) return range;\n\n        if (!isClientServerTimeSyncCompleted && representation.segmentAvailabilityRange) {\n            return representation.segmentAvailabilityRange;\n        }\n\n        //Dyanmic Range Finder\n        const d = representation.segmentDuration || (representation.segments && representation.segments.length ? representation.segments[representation.segments.length - 1].duration : 0);\n        const now = calcPresentationTimeFromWallTime(new Date(), period);\n        const periodEnd = period.start + period.duration;\n        range.start = Math.max((now - period.mpd.timeShiftBufferDepth), period.start);\n        range.end = now >= periodEnd && now - d < periodEnd ? periodEnd - d : now - d;\n\n        return range;\n    }\n\n    function calcPeriodRelativeTimeFromMpdRelativeTime(representation, mpdRelativeTime) {\n        var periodStartTime = representation.adaptation.period.start;\n        return mpdRelativeTime - periodStartTime;\n    }\n\n    function calcMpdRelativeTimeFromPeriodRelativeTime(representation, periodRelativeTime) {\n        var periodStartTime = representation.adaptation.period.start;\n\n        return periodRelativeTime + periodStartTime;\n    }\n\n    function onTimeSyncComplete(e) {\n        if (e.error) return;\n        clientServerTimeShift = e.offset / 1000;\n        isClientServerTimeSyncCompleted = true;\n    }\n\n    function calcMSETimeOffset(representation) {\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\n        var presentationOffset = representation.presentationTimeOffset;\n        var periodStart = representation.adaptation.period.start;\n        return (periodStart - presentationOffset);\n    }\n\n    function reset() {\n        eventBus.off(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\n        clientServerTimeShift = 0;\n        isClientServerTimeSyncCompleted = false;\n        expectedLiveEdge = NaN;\n    }\n\n    instance = {\n        initialize: initialize,\n        isTimeSyncCompleted: isTimeSyncCompleted,\n        setTimeSyncCompleted: setTimeSyncCompleted,\n        getClientTimeOffset: getClientTimeOffset,\n        getExpectedLiveEdge: getExpectedLiveEdge,\n        setExpectedLiveEdge: setExpectedLiveEdge,\n        calcAvailabilityStartTimeFromPresentationTime: calcAvailabilityStartTimeFromPresentationTime,\n        calcAvailabilityEndTimeFromPresentationTime: calcAvailabilityEndTimeFromPresentationTime,\n        calcPresentationTimeFromWallTime: calcPresentationTimeFromWallTime,\n        calcPresentationTimeFromMediaTime: calcPresentationTimeFromMediaTime,\n        calcPeriodRelativeTimeFromMpdRelativeTime: calcPeriodRelativeTimeFromMpdRelativeTime,\n        calcMpdRelativeTimeFromPeriodRelativeTime: calcMpdRelativeTimeFromPeriodRelativeTime,\n        calcMediaTimeFromPresentationTime: calcMediaTimeFromPresentationTime,\n        calcSegmentAvailabilityRange: calcSegmentAvailabilityRange,\n        calcWallTimeForSegment: calcWallTimeForSegment,\n        calcMSETimeOffset: calcMSETimeOffset,\n        reset: reset\n    };\n\n    return instance;\n}\n\nTimelineConverter.__dashjs_factory_name = 'TimelineConverter';\nexport default FactoryMaker.getSingletonFactory(TimelineConverter);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {getTimeBasedSegment, decideSegmentListRangeForTimeline} from './SegmentsUtils';\n\nfunction TimelineSegmentsGetter(config, isDynamic) {\n\n    let timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromTimeline(representation, requestedTime, index, availabilityUpperLimit) {\n        var base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        var timeline = base.SegmentTimeline;\n        var list = base.SegmentURL_asArray;\n        var isAvailableSegmentNumberCalculated = representation.availableSegmentsNumber > 0;\n\n        var maxSegmentsAhead = 10;\n        var time = 0;\n        var scaledTime = 0;\n        var availabilityIdx = -1;\n        var segments = [];\n        var isStartSegmentForRequestedTimeFound = false;\n\n        var fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            repeatEndTime,\n            nextFrag,\n            calculatedRange,\n            hasEnoughSegments,\n            requiredMediaTime,\n            startIdx,\n            endIdx,\n            fTimescale;\n\n        var createSegment = function (s, i) {\n            var media = base.media;\n            var mediaRange = s.mediaRange;\n\n            if (list) {\n                media = list[i].media || '';\n                mediaRange = list[i].mediaRange;\n            }\n\n            return getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                time,\n                s.d,\n                fTimescale,\n                media,\n                mediaRange,\n                availabilityIdx);\n        };\n\n        fTimescale = representation.timescale;\n\n        fragments = timeline.S_asArray;\n\n        calculatedRange = decideSegmentListRangeForTimeline(timelineConverter, isDynamic,  requestedTime, index, availabilityUpperLimit);\n\n        // if calculatedRange exists we should generate segments that belong to this range.\n        // Otherwise generate maxSegmentsAhead segments ahead of the requested time\n        if (calculatedRange) {\n            startIdx = calculatedRange.start;\n            endIdx = calculatedRange.end;\n        } else {\n            requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime || 0, representation);\n        }\n\n        for (i = 0, len = fragments.length; i < len; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            //For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n                scaledTime = time / fTimescale;\n            }\n\n            //This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                nextFrag = fragments[i + 1];\n\n                if (nextFrag && nextFrag.hasOwnProperty('t')) {\n                    repeatEndTime = nextFrag.t / fTimescale;\n                } else {\n                    var availabilityEnd = representation.segmentAvailabilityRange ? representation.segmentAvailabilityRange.end : (timelineConverter.calcSegmentAvailabilityRange(representation, isDynamic).end);\n                    repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\n                    representation.segmentDuration = frag.d / fTimescale;\n                }\n\n                repeat = Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1;\n            }\n\n            // if we have enough segments in the list, but we have not calculated the total number of the segments yet we\n            // should continue the loop and calc the number. Once it is calculated, we can break the loop.\n            if (hasEnoughSegments) {\n                if (isAvailableSegmentNumberCalculated) break;\n                availabilityIdx += repeat + 1;\n                continue;\n            }\n\n            for (j = 0; j <= repeat; j++) {\n                availabilityIdx++;\n\n                if (calculatedRange) {\n                    if (availabilityIdx > endIdx) {\n                        hasEnoughSegments = true;\n                        if (isAvailableSegmentNumberCalculated) break;\n                        continue;\n                    }\n\n                    if (availabilityIdx >= startIdx) {\n                        segments.push(createSegment(frag, availabilityIdx));\n                    }\n                } else {\n                    if (segments.length > maxSegmentsAhead) {\n                        hasEnoughSegments = true;\n                        if (isAvailableSegmentNumberCalculated) break;\n                        continue;\n                    }\n\n                    // In some cases when requiredMediaTime = actual end time of the last segment\n                    // it is possible that this time a bit exceeds the declared end time of the last segment.\n                    // in this case we still need to include the last segment in the segment list. to do this we\n                    // use a correction factor = 1.5. This number is used because the largest possible deviation is\n                    // is 50% of segment duration.\n                    if (isStartSegmentForRequestedTimeFound) {\n                        segments.push(createSegment(frag, availabilityIdx));\n                    }  else if (scaledTime >= (requiredMediaTime - (frag.d / fTimescale) * 1.5)) {\n                        isStartSegmentForRequestedTimeFound = true;\n                        segments.push(createSegment(frag, availabilityIdx));\n                    }\n                }\n\n                time += frag.d;\n                scaledTime = time / fTimescale;\n            }\n        }\n\n        if (!isAvailableSegmentNumberCalculated) {\n            representation.availableSegmentsNumber = availabilityIdx + 1;\n        }\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromTimeline\n    };\n\n    return instance;\n}\n\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass AdaptationSet {\n    constructor() {\n        this.period = null;\n        this.index = -1;\n        this.type = null;\n    }\n}\n\nexport default AdaptationSet;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nconst DEFAULT_DVB_PRIORITY = 1;\nconst DEFAULT_DVB_WEIGHT = 1;\n\nclass BaseURL {\n    constructor(url, serviceLocation, priority, weight) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || url || '';\n\n        // DVB extensions\n        this.dvb_priority = priority || DEFAULT_DVB_PRIORITY;\n        this.dvb_weight = weight || DEFAULT_DVB_WEIGHT;\n\n        /* currently unused:\n         * byteRange,\n         * availabilityTimeOffset,\n         * availabilityTimeComplete\n         */\n    }\n}\n\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\n\nexport default BaseURL;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Event {\n    constructor() {\n        this.duration = NaN;\n        this.presentationTime = NaN;\n        this.id = NaN;\n        this.messageData = '';\n        this.eventStream = null;\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\n    }\n}\n\nexport default Event;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventStream {\n    constructor() {\n        this.adaptionSet = null;\n        this.representation = null;\n        this.period = null;\n        this.timescale = 1;\n        this.value = '';\n        this.schemeIdUri = '';\n    }\n}\n\nexport default EventStream;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Mpd {\n    constructor() {\n        this.manifest = null;\n        this.suggestedPresentationDelay = 0;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\n        this.minimumUpdatePeriod = NaN;\n        this.mediaPresentationDuration = NaN;\n    }\n}\n\nexport default Mpd;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Period {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.duration = NaN;\n        this.start = NaN;\n        this.mpd = null;\n    }\n}\n\nPeriod.DEFAULT_ID = 'defaultId';\n\nexport default Period;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Representation {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.adaptation = null;\n        this.segmentInfoType = null;\n        this.initialization = null;\n        this.segmentDuration = NaN;\n        this.timescale = 1;\n        this.startNumber = 1;\n        this.indexRange = null;\n        this.range = null;\n        this.presentationTimeOffset = 0;\n        // Set the source buffer timeOffset to this\n        this.MSETimeOffset = NaN;\n        this.segmentAvailabilityRange = null;\n        this.availableSegmentsNumber = 0;\n        this.bandwidth = NaN;\n        this.maxPlayoutRate = NaN;\n    }\n}\n\nexport default Representation;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Segment {\n    constructor() {\n        this.indexRange = null;\n        this.index = null;\n        this.mediaRange = null;\n        this.media = null;\n        this.duration = NaN;\n        // this is the time that should be inserted into the media url\n        this.replacementTime = null;\n        // this is the number that should be inserted into the media url\n        this.replacementNumber = NaN;\n        // This is supposed to match the time encoded in the media Segment\n        this.mediaStartTime = NaN;\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\n        // time that will match the seekTarget and video.currentTime\n        this.presentationStartTime = NaN;\n        // Do not schedule this segment until\n        this.availabilityStartTime = NaN;\n        // Ignore and  discard this segment after\n        this.availabilityEndTime = NaN;\n        // The index of the segment inside the availability window\n        this.availabilityIdx = NaN;\n        // For dynamic mpd's, this is the wall clock time that the video\n        // element currentTime should be presentationStartTime\n        this.wallStartTime = NaN;\n        this.representation = null;\n    }\n}\n\nexport default Segment;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass UTCTiming {\n    constructor() {\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default UTCTiming;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XHRLoader from './XHRLoader';\nimport HeadRequest from './vo/HeadRequest';\nimport Error from './vo/Error';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst FRAGMENT_LOADER_ERROR_LOADING_FAILURE = 1;\nconst FRAGMENT_LOADER_ERROR_NULL_REQUEST = 2;\nconst FRAGMENT_LOADER_MESSAGE_NULL_REQUEST = 'request is null';\n\nfunction FragmentLoader(config) {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        xhrLoader;\n\n    function setup() {\n        xhrLoader = XHRLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function checkForExistence(request) {\n        const report = function (success) {\n            eventBus.trigger(\n                Events.CHECK_FOR_EXISTENCE_COMPLETED, {\n                    request: request,\n                    exists: success\n                }\n            );\n        };\n\n        if (request) {\n            let headRequest = new HeadRequest(request.url);\n\n            xhrLoader.load({\n                request: headRequest,\n                success: function () {\n                    report(true);\n                },\n                error: function () {\n                    report(false);\n                }\n            });\n        } else {\n            report(false);\n        }\n    }\n\n    function load(request) {\n        const report = function (data, error) {\n            eventBus.trigger(Events.LOADING_COMPLETED, {\n                request: request,\n                response: data || null,\n                error: error || null,\n                sender: instance\n            });\n        };\n\n        if (request) {\n            xhrLoader.load({\n                request: request,\n                progress: function () {\n                    eventBus.trigger(Events.LOADING_PROGRESS, {\n                        request: request\n                    });\n                },\n                success: function (data) {\n                    report(data);\n                },\n                error: function (xhr, statusText, errorText) {\n                    report(\n                        undefined,\n                        new Error(\n                            FRAGMENT_LOADER_ERROR_LOADING_FAILURE,\n                            errorText,\n                            statusText\n                        )\n                    );\n                }\n            });\n        } else {\n            report(\n                undefined,\n                new Error(\n                    FRAGMENT_LOADER_ERROR_NULL_REQUEST,\n                    FRAGMENT_LOADER_MESSAGE_NULL_REQUEST\n                )\n            );\n        }\n    }\n\n    function abort() {\n        if (xhrLoader) {\n            xhrLoader.abort();\n        }\n    }\n\n    function reset() {\n        if (xhrLoader) {\n            xhrLoader.abort();\n            xhrLoader = null;\n        }\n    }\n\n    instance = {\n        checkForExistence: checkForExistence,\n        load: load,\n        abort: abort,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\n\nconst factory = FactoryMaker.getClassFactory(FragmentLoader);\nfactory.FRAGMENT_LOADER_ERROR_LOADING_FAILURE = FRAGMENT_LOADER_ERROR_LOADING_FAILURE;\nfactory.FRAGMENT_LOADER_ERROR_NULL_REQUEST = FRAGMENT_LOADER_ERROR_NULL_REQUEST;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkController from './controllers/XlinkController';\nimport XHRLoader from './XHRLoader';\nimport URLUtils from './utils/URLUtils';\nimport TextRequest from './vo/TextRequest';\nimport Error from './vo/Error';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst MANIFEST_LOADER_ERROR_PARSING_FAILURE = 1;\nconst MANIFEST_LOADER_ERROR_LOADING_FAILURE = 2;\nconst MANIFEST_LOADER_MESSAGE_PARSING_FAILURE = 'parsing failed';\n\nfunction ManifestLoader(config) {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n    const parser = config.parser;\n\n    let instance,\n        xhrLoader,\n        xlinkController;\n\n    function setup() {\n        eventBus.on(Events.XLINK_READY, onXlinkReady, instance);\n\n        xhrLoader = XHRLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            requestModifier: config.requestModifier\n        });\n\n        xlinkController = XlinkController(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function onXlinkReady(event) {\n        eventBus.trigger(\n            Events.INTERNAL_MANIFEST_LOADED, {\n                manifest: event.manifest\n            }\n        );\n    }\n\n    function load (url) {\n        const request = new TextRequest(url, HTTPRequest.MPD_TYPE);\n\n        xhrLoader.load({\n            request: request,\n            success: function (data, textStatus, xhr) {\n                var actualUrl;\n                var baseUri;\n\n                // Handle redirects for the MPD - as per RFC3986 Section 5.1.3\n                // also handily resolves relative MPD URLs to absolute\n                if (xhr.responseURL && xhr.responseURL !== url) {\n                    baseUri = urlUtils.parseBaseUrl(xhr.responseURL);\n                    actualUrl = xhr.responseURL;\n                } else {\n                    // usually this case will be caught and resolved by\n                    // xhr.responseURL above but it is not available for IE11\n                    // baseUri must be absolute for BaseURL resolution later\n                    if (urlUtils.isRelative(url)) {\n                        url = urlUtils.resolve(url, window.location.href);\n                    }\n\n                    baseUri = urlUtils.parseBaseUrl(url);\n                }\n\n                const manifest = parser.parse(data, xlinkController);\n\n                if (manifest) {\n                    manifest.url = actualUrl || url;\n\n                    // URL from which the MPD was originally retrieved (MPD updates will not change this value)\n                    if (!manifest.originalUrl) {\n                        manifest.originalUrl = manifest.url;\n                    }\n\n                    manifest.baseUri = baseUri;\n                    manifest.loadedTime = new Date();\n                    xlinkController.resolveManifestOnLoad(manifest);\n                } else {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null,\n                            error: new Error(\n                                MANIFEST_LOADER_ERROR_PARSING_FAILURE,\n                                MANIFEST_LOADER_MESSAGE_PARSING_FAILURE\n                            )\n                        }\n                    );\n                }\n            },\n            error: function (xhr, statusText, errorText) {\n                eventBus.trigger(\n                    Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new Error(\n                            MANIFEST_LOADER_ERROR_LOADING_FAILURE,\n                            `Failed loading manifest: ${url}, ${errorText}`\n                        )\n                    }\n                );\n            }\n        });\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_READY, onXlinkReady, instance);\n\n        if (xlinkController) {\n            xlinkController.reset();\n            xlinkController = null;\n        }\n\n        if (xhrLoader) {\n            xhrLoader.abort();\n            xhrLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nManifestLoader.__dashjs_factory_name = 'ManifestLoader';\n\nconst factory = FactoryMaker.getClassFactory(ManifestLoader);\nfactory.MANIFEST_LOADER_ERROR_PARSING_FAILURE = MANIFEST_LOADER_ERROR_PARSING_FAILURE;\nfactory.MANIFEST_LOADER_ERROR_LOADING_FAILURE = MANIFEST_LOADER_ERROR_LOADING_FAILURE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport Debug from '../core/Debug';\n\nfunction ManifestUpdater() {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        refreshDelay,\n        refreshTimer,\n        isPaused,\n        isUpdating,\n        manifestLoader,\n        manifestModel,\n        dashManifestModel,\n        mediaPlayerModel;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function initialize(loader) {\n        manifestLoader = loader;\n        refreshDelay = NaN;\n        refreshTimer = null;\n        isUpdating = false;\n        isPaused = true;\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n    }\n\n    function setManifest(manifest) {\n        update(manifest);\n    }\n\n    function getManifestLoader() {\n        return manifestLoader;\n    }\n\n    function reset() {\n\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n        stopManifestRefreshTimer();\n        isPaused = true;\n        isUpdating = false;\n        refreshDelay = NaN;\n        mediaPlayerModel = null;\n    }\n\n    function stopManifestRefreshTimer() {\n        if (refreshTimer !== null) {\n            clearInterval(refreshTimer);\n            refreshTimer = null;\n        }\n    }\n\n    function startManifestRefreshTimer() {\n        stopManifestRefreshTimer();\n        if (!isNaN(refreshDelay)) {\n            log('Refresh manifest in ' + refreshDelay + ' seconds.');\n            refreshTimer = setTimeout(onRefreshTimer, refreshDelay * 1000);\n        }\n    }\n\n    function refreshManifest() {\n        isUpdating = true;\n        const manifest = manifestModel.getValue();\n        let url = manifest.url;\n        const location = dashManifestModel.getLocation(manifest);\n        if (location) {\n            url = location;\n        }\n        manifestLoader.load(url);\n    }\n\n    function update(manifest) {\n\n        manifestModel.setValue(manifest);\n\n        const date = new Date();\n        const latencyOfLastUpdate = (date.getTime() - manifest.loadedTime.getTime()) / 1000;\n        refreshDelay = dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n\n        eventBus.trigger(Events.MANIFEST_UPDATED, {manifest: manifest});\n        log('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\n\n        if (!isPaused) {\n            startManifestRefreshTimer();\n        }\n    }\n\n    function onRefreshTimer() {\n        if (isPaused && !mediaPlayerModel.getScheduleWhilePaused() || isUpdating) return;\n        refreshManifest();\n    }\n\n    function onManifestLoaded(e) {\n        if (!e.error) {\n            update(e.manifest);\n        }\n    }\n\n    function onPlaybackStarted (/*e*/) {\n        isPaused = false;\n        startManifestRefreshTimer();\n    }\n\n    function onPlaybackPaused(/*e*/) {\n        isPaused = true;\n        stopManifestRefreshTimer();\n    }\n\n    function onStreamsComposed(/*e*/) {\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\n        isUpdating = false;\n    }\n\n    instance = {\n        initialize: initialize,\n        setManifest: setManifest,\n        getManifestLoader: getManifestLoader,\n        refreshManifest: refreshManifest,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    return instance;\n}\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\nexport default FactoryMaker.getSingletonFactory(ManifestUpdater);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport UTCTiming from '../dash/vo/UTCTiming';\nimport PlaybackController from './controllers/PlaybackController';\nimport StreamController from './controllers/StreamController';\nimport MediaController from './controllers/MediaController';\nimport ManifestLoader from './ManifestLoader';\nimport LiveEdgeFinder from './utils/LiveEdgeFinder';\nimport ErrorHandler from './utils/ErrorHandler';\nimport Capabilities from './utils/Capabilities';\nimport TextTracks from './TextTracks';\nimport SourceBufferController from './controllers/SourceBufferController';\nimport RequestModifier from './utils/RequestModifier';\nimport TextSourceBuffer from './TextSourceBuffer';\nimport URIQueryAndFragmentModel from './models/URIQueryAndFragmentModel';\nimport ManifestModel from './models/ManifestModel';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport MetricsModel from './models/MetricsModel';\nimport AbrController from './controllers/AbrController';\nimport TimeSyncController from './controllers/TimeSyncController';\nimport ABRRulesCollection from './rules/abr/ABRRulesCollection';\nimport VideoModel from './models/VideoModel';\nimport RulesController from './rules/RulesController';\nimport MediaSourceController from './controllers/MediaSourceController';\nimport BaseURLController from './controllers/BaseURLController';\nimport Debug from './../core/Debug';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport MediaPlayerEvents from './MediaPlayerEvents';\nimport FactoryMaker from '../core/FactoryMaker';\nimport {getVersionString} from './../core/Version';\n\n//Dash\nimport DashAdapter from '../dash/DashAdapter';\nimport DashParser from '../dash/parser/DashParser';\nimport DashManifestModel from '../dash/models/DashManifestModel';\nimport DashMetrics from '../dash/DashMetrics';\nimport TimelineConverter from '../dash/utils/TimelineConverter';\n\n/**\n * @module MediaPlayer\n * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.\n * It will allow you access to all the important dash.js properties/methods via the public API and all the\n * events to build a robust DASH media player.\n */\nfunction MediaPlayer() {\n\n    const PLAYBACK_NOT_INITIALIZED_ERROR = 'You must first call play() to init playback before calling this method';\n    const ELEMENT_NOT_ATTACHED_ERROR = 'You must first call attachView() to set the video element before calling this method';\n    const SOURCE_NOT_ATTACHED_ERROR = 'You must first call attachSource() with a valid source before calling this method';\n    const MEDIA_PLAYER_NOT_INITIALIZED_ERROR = 'MediaPlayer not initialized!';\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let debug = Debug(context).getInstance();\n    let log = debug.log;\n\n    let instance,\n        source,\n        protectionData,\n        mediaPlayerInitialized,\n        playbackInitialized,\n        autoPlay,\n        abrController,\n        mediaController,\n        protectionController,\n        metricsReportingController,\n        adapter,\n        metricsModel,\n        mediaPlayerModel,\n        errHandler,\n        capabilities,\n        streamController,\n        rulesController,\n        playbackController,\n        dashMetrics,\n        dashManifestModel,\n        videoModel,\n        textSourceBuffer;\n\n    function setup() {\n        mediaPlayerInitialized = false;\n        playbackInitialized = false;\n        autoPlay = true;\n        protectionController = null;\n        protectionData = null;\n        adapter = null;\n        Events.extend(MediaPlayerEvents);\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    /**\n     * Upon creating the MediaPlayer you must call initialize before you call anything else.\n     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}\n     * with all your extensions prior to calling initialize.\n     *\n     * ALL arguments are optional and there are individual methods to set each argument later on.\n     * The args in this method are just for convenience and should only be used for a simple player setup.\n     *\n     * @param {HTML5MediaElement=} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}\n     * @param {string=} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}\n     * @param {boolean=} AutoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function initialize(view, source, AutoPlay) {\n\n        capabilities = Capabilities(context).getInstance();\n        errHandler = ErrorHandler(context).getInstance();\n\n        if (!capabilities.supportsMediaSource()) {\n            errHandler.capabilityError('mediasource');\n            return;\n        }\n\n        if (mediaPlayerInitialized) return;\n        mediaPlayerInitialized = true;\n\n        abrController = AbrController(context).getInstance();\n\n        playbackController = PlaybackController(context).getInstance();\n        mediaController = MediaController(context).getInstance();\n        mediaController.initialize();\n        dashManifestModel = DashManifestModel(context).getInstance();\n        dashMetrics = DashMetrics(context).getInstance();\n        metricsModel = MetricsModel(context).getInstance();\n        metricsModel.setConfig({adapter: createAdaptor()});\n\n        restoreDefaultUTCTimingSources();\n        setAutoPlay(AutoPlay !== undefined ? AutoPlay : true);\n\n        if (view) {\n            attachView(view);\n        }\n\n        if (source) {\n            attachSource(source);\n        }\n\n        log('[dash.js ' + getVersion() + '] ' + 'MediaPlayer has been initialized');\n    }\n\n    /**\n     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.\n     *\n     * @returns {boolean} The current ready state of the MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isReady() {\n        return (!!videoModel && !!source);\n    }\n\n    /**\n     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.\n     * This method will call play on the native Video Element.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function play() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (!autoPlay || (isPaused() && playbackInitialized)) {\n            playbackController.play();\n        }\n    }\n\n    /**\n     * This method will call pause on the native Video Element.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function pause() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        playbackController.pause();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the Video Element is paused.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isPaused() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isPaused();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isSeeking() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isSeeking();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of dynamic.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isDynamic() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getIsDynamic();\n    }\n\n    /**\n     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMute(value) {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        getVideoElement().muted = value;\n    }\n\n    /**\n     * A Boolean that determines whether audio is muted.\n     * @returns {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isMuted() {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return getVideoElement().muted;\n    }\n\n    /**\n     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setVolume(value) {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        getVideoElement().volume = value;\n    }\n\n    /**\n     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVolume() {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return getVideoElement().volume;\n    }\n\n    /**\n     * The length of the buffer for a given media type, in seconds. Valid media\n     * types are \"video\", \"audio\" and \"fragmentedText\". If no type is passed\n     * in, then the minimum of video, audio and fragmentedText buffer length is\n     * returned. NaN is returned if an invalid type is requested, the\n     * presentation does not contain that type, or if no arguments are passed\n     * and the presentation does not include any adaption sets of valid media\n     * type.\n     *\n     * @param {string} type - the media type of the buffer\n     * @returns {number} The length of the buffer for the given media type, in\n     *  seconds, or NaN\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferLength(type) {\n        const types = ['video', 'audio', 'fragmentedText'];\n        if (!type) {\n            return types.map(\n                t => getTracksFor(t).length > 0 ? getDashMetrics().getCurrentBufferLevel(getMetricsFor(t)) : Number.MAX_VALUE\n            ).reduce(\n                (p, c) => Math.min(p, c)\n            );\n        } else {\n            if (types.indexOf(type) !== -1) {\n                const buffer = getDashMetrics().getCurrentBufferLevel(getMetricsFor(type));\n                return buffer ? buffer : NaN;\n            } else {\n                log('Warning  - getBufferLength requested for invalid type');\n                return NaN;\n            }\n        }\n    }\n\n    /**\n     * The timeShiftBufferLength (DVR Window), in seconds.\n     *\n     * @returns {number} The window of allowable play time behind the live point of a live stream.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRWindowSize() {\n        var metric = getDVRInfoMetric();\n        if (!metric) {\n            return 0;\n        }\n        return metric.manifestInfo.DVRWindowSize;\n    }\n\n    /**\n     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).\n     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method\n     * which will calculate this value for you and set the video element's currentTime property all in one simple call.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).\n     * @see {@link module:MediaPlayer#seek seek()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRSeekOffset(value) {\n        var metric = getDVRInfoMetric();\n\n        if (!metric) {\n            return 0;\n        }\n\n        var val = metric.range.start + value;\n\n        if (val > metric.range.end) {\n            val = metric.range.end;\n        }\n\n        return val;\n    }\n\n    /**\n     * Sets the currentTime property of the attached video element.  If it is a live stream with a\n     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\n     * @see {@link module:MediaPlayer#getDVRSeekOffset getDVRSeekOffset()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function seek(value) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var s = playbackController.getIsDynamic() ? getDVRSeekOffset(value) : value;\n        playbackController.seek(s);\n    }\n\n\n    /**\n     * Current time of the playhead, in seconds.\n     *\n     * If called with no arguments then the returned time value is time elapsed since the start point of the first stream, or if it is a live stream, then the time will be based on the return value of the {@link module:MediaPlayer#duration duration()} method.\n     * However if a stream ID is supplied then time is relative to the start of that stream, or is null if there is no such stream id in the manifest.\n     *\n     * @param {string} streamId - The ID of a stream that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first stream.\n     * @returns {number} The current playhead time of the media, or null.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function time(streamId) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var t = getVideoElement().currentTime;\n\n        if (streamId !== undefined) {\n            t = streamController.getTimeRelativeToStreamId(t, streamId);\n\n        } else if (playbackController.getIsDynamic()) {\n            var metric = getDVRInfoMetric();\n            t = (metric === null) ? 0 : duration() - (metric.range.end - metric.time);\n        }\n\n        return t;\n    }\n\n    /**\n     * Duration of the media's playback, in seconds.\n     *\n     * @returns {number} The current duration of the media.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function duration() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var d = getVideoElement().duration;\n\n        if (playbackController.getIsDynamic()) {\n\n            var metric = getDVRInfoMetric();\n            var range;\n\n            if (!metric) {\n                return 0;\n            }\n\n            range = metric.range.end - metric.range.start;\n            d = range < metric.manifestInfo.DVRWindowSize ? range : metric.manifestInfo.DVRWindowSize;\n        }\n        return d;\n    }\n\n    /**\n     * Use this method to get the current playhead time as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams. If called before play() has begun, it will return a value of NaN.\n     *\n     * @returns {number} The current playhead time as UTC timestamp.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function timeAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (time() < 0) {\n            return NaN;\n        }\n        return getAsUTC(time());\n    }\n\n    /**\n     * Use this method to get the current duration as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams.\n     *\n     * @returns {number} The current duration as UTC timestamp.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function durationAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return getAsUTC(duration());\n    }\n\n    /**\n     * A utility methods which converts UTC timestamp value into a valid time and date string.\n     *\n     * @param {number} time - UTC timestamp to be converted into date and time.\n     * @param {string} locales - a region identifier (i.e. en_US).\n     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.\n     * @param {boolean} withDate - default is false. Set to true to append current date to UTC time format.\n     * @returns {string} A formatted time and date string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function formatUTC(time, locales, hour12, withDate = false) {\n        const dt = new Date(time * 1000);\n        const d = dt.toLocaleDateString(locales);\n        const t = dt.toLocaleTimeString(locales, {hour12: hour12});\n        return withDate ? t + ' ' + d : t;\n    }\n\n    /**\n     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).\n     *\n     * @param {number} value - A number in seconds to be converted into a formatted time code.\n     * @returns {string} A formatted time code string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function convertToTimeCode(value) {\n        value = Math.max(value, 0);\n\n        var h = Math.floor(value / 3600);\n        var m = Math.floor((value % 3600) / 60);\n        var s = Math.floor((value % 3600) % 60);\n        return (h === 0 ? '' : (h < 10 ? '0' + h.toString() + ':' : h.toString() + ':')) + (m < 10 ? '0' + m.toString() : m.toString()) + ':' + (s < 10 ? '0' + s.toString() : s.toString());\n    }\n\n    /**\n     * This method should be used to extend or replace internal dash.js objects.\n     * There are two ways to extend dash.js (determined by the override argument):\n     * <ol>\n     * <li>If you set override to true any public method or property in your custom object will\n     * override the dash.js parent object's property(ies) and will be used instead but the\n     * dash.js parent module will still be created.</li>\n     *\n     * <li>If you set override to false your object will completely replace the dash.js object.\n     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>\n     * </ol>\n     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>\n     * <ul>\n     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>\n     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>\n     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>\n     * </ul>\n     * <b>You must call extend before you call initialize</b>\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @param {string} parentNameString - name of parent module\n     * @param {Object} childInstance - overriding object\n     * @param {boolean} override - replace only some methods (true) or the whole object (false)\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function extend(parentNameString, childInstance, override) {\n        FactoryMaker.extend(parentNameString, childInstance, override, context);\n    }\n\n    /**\n     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function on(type, listener, scope) {\n        eventBus.on(type, listener, scope);\n    }\n\n    /**\n     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function off(type, listener, scope) {\n        eventBus.off(type, listener, scope);\n    }\n\n    /**\n     * Current version of Dash.js\n     * @returns {string} the current dash.js version string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVersion() {\n        return getVersionString();\n    }\n\n    /**\n     * Use this method to access the dash.js logging class.\n     *\n     * @returns {Debug}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDebug() {\n        return debug;\n    }\n\n    /**\n     * @deprecated Since version 2.1.0.  <b>Instead use:</b>\n     * <ul>\n     * <li>{@link module:MediaPlayer#getVideoElement getVideoElement()}</li>\n     * <li>{@link module:MediaPlayer#getSource getSource()}</li>\n     * <li>{@link module:MediaPlayer#getVideoContainer getVideoContainer()}</li>\n     * <li>{@link module:MediaPlayer#getTTMLRenderingDiv getTTMLRenderingDiv()}</li>\n     * </ul>\n     *\n     * @returns {VideoModel}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVideoModel() {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return videoModel;\n    }\n\n    /**\n     * <p>Changing this value will lower or increase live stream latency.  The detected segment duration will be multiplied by this value\n     * to define a time in seconds to delay a live stream from the live edge.</p>\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\n     *\n     * @param {number} value - Represents how many segment durations to delay the live stream.\n     * @default 4\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\n     * @instance\n     */\n    function setLiveDelayFragmentCount(value) {\n        mediaPlayerModel.setLiveDelayFragmentCount(value);\n    }\n\n    /**\n     * <p>Equivalent in seconds of setLiveDelayFragmentCount</p>\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\n     * <p>This value should be less than the manifest duration by a couple of segment durations to avoid playback issues</p>\n     * <p>If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info</p>\n     *\n     * @param {number} value - Represents how many seconds to delay the live stream.\n     * @default undefined\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\n     * @instance\n     */\n    function setLiveDelay(value) {\n        mediaPlayerModel.setLiveDelay(value);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setLiveDelay setLiveDelay()}\n     * @instance\n     * @returns {number|undefined} Current live stream delay in seconds when previously set, or `undefined`\n     */\n    function getLiveDelay() {\n        return mediaPlayerModel.getLiveDelay();\n    }\n\n    /**\n     * <p>Set to true if you would like to override the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.</p>\n     * @param {boolean} value\n     * @default false\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setLiveDelayFragmentCount setLiveDelayFragmentCount()}\n     * @instance\n     */\n    function useSuggestedPresentationDelay(value) {\n        mediaPlayerModel.setUseSuggestedPresentationDelay(value);\n    }\n\n    /**\n     * Set to false if you would like to disable the last known bit rate from being stored during playback and used\n     * to set the initial bit rate for subsequent playback within the expiration window.\n     *\n     * The default expiration is one hour, defined in milliseconds. If expired, the default initial bit rate (closest to 1000 kbps) will be used\n     * for that session and a new bit rate will be stored during that session.\n     *\n     * @param {boolean} enable - Will toggle if feature is enabled. True to enable, False to disable.\n     * @param {number=} ttl - (Optional) A value defined in milliseconds representing how long to cache the bit rate for. Time to live.\n     * @default enable = True, ttl = 360000 (1 hour)\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function enableLastBitrateCaching(enable, ttl) {\n        mediaPlayerModel.setLastBitrateCachingInfo(enable, ttl);\n    }\n\n    /**\n     * Set to false if you would like to disable the last known lang for audio (or camera angle for video) from being stored during playback and used\n     * to set the initial settings for subsequent playback within the expiration window.\n     *\n     * The default expiration is one hour, defined in milliseconds. If expired, the default settings will be used\n     * for that session and a new settings will be stored during that session.\n     *\n     * @param {boolean} enable - Will toggle if feature is enabled. True to enable, False to disable.\n     * @param {number=} [ttl] - (Optional) A value defined in milliseconds representing how long to cache the settings for. Time to live.\n     * @default enable = True, ttl = 360000 (1 hour)\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function enableLastMediaSettingsCaching(enable, ttl) {\n        mediaPlayerModel.setLastMediaSettingsCachingInfo(enable, ttl);\n    }\n\n    /**\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum bitrate allowed.\n     * If you set this property to a value lower than that currently playing, the switching engine will switch down to\n     * satisfy this requirement. If you set it to a value that is lower than the lowest bitrate, it will still play\n     * that lowest bitrate.\n     *\n     * You can set or remove this bitrate cap at anytime before or during playback.  To clear this setting you must use the API\n     * and set the value param to NaN.\n     *\n     * This feature is typically used to reserve higher bitrates for playback only when the player is in large or full-screen format.\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {number} value - Value in kbps representing the maximum bitrate allowed.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMaxAllowedBitrateFor(type, value) {\n        abrController.setMaxAllowedBitrateFor(type, value);\n    }\n\n    /**\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setMaxAllowedBitrateFor setMaxAllowedBitrateFor()}\n     * @instance\n     */\n    function getMaxAllowedBitrateFor(type) {\n        return abrController.getMaxAllowedBitrateFor(type);\n    }\n\n    /**\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed,\n     * as a proportion of the size of the representation set.\n     *\n     * You can set or remove this cap at anytime before or during playback. To clear this setting you must use the API\n     * and set the value param to NaN.\n     *\n     * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation,\n     * i.e. the lowest value from executing these rules is used.\n     *\n     * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {number} value - number between 0 and 1, where 1 is allow all representations, and 0 is allow only the lowest.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMaxAllowedRepresentationRatioFor(type, value) {\n        abrController.setMaxAllowedRepresentationRatioFor(type, value);\n    }\n\n    /**\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @returns {number} The current representation ratio cap.\n     * @memberof module:MediaPlayer\n     * @see {@link MediaPlayer#setMaxAllowedRepresentationRatioFor setMaxAllowedRepresentationRatioFor()}\n     * @instance\n     */\n    function getMaxAllowedRepresentationRatioFor(type) {\n        return abrController.getMaxAllowedRepresentationRatioFor(type);\n    }\n\n    /**\n     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>\n     *\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @instance\n     *\n     */\n    function setAutoPlay(value) {\n        autoPlay = value;\n    }\n\n    /**\n     * @returns {boolean} The current autoPlay state.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * Set to true if you would like dash.js to keep downloading fragments in the background\n     * when the video element is paused.\n     *\n     * @default true\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setScheduleWhilePaused(value) {\n        mediaPlayerModel.setScheduleWhilePaused(value);\n    }\n\n    /**\n     * Returns a boolean of the current state of ScheduleWhilePaused.\n     * @returns {boolean}\n     * @see {@link module:MediaPlayer#setScheduleWhilePaused setScheduleWhilePaused()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getScheduleWhilePaused() {\n        return mediaPlayerModel.getScheduleWhilePaused();\n    }\n\n\n    /**\n     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics\n     * stored in dash.js\n     *\n     * @see {@link module:DashMetrics}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashMetrics() {\n        return dashMetrics;\n    }\n\n    /**\n     *\n     * @param {string} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getMetricsFor(type) {\n        return metricsModel.getReadOnlyMetricsFor(type);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getQualityFor(type) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return abrController.getQualityFor(type, streamController.getActiveStreamInfo());\n    }\n\n    /**\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically selecting it..\n     *\n     * @param {string} type\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setQualityFor(type, value) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), value);\n    }\n\n    /**\n     * Update the video element size variables\n     * Should be called on window resize (or any other time player is resized). Fullscreen does trigger a window resize event.\n     *\n     * Once windowResizeEventCalled = true, abrController.checkPortalSize() will use element size variables rather than querying clientWidth every time.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function updatePortalSize() {\n        abrController.setElementSize();\n        abrController.setWindowResizeEventCalled(true);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getLimitBitrateByPortal() {\n        return abrController.getLimitBitrateByPortal();\n    }\n\n    /**\n     * Sets whether to limit the representation used based on the size of the playback area\n     *\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setLimitBitrateByPortal(value) {\n        abrController.setLimitBitrateByPortal(value);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getUsePixelRatioInLimitBitrateByPortal() {\n        return abrController.getUsePixelRatioInLimitBitrateByPortal();\n    }\n\n    /**\n     * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.\n     * Useful on, for example, retina displays.\n     *\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     * @default {boolean} false\n     */\n    function setUsePixelRatioInLimitBitrateByPortal(value) {\n        abrController.setUsePixelRatioInLimitBitrateByPortal(value);\n    }\n\n    /**\n     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to\n     * set the track mode on the video object to switch a track when using this method.\n     *\n     * @param {number} idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.\n     * @see {@link module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextTrack(idx) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        //For external time text file,  the only action needed to change a track is marking the track mode to showing.\n        // Fragmented text tracks need the additional step of calling textSourceBuffer.setTextTrack();\n        if (textSourceBuffer === undefined) {\n            textSourceBuffer = TextSourceBuffer(context).getInstance();\n        }\n\n        var tracks = getVideoElement().textTracks;\n        var ln = tracks.length;\n\n        for (var i = 0; i < ln; i++) {\n            var track = tracks[i];\n            var mode = idx === i ? 'showing' : 'hidden';\n\n            if (track.mode !== mode) { //checking that mode is not already set by 3rd Party player frameworks that set mode to prevent event retrigger.\n                track.mode = mode;\n            }\n        }\n\n        textSourceBuffer.setTextTrack();\n    }\n\n    function getCurrentTextTrackIndex() {\n        let idx = NaN;\n        if (textSourceBuffer) {\n            idx = textSourceBuffer.getCurrentTrackIdx();\n        }\n        return idx;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBitrateInfoListFor(type) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var stream = getActiveStream();\n        return stream ? stream.getBitrateListFor(type) : [];\n    }\n\n    /**\n     * Use this method to explicitly set the starting bitrate for audio | video\n     *\n     * @param {string} type\n     * @param {number} value - A value of the initial bitrate, kbps\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialBitrateFor(type, value) {\n        abrController.setInitialBitrateFor(type, value);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialBitrateFor(type) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR; //abrController.getInitialBitrateFor is overloaded with ratioDict logic that needs manifest force it to not be callable pre play.\n        }\n        return abrController.getInitialBitrateFor(type);\n    }\n\n    /**\n     * @param {string} type\n     * @param {number} value - A value of the initial Representation Ratio\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialRepresentationRatioFor(type, value) {\n        abrController.setInitialRepresentationRatioFor(type, value);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial Representation Ratio\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialRepresentationRatioFor(type) {\n        return abrController.getInitialRepresentationRatioFor(type);\n    }\n\n    /**\n     * This method returns the list of all available streams from a given manifest\n     * @param {Object} manifest\n     * @returns {Array} list of {@link StreamInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getStreamsFromManifest(manifest) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return adapter.getStreamsInfo(manifest);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type\n     * @param {string} type\n     * @returns {Array} list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTracksFor(type) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        if (!streamInfo) return [];\n        return mediaController.getTracksFor(type, streamInfo);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest\n     * @param {string} type\n     * @param {Object} manifest\n     * @param {Object} streamInfo\n     * @returns {Array} list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTracksForTypeFromManifest(type, manifest, streamInfo) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        streamInfo = streamInfo || adapter.getStreamsInfo(manifest)[0];\n\n        return streamInfo ? adapter.getAllMediaInfoForType(manifest, streamInfo, type) : [];\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null} {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getCurrentTrackFor(type) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var streamInfo = streamController.getActiveStreamInfo();\n\n        if (!streamInfo) return null;\n\n        return mediaController.getCurrentTrackFor(type, streamInfo);\n    }\n\n    /**\n     * This method allows to set media settings that will be used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n         *  viewpoint: viewpointValue,\n         *  audioChannelConfiguration: audioChannelConfigurationValue,\n         *  accessibility: accessibilityValue,\n         *  role: roleValue}\n     *\n     *\n     * @param {string} type\n     * @param {Object} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialMediaSettingsFor(type, value) {\n        mediaController.setInitialSettings(type, value);\n    }\n\n    /**\n     * This method returns media settings that is used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n         *  viewpoint: viewpointValue,\n         *  audioChannelConfiguration: audioChannelConfigurationValue,\n         *  accessibility: accessibilityValue,\n         *  role: roleValue}\n     * @param {string} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialMediaSettingsFor(type) {\n        return mediaController.getInitialSettings(type);\n    }\n\n    /**\n     * @param {MediaInfo} track - instance of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setCurrentTrack(track) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setTrack(track);\n    }\n\n    /**\n     * This method returns the current track switch mode.\n     *\n     * @param {string} type\n     * @returns {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTrackSwitchModeFor(type) {\n        return mediaController.getSwitchMode(type);\n    }\n\n    /**\n     * This method sets the current track switch mode. Available options are:\n     *\n     * MediaController.TRACK_SWITCH_MODE_NEVER_REPLACE\n     * (used to forbid clearing the buffered data (prior to current playback position) after track switch. Default for video)\n     *\n     * MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE\n     * (used to clear the buffered data (prior to current playback position) after track switch. Default for audio)\n     *\n     * @param {string} type\n     * @param {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTrackSwitchModeFor(type, mode) {\n        mediaController.setSwitchMode(type, mode);\n    }\n\n    /**\n     * This method sets the selection mode for the initial track. This mode defines how the initial track will be selected\n     * if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\n     *\n     * MediaController.TRACK_SELECTION_MODE_HIGHEST_BITRATE\n     * this mode makes the player select the track with a highest bitrate. This mode is a default mode.\n     *\n     * MediaController.TRACK_SELECTION_MODE_WIDEST_RANGE\n     * this mode makes the player select the track with a widest range of bitrates\n     *\n     * @param {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setSelectionModeForInitialTrack(mode) {\n        mediaController.setSelectionModeForInitialTrack(mode);\n    }\n\n    /**\n     * This method returns the track selection mode.\n     *\n     * @returns {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSelectionModeForInitialTrack() {\n        return mediaController.getSelectionModeForInitialTrack();\n    }\n\n    /**\n     * @deprecated since version 2.0 Instead use {@link module:MediaPlayer#getAutoSwitchQualityFor getAutoSwitchQualityFor()}.\n     * @returns {boolean} Current state of adaptive bitrate switching\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoSwitchQuality() {\n        return abrController.getAutoSwitchBitrateFor('video') || abrController.getAutoSwitchBitrateFor('audio');\n    }\n\n    /**\n     * Set to false to switch off adaptive bitrate switching.\n     *\n     * @deprecated since version 2.0 Instead use {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}.\n     * @param {boolean} value\n     * @default {boolean} true\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setAutoSwitchQuality(value) {\n        abrController.setAutoSwitchBitrateFor('video', value);\n        abrController.setAutoSwitchBitrateFor('audio', value);\n    }\n\n    /**\n     * @param {string} type - 'audio' | 'video'\n     * @returns {boolean} Current state of adaptive bitrate switching\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoSwitchQualityFor(type) {\n        return abrController.getAutoSwitchBitrateFor(type);\n    }\n\n    /**\n     * Set to false to switch off adaptive bitrate switching.\n     *\n     * @param {string} type - 'audio' | 'video'\n     * @param {boolean} value\n     * @default {boolean} true\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setAutoSwitchQualityFor(type, value) {\n        abrController.setAutoSwitchBitrateFor(type, value);\n    }\n\n\n    /**\n     * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment\n     * at the end of the current buffer range it is requested and appended closer to the current time\n     * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).\n     *\n     * Note, WHen ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the\n     * higher quality media for as long as possible.\n     *\n     * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather\n     * just append at the end.  1. When the buffer level is less than one fragment duration 2.  The client\n     * is in an Abandonment State due to recent fragment abandonment event.\n     *\n     * Known issues:\n     * 1. In IE11 with auto switching off, if a user switches to a quality they can not downloaded in time the\n     * fragment may be appended in the same range as the playhead or even in past, in IE11 it may cause a stutter\n     * or stall in playback.\n     *\n     *\n     * @param {boolean} value\n     * @default {boolean} false\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFastSwitchEnabled(value) { //TODO we need to look at track switches for adaptation sets.  If always replace it works much like this but clears buffer. Maybe too many ways to do same thing.\n        mediaPlayerModel.setFastSwitchEnabled(value);\n    }\n\n    /**\n     * Enabled by default. Will return the current state of Fast Switch.\n     * @return {boolean} Returns true if FastSwitch ABR is enabled.\n     * @see {@link module:MediaPlayer#setFastSwitchEnabled setFastSwitchEnabled()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getFastSwitchEnabled() {\n        return mediaPlayerModel.getFastSwitchEnabled();\n    }\n\n\n    /**\n     * Enabling buffer-occupancy ABR will switch to the *experimental* implementation of BOLA,\n     * replacing the throughput-based ABR rule set (ThroughputRule, BufferOccupancyRule,\n     * InsufficientBufferRule and AbandonRequestsRule) with the buffer-occupancy-based\n     * BOLA rule set (BolaRule, BolaAbandonRule).\n     *\n     * @see {@link http://arxiv.org/abs/1601.06748 BOLA WhitePaper.}\n     * @see {@link https://github.com/Dash-Industry-Forum/dash.js/wiki/BOLA-status More details about the implementation status.}\n     * @param {boolean} value\n     * @default false\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableBufferOccupancyABR(value) {\n        mediaPlayerModel.setBufferOccupancyABREnabled(value);\n    }\n\n    /**\n     * Allows application to retrieve a manifest.  Manifest loading is asynchro\n     * nous and\n     * requires the app-provided callback function\n     *\n     * @param {string} url - url the manifest url\n     * @param {function} callback - A Callback function provided when retrieving manifests\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function retrieveManifest(url, callback) {\n        var manifestLoader = createManifestLoader();\n        var self = this;\n\n        var handler = function (e) {\n            if (!e.error) {\n                callback(e.manifest);\n            } else {\n                callback(null, e.error);\n            }\n            eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n            manifestLoader.reset();\n        };\n\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n\n        let uriQueryFragModel = URIQueryAndFragmentModel(context).getInstance();\n        uriQueryFragModel.initialize();\n        manifestLoader.load(uriQueryFragModel.parseURI(url));\n    }\n\n    /**\n     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.\n     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>\n     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.\n     * This will allow the date header on the manifest to be used instead of a time server</p>\n     * @param {string} schemeIdUri - <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2014</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2014</li>\n     * <li>urn:mpeg:dash:utc:direct:2014</li>\n     * </ul>\n     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use\n     * 2012 in the URI, rather than 2014. support these for now.</p>\n     * <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2012</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2012</li>\n     * <li>urn:mpeg:dash:utc:direct:2012</li>\n     * </ul>\n     * @param {string} value - Path to a time source.\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com</li>\n     * </ul>\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}\n     * @instance\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value);//check if it already exists and remove if so.\n        var vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        mediaPlayerModel.getUTCTimingSources().push(vo);\n    }\n\n\n    /**\n     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the\n     * entry to be removed from the array</p>\n     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}\n     * @instance\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        let UTCTimingSources = mediaPlayerModel.getUTCTimingSources();\n        UTCTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                UTCTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    /**\n     * <p>Allows you to clear the stored array of time sources.</p>\n     * <p>Example use: If you have exposed the Date header, calling this method\n     * will allow the date header on the manifest to be used instead of the time server.</p>\n     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back\n     * to using a binary search to discover the live edge</p>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}\n     * @instance\n     */\n    function clearDefaultUTCTimingSources() {\n        mediaPlayerModel.setUTCTimingSources([]);\n    }\n\n    /**\n     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>\n     *\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com</li>\n     * </ul>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function restoreDefaultUTCTimingSources() {\n        addUTCTimingSource(MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.scheme, MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value);\n    }\n\n\n    /**\n     * <p>Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection. The\n     * use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\n     * {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()} </p>\n     *\n     * @param {boolean} value - true to enable\n     * @default {boolean} True\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function enableManifestDateHeaderTimeSource(value) {\n        mediaPlayerModel.setUseManifestDateHeaderTimeSource(value);\n    }\n\n    /**\n     * This value influences the buffer pruning logic.\n     * Allows you to modify the buffer that is kept in source buffer in seconds.\n     *  0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|\n     *\n     * @default 30 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferToKeep(value) {\n        mediaPlayerModel.setBufferToKeep(value);\n    }\n\n    /**\n     * This value influences the buffer pruning logic.\n     * Allows you to modify the interval of pruning buffer in seconds.\n     *\n     * @default 30 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferPruningInterval(value) {\n        mediaPlayerModel.setBufferPruningInterval(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\n     *\n     * When the time is set higher than the default you will have to wait longer\n     * to see automatic bitrate switches but will have a larger buffer which\n     * will increase stability.\n     *\n     * @default 12 seconds.\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setStableBufferTime(value) {\n        mediaPlayerModel.setStableBufferTime(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality.\n     * If there are multiple bitrates in your adaptation, and the media is playing at the highest\n     * bitrate, then we try to build a larger buffer at the top quality to increase stability\n     * and to maintain media quality.\n     *\n     * @default 30 seconds.\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferTimeAtTopQuality (value) {\n        mediaPlayerModel.setBufferTimeAtTopQuality(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality for long form content.\n     *\n     * @default 60 seconds.\n     * @see {@link module:MediaPlayer#setLongFormContentDurationThreshold setLongFormContentDurationThreshold()}\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQuality setBufferTimeAtTopQuality()}\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferTimeAtTopQualityLongForm (value) {\n        mediaPlayerModel.setBufferTimeAtTopQualityLongForm(value);\n    }\n\n    /**\n     * The threshold which defines if the media is considered long form content.\n     * This will directly affect the buffer targets when playing back at the top quality.\n     *\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQualityLongForm setBufferTimeAtTopQualityLongForm()}\n     * @default 600 seconds (10 minutes).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setLongFormContentDurationThreshold (value) {\n        mediaPlayerModel.setLongFormContentDurationThreshold(value);\n    }\n\n    /**\n     * A threshold, in seconds, of when dashjs abr becomes less conservative since we have a\n     * larger \"rich\" buffer.\n     * The BufferOccupancyRule.js rule will override the ThroughputRule's decision when the\n     * buffer level surpasses this value and while it remains greater than this value.\n     *\n     * @default 20 seconds\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setRichBufferThreshold (value) {\n        mediaPlayerModel.setRichBufferThreshold(value);\n    }\n\n    /**\n     * A percentage between 0.0 and 1 to reduce the measured throughput calculations.\n     * The default is 0.9. The lower the value the more conservative and restricted the\n     * measured throughput calculations will be. please use carefully. This will directly\n     * affect the ABR logic in dash.js\n     *\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBandwidthSafetyFactor(value) {\n        mediaPlayerModel.setBandwidthSafetyFactor(value);\n    }\n\n    /**\n     * Returns the number of the current BandwidthSafetyFactor\n     *\n     * @return {number} value\n     * @see {@link module:MediaPlayer#setBandwidthSafetyFactor setBandwidthSafetyFactor()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBandwidthSafetyFactor() {\n        return mediaPlayerModel.getBandwidthSafetyFactor();\n    }\n\n    /**\n     * A timeout value in seconds, which during the ABRController will block switch-up events.\n     * This will only take effect after an abandoned fragment event occurs.\n     *\n     * @default 10 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setAbandonLoadTimeout(value) {\n        mediaPlayerModel.setAbandonLoadTimeout(value);\n    }\n\n    /**\n     * Total number of retry attempts that will occur on a fragment load before it fails.\n     * Increase this value to a maximum in order to achieve an automatic playback resume\n     * in case of completely lost internet connection.\n     *\n     * @default 3\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFragmentLoaderRetryAttempts (value) {\n        mediaPlayerModel.setFragmentRetryAttempts(value);\n    }\n\n    /**\n     * Time in milliseconds of which to reload a failed fragment load attempt.\n     *\n     * @default 1000 milliseconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFragmentLoaderRetryInterval (value) {\n        mediaPlayerModel.setFragmentRetryInterval(value);\n    }\n\n    /**\n     * Sets whether withCredentials on all XHR requests is true or false\n     *\n     * @default false\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     * @deprecated since version 2.4 - use setXHRWithCredentialsForType\n     */\n    function setXHRWithCredentials(value) {\n        setXHRWithCredentialsForType(undefined, value);\n    }\n\n    /**\n     * Sets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @default false\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setXHRWithCredentialsForType(type, value) {\n        mediaPlayerModel.setXHRWithCredentialsForType(type, value);\n    }\n\n    /**\n     * Gets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getXHRWithCredentialsForType(type) {\n        return mediaPlayerModel.getXHRWithCredentialsForType(type);\n    }\n\n    /**\n     * Detects if Protection is included and returns an instance of ProtectionController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getProtectionController() {\n        return detectProtection();\n    }\n\n    /**\n     * Will override dash.js protection controller.\n     * @param {ProtectionController} value - valid protection controller instance.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachProtectionController(value) {\n        protectionController = value;\n    }\n\n    /**\n     * @param {ProtectionData} value - object containing\n     * property names corresponding to key system name strings and associated\n     * values being instances of.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setProtectionData(value) {\n        protectionData = value;\n    }\n\n    /**\n     * This method serves to control captions z-index value. If 'true' is passed, the captions will have the highest z-index and be\n     * displayed on top of other html elements. Default value is 'false' (z-index is not set).\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function displayCaptionsOnTop(value) {\n        let textTracks = TextTracks(context).getInstance();\n        textTracks.setConfig({videoModel: videoModel});\n        textTracks.initialize();\n        textTracks.displayCConTop(value);\n    }\n\n    /**\n     * Returns instance of Video Container that was attached by calling attachVideoContainer()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVideoContainer() {\n        return videoModel ? videoModel.getVideoContainer() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 element that wraps the video element.\n     *\n     * @param {HTMLElement} container - The HTML5 element containing the video element.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachVideoContainer(container) {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setVideoContainer(container);\n    }\n\n    /**\n     * Returns instance of Video Element that was attached by calling attachView()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVideoElement() {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return videoModel.getElement();\n    }\n\n    /**\n     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.\n     *\n     * @param {Object} element - An HTMLMediaElement that has already been defined in the DOM (or equivalent stub).\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachView(element) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        videoModel = null;\n        if (element) {\n            videoModel = VideoModel(context).getInstance();\n            videoModel.initialize();\n            videoModel.setElement(element);\n            detectProtection();\n            detectMetricsReporting();\n        }\n        resetAndInitializePlayback();\n    }\n\n    /**\n     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTTMLRenderingDiv() {\n        return videoModel ? videoModel.getTTMLRenderingDiv() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.\n     *\n     * @param {HTMLDivElement} div - An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachTTMLRenderingDiv(div) {\n        if (!videoModel) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setTTMLRenderingDiv(div);\n    }\n\n    /**\n     * Returns the source string or manifest that was attached by calling attachSource()\n     * @returns {string | manifest}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSource() {\n        if (!source) {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n        return source;\n    }\n\n    /**\n     * Use this method to set a source URL to a valid MPD manifest file OR\n     * a previously downloaded and parsed manifest object.  Optionally, can\n     * also provide protection information\n     *\n     * @param {string|Object} urlOrManifest - A URL to a valid MPD manifest file, or a\n     * parsed manifest object.\n     *\n     *\n     * @throws \"MediaPlayer not initialized!\"\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachSource(urlOrManifest) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (typeof urlOrManifest === 'string') {\n            var uriQueryFragModel = URIQueryAndFragmentModel(context).getInstance();\n            uriQueryFragModel.initialize();\n            source = uriQueryFragModel.parseURI(urlOrManifest);\n        } else {\n            source = urlOrManifest;\n        }\n\n        resetAndInitializePlayback();\n    }\n\n    /**\n     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by\n     * calling attachSource with a new source file.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function reset() {\n        attachSource(null);\n        attachView(null);\n        protectionData = null;\n        protectionController = null;\n    }\n\n    //***********************************\n    // PRIVATE METHODS\n    //***********************************\n\n    function resetAndInitializePlayback() {\n        if (playbackInitialized) {\n            playbackInitialized = false;\n            adapter.reset();\n            streamController.reset();\n            playbackController.reset();\n            abrController.reset();\n            rulesController.reset();\n            mediaController.reset();\n            streamController = null;\n            metricsReportingController = null;\n            if (isReady()) {\n                initializePlayback();\n            }\n        } else if (isReady()) {\n            initializePlayback();\n        }\n    }\n\n    function createControllers() {\n\n        let abrRulesCollection = ABRRulesCollection(context).getInstance();\n        abrRulesCollection.initialize();\n\n        let sourceBufferController = SourceBufferController(context).getInstance();\n        sourceBufferController.setConfig({dashManifestModel: dashManifestModel});\n\n        mediaController.initialize();\n        mediaController.setConfig({\n            errHandler: errHandler\n        });\n\n        rulesController = RulesController(context).getInstance();\n        rulesController.initialize();\n        rulesController.setConfig({abrRulesCollection: abrRulesCollection});\n\n        streamController = StreamController(context).getInstance();\n        streamController.setConfig({\n            capabilities: capabilities,\n            manifestLoader: createManifestLoader(),\n            manifestModel: ManifestModel(context).getInstance(),\n            dashManifestModel: dashManifestModel,\n            protectionController: protectionController,\n            adapter: adapter,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            liveEdgeFinder: LiveEdgeFinder(context).getInstance(),\n            mediaSourceController: MediaSourceController(context).getInstance(),\n            timeSyncController: TimeSyncController(context).getInstance(),\n            baseURLController: BaseURLController(context).getInstance(),\n            errHandler: errHandler,\n            timelineConverter: TimelineConverter(context).getInstance()\n        });\n        streamController.initialize(autoPlay, protectionData);\n\n        abrController.setConfig({\n            abrRulesCollection: abrRulesCollection,\n            rulesController: rulesController,\n            streamController: streamController\n        });\n    }\n\n    function createManifestLoader() {\n        return ManifestLoader(context).create({\n            errHandler: errHandler,\n            parser: createManifestParser(),\n            metricsModel: metricsModel,\n            requestModifier: RequestModifier(context).getInstance()\n        });\n    }\n\n    function createManifestParser() {\n        //TODO-Refactor Need to be able to switch this create out so will need API to set which parser to use?\n        return DashParser(context).create();\n    }\n\n    function createAdaptor() {\n        //TODO-Refactor Need to be able to switch this create out so will need API to set which adapter to use? Handler is created is inside streamProcessor so need to figure that out as well\n        adapter = DashAdapter(context).getInstance();\n        adapter.initialize();\n        adapter.setConfig({dashManifestModel: dashManifestModel});\n        return adapter;\n    }\n\n    function detectProtection() {\n        if (protectionController) {\n            return protectionController;\n        }\n        // do not require Protection as dependencies as this is optional and intended to be loaded separately\n        let Protection = dashjs.Protection; /* jshint ignore:line */\n        if (typeof Protection === 'function') {//TODO need a better way to register/detect plugin components\n            let protection = Protection(context).create();\n            Events.extend(Protection.events);\n            MediaPlayerEvents.extend(Protection.events, { publicOnly: true });\n            protectionController = protection.createProtectionSystem({\n                log: log,\n                videoModel: videoModel,\n                capabilities: capabilities,\n                eventBus: eventBus,\n                adapter: adapter\n            });\n            return protectionController;\n        }\n\n        return null;\n    }\n\n    function detectMetricsReporting() {\n        if (metricsReportingController) {\n            return metricsReportingController;\n        }\n        // do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately\n        let MetricsReporting = dashjs.MetricsReporting; /* jshint ignore:line */\n        if (typeof MetricsReporting === 'function') {//TODO need a better way to register/detect plugin components\n            let metricsReporting = MetricsReporting(context).create();\n\n            metricsReportingController = metricsReporting.createMetricsReporting({\n                log: log,\n                eventBus: eventBus,\n                mediaElement: getVideoElement(),\n                dashManifestModel: dashManifestModel,\n                metricsModel: metricsModel\n            });\n\n            return metricsReportingController;\n        }\n\n        return null;\n    }\n\n    function getDVRInfoMetric() {\n        var metric = metricsModel.getReadOnlyMetricsFor('video') || metricsModel.getReadOnlyMetricsFor('audio');\n        return dashMetrics.getCurrentDVRInfo(metric);\n    }\n\n    function getAsUTC(valToConvert) {\n        var metric = getDVRInfoMetric();\n        var availableFrom,\n            utcValue;\n\n        if (!metric) {\n            return 0;\n        }\n        availableFrom = metric.manifestInfo.availableFrom.getTime() / 1000;\n        utcValue = valToConvert + (availableFrom + metric.range.start);\n        return utcValue;\n    }\n\n    function getActiveStream() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        var streamInfo = streamController.getActiveStreamInfo();\n        return streamInfo ? streamController.getStreamById(streamInfo.id) : null;\n    }\n\n    function initializePlayback() {\n        if (!playbackInitialized) {\n            playbackInitialized = true;\n            log('Playback Initialized');\n            createControllers();\n            if (typeof source === 'string') {\n                streamController.load(source);\n            } else {\n                streamController.loadWithManifest(source);\n            }\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        on: on,\n        off: off,\n        extend: extend,\n        attachView: attachView,\n        attachSource: attachSource,\n        isReady: isReady,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        isDynamic: isDynamic,\n        seek: seek,\n        setMute: setMute,\n        isMuted: isMuted,\n        setVolume: setVolume,\n        getVolume: getVolume,\n        time: time,\n        duration: duration,\n        timeAsUTC: timeAsUTC,\n        durationAsUTC: durationAsUTC,\n        getActiveStream: getActiveStream,\n        getDVRWindowSize: getDVRWindowSize,\n        getDVRSeekOffset: getDVRSeekOffset,\n        convertToTimeCode: convertToTimeCode,\n        formatUTC: formatUTC,\n        getVersion: getVersion,\n        getDebug: getDebug,\n        getBufferLength: getBufferLength,\n        getVideoModel: getVideoModel,\n        getVideoContainer: getVideoContainer,\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\n        getVideoElement: getVideoElement,\n        getSource: getSource,\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\n        setLiveDelay: setLiveDelay,\n        getLiveDelay: getLiveDelay,\n        useSuggestedPresentationDelay: useSuggestedPresentationDelay,\n        enableLastBitrateCaching: enableLastBitrateCaching,\n        enableLastMediaSettingsCaching: enableLastMediaSettingsCaching,\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\n        setAutoPlay: setAutoPlay,\n        getAutoPlay: getAutoPlay,\n        setScheduleWhilePaused: setScheduleWhilePaused,\n        getScheduleWhilePaused: getScheduleWhilePaused,\n        getDashMetrics: getDashMetrics,\n        getMetricsFor: getMetricsFor,\n        getQualityFor: getQualityFor,\n        setQualityFor: setQualityFor,\n        updatePortalSize: updatePortalSize,\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\n        getUsePixelRatioInLimitBitrateByPortal: getUsePixelRatioInLimitBitrateByPortal,\n        setUsePixelRatioInLimitBitrateByPortal: setUsePixelRatioInLimitBitrateByPortal,\n        setTextTrack: setTextTrack,\n        getBitrateInfoListFor: getBitrateInfoListFor,\n        setInitialBitrateFor: setInitialBitrateFor,\n        getInitialBitrateFor: getInitialBitrateFor,\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\n        getStreamsFromManifest: getStreamsFromManifest,\n        getTracksFor: getTracksFor,\n        getTracksForTypeFromManifest: getTracksForTypeFromManifest,\n        getCurrentTrackFor: getCurrentTrackFor,\n        setInitialMediaSettingsFor: setInitialMediaSettingsFor,\n        getInitialMediaSettingsFor: getInitialMediaSettingsFor,\n        setCurrentTrack: setCurrentTrack,\n        getTrackSwitchModeFor: getTrackSwitchModeFor,\n        setTrackSwitchModeFor: setTrackSwitchModeFor,\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\n        getAutoSwitchQuality: getAutoSwitchQuality,\n        setAutoSwitchQuality: setAutoSwitchQuality,\n        setFastSwitchEnabled: setFastSwitchEnabled,\n        getFastSwitchEnabled: getFastSwitchEnabled,\n        getAutoSwitchQualityFor: getAutoSwitchQualityFor,\n        setAutoSwitchQualityFor: setAutoSwitchQualityFor,\n        enableBufferOccupancyABR: enableBufferOccupancyABR,\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\n        retrieveManifest: retrieveManifest,\n        addUTCTimingSource: addUTCTimingSource,\n        removeUTCTimingSource: removeUTCTimingSource,\n        clearDefaultUTCTimingSources: clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources: restoreDefaultUTCTimingSources,\n        setBufferToKeep: setBufferToKeep,\n        setBufferPruningInterval: setBufferPruningInterval,\n        setStableBufferTime: setStableBufferTime,\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\n        setFragmentLoaderRetryAttempts: setFragmentLoaderRetryAttempts,\n        setFragmentLoaderRetryInterval: setFragmentLoaderRetryInterval,\n        setXHRWithCredentials: setXHRWithCredentials,\n        setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\n        setRichBufferThreshold: setRichBufferThreshold,\n        getProtectionController: getProtectionController,\n        attachProtectionController: attachProtectionController,\n        setProtectionData: setProtectionData,\n        enableManifestDateHeaderTimeSource: enableManifestDateHeaderTimeSource,\n        displayCaptionsOnTop: displayCaptionsOnTop,\n        attachVideoContainer: attachVideoContainer,\n        attachTTMLRenderingDiv: attachTTMLRenderingDiv,\n        getCurrentTextTrackIndex: getCurrentTextTrackIndex,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayer.__dashjs_factory_name = 'MediaPlayer';\nlet factory = FactoryMaker.getClassFactory(MediaPlayer);\nfactory.events = MediaPlayerEvents;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor () {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n        * Triggered when there is an error from the element or MSE source buffer.\n        * @event MediaPlayerEvents#ERROR\n        */\n        this.ERROR = 'error';\n\n        /**\n        * Triggered when a fragment download has completed.\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n        */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        /**\n        * Triggered when a fragment download has started.\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n        */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        /**\n        * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n        */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n        /**\n         * Triggered when {@link module:Debug} log method is called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initialed; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the stream is setup and ready.\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport LiveEdgeFinder from './utils/LiveEdgeFinder';\nimport StreamProcessor from './StreamProcessor';\nimport MediaController from './controllers/MediaController';\nimport EventController from './controllers/EventController';\nimport FragmentController from './controllers/FragmentController';\nimport AbrController from './controllers/AbrController';\nimport VideoModel from './models/VideoModel';\nimport MetricsModel from './models/MetricsModel';\nimport PlaybackController from './controllers/PlaybackController';\nimport DashHandler from '../dash/DashHandler';\nimport SegmentBaseLoader from '../dash/SegmentBaseLoader';\nimport WebmSegmentBaseLoader from '../dash/WebmSegmentBaseLoader';\nimport DashMetrics from '../dash/DashMetrics';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport Debug from '../core/Debug';\nimport FactoryMaker from '../core/FactoryMaker';\nimport TextSourceBuffer from './TextSourceBuffer';\n\nfunction Stream(config) {\n\n    const DATA_UPDATE_FAILED_ERROR_CODE = 1;\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let manifestModel = config.manifestModel;\n    let manifestUpdater = config.manifestUpdater;\n    let adapter = config.adapter;\n    let capabilities = config.capabilities;\n    let errHandler = config.errHandler;\n    let timelineConverter = config.timelineConverter;\n    let baseURLController = config.baseURLController;\n\n    let instance,\n        streamProcessors,\n        isStreamActivated,\n        isMediaInitialized,\n        streamInfo,\n        updateError,\n        isUpdating,\n        initialized,\n        protectionController,\n        liveEdgeFinder,\n        playbackController,\n        mediaController,\n        fragmentController,\n        eventController,\n        abrController,\n        textSourceBuffer;\n\n\n    function setup() {\n        streamProcessors = [];\n        isStreamActivated = false;\n        isMediaInitialized = false;\n        streamInfo = null;\n        updateError = {};\n        isUpdating = false;\n        initialized = false;\n\n        liveEdgeFinder = LiveEdgeFinder(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        abrController = AbrController(context).getInstance();\n        mediaController = MediaController(context).getInstance();\n        fragmentController = FragmentController(context).create();\n        textSourceBuffer = TextSourceBuffer(context).getInstance();\n\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n    }\n\n    function initialize(StreamInfo, ProtectionController) {\n        streamInfo = StreamInfo;\n        protectionController = ProtectionController;\n        if (protectionController) {\n            eventBus.on(Events.KEY_ERROR, onProtectionError, instance);\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n            eventBus.on(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Activates Stream by re-initializing some of its components\n     * @param {MediaSource} mediaSource\n     * @memberof Stream#\n     */\n    function activate(mediaSource) {\n        if (!isStreamActivated) {\n            eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n            initializeMedia(mediaSource);\n            isStreamActivated = true;\n        }\n        //else { // TODO Check track change mode but why is this here. commented it out for now to check.\n        //    createBuffers();\n        //}\n    }\n\n    /**\n     * Partially resets some of the Stream elements\n     * @memberof Stream#\n     */\n    function deactivate() {\n        let ln = streamProcessors.length;\n        for (let i = 0; i < ln; i++) {\n            streamProcessors[i].reset();\n        }\n        streamProcessors = [];\n        isStreamActivated = false;\n        isMediaInitialized = false;\n        clearEventController();\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n    }\n\n    function reset() {\n\n        if (playbackController) {\n            playbackController.pause();\n            playbackController = null;\n        }\n\n        if (fragmentController) {\n            fragmentController.reset();\n            fragmentController = null;\n        }\n\n        deactivate();\n        mediaController = null;\n        abrController = null;\n        manifestUpdater = null;\n        manifestModel = null;\n        adapter = null;\n        capabilities = null;\n        log = null;\n        errHandler = null;\n        isUpdating = false;\n        initialized = false;\n        updateError = {};\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.off(Events.KEY_ERROR, onProtectionError, instance);\n        eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n        eventBus.off(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n        eventBus.off(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n        eventBus.off(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n    }\n\n    function getDuration() {\n        return streamInfo.duration;\n    }\n\n    function getStartTime() {\n        return streamInfo.start;\n    }\n\n    function getStreamIndex() {\n        return streamInfo.index;\n    }\n\n    function getId() {\n        return streamInfo.id;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function hasMedia(type) {\n        return (getMediaInfo(type) !== null);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getBitrateListFor(type) {\n        var mediaInfo = getMediaInfo(type);\n        return abrController.getBitrateList(mediaInfo);\n    }\n\n    function startEventController() {\n        if (eventController) {\n            eventController.start();\n        }\n    }\n\n    function clearEventController() {\n        if (eventController) {\n            eventController.clear();\n        }\n    }\n\n    function isActivated() {\n        return isStreamActivated;\n    }\n\n    function isInitialized() {\n        return initialized;\n    }\n\n    function onProtectionError(event) {\n        if (event.error) {\n            errHandler.mediaKeySessionError(event.error);\n            log(event.error);\n            reset();\n        }\n    }\n\n    function getMimeTypeOrType(mediaInfo) {\n        return mediaInfo.type === 'text' ? mediaInfo.mimeType : mediaInfo.type;\n    }\n\n    function isMediaSupported(mediaInfo, mediaSource, manifest) {\n        var type = mediaInfo.type;\n        var codec,\n            msg;\n\n        if (type === 'muxed' && mediaInfo) {\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\n            log(msg);\n            errHandler.manifestError(msg, 'multiplexedrep', manifestModel.getValue());\n            return false;\n        }\n\n        if ((type === 'text') || (type === 'fragmentedText') || (type === 'embeddedText')) return true;\n\n        codec = mediaInfo.codec;\n        log(type + ' codec: ' + codec);\n\n        if (!!mediaInfo.contentProtection && !capabilities.supportsEncryptedMedia()) {\n            errHandler.capabilityError('encryptedmedia');\n        } else if (!capabilities.supportsCodec(VideoModel(context).getInstance().getElement(), codec)) {\n            msg = type + 'Codec (' + codec + ') is not supported.';\n            errHandler.manifestError(msg, 'codec', manifest);\n            log(msg);\n            return false;\n        }\n\n        return true;\n    }\n\n    function onCurrentTrackChanged(e) {\n        if (e.newMediaInfo.streamInfo.id !== streamInfo.id) return;\n\n        var processor = getProcessorForMediaInfo(e.oldMediaInfo);\n        if (!processor) return;\n\n        var currentTime = playbackController.getTime();\n        var buffer = processor.getBuffer();\n        var mediaInfo = e.newMediaInfo;\n        var manifest = manifestModel.getValue();\n        var idx = streamProcessors.indexOf(processor);\n        var mediaSource = processor.getMediaSource();\n\n        if (mediaInfo.type !== 'fragmentedText') {\n            processor.reset(true);\n            createStreamProcessor(mediaInfo, manifest, mediaSource, {buffer: buffer, replaceIdx: idx, currentTime: currentTime});\n            playbackController.seek(playbackController.getTime());\n        }else {\n            processor.updateMediaInfo(manifest, mediaInfo);\n        }\n    }\n\n    function isWebM (mimeType) {\n        let type = mimeType.split('/')[1];\n\n        return 'webm' === type.toLowerCase();\n    }\n\n    function createIndexHandler(mediaInfo) {\n\n        let segmentBaseLoader = isWebM(mediaInfo.mimeType) ? WebmSegmentBaseLoader(context).getInstance() : SegmentBaseLoader(context).getInstance();\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            metricsModel: MetricsModel(context).getInstance()\n        });\n        segmentBaseLoader.initialize();\n\n        let handler = DashHandler(context).create({\n            segmentBaseLoader: segmentBaseLoader,\n            timelineConverter: timelineConverter,\n            dashMetrics: DashMetrics(context).getInstance(),\n            metricsModel: MetricsModel(context).getInstance(),\n            baseURLController: baseURLController\n        });\n\n        return handler;\n    }\n\n    function createStreamProcessor(mediaInfo, manifest, mediaSource, optionalSettings) {\n        var streamProcessor = StreamProcessor(context).create({\n            indexHandler: createIndexHandler(mediaInfo),\n            timelineConverter: timelineConverter,\n            adapter: adapter,\n            manifestModel: manifestModel\n        });\n\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, mediaInfo.type);\n        streamProcessor.initialize(getMimeTypeOrType(mediaInfo), fragmentController, mediaSource, instance, eventController);\n        abrController.updateTopQualityIndex(mediaInfo);\n\n        if (optionalSettings) {\n            streamProcessor.setBuffer(optionalSettings.buffer);\n            streamProcessor.getIndexHandler().setCurrentTime(optionalSettings.currentTime);\n            streamProcessors[optionalSettings.replaceIdx] = streamProcessor;\n        } else {\n            streamProcessors.push(streamProcessor);\n        }\n\n        if ((mediaInfo.type === 'text' || mediaInfo.type === 'fragmentedText')) {\n            var idx;\n            for (var i = 0; i < allMediaForType.length; i++) {\n                if (allMediaForType[i].index === mediaInfo.index) {\n                    idx = i;\n                }\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[i]);//creates text tracks for all adaptations in one stream processor\n            }\n            if (mediaInfo.type === 'fragmentedText') {\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[idx]);//sets the initial media info\n            }\n        }else {\n            streamProcessor.updateMediaInfo(manifest, mediaInfo);\n        }\n\n        return streamProcessor;\n    }\n\n    function initializeMediaForType(type, mediaSource) {\n        var manifest = manifestModel.getValue();\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, type);\n\n        var mediaInfo = null;\n        var initialMediaInfo;\n\n        if (!allMediaForType || allMediaForType.length === 0) {\n            log('No ' + type + ' data.');\n            return;\n        }\n\n        for (var i = 0, ln = allMediaForType.length; i < ln; i++) {\n            mediaInfo = allMediaForType[i];\n\n            if (type === 'embeddedText') {\n                textSourceBuffer.addEmbeddedTrack(mediaInfo);\n            } else {\n                if (!isMediaSupported(mediaInfo, mediaSource, manifest)) continue;\n\n                if (mediaController.isMultiTrackSupportedByType(mediaInfo.type)) {\n                    mediaController.addTrack(mediaInfo, streamInfo);\n                }\n            }\n        }\n\n        if (type === 'embeddedText' || mediaController.getTracksFor(type, streamInfo).length === 0) {\n            return;\n        }\n\n        mediaController.checkInitialMediaSettingsForType(type, streamInfo);\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo);\n\n        // TODO : How to tell index handler live/duration?\n        // TODO : Pass to controller and then pass to each method on handler?\n\n        createStreamProcessor(initialMediaInfo, manifest, mediaSource);\n    }\n\n    function initializeMedia(mediaSource) {\n        var manifest = manifestModel.getValue();\n        var events;\n\n        eventController = EventController(context).getInstance();\n        eventController.initialize();\n        eventController.setConfig({\n            manifestModel: manifestModel,\n            manifestUpdater: manifestUpdater\n        });\n        events = adapter.getEventsFor(manifest, streamInfo);\n        eventController.addInlineEvents(events);\n\n        isUpdating = true;\n        initializeMediaForType('video', mediaSource);\n        initializeMediaForType('audio', mediaSource);\n        initializeMediaForType('text', mediaSource);\n        initializeMediaForType('fragmentedText', mediaSource);\n        initializeMediaForType('embeddedText', mediaSource);\n        initializeMediaForType('muxed', mediaSource);\n\n        createBuffers();\n\n        //TODO. Consider initialization of TextSourceBuffer here if embeddedText, but no sideloadedText.\n\n        isMediaInitialized = true;\n        isUpdating = false;\n\n        if (streamProcessors.length === 0) {\n            var msg = 'No streams to play.';\n            errHandler.manifestError(msg, 'nostreams', manifest);\n            log(msg);\n        } else {\n            liveEdgeFinder.initialize(timelineConverter, streamProcessors[0]);\n            //log(\"Playback initialized!\");\n            checkIfInitializationCompleted();\n        }\n    }\n\n    function checkIfInitializationCompleted() {\n        var ln = streamProcessors.length;\n        var hasError = !!updateError.audio || !!updateError.video;\n        var error = hasError ? new Error(DATA_UPDATE_FAILED_ERROR_CODE, 'Data update failed', null) : null;\n        var i = 0;\n\n        for (i; i < ln; i++) {\n            if (streamProcessors[i].isUpdating() || isUpdating) return;\n        }\n\n        initialized = true;\n        if (!isMediaInitialized) return;\n        if (protectionController) {\n            protectionController.initialize(manifestModel.getValue(), getMediaInfo('audio'), getMediaInfo('video'));\n        }\n        eventBus.trigger(Events.STREAM_INITIALIZED, {streamInfo: streamInfo, error: error});\n    }\n\n    function getMediaInfo(type) {\n        var ln = streamProcessors.length;\n        var mediaCtrl = null;\n\n        for (var i = 0; i < ln; i++) {\n            mediaCtrl = streamProcessors[i];\n\n            if (mediaCtrl.getType() === type) return mediaCtrl.getMediaInfo();\n        }\n\n        return null;\n    }\n\n    function createBuffers() {\n        for (var i = 0, ln = streamProcessors.length; i < ln; i++) {\n            streamProcessors[i].createBuffer();\n        }\n    }\n\n    function onBufferingCompleted(e) {\n        if (e.streamInfo !== streamInfo) return;\n\n        var processors = getProcessors();\n        var ln = processors.length;\n        var i = 0;\n\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\n        for (i; i < ln; i++) {\n            if (!processors[i].isBufferingCompleted()) return;\n        }\n\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, {streamInfo: streamInfo});\n    }\n\n    function onDataUpdateCompleted(e) {\n        var sp = e.sender.getStreamProcessor();\n\n        if (sp.getStreamInfo() !== streamInfo) return;\n\n        updateError[sp.getType()] = e.error;\n        checkIfInitializationCompleted();\n    }\n\n    function getProcessorForMediaInfo(mediaInfo) {\n        if (!mediaInfo) return false;\n\n        var processors = getProcessors();\n\n        return processors.filter(function (processor) {\n            return (processor.getType() === mediaInfo.type);\n        })[0];\n    }\n\n    function getProcessors() {\n        var ln = streamProcessors.length;\n        var arr = [];\n        var i = 0;\n\n        var type,\n            controller;\n\n        for (i; i < ln; i++) {\n            controller = streamProcessors[i];\n            type = controller.getType();\n\n            if (type === 'audio' || type === 'video' || type === 'fragmentedText') {\n                arr.push(controller);\n            }\n        }\n\n        return arr;\n    }\n\n    function updateData(updatedStreamInfo) {\n\n        log('Manifest updated... updating data system wide.');\n\n        let manifest = manifestModel.getValue();\n\n        isStreamActivated = false;\n        isUpdating = true;\n        initialized = false;\n        streamInfo = updatedStreamInfo;\n\n        if (eventController) {\n            let events = adapter.getEventsFor(manifest, streamInfo);\n            eventController.addInlineEvents(events);\n        }\n\n        for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n            let streamProcessor = streamProcessors[i];\n            let mediaInfo = adapter.getMediaInfoForType(manifest, streamInfo, streamProcessor.getType());\n            abrController.updateTopQualityIndex(mediaInfo);\n            streamProcessor.updateMediaInfo(manifest, mediaInfo);\n        }\n\n        isUpdating = false;\n        checkIfInitializationCompleted();\n    }\n\n    instance = {\n        initialize: initialize,\n        activate: activate,\n        deactivate: deactivate,\n        getDuration: getDuration,\n        getStartTime: getStartTime,\n        getStreamIndex: getStreamIndex,\n        getId: getId,\n        getStreamInfo: getStreamInfo,\n        hasMedia: hasMedia,\n        getBitrateListFor: getBitrateListFor,\n        startEventController: startEventController,\n        isActivated: isActivated,\n        isInitialized: isInitialized,\n        updateData: updateData,\n        reset: reset,\n        getProcessors: getProcessors\n    };\n\n    setup();\n    return instance;\n}\n\nStream.__dashjs_factory_name = 'Stream';\nexport default FactoryMaker.getClassFactory(Stream);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport AbrController from './controllers/AbrController';\nimport BufferController from './controllers/BufferController';\nimport StreamController from './controllers/StreamController';\nimport MediaController from './controllers/MediaController';\nimport TextController from './controllers/TextController';\nimport ScheduleController from './controllers/ScheduleController';\nimport RulesController from './rules/RulesController';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport MetricsModel from './models/MetricsModel';\nimport FragmentLoader from './FragmentLoader';\nimport RequestModifier from './utils/RequestModifier';\nimport SourceBufferController from './controllers/SourceBufferController';\nimport TextSourceBuffer from './TextSourceBuffer';\nimport DashManifestModel from '../dash/models/DashManifestModel';\nimport DashMetrics from '../dash/DashMetrics';\nimport RepresentationController from '../dash/controllers/RepresentationController';\nimport ErrorHandler from './utils/ErrorHandler';\nimport FactoryMaker from '../core/FactoryMaker';\n\nfunction StreamProcessor(config) {\n\n    let context = this.context;\n\n    let indexHandler = config.indexHandler;\n    let timelineConverter = config.timelineConverter;\n    let adapter = config.adapter;\n    let manifestModel = config.manifestModel;\n\n    let instance,\n        dynamic,\n        mediaInfo,\n        type,\n        mediaInfoArr,\n        stream,\n        eventController,\n        abrController,\n        bufferController,\n        scheduleController,\n        representationController,\n        fragmentController,\n        fragmentLoader,\n        fragmentModel;\n\n\n    function setup() {\n        mediaInfoArr = [];\n    }\n\n    function initialize(Type, FragmentController, mediaSource, Stream, EventController) {\n\n        type = Type;\n        stream = Stream;\n        eventController = EventController;\n        fragmentController = FragmentController;\n        dynamic = stream.getStreamInfo().manifestInfo.isDynamic;\n\n        indexHandler.initialize(this);\n\n        abrController = AbrController(context).getInstance();\n        abrController.initialize(type, this);\n\n        bufferController = createBufferControllerForType(Type);\n        scheduleController = ScheduleController(context).create({\n            metricsModel: MetricsModel(context).getInstance(),\n            manifestModel: manifestModel,\n            adapter: adapter,\n            dashMetrics: DashMetrics(context).getInstance(),\n            dashManifestModel: DashManifestModel(context).getInstance(),\n            timelineConverter: timelineConverter,\n            rulesController: RulesController(context).getInstance(),\n            mediaPlayerModel: MediaPlayerModel(context).getInstance(),\n        });\n\n        bufferController.initialize(type, mediaSource, this);\n        scheduleController.initialize(type, this);\n\n\n        fragmentLoader = FragmentLoader(context).create({\n            metricsModel: MetricsModel(context).getInstance(),\n            errHandler: ErrorHandler(context).getInstance(),\n            requestModifier: RequestModifier(context).getInstance()\n        });\n\n        fragmentModel = scheduleController.getFragmentModel();\n        fragmentModel.setLoader(fragmentLoader);\n\n        representationController = RepresentationController(context).create();\n        representationController.initialize(this);\n\n\n    }\n\n    function reset(errored) {\n\n        indexHandler.reset();\n\n        if (bufferController) {\n            bufferController.reset(errored);\n            bufferController = null;\n        }\n\n        if (scheduleController) {\n            scheduleController.reset();\n            scheduleController = null;\n        }\n\n        if (representationController) {\n            representationController.reset();\n            representationController = null;\n        }\n\n        fragmentController = null;\n        fragmentLoader = null;\n\n        eventController = null;\n        stream = null;\n        dynamic = null;\n        mediaInfo = null;\n        mediaInfoArr = [];\n        type = null;\n    }\n\n    function isUpdating() {\n        return representationController.isUpdating();\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getABRController() {\n        return abrController;\n    }\n\n    function getRepresentationController() {\n        return representationController;\n    }\n\n    function getFragmentLoader() {\n        return fragmentLoader;\n    }\n\n    function getIndexHandler() {\n        return indexHandler;\n    }\n\n    function getFragmentController() {\n        return fragmentController;\n    }\n\n    function getBuffer() {\n        return bufferController.getBuffer();\n    }\n\n    function setBuffer(buffer) {\n        bufferController.setBuffer(buffer);\n    }\n\n    function getBufferController() {\n        return bufferController;\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function getStreamInfo() {\n        return stream ? stream.getStreamInfo() : null;\n    }\n\n    function updateMediaInfo(manifest, newMediaInfo) {\n        if (newMediaInfo !== mediaInfo && (!newMediaInfo || !mediaInfo || (newMediaInfo.type === mediaInfo.type))) {\n            mediaInfo = newMediaInfo;\n        }\n        if (mediaInfoArr.indexOf(newMediaInfo) === -1) {\n            mediaInfoArr.push(newMediaInfo);\n        }\n        adapter.updateData(manifest, this);\n    }\n\n    function getMediaInfoArr() {\n        return mediaInfoArr;\n    }\n\n    function getMediaInfo() {\n        return mediaInfo;\n    }\n\n    function getMediaSource() {\n        return bufferController.getMediaSource();\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getEventController() {\n        return eventController;\n    }\n\n    function start() {\n        scheduleController.start();\n    }\n\n    function stop() {\n        scheduleController.stop();\n    }\n\n    function getCurrentRepresentationInfo() {\n        return adapter.getCurrentRepresentationInfo(manifestModel.getValue(), representationController);\n    }\n\n    function getRepresentationInfoForQuality(quality) {\n        return adapter.getRepresentationInfoForQuality(manifestModel.getValue(), representationController, quality);\n    }\n\n    function isBufferingCompleted() {\n        return bufferController.getIsBufferingCompleted();\n    }\n\n    function createBuffer() {\n        return (bufferController.getBuffer() || bufferController.createBuffer(mediaInfo));\n    }\n\n    function isDynamic() {\n        return dynamic;\n    }\n\n    function createBufferControllerForType(type) {\n        var controller = null;\n\n        if (type === 'video' || type === 'audio' || type === 'fragmentedText') {\n            controller = BufferController(context).create({\n                metricsModel: MetricsModel(context).getInstance(),\n                manifestModel: manifestModel,\n                sourceBufferController: SourceBufferController(context).getInstance(),\n                errHandler: ErrorHandler(context).getInstance(),\n                streamController: StreamController(context).getInstance(),\n                mediaController: MediaController(context).getInstance(),\n                adapter: adapter,\n                textSourceBuffer: TextSourceBuffer(context).getInstance(),\n            });\n        }else {\n            controller = TextController(context).create({\n                errHandler: ErrorHandler(context).getInstance(),\n                sourceBufferController: SourceBufferController(context).getInstance()\n            });\n        }\n\n        return controller;\n    }\n\n    instance = {\n        initialize: initialize,\n        isUpdating: isUpdating,\n        getType: getType,\n        getBufferController: getBufferController,\n        getABRController: getABRController,\n        getFragmentLoader: getFragmentLoader,\n        getFragmentModel: getFragmentModel,\n        getScheduleController: getScheduleController,\n        getEventController: getEventController,\n        getFragmentController: getFragmentController,\n        getRepresentationController: getRepresentationController,\n        getIndexHandler: getIndexHandler,\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\n        isBufferingCompleted: isBufferingCompleted,\n        createBuffer: createBuffer,\n        getStreamInfo: getStreamInfo,\n        updateMediaInfo: updateMediaInfo,\n        getMediaInfoArr: getMediaInfoArr,\n        getMediaInfo: getMediaInfo,\n        getMediaSource: getMediaSource,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        start: start,\n        stop: stop,\n        isDynamic: isDynamic,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\nexport default FactoryMaker.getClassFactory(StreamProcessor);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport TextTrackInfo from './vo/TextTrackInfo';\nimport FragmentedTextBoxParser from '../dash/utils/FragmentedTextBoxParser';\nimport BoxParser from './utils/BoxParser';\nimport CustomTimeRanges from './utils/CustomTimeRanges';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport VideoModel from './models/VideoModel';\nimport TextTracks from './TextTracks';\nimport ISOBoxer from 'codem-isoboxer';\nimport cea608parser from '../../externals/cea608-parser';\n\nfunction TextSourceBuffer() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let embeddedInitialized = false;\n    let captionId = 0;\n\n    let instance,\n        boxParser,\n        errHandler,\n        dashManifestModel,\n        mediaController,\n        allTracksAreDisabled,\n        parser,\n        VTTParser,\n        TTMLParser,\n        fragmentedTextBoxParser,\n        mediaInfos,\n        textTracks,\n        isFragmented,\n        fragmentModel,\n        initializationSegmentReceived,\n        timescale,\n        fragmentedTracks,\n        videoModel,\n        streamController,\n        firstSubtitleStart,\n        currFragmentedTrackIdx,\n        embeddedTracks,\n        embeddedInitializationSegmentReceived,\n        embeddedTimescale,\n        embeddedLastSequenceNumber,\n        embeddedSequenceNumbers,\n        embeddedCea608FieldParsers;\n\n    function initialize(type, bufferController) {\n        allTracksAreDisabled = false;\n        parser = null;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        timescale = NaN;\n        fragmentedTracks = [];\n        firstSubtitleStart = null;\n\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n\n        let streamProcessor = bufferController.getStreamProcessor();\n\n        mediaInfos = streamProcessor.getMediaInfoArr();\n        textTracks.setConfig({videoModel: videoModel});\n        textTracks.initialize();\n        isFragmented = !dashManifestModel.getIsTextTrack(type);\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({boxParser: boxParser});\n\n        if (isFragmented) {\n            fragmentModel = streamProcessor.getFragmentModel();\n            this.buffered =  CustomTimeRanges(context).create();\n            fragmentedTracks = mediaController.getTracksFor('fragmentedText', streamController.getActiveStreamInfo());\n            var currFragTrack = mediaController.getCurrentTrackFor('fragmentedText', streamController.getActiveStreamInfo());\n            for (var i = 0 ; i < fragmentedTracks.length; i++) {\n                if (fragmentedTracks[i] === currFragTrack) {\n                    currFragmentedTrackIdx = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    function initEmbedded() {\n        embeddedTracks = [];\n        mediaInfos = [];\n        videoModel = VideoModel(context).getInstance();\n        textTracks = TextTracks(context).getInstance();\n        textTracks.setConfig({videoModel: videoModel});\n        textTracks.initialize();\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({boxParser: boxParser});\n        isFragmented = false;\n        currFragmentedTrackIdx = null;\n        embeddedInitializationSegmentReceived = false;\n        embeddedTimescale = 0;\n        embeddedCea608FieldParsers = [];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n        embeddedInitialized = true;\n    }\n\n    function append(bytes, chunk) {\n        var result,\n            sampleList,\n            i, j, k,\n            samplesInfo,\n            ccContent;\n        var mediaInfo = chunk.mediaInfo;\n        var mediaType = mediaInfo.type;\n        var mimeType = mediaInfo.mimeType;\n        var codecType = mediaInfo.codec || mimeType;\n        if (!codecType) {\n            log('No text type defined');\n            return;\n        }\n\n        function createTextTrackFromMediaInfo(captionData, mediaInfo) {\n            var textTrackInfo = new TextTrackInfo();\n            var trackKindMap = { subtitle: 'subtitles', caption: 'captions' }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\n            var getKind = function () {\n                var kind = (mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\n                kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\n                return kind;\n            };\n\n            var checkTTML = function () {\n                var ttml = false;\n                if (mediaInfo.codec && mediaInfo.codec.search('stpp') >= 0) {\n                    ttml = true;\n                }\n                if (mediaInfo.mimeType && mediaInfo.mimeType.search('ttml') >= 0) {\n                    ttml = true;\n                }\n                return ttml;\n            };\n\n            textTrackInfo.captionData = captionData;\n            textTrackInfo.lang = mediaInfo.lang;\n            textTrackInfo.label = mediaInfo.id; // AdaptationSet id (an unsigned int)\n            textTrackInfo.index = mediaInfo.index; // AdaptationSet index in manifest\n            textTrackInfo.isTTML = checkTTML();\n            textTrackInfo.video = videoModel.getElement();\n            textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\n            textTrackInfo.isFragmented = isFragmented;\n            textTrackInfo.isEmbedded = mediaInfo.isEmbedded ? true : false;\n            textTrackInfo.kind = getKind();\n            var totalNrTracks = (mediaInfos ? mediaInfos.length : 0) + embeddedTracks.length;\n            textTracks.addTextTrack(textTrackInfo, totalNrTracks);\n        }\n\n        if (mediaType === 'fragmentedText') {\n            if (!initializationSegmentReceived) {\n                initializationSegmentReceived = true;\n                for (i = 0; i < mediaInfos.length; i++) {\n                    createTextTrackFromMediaInfo(null, mediaInfos[i]);\n                }\n                timescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n            } else {\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n                sampleList = samplesInfo.sampleList;\n                if (!firstSubtitleStart && sampleList.length > 0) {\n                    firstSubtitleStart = sampleList[0].cts - chunk.start * timescale;\n                }\n                if (codecType.search('stpp') >= 0) {\n                    parser = parser !== null ? parser : getParser(codecType);\n                    for (i = 0; i < sampleList.length; i++) {\n                        let sample = sampleList[i];\n                        let sampleStart = sample.cts;\n                        let sampleRelStart = sampleStart - firstSubtitleStart;\n                        this.buffered.add(sampleRelStart / timescale, (sampleRelStart + sample.duration) / timescale);\n                        let dataView = new DataView(bytes, sample.offset, sample.subSizes[0]);\n                        ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\n                        let images = [];\n                        let subOffset = sample.offset + sample.subSizes[0];\n                        for (j = 1; j < sample.subSizes.length; j++) {\n                            let inData = new Uint8Array(bytes, subOffset, sample.subSizes[j]);\n                            let raw = String.fromCharCode.apply(null, inData);\n                            images.push(raw);\n                            subOffset += sample.subSizes[j];\n                        }\n                        try {\n                            result = parser.parse(ccContent, sampleStart / timescale, (sampleStart + sample.duration) / timescale, images);\n                            textTracks.addCaptions(currFragmentedTrackIdx, firstSubtitleStart / timescale, result);\n                        } catch (e) {\n                            log('TTML parser error: ' + e.message);\n                        }\n                    }\n                } else {\n                    // WebVTT case\n                    var captionArray = [];\n                    for (i = 0 ; i < sampleList.length; i++) {\n                        var sample = sampleList[i];\n                        sample.cts -= firstSubtitleStart;\n                        this.buffered.add(sample.cts / timescale, (sample.cts + sample.duration) / timescale);\n                        var sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\n                        // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\n                        var sampleBoxes = ISOBoxer.parseBuffer(sampleData);\n\n                        for (j = 0 ; j < sampleBoxes.boxes.length; j++) {\n                            var box1 = sampleBoxes.boxes[j];\n                            log('VTT box1: ' + box1.type);\n                            if (box1.type === 'vtte') {\n                                continue; //Empty box\n                            }\n                            if (box1.type === 'vttc') {\n                                log('VTT vttc boxes.length = ' + box1.boxes.length);\n                                for (k = 0 ; k < box1.boxes.length; k++) {\n                                    var box2 = box1.boxes[k];\n                                    log('VTT box2: ' + box2.type);\n                                    if (box2.type === 'payl') {\n                                        var cue_text = box2.cue_text;\n                                        log('VTT cue_text = ' + cue_text);\n                                        var start_time = sample.cts / timescale;\n                                        var end_time = (sample.cts + sample.duration) / timescale;\n                                        captionArray.push({\n                                            start: start_time,\n                                            end: end_time,\n                                            data: cue_text,\n                                            styles: {}\n                                        });\n                                        log('VTT ' + start_time + '-' + end_time + ' : ' + cue_text);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (captionArray.length > 0) {\n                        textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\n                    }\n                }\n            }\n        } else if (mediaType === 'text') {\n            let dataView = new DataView(bytes, 0, bytes.byteLength);\n            ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\n\n            try {\n                result = getParser(codecType).parse(ccContent);\n                createTextTrackFromMediaInfo(result, mediaInfo);\n            } catch (e) {\n                errHandler.timedTextError(e, 'parse', ccContent);\n            }\n        } else if (mediaType === 'video') { //embedded text\n            if (chunk.segmentType === 'InitializationSegment') {\n                if (embeddedTimescale === 0) {\n                    embeddedTimescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        createTextTrackFromMediaInfo(null, embeddedTracks[i]);\n                    }\n                }\n            } else { // MediaSegment\n                if (embeddedTimescale === 0) {\n                    log('CEA-608: No timescale for embeddedTextTrack yet');\n                    return;\n                }\n                var makeCueAdderForIndex = function (self, trackIndex) {\n                    function newCue(startTime, endTime, captionScreen) {\n                        var captionsArray = null;\n                        if (videoModel.getTTMLRenderingDiv()) {\n                            captionsArray = createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\n                        } else {\n                            var text = captionScreen.getDisplayText();\n                            //log(\"CEA text: \" + startTime + \"-\" + endTime + \"  '\" + text + \"'\");\n                            captionsArray = [{ start: startTime, end: endTime, data: text, styles: {} }];\n                        }\n                        if (captionsArray) {\n                            textTracks.addCaptions(trackIndex, 0, captionsArray);\n                        }\n                    }\n                    return newCue;\n                };\n\n\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n                var sequenceNumber = samplesInfo.sequenceNumber;\n\n                if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\n                    // Time to setup the CEA-608 parsing\n                    let field, handler, trackIdx;\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        if (embeddedTracks[i].id === 'CC1') {\n                            field = 0;\n                            trackIdx = textTracks.getTrackIdxForId('CC1');\n                        } else if (embeddedTracks[i].id === 'CC3') {\n                            field = 1;\n                            trackIdx = textTracks.getTrackIdxForId('CC3');\n                        }\n                        if (trackIdx === -1) {\n                            log('CEA-608: data before track is ready.');\n                            return;\n                        }\n                        handler = makeCueAdderForIndex(this, trackIdx);\n                        embeddedCea608FieldParsers[i] = new cea608parser.Cea608Parser(i, { 'newCue': handler }, null);\n                    }\n                }\n\n                if (embeddedTimescale && embeddedSequenceNumbers.indexOf(sequenceNumber) == -1) {\n                    if (embeddedLastSequenceNumber !== null && sequenceNumber !== embeddedLastSequenceNumber + 1) {\n                        for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\n                            if (embeddedCea608FieldParsers[i]) {\n                                embeddedCea608FieldParsers[i].reset();\n                            }\n                        }\n                    }\n                    var allCcData = extractCea608Data(bytes);\n\n                    for (var fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\n                        var ccData = allCcData.fields[fieldNr];\n                        var fieldParser = embeddedCea608FieldParsers[fieldNr];\n                        if (fieldParser) {\n                            /*if (ccData.length > 0 ) {\n                                log(\"CEA-608 adding Data to field \" + fieldNr + \" \" + ccData.length + \"bytes\");\n                            }*/\n                            for (i = 0; i < ccData.length; i++) {\n                                fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\n                            }\n                            if (allCcData.endTime) {\n                                fieldParser.cueSplitAtTime(allCcData.endTime / embeddedTimescale);\n                            }\n                        }\n                    }\n                    embeddedLastSequenceNumber = sequenceNumber;\n                    embeddedSequenceNumbers.push(sequenceNumber);\n                }\n            }\n        }\n    }\n    /**\n     * Extract CEA-608 data from a buffer of data.\n     * @param {ArrayBuffer} data\n     * @returns {Object|null} ccData corresponding to one segment.\n    */\n    function extractCea608Data(data) {\n\n        /* Insert [time, data] pairs in order into array. */\n        var insertInOrder = function (arr, time, data) {\n            var len = arr.length;\n            if (len > 0) {\n                if (time >= arr[len - 1][0]) {\n                    arr.push([time, data]);\n                } else {\n                    for (var pos = len - 1; pos >= 0; pos--) {\n                        if (time < arr[pos][0]) {\n                            arr.splice(pos, 0, [time, data]);\n                            break;\n                        }\n                    }\n                }\n            } else {\n                arr.push([time, data]);\n            }\n        };\n\n        var isoFile = boxParser.parse(data);\n        var moof = isoFile.getBox('moof');\n        var tfdt = isoFile.getBox('tfdt');\n        var tfhd = isoFile.getBox('tfhd'); //Can have a base_data_offset and other default values\n        //log(\"tfhd: \" + tfhd);\n        //var saio = isoFile.getBox('saio'); // Offset possibly\n        //var saiz = isoFile.getBox('saiz'); // Possible sizes\n        var truns = isoFile.getBoxes('trun'); //\n        var trun = null;\n\n        if (truns.length === 0) {\n            return null;\n        }\n        trun = truns[0];\n        if (truns.length > 1) {\n            log('Warning: Too many truns');\n        }\n        var baseOffset = moof.offset + trun.data_offset;\n        //Doublecheck that trun.offset == moof.size + 8\n        var sampleCount = trun.sample_count;\n        var startPos = baseOffset;\n        var baseSampleTime = tfdt.baseMediaDecodeTime;\n        var raw = new DataView(data);\n        var allCcData = { 'startTime': null, 'endTime': null, fields: [[], []] };\n        var accDuration = 0;\n        for (var i = 0; i < sampleCount; i++) {\n            var sample = trun.samples[i];\n            if (sample.sample_duration === undefined) {\n                sample.sample_duration = tfhd.default_sample_duration;\n            }\n            if (sample.sample_size === undefined) {\n                sample.sample_size = tfhd.default_sample_size;\n            }\n            if (sample.sample_composition_time_offset === undefined) {\n                sample.sample_composition_time_offset = 0;\n            }\n            var sampleTime = baseSampleTime + accDuration + sample.sample_composition_time_offset;\n            var cea608Ranges = cea608parser.findCea608Nalus(raw, startPos, sample.sample_size);\n            for (var j = 0; j < cea608Ranges.length; j++) {\n                var ccData = cea608parser.extractCea608DataFromRange(raw, cea608Ranges[j]);\n                for (var k = 0; k < 2; k++) {\n                    if (ccData[k].length > 0) {\n                        insertInOrder(allCcData.fields[k], sampleTime, ccData[k]);\n                    }\n                }\n            }\n\n            accDuration += sample.sample_duration;\n            startPos += sample.sample_size;\n        }\n        var endSampleTime = baseSampleTime + accDuration;\n        allCcData.startTime = baseSampleTime;\n        allCcData.endTime = endSampleTime;\n        return allCcData;\n    }\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        var line = '';\n\n        for (var c = 0; c < chars.length; ++c) {\n            var uc = chars[c];\n            line += uc.uchar;\n        }\n\n        var l = line.length;\n        var ll = line.replace(/^\\s+/,'').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color == 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color == 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color == 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color == 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color == 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color == 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color == 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color == 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        var fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        var trimmed = s.replace(/^\\s+/g, '');\n        return trimmed;\n    }\n    function rtrim(s) {\n        var trimmed = s.replace(/\\s+$/g, '');\n        return trimmed;\n    }\n\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = { start: startTime, end: endTime, spans: [] };\n        let currentStyle = 'style_cea608_white_black';\n        let seenRegions = { };\n        let styleStates = { };\n        let regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            let row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                let rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    let uc = row.chars[c];\n                    let currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        //log(styleStates);\n        //log(regions);\n\n        let captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            let region = regions[r];\n\n            let cueID = 'sub_cea608_' + (captionId++);\n            let finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            let cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            let bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            let cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                let ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            let brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        let spanStyle = styleStates[span.name];\n                        let spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        if ((s !== 0) && sameRow) {\n                            if (s === ptag.spans.length - 1) {\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            if (s === 0) {\n                                if (ptag.spans.length > 1) {\n                                    /* Check if next text is on same row */\n                                    if (span.row === ptag.spans[1].row) {\n                                        /* Next element on same row, trim start */\n                                        spanElement.textContent = ltrim(span.line);\n                                    } else {\n                                        /* Different rows, trim */\n                                        spanElement.textContent = span.line.trim();\n                                    }\n                                } else {\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n\n            finalDiv.appendChild(bodyDiv);\n\n            let fontSize = { 'bodyStyle': ['%', 90] };\n            for (s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({ type: 'html',\n                                 start: startTime,\n                                 end: endTime,\n                                 cueHTMLElement: finalDiv,\n                                 cueID: cueID,\n                                 cellResolution: [32, 15],\n                                 isFromCEA608: true,\n                                 regions: regions,\n                                 regionID: region.name,\n                                 videoHeight: videoElement.videoHeight,\n                                 videoWidth: videoElement.videoWidth,\n                                 fontSize: fontSize,\n                                 lineHeight: {},\n                                 linePadding: {},\n                               });\n        }\n        return captionsArray;\n    }\n\n    function abort() {\n        textTracks.deleteAllTextTracks();\n        allTracksAreDisabled = false;\n        parser = null;\n        fragmentedTextBoxParser = null;\n        mediaInfos = null;\n        textTracks = null;\n        isFragmented = false;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        timescale = NaN;\n        fragmentedTracks = [];\n        videoModel = null;\n        streamController = null;\n        embeddedInitialized = false;\n        embeddedTracks = null;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n        if (mediaInfo.id === 'CC1' || mediaInfo.id === 'CC3') {\n            embeddedTracks.push(mediaInfo);\n        } else {\n            log('Warning: Embedded track ' + mediaInfo.id + ' not supported!');\n        }\n    }\n\n    function resetEmbedded() {\n        embeddedInitialized = false;\n        embeddedTracks = [];\n        embeddedCea608FieldParsers = [null, null];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n    }\n\n    function getAllTracksAreDisabled() {\n        return allTracksAreDisabled;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textTracks) {\n            textTracks = config.textTracks;\n        }\n        if (config.VTTParser) {\n            VTTParser = config.VTTParser;\n        }\n        if (config.TTMLParser) {\n            TTMLParser = config.TTMLParser;\n        }\n    }\n\n    function setTextTrack() {\n\n        var el = videoModel.getElement();\n        var tracks = el.textTracks;\n        var ln = tracks.length;\n        var nrNonEmbeddedTracks = ln - embeddedTracks.length;\n        var oldTrackIdx = textTracks.getCurrentTrackIdx();\n\n        for (var i = 0; i < ln; i++ ) {\n            var track = tracks[i];\n            allTracksAreDisabled = track.mode !== 'showing';\n            if (track.mode === 'showing') {\n                if (oldTrackIdx !== i) { // do not reset track if already the current track.  This happens when all captions get turned off via UI and then turned on again and with videojs.\n                    textTracks.setCurrentTrackIdx(i);\n                    textTracks.addCaptions(i, 0, null); // Make sure that previously queued captions are added as cues\n                    if (isFragmented && i < nrNonEmbeddedTracks) {\n                        var currentFragTrack = mediaController.getCurrentTrackFor('fragmentedText', streamController.getActiveStreamInfo());\n                        var newFragTrack = fragmentedTracks[i];\n                        if (newFragTrack !== currentFragTrack) {\n                            fragmentModel.abortRequests();\n                            textTracks.deleteTrackCues(currentFragTrack);\n                            mediaController.setTrack(newFragTrack);\n                            currFragmentedTrackIdx = i;\n                        }\n                    }\n                }\n                break;\n            }\n        }\n\n        if (allTracksAreDisabled) {\n            textTracks.setCurrentTrackIdx(-1);\n        }\n    }\n\n    function getIsDefault(mediaInfo) {\n        //TODO How to tag default. currently same order as listed in manifest.\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\n        var isDefault = false;\n        if (embeddedTracks.length > 1 && mediaInfo.isEmbedded) {\n            isDefault = (mediaInfo.id && mediaInfo.id === 'CC1'); // CC1 if both CC1 and CC3 exist\n        } else if (embeddedTracks.length === 1) {\n            if (mediaInfo.id && mediaInfo.id.substring(0, 2) === 'CC') {// Either CC1 or CC3\n                isDefault = true;\n            }\n        } else if (embeddedTracks.length === 0) {\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\n        }\n        return isDefault;\n    }\n\n    function getParser(codecType) {\n        var parser;\n        if (codecType.search('vtt') >= 0) {\n            parser = VTTParser;\n        } else if (codecType.search('ttml') >= 0 || codecType.search('stpp') >= 0) {\n            parser = TTMLParser;\n            parser.setConfig({videoModel: videoModel});\n        }\n        return parser;\n    }\n\n    function getCurrentTrackIdx() {\n        return textTracks.getCurrentTrackIdx();\n    }\n\n    instance = {\n        initialize: initialize,\n        append: append,\n        abort: abort,\n        getCurrentTrackIdx: getCurrentTrackIdx,\n        getAllTracksAreDisabled: getAllTracksAreDisabled,\n        setTextTrack: setTextTrack,\n        setConfig: setConfig,\n        addEmbeddedTrack: addEmbeddedTrack,\n        resetEmbedded: resetEmbedded\n    };\n\n    return instance;\n}\n\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\nexport default FactoryMaker.getSingletonFactory(TextSourceBuffer);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\n\nfunction TextTracks() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let log = Debug(context).getInstance().log;\n\n    let instance,\n        Cue,\n        videoModel,\n        video,\n        textTrackQueue,\n        trackElementArr,\n        currentTrackIdx,\n        actualVideoLeft,\n        actualVideoTop,\n        actualVideoWidth,\n        actualVideoHeight,\n        captionContainer,\n        videoSizeCheckInterval,\n        isChrome,\n        fullscreenAttribute,\n        displayCCOnTop,\n        topZIndex;\n\n    function initialize () {\n        Cue = window.VTTCue || window.TextTrackCue;\n        textTrackQueue = [];\n        trackElementArr = [];\n        currentTrackIdx = -1;\n        actualVideoLeft = 0;\n        actualVideoTop = 0;\n        actualVideoWidth = 0;\n        actualVideoHeight = 0;\n        captionContainer = null;\n        videoSizeCheckInterval = null;\n        displayCCOnTop = false;\n        topZIndex = 2147483647;\n\n        //TODO Check if IE has resolved issues: Then revert to not using the addTextTrack API for all browsers.\n        // https://connect.microsoft.com/IE/feedbackdetail/view/1660701/text-tracks-do-not-fire-change-addtrack-or-removetrack-events\n        // https://connect.microsoft.com/IE/feedback/details/1573380/htmltrackelement-track-addcue-throws-invalidstateerror-when-adding-new-cue\n        // Same issue with Firefox.\n        //isIE11orEdge = !!navigator.userAgent.match(/Trident.*rv[ :]*11\\./) || navigator.userAgent.match(/Edge/);\n        //isFirefox = !!navigator.userAgent.match(/Firefox/);\n        isChrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);\n        if (document.fullscreenElement !== undefined) {\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n        } else if (document.webkitIsFullScreen !== undefined) {\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n        } else if (document.msFullscreenElement) { // IE11\n            fullscreenAttribute = 'msFullscreenElement';\n        } else if (document.mozFullScreen) { // Firefox\n            fullscreenAttribute = 'mozFullScreen';\n        }\n\n    }\n\n    function createTrackForUserAgent (i) {\n        var kind = textTrackQueue[i].kind;\n        var label = textTrackQueue[i].label !== undefined ? textTrackQueue[i].label : textTrackQueue[i].lang;\n        var lang = textTrackQueue[i].lang;\n        var track = isChrome ? document.createElement('track') : video.addTextTrack(kind, label, lang);\n\n        if (isChrome) {\n            track.kind = kind;\n            track.label = label;\n            track.srclang = lang;\n        }\n\n        return track;\n    }\n\n    function displayCConTop (value) {\n        displayCCOnTop = value;\n        if (!captionContainer || document[fullscreenAttribute]) return;\n        captionContainer.style.zIndex = value ? topZIndex : null;\n    }\n\n    function addTextTrack(textTrackInfoVO, totalTextTracks) {\n\n        if (textTrackQueue.length === totalTextTracks) {\n            log('Trying to add too many tracks.');\n            return;\n        }\n\n        textTrackQueue.push(textTrackInfoVO);\n        if (video === undefined) {\n            video = textTrackInfoVO.video;\n        }\n\n        if (textTrackQueue.length === totalTextTracks) {\n            textTrackQueue.sort(function (a, b) { //Sort in same order as in manifest\n                return a.index - b.index;\n            });\n            captionContainer = videoModel.getTTMLRenderingDiv();\n            var defaultIndex = -1;\n            for (var i = 0 ; i < textTrackQueue.length; i++) {\n                var track = createTrackForUserAgent.call(this, i);\n                trackElementArr.push(track); //used to remove tracks from video element when added manually\n\n                if (textTrackQueue[i].defaultTrack) {\n                    // track.default is an object property identifier that is a reserved word\n                    // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\n                    /*jshint -W024 */\n                    track.default = true;\n                    defaultIndex = i;\n                }\n                if (isChrome) {\n                    video.appendChild(track);\n                }\n                var textTrack = video.textTracks[i];\n                textTrack.nonAddedCues = [];\n                if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\n                    textTrack.renderingType = 'html';\n                } else {\n                    textTrack.renderingType = 'default';\n                }\n                this.addCaptions(i, 0, textTrackQueue[i].captionData);\n                eventBus.trigger(Events.TEXT_TRACK_ADDED);\n            }\n            setCurrentTrackIdx.call(this, defaultIndex);\n            if (defaultIndex >= 0) {\n                for (let idx = 0; i < video.textTracks.length; idx++) {\n                    video.textTracks[idx].mode = (idx === defaultIndex) ? 'showing' : 'hidden';\n                }\n                this.addCaptions(defaultIndex, 0, null);\n            }\n            eventBus.trigger(Events.TEXT_TRACKS_ADDED, {index: currentTrackIdx, tracks: textTrackQueue});//send default idx.\n        }\n    }\n\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n        var viewAspectRatio = viewWidth / viewHeight;\n        var videoAspectRatio = videoWidth / videoHeight;\n\n        var videoPictureWidth = 0;\n        var videoPictureHeight = 0;\n\n        if (viewAspectRatio > videoAspectRatio) {\n            videoPictureHeight = viewHeight;\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\n        } else {\n            videoPictureWidth = viewWidth;\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\n        }\n\n        var videoPictureXAspect = 0;\n        var videoPictureYAspect = 0;\n        var videoPictureWidthAspect = 0;\n        var videoPictureHeightAspect = 0;\n        var videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n        if (videoPictureAspect > aspectRatio) {\n            videoPictureHeightAspect = videoPictureHeight;\n            videoPictureWidthAspect = videoPictureHeight / (1 / aspectRatio);\n            videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n            videoPictureYAspect = 0;\n        } else {\n            videoPictureWidthAspect = videoPictureWidth;\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n            videoPictureXAspect = 0;\n            videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n        }\n\n        if (use80Percent) {\n            return { x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\n                     y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\n                     w: videoPictureWidthAspect * 0.8,\n                     h: videoPictureHeightAspect * 0.8 }; /* Maximal picture size in videos aspect ratio */\n        } else {\n            return { x: videoPictureXAspect,\n                     y: videoPictureYAspect,\n                     w: videoPictureWidthAspect,\n                     h: videoPictureHeightAspect }; /* Maximal picture size in videos aspect ratio */\n        }\n    }\n\n\n    function checkVideoSize() {\n        var track = this.getCurrentTextTrack();\n        if (track && track.renderingType === 'html') {\n            let aspectRatio = video.clientWidth / video.clientHeight;\n            let use80Percent = false;\n            if (track.isFromCEA608) {\n                // If this is CEA608 then use predefined aspect ratio\n                aspectRatio = 3.5 / 3.0;\n                use80Percent = true;\n            }\n\n            const realVideoSize = getVideoVisibleVideoSize.call(this, video.clientWidth, video.clientHeight, video.videoWidth, video.videoHeight, aspectRatio, use80Percent);\n\n            const newVideoWidth = realVideoSize.w;\n            const newVideoHeight = realVideoSize.h;\n\n            if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight) {\n                actualVideoLeft = realVideoSize.x;\n                actualVideoTop = realVideoSize.y;\n                actualVideoWidth = newVideoWidth;\n                actualVideoHeight = newVideoHeight;\n                captionContainer.style.left = actualVideoLeft + 'px';\n                captionContainer.style.top = actualVideoTop + 'px';\n                captionContainer.style.width = actualVideoWidth + 'px';\n                captionContainer.style.height = actualVideoHeight + 'px';\n\n                // Video view has changed size, so resize any active cues\n                for (let i = 0; track.activeCues && i < track.activeCues.length; ++i) {\n                    let cue = track.activeCues[i];\n                    cue.scaleCue(cue);\n                }\n\n                if ((fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop) {\n                    captionContainer.style.zIndex = topZIndex;\n                } else {\n                    captionContainer.style.zIndex = null;\n                }\n            }\n        }\n    }\n\n    function convertToPixels(percentage, pixelMeasure) {\n        let percentString = Math.round(0.01 * percentage * pixelMeasure).toString() + 'px';\n        return percentString;\n    }\n\n    function scaleImageCue(activeCue) {\n        var videoWidth = actualVideoWidth;\n        var videoHeight = actualVideoHeight;\n\n        if (videoWidth * videoHeight === 0) {\n            return; //At least one of the measures is still zero\n        }\n\n        if (activeCue.layout) {\n            let layout = activeCue.layout;\n            let left = convertToPixels(layout.left, videoWidth);\n            let top = convertToPixels(layout.top, videoHeight);\n            let width = convertToPixels(layout.width, videoWidth);\n            let height = convertToPixels(layout.height, videoHeight);\n            captionContainer.style.left = left;\n            captionContainer.style.top = top;\n            captionContainer.style.width = width;\n            captionContainer.style.height = height;\n            let image = captionContainer.firstChild;\n            if (image && image.style) {\n                image.style.left = '0px';\n                image.style.top = '0px';\n                image.style.width = width;\n                image.style.height = height;\n            }\n        }\n    }\n\n    function scaleCue(activeCue) {\n        var videoWidth = actualVideoWidth;\n        var videoHeight = actualVideoHeight;\n        var key,\n            replaceValue,\n            valueFontSize,\n            valueLineHeight,\n            elements;\n\n        var cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n        if (activeCue.linePadding) {\n            for (key in activeCue.linePadding) {\n                if (activeCue.linePadding.hasOwnProperty(key)) {\n                    var valueLinePadding = activeCue.linePadding[key];\n                    replaceValue = (valueLinePadding * cellUnit[0]).toString();\n                    // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n                    var elementsSpan = document.getElementsByClassName('spanPadding');\n                    for (var i = 0; i < elementsSpan.length; i++) {\n                        elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                    }\n                }\n            }\n        }\n\n        if (activeCue.fontSize) {\n            for (key in activeCue.fontSize) {\n                if (activeCue.fontSize.hasOwnProperty(key)) {\n                    if (activeCue.fontSize[key][0] === '%') {\n                        valueFontSize = activeCue.fontSize[key][1] / 100;\n                    }else if (activeCue.fontSize[key][0] === 'c') {\n                        valueFontSize = activeCue.fontSize[key][1];\n                    }\n\n                    replaceValue  = (valueFontSize * cellUnit[1]).toString();\n\n                    if (key !== 'defaultFontSize') {\n                        elements = document.getElementsByClassName(key);\n                    } else {\n                        elements = document.getElementsByClassName('paragraph');\n                    }\n\n                    for (var j = 0; j < elements.length; j++) {\n                        elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                    }\n                }\n            }\n        }\n\n        if (activeCue.lineHeight) {\n            for (key in activeCue.lineHeight) {\n                if (activeCue.lineHeight.hasOwnProperty(key)) {\n                    if (activeCue.lineHeight[key][0] === '%') {\n                        valueLineHeight = activeCue.lineHeight[key][1] / 100;\n                    }else if (activeCue.fontSize[key][0] === 'c') {\n                        valueLineHeight = activeCue.lineHeight[key][1];\n                    }\n\n                    replaceValue = (valueLineHeight * cellUnit[1]).toString();\n                    elements = document.getElementsByClassName(key);\n                    for (var k = 0; k < elements.length; k++) {\n                        elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n    * Add captions to track, store for later adding, or add captions added before\n    */\n    function addCaptions(trackIdx, timeOffset, captionData) {\n        var track = trackIdx >= 0 ?  video.textTracks[trackIdx] : null;\n        var self = this;\n\n        if (!track) return;\n        if (track.mode !== 'showing') {\n            if (captionData && captionData.length > 0) {\n                track.nonAddedCues = track.nonAddedCues.concat(captionData);\n            }\n            return;\n        }\n\n        if (!captionData) {\n            captionData = track.nonAddedCues;\n            track.nonAddedCues = [];\n        }\n\n        if (!captionData || captionData.length === 0) {\n            return;\n        }\n\n        for (var item in captionData) {\n            var cue;\n            var currentItem = captionData[item];\n\n            track.cellResolution = currentItem.cellResolution;\n            track.isFromCEA608 = currentItem.isFromCEA608;\n\n            if (!videoSizeCheckInterval && (currentItem.type === 'html' || currentItem.type === 'image') ) {\n                videoSizeCheckInterval = setInterval(checkVideoSize.bind(this), 500);\n            }\n\n            //image subtitle extracted from TTML\n            if (currentItem.type === 'image') {\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\n                cue.image = currentItem.data;\n                cue.id = currentItem.id;\n                cue.size = 0; //discard the native display for this subtitles\n                cue.type = 'image'; // active image overlay\n                cue.layout = currentItem.layout;\n                cue.scaleCue = scaleImageCue.bind(self);\n                cue.onenter = function () {\n                    if (!captionContainer) { // Does not support image captions without a container\n                        return;\n                    }\n                    if (track.mode === 'showing') {\n                        var img = new Image();\n                        img.id = 'ttmlImage_' + this.id;\n                        img.src = this.image;\n                        //img.className = 'cue-image';\n                        img.style.cssText = 'z-index: 2147483648; pointer-events: none; display: block; visibility: visible !important; position: relative !important;';\n                        captionContainer.appendChild(img);\n                        scaleImageCue.call(self, this);\n                    }\n                };\n\n                cue.onexit =  function () {\n                    if (!captionContainer) {\n                        return;\n                    }\n                    let imgs = captionContainer.childNodes;\n                    for (let i = 0; i < imgs.length; i++) {\n                        if (imgs[i].id === 'ttmlImage_' + this.id) {\n                            captionContainer.removeChild(imgs[i]);\n                        }\n                    }\n                };\n            }\n            else if (currentItem.type === 'html') {\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\n                cue.cueHTMLElement = currentItem.cueHTMLElement;\n                cue.regions = currentItem.regions;\n                cue.regionID = currentItem.regionID;\n                cue.cueID = currentItem.cueID;\n                cue.videoWidth = currentItem.videoWidth;\n                cue.videoHeight = currentItem.videoHeight;\n                cue.cellResolution = currentItem.cellResolution;\n                cue.fontSize = currentItem.fontSize;\n                cue.lineHeight = currentItem.lineHeight;\n                cue.linePadding = currentItem.linePadding;\n                cue.scaleCue = scaleCue.bind(self);\n                captionContainer.style.left = actualVideoLeft + 'px';\n                captionContainer.style.top = actualVideoTop + 'px';\n                captionContainer.style.width = actualVideoWidth + 'px';\n                captionContainer.style.height = actualVideoHeight + 'px';\n\n                cue.onenter =  function () {\n                    if (track.mode === 'showing') {\n                        log('Cue ' + this.startTime + '-' + this.endTime + ' : ' + this.cueHTMLElement.id + ' : ' + this.cueHTMLElement.innerText);\n                        captionContainer.appendChild(this.cueHTMLElement);\n                        scaleCue.call(self, this);\n                    }\n                };\n\n                cue.onexit =  function () {\n                    var divs = captionContainer.childNodes;\n                    for (var i = 0; i < divs.length; ++i) {\n                        if (divs[i].id === this.cueID) {\n                            captionContainer.removeChild(divs[i]);\n                        }\n                    }\n                };\n            }\n            else {\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n                if (currentItem.styles) {\n                    if (currentItem.styles.align !== undefined && cue.hasOwnProperty('align')) {\n                        cue.align = currentItem.styles.align;\n                    }\n                    if (currentItem.styles.line !== undefined && cue.hasOwnProperty('line')) {\n                        cue.line = currentItem.styles.line;\n                    }\n                    if (currentItem.styles.position !== undefined && cue.hasOwnProperty('position')) {\n                        cue.position = currentItem.styles.position ;\n                    }\n                    if (currentItem.styles.size !== undefined && cue.hasOwnProperty('size')) {\n                        cue.size = currentItem.styles.size;\n                    }\n                }\n            }\n\n            track.addCue(cue);\n        }\n    }\n\n    function getCurrentTextTrack() {\n        return currentTrackIdx >= 0 ? video.textTracks[currentTrackIdx] : null;\n    }\n\n    function getCurrentTrackIdx() {\n        return currentTrackIdx;\n    }\n\n    function getTrackIdxForId(trackId) {\n        var idx = -1;\n        for (var i = 0; i < video.textTracks.length; i++) {\n            if (video.textTracks[i].label === trackId) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    function setCurrentTrackIdx(idx) {\n        currentTrackIdx = idx;\n        clearCaptionContainer.call(this);\n        if (idx >= 0) {\n            var track = video.textTracks[idx];\n            if (track.renderingType === 'html') {\n                setNativeCueStyle.call(this);\n            } else {\n                removeNativeCueStyle.call(this);\n            }\n        } else {\n            removeNativeCueStyle.call(this);\n        }\n    }\n\n    function getTextTrack(idx) {\n        return video.textTracks[idx];\n    }\n\n    function deleteTrackCues(track) {\n        if (track.cues) {\n            var cues = track.cues;\n            var lastIdx = cues.length - 1;\n\n            for (var r = lastIdx; r >= 0 ; r--) {\n                track.removeCue(cues[r]);\n            }\n\n            track.mode = 'disabled';\n        }\n    }\n\n    function deleteAllTextTracks() {\n        var ln = trackElementArr.length;\n        for (var i = 0; i < ln; i++) {\n            if (isChrome) {\n                video.removeChild(trackElementArr[i]);\n            }else {\n                var track = getTextTrack.call(this, i);\n                track.nonAddedCues = [];\n                deleteTrackCues.call(this, track);\n            }\n\n        }\n        trackElementArr = [];\n        textTrackQueue = [];\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n        clearCaptionContainer.call(this);\n    }\n\n    function deleteTextTrack(idx) {\n        video.removeChild(trackElementArr[idx]);\n        trackElementArr.splice(idx, 1);\n    }\n\n    /* Set native cue style to transparent background to avoid it being displayed. */\n    function setNativeCueStyle() {\n        if (!isChrome) return;\n        var styleElement = document.getElementById('native-cue-style');\n        if (styleElement) return; //Already set\n\n        styleElement = document.createElement('style');\n        styleElement.id  = 'native-cue-style';\n        document.head.appendChild(styleElement);\n        var stylesheet = styleElement.sheet;\n        if (video.id) {\n            stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n        } else if (video.classList.length !== 0) {\n            stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n        } else {\n            stylesheet.insertRule('video::cue {background: transparent}', 0);\n        }\n    }\n\n    /* Remove the extra cue style with transparent background for native cues. */\n    function removeNativeCueStyle() {\n        if (!isChrome) return;\n        var styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            document.head.removeChild(styleElement);\n        }\n    }\n\n    function clearCaptionContainer() {\n        if (captionContainer) {\n            while (captionContainer.firstChild) {\n                captionContainer.removeChild(captionContainer.firstChild);\n            }\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        displayCConTop: displayCConTop,\n        addTextTrack: addTextTrack,\n        addCaptions: addCaptions,\n        getTextTrack: getTextTrack,\n        getCurrentTextTrack: getCurrentTextTrack,\n        getCurrentTrackIdx: getCurrentTrackIdx,\n        setCurrentTrackIdx: setCurrentTrackIdx,\n        getTrackIdxForId: getTrackIdxForId,\n        deleteTrackCues: deleteTrackCues,\n        deleteAllTextTracks: deleteAllTextTracks,\n        deleteTextTrack: deleteTextTrack,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexport default FactoryMaker.getSingletonFactory(TextTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport FactoryMaker from '../core/FactoryMaker';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport ErrorHandler from './utils/ErrorHandler.js';\n\n/**\n * @module XHRLoader\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependancies from parent\n */\nfunction XHRLoader(cfg) {\n    const context = this.context;\n\n    //const log = Debug(context).getInstance().log;\n    const mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n    const errHandler = cfg.errHandler;\n    const metricsModel = cfg.metricsModel;\n    const requestModifier = cfg.requestModifier;\n\n    let instance;\n    let xhrs;\n    let delayedXhrs;\n    let retryTimers;\n    let downloadErrorToRequestTypeMap;\n\n    function setup() {\n        xhrs = [];\n        delayedXhrs = [];\n        retryTimers = [];\n\n        downloadErrorToRequestTypeMap = {\n            [HTTPRequest.MPD_TYPE]:                         ErrorHandler.DOWNLOAD_ERROR_ID_MANIFEST,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             ErrorHandler.DOWNLOAD_ERROR_ID_XLINK,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                ErrorHandler.DOWNLOAD_ERROR_ID_INITIALIZATION,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.OTHER_TYPE]:                       ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT\n        };\n    }\n\n    function internalLoad(config, remainingAttempts) {\n\n        var request = config.request;\n        var xhr = new XMLHttpRequest();\n        var traces = [];\n        var firstProgress = true;\n        var needFailureReport = true;\n        const requestStartTime = new Date();\n        var lastTraceTime = requestStartTime;\n        var lastTraceReceivedCount = 0;\n\n        const handleLoaded = function (success) {\n            needFailureReport = false;\n\n            request.requestStartDate = requestStartTime;\n            request.requestEndDate = new Date();\n            request.firstByteDate = request.firstByteDate || requestStartTime;\n\n            if (!request.checkExistenceOnly) {\n                metricsModel.addHttpRequest(\n                    request.mediaType,\n                    null,\n                    request.type,\n                    request.url,\n                    xhr.responseURL || null,\n                    request.serviceLocation || null,\n                    request.range || null,\n                    request.requestStartDate,\n                    request.firstByteDate,\n                    request.requestEndDate,\n                    xhr.status,\n                    request.duration,\n                    xhr.getAllResponseHeaders(),\n                    success ? traces : null\n                );\n            }\n        };\n\n        const onloadend = function () {\n            if (xhrs.indexOf(xhr) === -1) {\n                return;\n            } else {\n                xhrs.splice(xhrs.indexOf(xhr), 1);\n            }\n\n            if (needFailureReport) {\n                handleLoaded(false);\n\n                if (remainingAttempts > 0) {\n                    remainingAttempts--;\n                    retryTimers.push(\n                        setTimeout(function () {\n                            internalLoad(config, remainingAttempts);\n                        }, mediaPlayerModel.getRetryIntervalForType(request.type))\n                    );\n                } else {\n                    errHandler.downloadError(\n                        downloadErrorToRequestTypeMap[request.type],\n                        request.url,\n                        request\n                    );\n\n                    if (config.error) {\n                        config.error(request, 'error', xhr.statusText);\n                    }\n\n                    if (config.complete) {\n                        config.complete(request, xhr.statusText);\n                    }\n                }\n            }\n        };\n\n        const progress = function (event) {\n            var currentTime = new Date();\n\n            if (firstProgress) {\n                firstProgress = false;\n                if (!event.lengthComputable ||\n                    (event.lengthComputable && event.total !== event.loaded)) {\n                    request.firstByteDate = currentTime;\n                }\n            }\n\n            if (event.lengthComputable) {\n                request.bytesLoaded = event.loaded;\n                request.bytesTotal = event.total;\n            }\n\n            traces.push({\n                s: lastTraceTime,\n                d: currentTime.getTime() - lastTraceTime.getTime(),\n                b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\n            });\n\n            lastTraceTime = currentTime;\n            lastTraceReceivedCount = event.loaded;\n\n            if (config.progress) {\n                config.progress();\n            }\n        };\n\n        const onload = function () {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                handleLoaded(true);\n\n                if (config.success) {\n                    config.success(xhr.response, xhr.statusText, xhr);\n                }\n\n                if (config.complete) {\n                    config.complete(request, xhr.statusText);\n                }\n            }\n        };\n\n        try {\n            const modifiedUrl = requestModifier.modifyRequestURL(request.url);\n            const verb = request.checkExistenceOnly ? 'HEAD' : 'GET';\n\n            xhr.open(verb, modifiedUrl, true);\n\n            if (request.responseType) {\n                xhr.responseType = request.responseType;\n            }\n\n            if (request.range) {\n                xhr.setRequestHeader('Range', 'bytes=' + request.range);\n            }\n\n            if (!request.requestStartDate) {\n                request.requestStartDate = requestStartTime;\n            }\n\n            xhr = requestModifier.modifyRequestHeader(xhr);\n\n            xhr.withCredentials = mediaPlayerModel.getXHRWithCredentialsForType(request.type);\n\n            xhr.onload = onload;\n            xhr.onloadend = onloadend;\n            xhr.onerror = onloadend;\n            xhr.onprogress = progress;\n\n            // Adds the ability to delay single fragment loading time to control buffer.\n            let now = new Date().getTime();\n            if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\n                // no delay - just send xhr\n\n                xhrs.push(xhr);\n                xhr.send();\n            } else {\n                // delay\n                let delayedXhr = {xhr: xhr};\n                delayedXhrs.push(delayedXhr);\n                delayedXhr.delayTimeout = setTimeout(function () {\n                    if (delayedXhrs.indexOf(delayedXhr) === -1) {\n                        return;\n                    } else {\n                        delayedXhrs.splice(delayedXhrs.indexOf(delayedXhr), 1);\n                    }\n                    try {\n                        xhrs.push(delayedXhr.xhr);\n                        delayedXhr.xhr.send();\n                    } catch (e) {\n                        delayedXhr.xhr.onerror();\n                    }\n                }, (request.delayLoadingTime - now));\n            }\n\n        } catch (e) {\n            xhr.onerror();\n        }\n    }\n\n    /**\n     * Initiates a download of the resource described by config.request\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\n     * @memberof module:XHRLoader\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            internalLoad(\n                config,\n                mediaPlayerModel.getRetryAttemptsForType(\n                    config.request.type\n                )\n            );\n        }\n    }\n\n    /**\n     * Aborts any inflight downloads\n     * @memberof module:XHRLoader\n     * @instance\n     */\n    function abort() {\n        retryTimers.forEach(t => clearTimeout(t));\n        retryTimers = [];\n\n        delayedXhrs.forEach(x => clearTimeout(x.delayTimeout));\n        delayedXhrs = [];\n\n        xhrs.forEach(x => {\n            // abort will trigger onloadend which we don't want\n            // when deliberately aborting inflight requests -\n            // set them to undefined so they are not called\n            x.onloadend = x.onerror = x.onprogress = undefined;\n            x.abort();\n        });\n        xhrs = [];\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    setup();\n\n    return instance;\n}\n\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\n\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Error from './vo/Error';\nimport XHRLoader from './XHRLoader';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TextRequest from './vo/TextRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst XLINK_LOADER_ERROR_LOADING_FAILURE = 1;\n\nfunction XlinkLoader(config) {\n\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context  = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let xhrLoader = XHRLoader(context).create({\n        errHandler: config.errHandler,\n        metricsModel: config.metricsModel,\n        requestModifier: config.requestModifier\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new Error(\n                        XLINK_LOADER_ERROR_LOADING_FAILURE,\n                        'Failed loading Xlink element: ' + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_TYPE);\n\n            xhrLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (xhrLoader) {\n            xhrLoader.abort();\n            xhrLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\n\nconst factory = FactoryMaker.getClassFactory(XlinkLoader);\nfactory.XLINK_LOADER_ERROR_LOADING_FAILURE = XLINK_LOADER_ERROR_LOADING_FAILURE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport SwitchRequest from '../rules/SwitchRequest';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport DOMStorage from '../utils/DOMStorage';\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport MediaPlayerModel from '../models/MediaPlayerModel';\nimport FragmentModel from '../models/FragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ManifestModel from '../models/ManifestModel';\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport VideoModel from '../models/VideoModel';\n\nconst ABANDON_LOAD = 'abandonload';\nconst ALLOW_LOAD = 'allowload';\nconst DEFAULT_VIDEO_BITRATE = 1000;\nconst DEFAULT_AUDIO_BITRATE = 100;\nconst QUALITY_DEFAULT = 0;\n\nfunction AbrController() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        abrRulesCollection,\n        rulesController,\n        streamController,\n        autoSwitchBitrate,\n        topQualities,\n        qualityDict,\n        confidenceDict,\n        bitrateDict,\n        ratioDict,\n        averageThroughputDict,\n        streamProcessorDict,\n        abandonmentStateDict,\n        abandonmentTimeout,\n        limitBitrateByPortal,\n        usePixelRatioInLimitBitrateByPortal,\n        windowResizeEventCalled,\n        elementWidth,\n        elementHeight,\n        manifestModel,\n        dashManifestModel,\n        videoModel,\n        mediaPlayerModel,\n        domStorage;\n\n    function setup() {\n        autoSwitchBitrate = {video: true, audio: true};\n        topQualities = {};\n        qualityDict = {};\n        confidenceDict = {};\n        bitrateDict = {};\n        ratioDict = {};\n        averageThroughputDict = {};\n        abandonmentStateDict = {};\n        streamProcessorDict = {};\n        limitBitrateByPortal = false;\n        usePixelRatioInLimitBitrateByPortal = false;\n        if (windowResizeEventCalled === undefined) {\n            windowResizeEventCalled = false;\n        }\n        domStorage = DOMStorage(context).getInstance();\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        manifestModel = ManifestModel(context).getInstance();\n        dashManifestModel = DashManifestModel(context).getInstance();\n        videoModel = VideoModel(context).getInstance();\n    }\n\n    function initialize(type, streamProcessor) {\n        streamProcessorDict[type] = streamProcessor;\n        abandonmentStateDict[type] = abandonmentStateDict[type] || {};\n        abandonmentStateDict[type].state = ALLOW_LOAD;\n        eventBus.on(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n        if (type == 'video') {\n            setElementSize();\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.abrRulesCollection) {\n            abrRulesCollection = config.abrRulesCollection;\n        }\n        if (config.rulesController) {\n            rulesController = config.rulesController;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n    }\n\n    function getTopQualityIndexFor(type, id) {\n        var idx;\n        topQualities[id] = topQualities[id] || {};\n\n        if (!topQualities[id].hasOwnProperty(type)) {\n            topQualities[id][type] = 0;\n        }\n\n        idx = checkMaxBitrate(topQualities[id][type], type);\n        idx = checkMaxRepresentationRatio(idx, type, topQualities[id][type]);\n        idx = checkPortalSize(idx, type);\n        return idx;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function getInitialBitrateFor(type) {\n\n        let savedBitrate = domStorage.getSavedBitrateSettings(type);\n\n        if (!bitrateDict.hasOwnProperty(type)) {\n            if (ratioDict.hasOwnProperty(type)) {\n                let manifest = manifestModel.getValue();\n                let representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\n\n                if (Array.isArray(representation)) {\n                    let repIdx = Math.max(Math.round(representation.length * ratioDict[type]) - 1, 0);\n                    bitrateDict[type] = representation[repIdx].bandwidth;\n                } else {\n                    bitrateDict[type] = 0;\n                }\n            } else if (!isNaN(savedBitrate)) {\n                bitrateDict[type] = savedBitrate;\n            } else {\n                bitrateDict[type] = (type === 'video') ? DEFAULT_VIDEO_BITRATE : DEFAULT_AUDIO_BITRATE;\n            }\n        }\n\n        return bitrateDict[type];\n    }\n\n    /**\n     * @param {string} type\n     * @param {number} value A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function setInitialBitrateFor(type, value) {\n        bitrateDict[type] = value;\n    }\n\n    function getInitialRepresentationRatioFor(type) {\n        if (!ratioDict.hasOwnProperty(type)) {\n            return null;\n        }\n\n        return ratioDict[type];\n    }\n\n    function setInitialRepresentationRatioFor(type, value) {\n        ratioDict[type] = value;\n    }\n\n    function getMaxAllowedBitrateFor(type) {\n        if (bitrateDict.hasOwnProperty('max') && bitrateDict.max.hasOwnProperty(type)) {\n            return bitrateDict.max[type];\n        }\n        return NaN;\n    }\n\n    //TODO  change bitrateDict structure to hold one object for video and audio with initial and max values internal.\n    // This means you need to update all the logic around initial bitrate DOMStorage, RebController etc...\n    function setMaxAllowedBitrateFor(type, value) {\n        bitrateDict.max = bitrateDict.max || {};\n        bitrateDict.max[type] = value;\n    }\n\n    function getMaxAllowedRepresentationRatioFor(type) {\n        if (ratioDict.hasOwnProperty('max') && ratioDict.max.hasOwnProperty(type)) {\n            return ratioDict.max[type];\n        }\n        return 1;\n    }\n\n    function setMaxAllowedRepresentationRatioFor(type, value) {\n        ratioDict.max = ratioDict.max || {};\n        ratioDict.max[type] = value;\n    }\n\n    function getAutoSwitchBitrateFor(type) {\n        return autoSwitchBitrate[type];\n    }\n\n    function setAutoSwitchBitrateFor(type, value) {\n        autoSwitchBitrate[type] = value;\n    }\n\n    function getLimitBitrateByPortal() {\n        return limitBitrateByPortal;\n    }\n\n    function setLimitBitrateByPortal(value) {\n        limitBitrateByPortal = value;\n    }\n\n    function getUsePixelRatioInLimitBitrateByPortal() {\n        return usePixelRatioInLimitBitrateByPortal;\n    }\n\n    function setUsePixelRatioInLimitBitrateByPortal(value) {\n        usePixelRatioInLimitBitrateByPortal = value;\n    }\n\n    function getPlaybackQuality(streamProcessor, completedCallback) {\n\n        const type = streamProcessor.getType();\n        const streamInfo = streamProcessor.getStreamInfo();\n        const streamId = streamInfo.id;\n\n        const callback = function (res) {\n\n            const topQualityIdx = getTopQualityIndexFor(type, streamId);\n\n            let newQuality = res.value;\n            if (newQuality < 0) {\n                newQuality = 0;\n            }\n            if (newQuality > topQualityIdx) {\n                newQuality = topQualityIdx;\n            }\n\n            const oldQuality = getQualityFor(type, streamInfo);\n            if (newQuality !== oldQuality && (abandonmentStateDict[type].state === ALLOW_LOAD || newQuality > oldQuality)) {\n                setConfidenceFor(type, streamId, res.confidence);\n                changeQuality(type, streamInfo, oldQuality, newQuality, res.reason);\n            }\n            if (completedCallback) {\n                completedCallback();\n            }\n        };\n\n        //log(\"ABR enabled? (\" + autoSwitchBitrate + \")\");\n        if (!getAutoSwitchBitrateFor(type)) {\n            if (completedCallback) {\n                completedCallback();\n            }\n        } else {\n            const rules = abrRulesCollection.getRules(ABRRulesCollection.QUALITY_SWITCH_RULES);\n            rulesController.applyRules(rules, streamProcessor, callback, getQualityFor(type, streamInfo), function (currentValue, newValue) {\n                currentValue = currentValue === SwitchRequest.NO_CHANGE ? 0 : currentValue;\n                return Math.max(currentValue, newValue);\n            });\n        }\n    }\n\n    function setPlaybackQuality(type, streamInfo, newQuality, reason) {\n        const id = streamInfo.id;\n        const oldQuality = getQualityFor(type, streamInfo);\n        const isInt = newQuality !== null && !isNaN(newQuality) && (newQuality % 1 === 0);\n\n        if (!isInt) throw new Error('argument is not an integer');\n\n        if (newQuality !== oldQuality && newQuality >= 0 && newQuality <= getTopQualityIndexFor(type, id)) {\n            changeQuality(type, streamInfo, oldQuality, newQuality, reason);\n        }\n    }\n\n    function changeQuality(type, streamInfo, oldQuality, newQuality, reason) {\n        setQualityFor(type, streamInfo.id, newQuality);\n        eventBus.trigger(Events.QUALITY_CHANGE_REQUESTED, {mediaType: type, streamInfo: streamInfo, oldQuality: oldQuality, newQuality: newQuality, reason: reason});\n    }\n\n\n    function setAbandonmentStateFor(type, state) {\n        abandonmentStateDict[type].state = state;\n    }\n\n    function getAbandonmentStateFor(type) {\n        return abandonmentStateDict[type].state;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @param {number} bitrate A bitrate value, kbps\n     * @returns {number} A quality index <= for the given bitrate\n     * @memberof AbrController#\n     */\n    function getQualityForBitrate(mediaInfo, bitrate) {\n\n        const bitrateList = getBitrateList(mediaInfo);\n\n        if (!bitrateList || bitrateList.length === 0) {\n            return QUALITY_DEFAULT;\n        }\n\n        for (let i = bitrateList.length - 1; i >= 0; i--) {\n            const bitrateInfo = bitrateList[i];\n            if (bitrate * 1000 >= bitrateInfo.bitrate) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @returns {Array|null} A list of {@link BitrateInfo} objects\n     * @memberof AbrController#\n     */\n    function getBitrateList(mediaInfo) {\n        if (!mediaInfo || !mediaInfo.bitrateList) return null;\n\n        var bitrateList = mediaInfo.bitrateList;\n        var type = mediaInfo.type;\n\n        var infoList = [];\n        var bitrateInfo;\n\n        for (var i = 0, ln = bitrateList.length; i < ln; i++) {\n            bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = type;\n            bitrateInfo.qualityIndex = i;\n            bitrateInfo.bitrate = bitrateList[i].bandwidth;\n            bitrateInfo.width = bitrateList[i].width;\n            bitrateInfo.height = bitrateList[i].height;\n            infoList.push(bitrateInfo);\n        }\n\n        return infoList;\n    }\n\n    function setAverageThroughput(type, value) {\n        averageThroughputDict[type] = value;\n    }\n\n    function getAverageThroughput(type) {\n        return averageThroughputDict[type];\n    }\n\n    function updateTopQualityIndex(mediaInfo) {\n        var type = mediaInfo.type;\n        var streamId = mediaInfo.streamInfo.id;\n        var max = mediaInfo.representationCount - 1;\n\n        setTopQualityIndex(type, streamId, max);\n\n        return max;\n    }\n\n    function isPlayingAtTopQuality(streamInfo) {\n        var isAtTop;\n        var streamId = streamInfo.id;\n        var audioQuality = getQualityFor('audio', streamInfo);\n        var videoQuality = getQualityFor('video', streamInfo);\n\n        isAtTop = (audioQuality === getTopQualityIndexFor('audio', streamId)) &&\n            (videoQuality === getTopQualityIndexFor('video', streamId));\n\n        return isAtTop;\n    }\n\n    function reset () {\n        eventBus.off(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n        clearTimeout(abandonmentTimeout);\n        abandonmentTimeout = null;\n        setup();\n    }\n\n    function getQualityFor(type, streamInfo) {\n        var id = streamInfo.id;\n        var quality;\n\n        qualityDict[id] = qualityDict[id] || {};\n\n        if (!qualityDict[id].hasOwnProperty(type)) {\n            qualityDict[id][type] = QUALITY_DEFAULT;\n        }\n\n        quality = qualityDict[id][type];\n        return quality;\n    }\n\n    function setQualityFor(type, id, value) {\n        qualityDict[id] = qualityDict[id] || {};\n        qualityDict[id][type] = value;\n    }\n\n    function getConfidenceFor(type, id) {\n        var confidence;\n\n        confidenceDict[id] = confidenceDict[id] || {};\n\n        if (!confidenceDict[id].hasOwnProperty(type)) {\n            confidenceDict[id][type] = 0;\n        }\n\n        confidence = confidenceDict[id][type];\n\n        return confidence;\n    }\n\n    function setConfidenceFor(type, id, value) {\n        confidenceDict[id] = confidenceDict[id] || {};\n        confidenceDict[id][type] = value;\n    }\n\n    function setTopQualityIndex(type, id, value) {\n        topQualities[id] = topQualities[id] || {};\n        topQualities[id][type] = value;\n    }\n\n    function checkMaxBitrate(idx, type) {\n        var maxBitrate = getMaxAllowedBitrateFor(type);\n        if (isNaN(maxBitrate) || !streamProcessorDict[type]) {\n            return idx;\n        }\n        var maxIdx = getQualityForBitrate(streamProcessorDict[type].getMediaInfo(), maxBitrate);\n        return Math.min (idx , maxIdx);\n    }\n\n    function checkMaxRepresentationRatio(idx, type, maxIdx) {\n        var maxRepresentationRatio = getMaxAllowedRepresentationRatioFor(type);\n        if (isNaN(maxRepresentationRatio) || maxRepresentationRatio >= 1 || maxRepresentationRatio < 0) {\n            return idx;\n        }\n        return Math.min( idx , Math.round(maxIdx * maxRepresentationRatio) );\n    }\n\n    function setWindowResizeEventCalled(value) {\n        windowResizeEventCalled = value;\n    }\n\n    function setElementSize() {\n        var element = videoModel.getElement();\n        if (element !== undefined) {\n            var hasPixelRatio = usePixelRatioInLimitBitrateByPortal && window.hasOwnProperty('devicePixelRatio');\n            var pixelRatio = hasPixelRatio ? window.devicePixelRatio : 1;\n            elementWidth = element.clientWidth * pixelRatio;\n            elementHeight = element.clientHeight * pixelRatio;\n        }\n    }\n\n    function checkPortalSize(idx, type) {\n        if (type !== 'video' || !limitBitrateByPortal || !streamProcessorDict[type]) {\n            return idx;\n        }\n\n        if (!windowResizeEventCalled) {\n            setElementSize();\n        }\n\n        var manifest = manifestModel.getValue();\n        var representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\n        var newIdx = idx;\n\n        if (elementWidth > 0 && elementHeight > 0) {\n            while (\n                newIdx > 0 &&\n                representation[newIdx] &&\n                elementWidth < representation[newIdx].width &&\n                elementWidth - representation[newIdx - 1].width < representation[newIdx].width - elementWidth\n            ) {\n                newIdx = newIdx - 1;\n            }\n\n            if (representation.length - 2 >= newIdx && representation[newIdx].width === representation[newIdx + 1].width) {\n                newIdx = Math.min(idx, newIdx + 1);\n            }\n        }\n\n        return newIdx;\n    }\n\n    function onFragmentLoadProgress(e) {\n        const type = e.request.mediaType;\n        if (getAutoSwitchBitrateFor(type)) {\n\n            const rules = abrRulesCollection.getRules(ABRRulesCollection.ABANDON_FRAGMENT_RULES);\n            const scheduleController = streamProcessorDict[type].getScheduleController();\n            if (!scheduleController) return;// There may be a fragment load in progress when we switch periods and recreated some controllers.\n\n            const callback = function (switchRequest) {\n                if (switchRequest.confidence === SwitchRequest.STRONG &&\n                    switchRequest.value < getQualityFor(type, streamController.getActiveStreamInfo())) {\n\n                    const fragmentModel = scheduleController.getFragmentModel();\n                    const request = fragmentModel.getRequests({state: FragmentModel.FRAGMENT_MODEL_LOADING, index: e.request.index})[0];\n                    if (request) {\n                        //TODO Check if we should abort or if better to finish download. check bytesLoaded/Total\n                        fragmentModel.abortRequests();\n                        setAbandonmentStateFor(type, ABANDON_LOAD);\n                        setPlaybackQuality(type, streamController.getActiveStreamInfo(), switchRequest.value, switchRequest.reason);\n                        eventBus.trigger(Events.FRAGMENT_LOADING_ABANDONED, {streamProcessor: streamProcessorDict[type], request: request, mediaType: type});\n\n                        clearTimeout(abandonmentTimeout);\n                        abandonmentTimeout = setTimeout(() => {\n                            setAbandonmentStateFor(type, ALLOW_LOAD);\n                            abandonmentTimeout = null;\n                        }, mediaPlayerModel.getAbandonLoadTimeout());\n                    }\n                }\n            };\n\n            rulesController.applyRules(rules, streamProcessorDict[type], callback, e, function (currentValue, newValue) {\n                return newValue;\n            });\n        }\n    }\n\n    instance = {\n        isPlayingAtTopQuality: isPlayingAtTopQuality,\n        updateTopQualityIndex: updateTopQualityIndex,\n        getAverageThroughput: getAverageThroughput,\n        getBitrateList: getBitrateList,\n        getQualityForBitrate: getQualityForBitrate,\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\n        getInitialBitrateFor: getInitialBitrateFor,\n        setInitialBitrateFor: setInitialBitrateFor,\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\n        setAutoSwitchBitrateFor: setAutoSwitchBitrateFor,\n        getAutoSwitchBitrateFor: getAutoSwitchBitrateFor,\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\n        getUsePixelRatioInLimitBitrateByPortal: getUsePixelRatioInLimitBitrateByPortal,\n        setUsePixelRatioInLimitBitrateByPortal: setUsePixelRatioInLimitBitrateByPortal,\n        getConfidenceFor: getConfidenceFor,\n        getQualityFor: getQualityFor,\n        getAbandonmentStateFor: getAbandonmentStateFor,\n        setAbandonmentStateFor: setAbandonmentStateFor,\n        setPlaybackQuality: setPlaybackQuality,\n        getPlaybackQuality: getPlaybackQuality,\n        setAverageThroughput: setAverageThroughput,\n        getTopQualityIndexFor: getTopQualityIndexFor,\n        setElementSize: setElementSize,\n        setWindowResizeEventCalled: setWindowResizeEventCalled,\n        initialize: initialize,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbrController.__dashjs_factory_name = 'AbrController';\nlet factory = FactoryMaker.getSingletonFactory(AbrController);\nfactory.ABANDON_LOAD = ABANDON_LOAD;\nfactory.QUALITY_DEFAULT = QUALITY_DEFAULT;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction BaseURLController() {\n\n    let instance;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelectorFromManifest(manifest);\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function initialize(data) {\n        update(data);\n    }\n\n    instance = {\n        reset: reset,\n        initialize: initialize,\n        resolve: resolve,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getSingletonFactory(BaseURLController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const loadFailedEventName = config.loadFailedEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(\n            updateEventName,\n            {\n                entry: entry\n            }\n        );\n    }\n\n    function onLoadFailed(e) {\n        if (e.error) {\n            add(e.request.serviceLocation);\n        }\n    }\n\n    function setup() {\n        if (loadFailedEventName) {\n            eventBus.on(loadFailedEventName, onLoadFailed, this);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    setup();\n\n    return {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentModel from '../models/FragmentModel';\nimport MediaPlayerModel from '../models/MediaPlayerModel';\nimport SourceBufferController from './SourceBufferController';\nimport AbrController from './AbrController';\nimport PlaybackController from './PlaybackController';\nimport MediaController from './MediaController';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport BoxParser from '../utils/BoxParser';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\n\nconst BUFFER_LOADED = 'bufferLoaded';\nconst BUFFER_EMPTY = 'bufferStalled';\nconst STALL_THRESHOLD = 0.5;\n\nfunction BufferController(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const manifestModel = config.manifestModel;\n    const sourceBufferController = config.sourceBufferController;\n    const errHandler = config.errHandler;\n    const streamController = config.streamController;\n    const mediaController = config.mediaController;\n    const adapter = config.adapter;\n    const textSourceBuffer = config.textSourceBuffer;\n\n\n    let instance,\n        requiredQuality,\n        isBufferingCompleted,\n        bufferLevel,\n        criticalBufferLevel,\n        mediaSource,\n        maxAppendedIndex,\n        lastIndex,\n        type,\n        buffer,\n        bufferState,\n        appendedBytesInfo,\n        wallclockTicked,\n        appendingMediaChunk,\n        isAppendingInProgress,\n        isPruningInProgress,\n        inbandEventFound,\n        playbackController,\n        streamProcessor,\n        abrController,\n        scheduleController,\n        mediaPlayerModel,\n        initCache;\n\n    function setup() {\n        requiredQuality = AbrController.QUALITY_DEFAULT;\n        isBufferingCompleted = false;\n        bufferLevel = 0;\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\n        maxAppendedIndex = 0;\n        lastIndex = Number.POSITIVE_INFINITY;\n        buffer = null;\n        bufferState = BUFFER_EMPTY;\n        wallclockTicked = 0;\n        appendingMediaChunk = false;\n        isAppendingInProgress = false;\n        isPruningInProgress = false;\n        inbandEventFound = false;\n    }\n\n    function initialize(Type, Source, StreamProcessor) {\n        type = Type;\n        setMediaSource(Source);\n        streamProcessor = StreamProcessor;\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        abrController = AbrController(context).getInstance();\n        initCache = InitCache(context).getInstance();\n        scheduleController = streamProcessor.getScheduleController();\n        requiredQuality = abrController.getQualityFor(type, streamProcessor.getStreamInfo());\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this, EventBus.EVENT_PRIORITY_HIGH);\n        eventBus.on(Events.SOURCEBUFFER_APPEND_COMPLETED, onAppended, this);\n        eventBus.on(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\n    }\n\n    function createBuffer(mediaInfo) {\n        if (!mediaInfo || !mediaSource || !streamProcessor) return null;\n\n        let sourceBuffer = null;\n\n        try {\n            sourceBuffer = sourceBufferController.createSourceBuffer(mediaSource, mediaInfo);\n\n            if (sourceBuffer && sourceBuffer.hasOwnProperty('initialize')) {\n                sourceBuffer.initialize(type, this);\n            }\n        } catch (e) {\n            errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\n        }\n        setBuffer(sourceBuffer);\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(requiredQuality).MSETimeOffset);\n        return sourceBuffer;\n    }\n\n    function isActive() {\n        return streamProcessor.getStreamInfo().id === streamController.getActiveStreamInfo().id;\n    }\n\n    function onInitFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n        log('Init fragment finished loading saving to', type + '\\'s init cache');\n        initCache.save(e.chunk);\n        appendToBuffer(e.chunk);\n    }\n\n    function switchInitData(streamId, quality) {\n        const chunk = initCache.extract(streamId, type, quality);\n        if (chunk) {\n            appendToBuffer(chunk);\n        } else {\n            eventBus.trigger(Events.INIT_REQUESTED, {sender: instance});\n        }\n    }\n\n    function onMediaFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n\n        const chunk = e.chunk;\n        const bytes = chunk.bytes;\n        const quality = chunk.quality;\n        const currentRepresentation = streamProcessor.getRepresentationInfoForQuality(quality);\n        const manifest = manifestModel.getValue();\n        const eventStreamMedia = adapter.getEventsFor(manifest, currentRepresentation.mediaInfo, streamProcessor);\n        const eventStreamTrack = adapter.getEventsFor(manifest, currentRepresentation, streamProcessor);\n\n        if (eventStreamMedia && eventStreamMedia.length > 0 || eventStreamTrack && eventStreamTrack.length > 0) {\n            const request = streamProcessor.getFragmentModel().getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                quality: quality,\n                index: chunk.index\n            })[0];\n            const events = handleInbandEvents(bytes, request, eventStreamMedia, eventStreamTrack);\n            streamProcessor.getEventController().addInbandEvents(events);\n        }\n\n        chunk.bytes = deleteInbandEvents(bytes);\n        appendToBuffer(chunk);\n    }\n\n\n    function appendToBuffer(chunk) {\n        isAppendingInProgress = true;\n        appendedBytesInfo = chunk;\n        sourceBufferController.append(buffer, chunk);\n\n        if (chunk.mediaInfo.type === 'video') {\n            if (chunk.mediaInfo.embeddedCaptions) {\n                textSourceBuffer.append(chunk.bytes, chunk);\n            }\n        }\n    }\n\n    function onAppended(e) {\n        if (buffer !== e.buffer) return;\n\n        if (e.error || !hasEnoughSpaceToAppend()) {\n            if (e.error.code === SourceBufferController.QUOTA_EXCEEDED_ERROR_CODE) {\n                criticalBufferLevel = sourceBufferController.getTotalBufferedTime(buffer) * 0.8;\n            }\n            if (e.error.code === SourceBufferController.QUOTA_EXCEEDED_ERROR_CODE || !hasEnoughSpaceToAppend()) {\n                eventBus.trigger(Events.QUOTA_EXCEEDED, {sender: instance, criticalBufferLevel: criticalBufferLevel}); //Tells ScheduleController to stop scheduling.\n                clearBuffer(getClearRange()); // Then we clear the buffer and onCleared event will tell ScheduleController to start scheduling again.\n            }\n            return;\n        }\n\n        if (!isNaN(appendedBytesInfo.index)) {\n            maxAppendedIndex = Math.max(appendedBytesInfo.index, maxAppendedIndex);\n            checkIfBufferingCompleted();\n        }\n\n        const ranges = sourceBufferController.getAllRanges(buffer);\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                log('Buffered Range for type:', type , ':' ,ranges.start(i) ,  ' - ' ,  ranges.end(i));\n            }\n        }\n\n        onPlaybackProgression();\n        isAppendingInProgress = false;\n        eventBus.trigger(Events.BYTES_APPENDED, {\n            sender: instance,\n            quality: appendedBytesInfo.quality,\n            startTime: appendedBytesInfo.start,\n            index: appendedBytesInfo.index,\n            bufferedRanges: ranges\n        });\n    }\n\n    function onQualityChanged(e) {\n        if (requiredQuality === e.newQuality || type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(e.newQuality).MSETimeOffset);\n        requiredQuality = e.newQuality;\n    }\n\n    //**********************************************************************\n    // START Buffer Level, State & Sufficiency Handling.\n    //**********************************************************************\n    function onPlaybackSeeking() {\n        lastIndex = Number.POSITIVE_INFINITY;\n        isBufferingCompleted = false;\n        onPlaybackProgression();\n    }\n\n    function onPlaybackProgression() {\n        updateBufferLevel();\n        addBufferMetrics();\n    }\n\n    function updateBufferLevel() {\n        bufferLevel = sourceBufferController.getBufferLength(buffer, playbackController.getTime());\n        eventBus.trigger(Events.BUFFER_LEVEL_UPDATED, {sender: instance, bufferLevel: bufferLevel});\n        checkIfSufficientBuffer();\n    }\n\n    function addBufferMetrics() {\n        if (!isActive()) return;\n        metricsModel.addBufferState(type, bufferState, scheduleController.getBufferTarget());\n        metricsModel.addBufferLevel(type, new Date(), bufferLevel * 1000);\n    }\n\n    function checkIfBufferingCompleted() {\n        const isLastIdxAppended = maxAppendedIndex >= lastIndex - 1; // Handles 0 and non 0 based request index\n        if (isLastIdxAppended && !isBufferingCompleted) {\n            isBufferingCompleted = true;\n            eventBus.trigger(Events.BUFFERING_COMPLETED, {sender: instance, streamInfo: streamProcessor.getStreamInfo()});\n        }\n    }\n\n    function checkIfSufficientBuffer() {\n        if (bufferLevel < STALL_THRESHOLD && !isBufferingCompleted) {\n            notifyBufferStateChanged(BUFFER_EMPTY);\n        } else {\n            notifyBufferStateChanged(BUFFER_LOADED);\n        }\n    }\n\n    function notifyBufferStateChanged(state) {\n        if (bufferState === state || (type === 'fragmentedText' && textSourceBuffer.getAllTracksAreDisabled())) return;\n        bufferState = state;\n        addBufferMetrics();\n        eventBus.trigger(Events.BUFFER_LEVEL_STATE_CHANGED, {sender: instance, state: state, mediaType: type, streamInfo: streamProcessor.getStreamInfo()});\n        eventBus.trigger(state === BUFFER_LOADED ? Events.BUFFER_LOADED : Events.BUFFER_EMPTY, {mediaType: type});\n        log(state === BUFFER_LOADED ? 'Got enough buffer to start.' : 'Waiting for more buffer before starting playback.');\n    }\n\n\n    function handleInbandEvents(data, request, mediaInbandEvents, trackInbandEvents) {\n\n        const fragmentStartTime = Math.max(isNaN(request.startTime) ? 0 : request.startTime, 0);\n        const eventStreams = [];\n        const events = [];\n\n        inbandEventFound = false; //TODO Discuss why this is hear!\n        /* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */\n        const inbandEvents = mediaInbandEvents.concat(trackInbandEvents);\n        for (let i = 0, ln = inbandEvents.length; i < ln; i++) {\n            eventStreams[inbandEvents[i].schemeIdUri] = inbandEvents[i];\n        }\n\n        const isoFile = BoxParser(context).getInstance().parse(data);\n        const eventBoxes = isoFile.getBoxes('emsg');\n\n        for (let i = 0, ln = eventBoxes.length; i < ln; i++) {\n            const event = adapter.getEvent(eventBoxes[i], eventStreams, fragmentStartTime);\n\n            if (event) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    function deleteInbandEvents(data) {\n\n        if (!inbandEventFound) { //TODO Discuss why this is here. inbandEventFound is never set to true!!\n            return data;\n        }\n\n        const length = data.length;\n        const expTwo = Math.pow(256, 2);\n        const expThree = Math.pow(256, 3);\n        const modData = new Uint8Array(data.length);\n\n        let i = 0;\n        let j = 0;\n\n        while (i < length) {\n\n            let identifier = String.fromCharCode(data[i + 4],data[i + 5],data[i + 6],data[i + 7]);\n            let size = data[i] * expThree + data[i + 1] * expTwo + data[i + 2] * 256 + data[i + 3] * 1;\n\n            if (identifier != 'emsg' ) {\n                for (let l = i ; l < i + size; l++) {\n                    modData[j] = data[l];\n                    j++;\n                }\n            }\n            i += size;\n\n        }\n\n        return modData.subarray(0, j);\n    }\n\n    function hasEnoughSpaceToAppend() {\n        var totalBufferedTime = sourceBufferController.getTotalBufferedTime(buffer);\n        return (totalBufferedTime < criticalBufferLevel);\n    }\n\n    /* prune buffer on our own in background to avoid browsers pruning buffer silently */\n    function pruneBuffer() {\n        if (!buffer) return;\n        if (type === 'fragmentedText') return;\n        const start = buffer.buffered.length ? buffer.buffered.start(0) : 0;\n        const bufferToPrune = playbackController.getTime() - start - mediaPlayerModel.getBufferToKeep();\n        if (bufferToPrune > 0) {\n            log('pruning buffer: ' + bufferToPrune + ' seconds.');\n            isPruningInProgress = true;\n            sourceBufferController.remove(buffer, 0, Math.round(start + bufferToPrune), mediaSource);\n        }\n    }\n\n    function getClearRange() {\n\n        if (!buffer) return null;\n\n        // we need to remove data that is more than one fragment before the video currentTime\n        const currentTime = playbackController.getTime();\n        const req = streamProcessor.getFragmentModel().getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, time: currentTime, })[0];\n        const range = sourceBufferController.getBufferRange(buffer, currentTime);\n\n        let removeEnd = (req && !isNaN(req.startTime)) ? req.startTime : Math.floor(currentTime);\n        if ((range === null) && (buffer.buffered.length > 0)) {\n            removeEnd = buffer.buffered.end(buffer.buffered.length - 1 );\n        }\n\n        return {start: buffer.buffered.start(0), end: removeEnd};\n    }\n\n    function clearBuffer(range) {\n        if (!range || !buffer) return;\n        sourceBufferController.remove(buffer, range.start, range.end, mediaSource);\n    }\n\n    function onRemoved(e) {\n        if (buffer !== e.buffer) return;\n\n        if (isPruningInProgress) {\n            isPruningInProgress = false;\n        }\n\n        updateBufferLevel();\n        eventBus.trigger(Events.BUFFER_CLEARED, {sender: instance, from: e.from, to: e.to, hasEnoughSpaceToAppend: hasEnoughSpaceToAppend()});\n        //TODO - REMEMBER removed a timerout hack calling clearBuffer after manifestInfo.minBufferTime * 1000 if !hasEnoughSpaceToAppend() Aug 04 2016\n    }\n\n    function updateBufferTimestampOffset(MSETimeOffset) {\n        // Each track can have its own @presentationTimeOffset, so we should set the offset\n        // if it has changed after switching the quality or updating an mpd\n        if (buffer && buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\n            buffer.timestampOffset = MSETimeOffset;\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor || e.error) return;\n        updateBufferTimestampOffset(e.currentRepresentation.MSETimeOffset);\n    }\n\n    function onStreamCompleted(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n        lastIndex = e.request.index;\n        checkIfBufferingCompleted();\n    }\n\n    function onCurrentTrackChanged(e) {\n        if (!buffer || (e.newMediaInfo.type !== type) || (e.newMediaInfo.streamInfo.id !== streamProcessor.getStreamInfo().id)) return;\n        if (mediaController.getSwitchMode(type) === MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE) {\n            clearBuffer(getClearRange());\n        }\n    }\n\n    function onWallclockTimeUpdated() {\n        wallclockTicked++;\n        const secondsElapsed = (wallclockTicked * (mediaPlayerModel.getWallclockTimeUpdateInterval() / 1000));\n        if ((secondsElapsed >= mediaPlayerModel.getBufferPruningInterval()) && !isAppendingInProgress) {\n            wallclockTicked = 0;\n            pruneBuffer();\n        }\n    }\n\n    function onPlaybackRateChanged() {\n        checkIfSufficientBuffer();\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function setStreamProcessor(value) {\n        streamProcessor = value;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function setBuffer(value) {\n        buffer = value;\n    }\n\n    function getBufferLevel() {\n        return bufferLevel;\n    }\n\n    function getCriticalBufferLevel() {\n        return criticalBufferLevel;\n    }\n\n    function setMediaSource(value) {\n        mediaSource = value;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function reset(errored) {\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this);\n        eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\n        eventBus.off(Events.SOURCEBUFFER_APPEND_COMPLETED, onAppended, this);\n        eventBus.off(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\n\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\n        bufferState = BUFFER_EMPTY;\n        requiredQuality = AbrController.QUALITY_DEFAULT;\n        lastIndex = Number.POSITIVE_INFINITY;\n        maxAppendedIndex = 0;\n        appendedBytesInfo = null;\n        appendingMediaChunk = false;\n        isBufferingCompleted = false;\n        isAppendingInProgress = false;\n        isPruningInProgress = false;\n        playbackController = null;\n        streamProcessor = null;\n        abrController = null;\n        scheduleController = null;\n\n        if (!errored) {\n            sourceBufferController.abort(mediaSource, buffer);\n            sourceBufferController.removeSourceBuffer(mediaSource, buffer);\n        }\n\n        buffer = null;\n    }\n\n    instance = {\n        initialize: initialize,\n        createBuffer: createBuffer,\n        getType: getType,\n        getStreamProcessor: getStreamProcessor,\n        setStreamProcessor: setStreamProcessor,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        getBufferLevel: getBufferLevel,\n        getCriticalBufferLevel: getCriticalBufferLevel,\n        setMediaSource: setMediaSource,\n        getMediaSource: getMediaSource,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        switchInitData: switchInitData,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBufferController.__dashjs_factory_name = 'BufferController';\nconst factory = FactoryMaker.getClassFactory(BufferController);\nfactory.BUFFER_LOADED = BUFFER_LOADED;\nfactory.BUFFER_EMPTY = BUFFER_EMPTY;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport PlaybackController from '../controllers/PlaybackController';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\n\nfunction EventController() {\n\n    const MPD_RELOAD_SCHEME = 'urn:mpeg:dash:event:2012';\n    const MPD_RELOAD_VALUE = 1;\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        inlineEvents, // Holds all Inline Events not triggered yet\n        inbandEvents, // Holds all Inband Events not triggered yet\n        activeEvents, // Holds all Events currently running\n        eventInterval, // variable holding the setInterval\n        refreshDelay, // refreshTime for the setInterval\n        presentationTimeThreshold,\n        manifestModel,\n        manifestUpdater,\n        playbackController,\n        isStarted;\n\n    function initialize() {\n        isStarted = false;\n        inlineEvents = {};\n        inbandEvents = {};\n        activeEvents = {};\n        eventInterval = null;\n        refreshDelay = 100;\n        presentationTimeThreshold = refreshDelay / 1000;\n        playbackController = PlaybackController(context).getInstance();\n    }\n\n    function clear() {\n        if (eventInterval !== null && isStarted) {\n            clearInterval(eventInterval);\n            eventInterval = null;\n            isStarted = false;\n        }\n    }\n\n    function start() {\n        log('Start Event Controller');\n        if (!isStarted && !isNaN(refreshDelay)) {\n            isStarted = true;\n            eventInterval = setInterval(onEventTimer, refreshDelay);\n        }\n    }\n\n    /**\n     * Add events to the eventList. Events that are not in the mpd anymore but not triggered yet will still be deleted\n     * @param {Array.<Object>} values\n     */\n    function addInlineEvents(values) {\n        inlineEvents = {};\n\n        if (values) {\n            for (var i = 0; i < values.length; i++) {\n                var event = values[i];\n                inlineEvents[event.id] = event;\n                log('Add inline event with id ' + event.id);\n            }\n        }\n        log('Added ' + values.length + ' inline events');\n    }\n\n    /**\n     * i.e. processing of any one event message box with the same id is sufficient\n     * @param {Array.<Object>} values\n     */\n    function addInbandEvents(values) {\n        for (var i = 0; i < values.length; i++) {\n            var event = values[i];\n            if (!(event.id in inbandEvents)) {\n                inbandEvents[event.id] = event;\n                log('Add inband event with id ' + event.id);\n            } else {\n                log('Repeated event with id ' + event.id);\n            }\n        }\n    }\n\n    /**\n     * Remove events which are over from the list\n     */\n    function removeEvents() {\n        if (activeEvents) {\n            var currentVideoTime = playbackController.getTime();\n            var eventIds = Object.keys(activeEvents);\n\n            for (var i = 0; i < eventIds.length; i++) {\n                var eventId = eventIds[i];\n                var curr = activeEvents[eventId];\n                if (curr !== null && (curr.duration + curr.presentationTime) / curr.eventStream.timescale < currentVideoTime) {\n                    log('Remove Event ' + eventId + ' at time ' + currentVideoTime);\n                    curr = null;\n                    delete activeEvents[eventId];\n                }\n            }\n        }\n    }\n\n    /**\n     * Iterate through the eventList and trigger/remove the events\n     */\n    function onEventTimer() {\n        triggerEvents(inbandEvents);\n        triggerEvents(inlineEvents);\n        removeEvents();\n    }\n\n    function refreshManifest() {\n        var manifest = manifestModel.getValue();\n        var url = manifest.url;\n\n        if (manifest.hasOwnProperty('Location')) {\n            url = manifest.Location;\n        }\n        log('Refresh manifest @ ' + url);\n        manifestUpdater.getManifestLoader().load(url);\n    }\n\n    function triggerEvents(events) {\n        var currentVideoTime = playbackController.getTime();\n        var presentationTime;\n\n        /* == Trigger events that are ready == */\n        if (events) {\n            var eventIds = Object.keys(events);\n            for (var i = 0; i < eventIds.length; i++) {\n                var eventId = eventIds[i];\n                var curr = events[eventId];\n\n                if (curr !== undefined) {\n                    presentationTime = curr.presentationTime / curr.eventStream.timescale;\n                    if (presentationTime === 0 || (presentationTime <= currentVideoTime && presentationTime + presentationTimeThreshold > currentVideoTime)) {\n                        log('Start Event ' + eventId + ' at ' + currentVideoTime);\n                        if (curr.duration > 0) {\n                            activeEvents[eventId] = curr;\n                        }\n                        if (curr.eventStream.schemeIdUri == MPD_RELOAD_SCHEME && curr.eventStream.value == MPD_RELOAD_VALUE) {\n                            refreshManifest();\n                        } else {\n                            eventBus.trigger(curr.eventStream.schemeIdUri, {event: curr});\n                        }\n                        delete events[eventId];\n                    }\n                }\n            }\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n\n        if (config.manifestUpdater) {\n            manifestUpdater = config.manifestUpdater;\n        }\n    }\n\n    function reset() {\n        clear();\n        inlineEvents = null;\n        inbandEvents = null;\n        activeEvents = null;\n        playbackController = null;\n    }\n\n    instance = {\n        initialize: initialize,\n        addInlineEvents: addInlineEvents,\n        addInbandEvents: addInbandEvents,\n        clear: clear,\n        start: start,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventController.__dashjs_factory_name = 'EventController';\nexport default FactoryMaker.getSingletonFactory(EventController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport DataChunk from '../vo/DataChunk';\nimport FragmentModel from '../models/FragmentModel';\nimport MetricsModel from '../models/MetricsModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction FragmentController(/*config*/) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        fragmentModels;\n\n    function setup() {\n        fragmentModels = {};\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n    }\n\n    function getModel(type) {\n        let model = fragmentModels[type];\n        if (!model) {\n            model = FragmentModel(context).create({metricsModel: MetricsModel(context).getInstance()});\n            fragmentModels[type] = model;\n        }\n\n        return model;\n    }\n\n    function isInitializationRequest(request) {\n        return (request && request.type && request.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    function reset() {\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        for (let model in fragmentModels) {\n            fragmentModels[model].reset();\n        }\n        fragmentModels = {};\n    }\n\n    function createDataChunk(bytes, request, streamId) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.bytes = bytes;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n\n        return chunk;\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        if (fragmentModels[e.request.mediaType] !== e.sender) return;\n\n        const scheduleController = e.sender.getScheduleController();\n        const request = e.request;\n        const bytes = e.response;\n        const isInit = isInitializationRequest(request);\n        const streamInfo = scheduleController.getStreamProcessor().getStreamInfo();\n\n        if (!bytes || !streamInfo) {\n            log('No ' + request.mediaType + ' bytes to push or stream is inactive.');\n            return;\n        }\n\n        const chunk = createDataChunk(bytes, request, streamInfo.id);\n        eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED, {chunk: chunk, fragmentModel: e.sender});\n    }\n\n    instance = {\n        getModel: getModel,\n        isInitializationRequest: isInitializationRequest,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentController.__dashjs_factory_name = 'FragmentController';\nexport default FactoryMaker.getClassFactory(FragmentController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Events from '../../core/events/Events';\nimport EventBus from '../../core/EventBus';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport TextSourceBuffer from '../TextSourceBuffer';\nimport DOMStorage from '../utils/DOMStorage';\n\nconst TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\nconst TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\nconst TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\nconst TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\nconst DEFAULT_INIT_TRACK_SELECTION_MODE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\n\nfunction MediaController() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n    let textSourceBuffer = TextSourceBuffer(context).getInstance();\n    let domStorage = DOMStorage(context).getInstance();\n\n    let instance,\n        tracks,\n        initialSettings,\n        selectionMode,\n        switchMode,\n        errHandler;\n\n    const validTrackSwitchModes = [\n        TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n        TRACK_SWITCH_MODE_NEVER_REPLACE\n    ];\n\n    const validTrackSelectionModes = [\n        TRACK_SELECTION_MODE_HIGHEST_BITRATE,\n        TRACK_SELECTION_MODE_WIDEST_RANGE\n    ];\n\n    function initialize() {\n        tracks = {};\n        resetInitialSettings();\n        resetSwitchMode();\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @memberof MediaController#\n     */\n    function checkInitialMediaSettingsForType(type, streamInfo) {\n        var settings = getInitialSettings(type);\n        var tracksForType = getTracksFor(type, streamInfo);\n        var tracks = [];\n\n        if (type === 'fragmentedText') {\n            // Choose the first track\n            setTrack(tracksForType[0]);\n            return;\n        }\n\n        if (!settings) {\n            settings = domStorage.getSavedMediaSettings(type);\n            setInitialSettings(type, settings);\n        }\n\n        if (!tracksForType || (tracksForType.length === 0)) return;\n\n        if (settings) {\n            tracksForType.forEach(function (track) {\n                if (matchSettings(settings, track)) {\n                    tracks.push(track);\n                }\n            });\n        }\n\n        if (tracks.length === 0) {\n            setTrack(selectInitialTrack(tracksForType));\n        } else {\n            if (tracks.length > 1) {\n                setTrack(selectInitialTrack(tracks));\n            } else {\n                setTrack(tracks[0]);\n            }\n        }\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function addTrack(track) {\n        var mediaType = track ? track.type : null;\n        var streamId = track ? track.streamInfo.id : null;\n        var initSettings = getInitialSettings(mediaType);\n\n        if (!track || (!isMultiTrackSupportedByType(mediaType))) return false;\n\n        tracks[streamId] = tracks[streamId] || createTrackInfo();\n\n        if (tracks[streamId][mediaType].list.indexOf(track) >= 0) return false;\n\n        tracks[streamId][mediaType].list.push(track);\n\n        if (initSettings && (matchSettings(initSettings, track)) && !getCurrentTrackFor(mediaType, track.streamInfo)) {\n            setTrack(track);\n        }\n\n        return true;\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @returns {Array}\n     * @memberof MediaController#\n     */\n    function getTracksFor(type, streamInfo) {\n        if (!type || !streamInfo) return [];\n\n        var id = streamInfo.id;\n\n        if (!tracks[id] || !tracks[id][type]) return [];\n\n        return tracks[id][type].list;\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getCurrentTrackFor(type, streamInfo) {\n        if (!type || !streamInfo || (streamInfo && !tracks[streamInfo.id])) return null;\n        return tracks[streamInfo.id][type].current;\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isCurrentTrack(track) {\n        var type = track.type;\n        var id = track.streamInfo.id;\n\n        return (tracks[id] && tracks[id][type] && isTracksEqual(tracks[id][type].current, track));\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @memberof MediaController#\n     */\n    function setTrack(track) {\n        if (!track) return;\n\n        var type = track.type;\n        var streamInfo = track.streamInfo;\n        var id = streamInfo.id;\n        var current = getCurrentTrackFor(type, streamInfo);\n\n        if (!tracks[id] || !tracks[id][type] || (current && isTracksEqual(track, current))) return;\n\n        tracks[id][type].current = track;\n\n        if (current) {\n            eventBus.trigger(Events.CURRENT_TRACK_CHANGED, {oldMediaInfo: current, newMediaInfo: track, switchMode: switchMode[type]});\n        }\n\n        var settings = extractSettings(track);\n\n        if (!settings || !tracks[id][type].storeLastSettings) return;\n\n        if (settings.roles) {\n            settings.role = settings.roles[0];\n            delete settings.roles;\n        }\n\n        if (settings.accessibility) {\n            settings.accessibility = settings.accessibility[0];\n        }\n\n        if (settings.audioChannelConfiguration) {\n            settings.audioChannelConfiguration = settings.audioChannelConfiguration[0];\n        }\n\n        domStorage.setSavedMediaSettings(type, settings);\n    }\n\n    /**\n     * @param {string} type\n     * @param {Object} value\n     * @memberof MediaController#\n     */\n    function setInitialSettings(type, value) {\n        if (!type || !value) return;\n\n        initialSettings[type] = value;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getInitialSettings(type) {\n        if (!type) return null;\n\n        return initialSettings[type];\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} mode\n     * @memberof MediaController#\n     */\n    function setSwitchMode(type, mode) {\n        const isModeSupported = (validTrackSwitchModes.indexOf(mode) !== -1);\n\n        if (!isModeSupported) {\n            log('track switch mode is not supported: ' + mode);\n            return;\n        }\n\n        switchMode[type] = mode;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {string} mode\n     * @memberof MediaController#\n     */\n    function getSwitchMode(type) {\n        return switchMode[type];\n    }\n\n    /**\n     * @param {string} mode\n     * @memberof MediaController#\n     */\n    function setSelectionModeForInitialTrack(mode) {\n        const isModeSupported = (validTrackSelectionModes.indexOf(mode) !== -1);\n\n        if (!isModeSupported) {\n            log('track selection mode is not supported: ' + mode);\n            return;\n        }\n        selectionMode = mode;\n    }\n\n    /**\n     * @returns {string} mode\n     * @memberof MediaController#\n     */\n    function getSelectionModeForInitialTrack() {\n        return selectionMode || DEFAULT_INIT_TRACK_SELECTION_MODE;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isMultiTrackSupportedByType(type) {\n        return (type === 'audio' || type === 'video' || type === 'text' || type === 'fragmentedText');\n    }\n\n    /**\n     * @param {MediaInfo} t1 - first track to compare\n     * @param {MediaInfo} t2 - second track to compare\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isTracksEqual(t1, t2) {\n        var sameId = t1.id === t2.id;\n        var sameViewpoint = t1.viewpoint === t2.viewpoint;\n        var sameLang = t1.lang === t2.lang;\n        var sameRoles = t1.roles.toString() === t2.roles.toString();\n        var sameAccessibility = t1.accessibility.toString() === t2.accessibility.toString();\n        var sameAudioChannelConfiguration = t1.audioChannelConfiguration.toString() === t2.audioChannelConfiguration.toString();\n\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    /**\n     * @memberof MediaController#\n     */\n    function reset() {\n        initialize();\n        textSourceBuffer.resetEmbedded();\n    }\n\n    function extractSettings(mediaInfo) {\n        var settings = {\n            lang: mediaInfo.lang,\n            viewpoint: mediaInfo.viewpoint,\n            roles: mediaInfo.roles,\n            accessibility: mediaInfo.accessibility,\n            audioChannelConfiguration: mediaInfo.audioChannelConfiguration\n        };\n        var notEmpty = settings.lang || settings.viewpoint || (settings.role && settings.role.length > 0) ||\n        (settings.accessibility && settings.accessibility.length > 0) || (settings.audioChannelConfiguration && settings.audioChannelConfiguration.length > 0);\n\n        return notEmpty ? settings : null;\n    }\n\n    function matchSettings(settings, track) {\n        var matchLang = !settings.lang || (settings.lang === track.lang);\n        var matchViewPoint = !settings.viewpoint || (settings.viewpoint === track.viewpoint);\n        var matchRole = !settings.role || !!track.roles.filter(function (item) {\n            return item === settings.role;\n        })[0];\n        var matchAccessibility = !settings.accessibility || !!track.accessibility.filter(function (item) {\n            return item === settings.accessibility;\n        })[0];\n        var matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n            return item === settings.audioChannelConfiguration;\n        })[0];\n\n        return (matchLang && matchViewPoint && matchRole && matchAccessibility && matchAudioChannelConfiguration);\n    }\n\n    function resetSwitchMode() {\n        switchMode = {\n            audio: TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n            video: TRACK_SWITCH_MODE_NEVER_REPLACE\n        };\n    }\n\n    function resetInitialSettings() {\n        initialSettings = {\n            audio: null,\n            video: null\n        };\n    }\n\n    function selectInitialTrack(tracks) {\n        var mode = getSelectionModeForInitialTrack();\n        var tmpArr = [];\n        var getTracksWithHighestBitrate = function (trackArr) {\n            var max = 0;\n            var result = [];\n            var tmp;\n\n            trackArr.forEach(function (track) {\n                tmp = Math.max.apply(Math, track.bitrateList.map(function (obj) { return obj.bandwidth; }));\n\n                if (tmp > max) {\n                    max = tmp;\n                    result = [track];\n                } else if (tmp === max) {\n                    result.push(track);\n                }\n            });\n\n            return result;\n        };\n        var getTracksWithWidestRange = function (trackArr) {\n            var max = 0;\n            var result = [];\n            var tmp;\n\n            trackArr.forEach(function (track) {\n                tmp = track.representationCount;\n\n                if (tmp > max) {\n                    max = tmp;\n                    result = [track];\n                } else if (tmp === max) {\n                    result.push(track);\n                }\n            });\n\n            return result;\n        };\n\n        switch (mode) {\n            case TRACK_SELECTION_MODE_HIGHEST_BITRATE:\n                tmpArr = getTracksWithHighestBitrate(tracks);\n\n                if (tmpArr.length > 1) {\n                    tmpArr = getTracksWithWidestRange(tmpArr);\n                }\n                break;\n            case TRACK_SELECTION_MODE_WIDEST_RANGE:\n                tmpArr = getTracksWithWidestRange(tracks);\n\n                if (tmpArr.length > 1) {\n                    tmpArr = getTracksWithHighestBitrate(tracks);\n                }\n                break;\n            default:\n                log('track selection mode is not supported: ' + mode);\n                break;\n        }\n\n        return tmpArr[0];\n    }\n\n    function createTrackInfo() {\n        return {\n            audio: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            video: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            text: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            fragmentedText: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            }\n        };\n    }\n\n    instance = {\n        initialize: initialize,\n        checkInitialMediaSettingsForType: checkInitialMediaSettingsForType,\n        addTrack: addTrack,\n        getTracksFor: getTracksFor,\n        getCurrentTrackFor: getCurrentTrackFor,\n        isCurrentTrack: isCurrentTrack,\n        setTrack: setTrack,\n        setInitialSettings: setInitialSettings,\n        getInitialSettings: getInitialSettings,\n        setSwitchMode: setSwitchMode,\n        getSwitchMode: getSwitchMode,\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\n        isMultiTrackSupportedByType: isMultiTrackSupportedByType,\n        isTracksEqual: isTracksEqual,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    return instance;\n}\n\nMediaController.__dashjs_factory_name = 'MediaController';\nlet factory = FactoryMaker.getSingletonFactory(MediaController);\nfactory.TRACK_SWITCH_MODE_NEVER_REPLACE = TRACK_SWITCH_MODE_NEVER_REPLACE;\nfactory.TRACK_SWITCH_MODE_ALWAYS_REPLACE = TRACK_SWITCH_MODE_ALWAYS_REPLACE;\nfactory.TRACK_SELECTION_MODE_HIGHEST_BITRATE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\nfactory.TRACK_SELECTION_MODE_WIDEST_RANGE = TRACK_SELECTION_MODE_WIDEST_RANGE;\nfactory.DEFAULT_INIT_TRACK_SELECTION_MODE = DEFAULT_INIT_TRACK_SELECTION_MODE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction MediaSourceController() {\n\n    let instance;\n\n    function createMediaSource() {\n\n        var hasWebKit = ('WebKitMediaSource' in window);\n        var hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            return new MediaSource();\n        } else if (hasWebKit) {\n            return new WebKitMediaSource();\n        }\n\n        return null;\n    }\n\n    function attachMediaSource(source, videoModel) {\n\n        var objectURL = window.URL.createObjectURL(source);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(source, value) {\n\n        if (source.duration != value)\n            source.duration = value;\n\n        return source.duration;\n    }\n\n    function signalEndOfStream(source) {\n\n        var buffers = source.sourceBuffers;\n        var ln = buffers.length;\n        var i = 0;\n\n        if (source.readyState !== 'open') return;\n\n        for (i; i < ln; i++) {\n            if (buffers[i].updating) return;\n            if (buffers[i].buffered.length === 0) return;\n        }\n\n        source.endOfStream();\n    }\n\n    instance = {\n        createMediaSource: createMediaSource,\n        attachMediaSource: attachMediaSource,\n        detachMediaSource: detachMediaSource,\n        setDuration: setDuration,\n        signalEndOfStream: signalEndOfStream\n    };\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport BufferController from './BufferController';\nimport URIQueryAndFragmentModel from '../models/URIQueryAndFragmentModel';\nimport MediaPlayerModel from '../../streaming/models/MediaPlayerModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction PlaybackController() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        element,\n        streamController,\n        timelineConverter,\n        metricsModel,\n        dashMetrics,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        videoModel,\n        currentTime,\n        liveStartTime,\n        wallclockTimeIntervalId,\n        commonEarliestTime,\n        streamInfo,\n        isDynamic,\n        mediaPlayerModel,\n        playOnceInitialized;\n\n    function setup() {\n        currentTime = 0;\n        liveStartTime = NaN;\n        wallclockTimeIntervalId = null;\n        isDynamic = null;\n        playOnceInitialized = false;\n        commonEarliestTime = {};\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    function initialize(StreamInfo) {\n        streamInfo = StreamInfo;\n        element = videoModel.getElement();\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n        liveStartTime = streamInfo.start;\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.BYTES_APPENDED, onBytesAppended, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    function onPeriodSwitchStarted(e) {\n        if (!isDynamic && e.fromStreamInfo && commonEarliestTime[e.fromStreamInfo.id]) {\n            delete commonEarliestTime[e.fromStreamInfo.id];\n        }\n    }\n\n    function getTimeToStreamEnd() {\n        const startTime = getStreamStartTime(true);\n        const offset = isDynamic ? startTime - streamInfo.start : 0;\n        return startTime + (streamInfo.duration - offset) - getTime();\n    }\n\n    function isPlaybackStarted() {\n        return getTime() > 0;\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function play() {\n        if (element) {\n            element.autoplay = true;\n            const p = element.play();\n            if (p && (typeof Promise !== 'undefined') && (p instanceof Promise)) {\n                p.catch((e) => {\n                    if (e.name === 'NotAllowedError') {\n                        eventBus.trigger(Events.PLAYBACK_NOT_ALLOWED);\n                    }\n                    log(`Caught pending play exception - continuing (${e})`);\n                });\n            }\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    function isPaused() {\n        if (!element) return;\n        return element.paused;\n    }\n\n    function pause() {\n        if (!element) return;\n        element.pause();\n        element.autoplay = false;\n    }\n\n    function isSeeking() {\n        if (!element) return;\n        return element.seeking;\n    }\n\n    function seek(time) {\n        if (!videoModel) return;\n        log('Requesting seek to time: ' + time);\n        videoModel.setCurrentTime(time);\n    }\n\n    function getTime() {\n        if (!element) return;\n        return element.currentTime;\n    }\n\n    function getPlaybackRate() {\n        if (!element) return;\n        return element.playbackRate;\n    }\n\n    function getPlayedRanges() {\n        if (!element) return;\n        return element.played;\n    }\n\n    function getEnded() {\n        if (!element) return;\n        return element.ended;\n    }\n\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    function setLiveStartTime(value) {\n        liveStartTime = value;\n    }\n\n    function getLiveStartTime() {\n        return liveStartTime;\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {number} dvrWindowSize - seconds?\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeLiveDelay(fragmentDuration, dvrWindowSize) {\n        var mpd = dashManifestModel.getMpd(manifestModel.getValue());\n\n        let delay;\n        const END_OF_PLAYLIST_PADDING = 10;\n\n        if (mediaPlayerModel.getUseSuggestedPresentationDelay() && mpd.hasOwnProperty('suggestedPresentationDelay')) {\n            delay = mpd.suggestedPresentationDelay;\n        } else if (mediaPlayerModel.getLiveDelay()) {\n            delay = mediaPlayerModel.getLiveDelay(); // If set by user, this value takes precedence\n        } else if (!isNaN(fragmentDuration)) {\n            delay = fragmentDuration * mediaPlayerModel.getLiveDelayFragmentCount();\n        } else {\n            delay = streamInfo.manifestInfo.minBufferTime * 2;\n        }\n\n        // cap target latency to:\n        // - dvrWindowSize / 2 for short playlists\n        // - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists\n        let targetDelayCapping = Math.max(dvrWindowSize - END_OF_PLAYLIST_PADDING, dvrWindowSize / 2);\n\n        return Math.min(delay, targetDelayCapping);\n    }\n\n    function reset() {\n        if (videoModel && element) {\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n            eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n            eventBus.off(Events.BYTES_APPENDED, onBytesAppended, this);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n        videoModel = null;\n        streamInfo = null;\n        element = null;\n        isDynamic = null;\n        setup();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    /**\n     * @param {boolean} ignoreStartOffset - ignore URL fragment start offset if true\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function getStreamStartTime(ignoreStartOffset) {\n        let presentationStartTime;\n        let fragData = URIQueryAndFragmentModel(context).getInstance().getURIFragmentData();\n        let fragS = parseInt(fragData.s, 10);\n        let fragT = parseInt(fragData.t, 10);\n        let startTimeOffset = NaN;\n\n        if (!ignoreStartOffset) {\n            startTimeOffset = !isNaN(fragS) ? fragS : fragT;\n        }\n\n        if (isDynamic) {\n            if (!isNaN(startTimeOffset) && startTimeOffset > 1262304000) {\n\n                presentationStartTime = startTimeOffset - (streamInfo.manifestInfo.availableFrom.getTime() / 1000);\n\n                if (presentationStartTime > liveStartTime ||\n                    presentationStartTime < (liveStartTime - streamInfo.manifestInfo.DVRWindowSize)) {\n                    presentationStartTime = null;\n                }\n            }\n            presentationStartTime = presentationStartTime || liveStartTime;\n\n        } else {\n            if (!isNaN(startTimeOffset) && startTimeOffset < Math.max(streamInfo.manifestInfo.duration, streamInfo.duration) && startTimeOffset >= 0) {\n                presentationStartTime = startTimeOffset;\n            } else {\n                let earliestTime = commonEarliestTime[streamInfo.id]; //set by ready bufferStart after first onBytesAppended\n                if (earliestTime === undefined) {\n                    earliestTime = streamController.getActiveStreamCommonEarliestTime(); //deal with calculated PST that is none 0 when streamInfo.start is 0\n                }\n                presentationStartTime = Math.max(earliestTime, streamInfo.start);\n            }\n        }\n\n        return presentationStartTime;\n    }\n\n    function getActualPresentationTime(currentTime) {\n        var metrics = metricsModel.getReadOnlyMetricsFor('video') || metricsModel.getReadOnlyMetricsFor('audio');\n        var DVRMetrics = dashMetrics.getCurrentDVRInfo(metrics);\n        var DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        var actualTime;\n\n        if (!DVRWindow) return NaN;\n\n        if ((currentTime >= DVRWindow.start) && (currentTime <= DVRWindow.end)) {\n            return currentTime;\n        }\n\n        actualTime = Math.max(DVRWindow.end - streamInfo.manifestInfo.minBufferTime * 2, DVRWindow.start);\n\n        return actualTime;\n    }\n\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) return;\n\n        var tick = function () {\n            onWallclockTime();\n        };\n\n        wallclockTimeIntervalId = setInterval(tick, mediaPlayerModel.getWallclockTimeUpdateInterval());\n    }\n\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function seekToStartTimeOffset() {\n        let initialSeekTime = getStreamStartTime(false);\n        if (initialSeekTime > 0) {\n            seek(initialSeekTime);\n            log('Starting playback at offset: ' + initialSeekTime);\n        }\n    }\n\n    function updateCurrentTime() {\n        if (isPaused() || !isDynamic || element.readyState === 0) return;\n        var currentTime = getTime();\n        var actualTime = getActualPresentationTime(currentTime);\n        var timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged) {\n            seek(actualTime);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error) return;\n\n        let representationInfo = adapter.convertDataToTrack(manifestModel.getValue(), e.currentRepresentation);\n        let info = representationInfo.mediaInfo.streamInfo;\n\n        if (streamInfo.id !== info.id) return;\n        streamInfo = info;\n\n        updateCurrentTime();\n    }\n\n    function onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function onPlaybackStart() {\n        log('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, {startTime: getTime()});\n    }\n\n    function onPlaybackPlaying() {\n        log('Native video element event: playing');\n        eventBus.trigger(Events.PLAYBACK_PLAYING, {playingTime: getTime()});\n    }\n\n    function onPlaybackPaused() {\n        log('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, {ended: getEnded()});\n    }\n\n    function onPlaybackSeeking() {\n        let seekTime = getTime();\n        log('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {seekTime: seekTime});\n    }\n\n    function onPlaybackSeeked() {\n        log('Native video element event: seeked');\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n    }\n\n    function onPlaybackTimeUpdated() {\n        //log(\"Native video element event: timeupdate\");\n        var time = getTime();\n        if (time === currentTime) return;\n        currentTime = time;\n        eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {timeToEnd: getTimeToStreamEnd(), time: time});\n    }\n\n    function onPlaybackProgress() {\n        //log(\"Native video element event: progress\");\n        eventBus.trigger(Events.PLAYBACK_PROGRESS);\n    }\n\n    function onPlaybackRateChanged() {\n        var rate = getPlaybackRate();\n        log('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, { playbackRate: rate });\n    }\n\n    function onPlaybackMetaDataLoaded() {\n        log('Native video element event: loadedmetadata');\n        if ((!isDynamic && streamInfo.isFirst) || timelineConverter.isTimeSyncCompleted()) {\n            seekToStartTimeOffset();\n        }\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    function onPlaybackEnded() {\n        log('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_ENDED);\n    }\n\n    function onPlaybackError(event) {\n        let target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, {error: target.error});\n    }\n\n    function onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {isDynamic: isDynamic, time: new Date()});\n    }\n\n    function onBytesAppended(e) {\n        let ranges = e.bufferedRanges;\n        if (!ranges || !ranges.length) return;\n        let bufferedStart = Math.max(ranges.start(0), streamInfo.start);\n        let earliestTime = commonEarliestTime[streamInfo.id] === undefined ? bufferedStart : Math.max(commonEarliestTime[streamInfo.id], bufferedStart);\n        if (earliestTime === commonEarliestTime[streamInfo.id]) return;\n        if (!isDynamic && getStreamStartTime(true) < earliestTime && getTime() < earliestTime) {\n            seek(earliestTime);\n        }\n        commonEarliestTime[streamInfo.id] = earliestTime;\n    }\n\n    function onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamInfo.id !== streamInfo.id) return;\n        videoModel.setStallState(e.mediaType, e.state === BufferController.BUFFER_EMPTY);\n    }\n\n    function addAllListeners() {\n        element.addEventListener('canplay', onCanPlay);\n        element.addEventListener('play', onPlaybackStart);\n        element.addEventListener('playing', onPlaybackPlaying);\n        element.addEventListener('pause', onPlaybackPaused);\n        element.addEventListener('error', onPlaybackError);\n        element.addEventListener('seeking', onPlaybackSeeking);\n        element.addEventListener('seeked', onPlaybackSeeked);\n        element.addEventListener('timeupdate', onPlaybackTimeUpdated);\n        element.addEventListener('progress', onPlaybackProgress);\n        element.addEventListener('ratechange', onPlaybackRateChanged);\n        element.addEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        element.addEventListener('ended', onPlaybackEnded);\n    }\n\n    function removeAllListeners() {\n        element.removeEventListener('canplay', onCanPlay);\n        element.removeEventListener('play', onPlaybackStart);\n        element.removeEventListener('playing', onPlaybackPlaying);\n        element.removeEventListener('pause', onPlaybackPaused);\n        element.removeEventListener('error', onPlaybackError);\n        element.removeEventListener('seeking', onPlaybackSeeking);\n        element.removeEventListener('seeked', onPlaybackSeeked);\n        element.removeEventListener('timeupdate', onPlaybackTimeUpdated);\n        element.removeEventListener('progress', onPlaybackProgress);\n        element.removeEventListener('ratechange', onPlaybackRateChanged);\n        element.removeEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        element.removeEventListener('ended', onPlaybackEnded);\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getStreamStartTime: getStreamStartTime,\n        getTimeToStreamEnd: getTimeToStreamEnd,\n        isPlaybackStarted: isPlaybackStarted,\n        getStreamId: getStreamId,\n        getTime: getTime,\n        getPlaybackRate: getPlaybackRate,\n        getPlayedRanges: getPlayedRanges,\n        getEnded: getEnded,\n        getIsDynamic: getIsDynamic,\n        setLiveStartTime: setLiveStartTime,\n        getLiveStartTime: getLiveStartTime,\n        computeLiveDelay: computeLiveDelay,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        seek: seek,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {PlayListTrace} from '../vo/metrics/PlayList';\nimport PlaybackController from './PlaybackController';\nimport AbrController from './AbrController';\nimport BufferController from './BufferController';\nimport MediaController from './MediaController';\nimport BufferLevelRule from '../rules/scheduling/BufferLevelRule';\nimport NextFragmentRequestRule from '../rules/scheduling/NextFragmentRequestRule';\nimport TextSourceBuffer from '../TextSourceBuffer';\nimport MetricsModel from '../models/MetricsModel';\nimport FragmentModel from '../models/FragmentModel';\nimport DashMetrics from '../../dash/DashMetrics';\nimport DashAdapter from '../../dash/DashAdapter';\nimport SourceBufferController from '../controllers/SourceBufferController';\nimport LiveEdgeFinder from '../utils/LiveEdgeFinder';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport StreamController from '../controllers/StreamController';\nimport Debug from '../../core/Debug';\n\nfunction ScheduleController(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const manifestModel = config.manifestModel;\n    const adapter = config.adapter;\n    const dashMetrics = config.dashMetrics;\n    const dashManifestModel = config.dashManifestModel;\n    const timelineConverter = config.timelineConverter;\n    const mediaPlayerModel = config.mediaPlayerModel;\n\n    let instance,\n        type,\n        fragmentModel,\n        isDynamic,\n        currentRepresentationInfo,\n        initialRequest,\n        isStopped,\n        playListMetrics,\n        playListTraceMetrics,\n        playListTraceMetricsClosed,\n        isFragmentProcessingInProgress,\n        timeToLoadDelay,\n        scheduleTimeout,\n        seekTarget,\n        playbackController,\n        mediaController,\n        abrController,\n        streamProcessor,\n        streamController,\n        fragmentController,\n        bufferController,\n        bufferLevelRule,\n        nextFragmentRequestRule,\n        scheduleWhilePaused,\n        lastQualityIndex,\n        topQualityIndex,\n        lastInitQuality,\n        replaceRequestArray;\n\n    function setup() {\n        initialRequest = true;\n        lastInitQuality = NaN;\n        lastQualityIndex = NaN;\n        topQualityIndex = {};\n        replaceRequestArray = [];\n        isStopped = false;\n        playListMetrics = null;\n        playListTraceMetrics = null;\n        playListTraceMetricsClosed = true;\n        isFragmentProcessingInProgress = false;\n        timeToLoadDelay = 0;\n        seekTarget = NaN;\n    }\n\n    function initialize(Type, StreamProcessor) {\n        type = Type;\n        streamProcessor = StreamProcessor;\n        playbackController = PlaybackController(context).getInstance();\n        mediaController = MediaController(context).getInstance();\n        abrController = AbrController(context).getInstance();\n        streamController = StreamController(context).getInstance();\n        fragmentController = streamProcessor.getFragmentController();\n        bufferController = streamProcessor.getBufferController();\n        fragmentModel = fragmentController.getModel(type);\n        fragmentModel.setScheduleController(this);\n        isDynamic = streamProcessor.isDynamic();\n        scheduleWhilePaused = mediaPlayerModel.getScheduleWhilePaused();\n\n        bufferLevelRule = BufferLevelRule(context).create({\n            dashMetrics: DashMetrics(context).getInstance(),\n            metricsModel: MetricsModel(context).getInstance(),\n            textSourceBuffer: TextSourceBuffer(context).getInstance()\n        });\n\n        nextFragmentRequestRule = NextFragmentRequestRule(context).create({\n            adapter: DashAdapter(context).getInstance(),\n            sourceBufferController: SourceBufferController(context).getInstance(),\n            textSourceBuffer: TextSourceBuffer(context).getInstance()\n\n        });\n\n        if (dashManifestModel.getIsTextTrack(type)) {\n            eventBus.on(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\n        }\n\n        //eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.on(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.BUFFER_CLEARED, onBufferCleared, this);\n        eventBus.on(Events.BYTES_APPENDED, onBytesAppended, this);\n        eventBus.on(Events.INIT_REQUESTED, onInitRequested, this);\n        eventBus.on(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.on(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\n        eventBus.on(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, this);\n    }\n\n    function start() {\n        if (!currentRepresentationInfo || bufferController.getIsBufferingCompleted()) return;\n        addPlaylistTraceMetrics();\n        isStopped = false;\n\n        if (initialRequest) {\n            initialRequest = false;\n            getInitRequest(currentRepresentationInfo.quality);\n        } else {\n            startScheduleTimer(0);\n        }\n        log('Schedule controller starting for ' + type);\n    }\n\n    function stop() {\n        if (isStopped) return;\n        isStopped = true;\n        clearTimeout(scheduleTimeout);\n        log('Schedule controller stopping for ' + type);\n    }\n\n    function hasTopQualityChanged(type, id) {\n\n        topQualityIndex[id] = topQualityIndex[id] || {};\n        const newTopQualityIndex = abrController.getTopQualityIndexFor(type,id);\n\n        if ( topQualityIndex[id][type] != newTopQualityIndex ) {\n            log('Top quality'  + type + ' index has changed from ' + topQualityIndex[id][type] + ' to ' + newTopQualityIndex);\n            topQualityIndex[id][type] = newTopQualityIndex;\n            return true;\n        }\n        return false;\n\n    }\n\n    function schedule() {\n\n        if (isStopped || isFragmentProcessingInProgress || !bufferController || playbackController.isPaused() && !scheduleWhilePaused) return;\n\n        validateExecutedFragmentRequest();\n\n        const isReplacement = replaceRequestArray.length > 0;\n        if ( isReplacement ||\n             hasTopQualityChanged(currentRepresentationInfo.mediaInfo.type, streamProcessor.getStreamInfo().id) ||\n             bufferLevelRule.execute(streamProcessor, type, streamController.isVideoTrackPresent())\n           ) {\n\n            const getNextFragment = function () {\n                if (currentRepresentationInfo.quality !== lastInitQuality) {\n                    lastInitQuality = currentRepresentationInfo.quality;\n                    bufferController.switchInitData(streamProcessor.getStreamInfo().id, currentRepresentationInfo.quality);\n                } else {\n                    const replacement = replaceRequestArray.shift();\n\n                    if (fragmentController.isInitializationRequest(replacement)) {\n                        getInitRequest(replacement.quality);\n                    } else {\n                        const request = nextFragmentRequestRule.execute(streamProcessor, replacement);\n                        if (request) {\n                            fragmentModel.executeRequest(request);\n                        } else { //Use case - Playing at the bleeding live edge and frag is not available yet. Cycle back around.\n                            isFragmentProcessingInProgress = false;\n                            startScheduleTimer(500);\n                        }\n                    }\n                }\n            };\n\n            isFragmentProcessingInProgress = true;\n            if (isReplacement) {\n                getNextFragment();\n            } else {\n                abrController.getPlaybackQuality(streamProcessor, getNextFragment);\n            }\n\n        } else {\n            startScheduleTimer(500);\n        }\n    }\n\n    function validateExecutedFragmentRequest() {\n        //Validate that the fragment request executed and appended into the source buffer is as\n        // good of quality as the current quality and is the correct media track.\n        const safeBufferLevel = currentRepresentationInfo.fragmentDuration * 1.5;\n        const request = fragmentModel.getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, time: playbackController.getTime() + safeBufferLevel, threshold: 0})[0];\n\n        if (request && replaceRequestArray.indexOf(request) === -1 && !dashManifestModel.getIsTextTrack(type)) {\n            if (!mediaController.isCurrentTrack(request.mediaInfo) || mediaPlayerModel.getFastSwitchEnabled() && request.quality < currentRepresentationInfo.quality &&\n                bufferController.getBufferLevel() >= safeBufferLevel && abrController.getAbandonmentStateFor(type) !== AbrController.ABANDON_LOAD) {\n                replaceRequest(request);\n                log('Reloading outdated fragment at index: ', request.index);\n            } else if (request.quality > currentRepresentationInfo.quality) {\n                //The buffer has better quality it in then what we would request so set append point to end of buffer!!\n                setSeekTarget(playbackController.getTime() + bufferController.getBufferLevel());\n            }\n        }\n    }\n\n    function startScheduleTimer(value) {\n        clearTimeout(scheduleTimeout);\n        scheduleTimeout = setTimeout(schedule, value);\n    }\n\n    function onInitRequested(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        getInitRequest(currentRepresentationInfo.quality);\n    }\n\n    function getInitRequest(quality) {\n        lastInitQuality = quality;\n\n        const request = adapter.getInitRequest(streamProcessor, quality);\n        if (request) {\n            isFragmentProcessingInProgress = true;\n            fragmentModel.executeRequest(request);\n        }\n    }\n\n    function replaceRequest(request) {\n        replaceRequestArray.push(request);\n    }\n\n    function onQualityChanged(e) {\n        if (type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n\n        currentRepresentationInfo = streamProcessor.getRepresentationInfoForQuality(e.newQuality);\n\n        if (currentRepresentationInfo === null || currentRepresentationInfo === undefined) {\n            throw new Error('Unexpected error! - currentRepresentationInfo is null or undefined');\n        }\n\n        clearPlayListTraceMetrics(new Date(), PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON);\n        addPlaylistTraceMetrics();\n    }\n\n    function completeQualityChange(trigger) {\n        const item = fragmentModel.getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, time: playbackController.getTime(), threshold: 0})[0];\n        if (item && playbackController.getTime() >= item.startTime ) {\n            if (item.quality !== lastQualityIndex && trigger) {\n                eventBus.trigger(Events.QUALITY_CHANGE_RENDERED, {mediaType: type, oldQuality: lastQualityIndex, newQuality: item.quality});\n            }\n            lastQualityIndex = item.quality;\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error || e.sender.getStreamProcessor() !== streamProcessor) return;\n        currentRepresentationInfo = adapter.convertDataToTrack(manifestModel.getValue(), e.currentRepresentation);\n    }\n\n    function onStreamInitialized(e) {\n        if (e.error || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n        currentRepresentationInfo = streamProcessor.getCurrentRepresentationInfo();\n\n        if (isDynamic && initialRequest) {\n            setLiveEdgeSeekTarget();\n        }\n\n        if (isStopped) {\n            start();\n        }\n    }\n\n    function setLiveEdgeSeekTarget() {\n        const liveEdge = LiveEdgeFinder(context).getInstance().getLiveEdge();\n        const dvrWindowSize = currentRepresentationInfo.mediaInfo.streamInfo.manifestInfo.DVRWindowSize / 2;\n        const startTime = liveEdge - playbackController.computeLiveDelay(currentRepresentationInfo.fragmentDuration, dvrWindowSize);\n        const request = adapter.getFragmentRequestForTime(streamProcessor, currentRepresentationInfo, startTime, {ignoreIsFinished: true});\n\n        seekTarget = playbackController.getLiveStartTime();\n        if (isNaN(seekTarget) || request.startTime > seekTarget) {\n            playbackController.setLiveStartTime(request.startTime);\n            seekTarget = request.startTime;\n        }\n\n        const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor('stream'));\n        metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\n            currentTime: seekTarget,\n            presentationStartTime: liveEdge,\n            latency: liveEdge - seekTarget,\n            clientTimeOffset: timelineConverter.getClientTimeOffset()\n        });\n    }\n\n    function onStreamCompleted(e) {\n        if (e.fragmentModel !== fragmentModel) return;\n        stop();\n        isFragmentProcessingInProgress = false;\n        log('Stream is complete');\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        if (e.sender !== fragmentModel) return;\n\n        if (dashManifestModel.getIsTextTrack(type)) {\n            isFragmentProcessingInProgress = false;\n        }\n\n        if (e.error && e.request.serviceLocation && !isStopped) {\n            replaceRequest(e.request);\n            isFragmentProcessingInProgress = false;\n            startScheduleTimer(0);\n        }\n    }\n\n    function onPlaybackTimeUpdated() {\n        completeQualityChange(true);\n    }\n\n    function onBytesAppended(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        isFragmentProcessingInProgress = false;\n        startScheduleTimer(0);\n    }\n\n    function onFragmentLoadingAbandoned(e) {\n        if (e.streamProcessor !== streamProcessor) return;\n        replaceRequest(e.request);\n        isFragmentProcessingInProgress = false;\n        startScheduleTimer(0);\n    }\n\n    function onDataUpdateStarted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        stop();\n    }\n\n    function onBufferCleared(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        // after the data has been removed from the buffer we should remove the requests from the list of\n        // the executed requests for which playback time is inside the time interval that has been removed from the buffer\n        fragmentModel.removeExecutedRequestsBeforeTime(e.to);\n\n        if (e.hasEnoughSpaceToAppend && isStopped) {\n            start();\n        }\n    }\n\n    function onBufferLevelStateChanged(e) {\n        if ((e.sender.getStreamProcessor() === streamProcessor) && e.state === BufferController.BUFFER_EMPTY && !playbackController.isSeeking()) {\n            log('Buffer is empty! Stalling!');\n            clearPlayListTraceMetrics(new Date(), PlayListTrace.REBUFFERING_REASON);\n        }\n    }\n\n    function onQuotaExceeded(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        stop();\n    }\n\n    function onURLResolutionFailed() {\n        fragmentModel.abortRequests();\n        stop();\n    }\n\n    function onTimedTextRequested(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        getInitRequest(e.index);\n    }\n\n    function onPlaybackStarted() {\n        if (isStopped || !scheduleWhilePaused) {\n            start();\n        }\n    }\n\n    function onPlaybackSeeking(e) {\n\n        seekTarget = e.seekTime;\n        setTimeToLoadDelay(0);\n\n        if (isStopped) {\n            start();\n        }\n\n        const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor('stream'));\n        const latency = currentRepresentationInfo.DVRWindow ? currentRepresentationInfo.DVRWindow.end - playbackController.getTime() : NaN;\n        metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {latency: latency});\n    }\n\n    function onPlaybackRateChanged(e) {\n        if (playListTraceMetrics) {\n            playListTraceMetrics.playbackspeed = e.playbackRate.toString();\n        }\n    }\n\n    function getSeekTarget() {\n        return seekTarget;\n    }\n\n    function setSeekTarget(value) {\n        seekTarget = value;\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function setTimeToLoadDelay(value) {\n        timeToLoadDelay = value;\n    }\n\n    function getTimeToLoadDelay() {\n        return timeToLoadDelay;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getBufferTarget() {\n        return bufferLevelRule.getBufferTarget(streamProcessor, type, streamController.isVideoTrackPresent());\n    }\n\n    function setPlayList(playList) {\n        playListMetrics = playList;\n    }\n\n    function finalisePlayList(time, reason) {\n        clearPlayListTraceMetrics(time, reason);\n        playListMetrics = null;\n    }\n\n    function clearPlayListTraceMetrics(endTime, stopreason) {\n        if (playListMetrics && playListTraceMetricsClosed === false) {\n            const startTime = playListTraceMetrics.start;\n            const duration = endTime.getTime() - startTime.getTime();\n            playListTraceMetrics.duration = duration;\n            playListTraceMetrics.stopreason = stopreason;\n            playListMetrics.trace.push(playListTraceMetrics);\n            playListTraceMetricsClosed = true;\n        }\n    }\n\n    function addPlaylistTraceMetrics() {\n        if (playListMetrics && playListTraceMetricsClosed === true && currentRepresentationInfo) {\n            playListTraceMetricsClosed = false;\n            playListTraceMetrics = new PlayListTrace();\n            playListTraceMetrics.representationid = currentRepresentationInfo.id;\n            playListTraceMetrics.start = new Date();\n            playListTraceMetrics.mstart = playbackController.getTime() * 1000;\n            playListTraceMetrics.playbackspeed = playbackController.getPlaybackRate().toString();\n        }\n    }\n\n    function reset() {\n        //eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\n        eventBus.off(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n        eventBus.off(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\n        eventBus.off(Events.BYTES_APPENDED, onBytesAppended, this);\n        eventBus.off(Events.BUFFER_CLEARED, onBufferCleared, this);\n        eventBus.off(Events.INIT_REQUESTED, onInitRequested, this);\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.off(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\n        eventBus.off(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, this);\n        if (dashManifestModel.getIsTextTrack(type)) {\n            eventBus.off(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\n        }\n\n        stop();\n        completeQualityChange(false);\n        isFragmentProcessingInProgress = false;\n        timeToLoadDelay = 0;\n        seekTarget = NaN;\n        playbackController = null;\n        playListMetrics = null;\n    }\n\n    instance = {\n        initialize: initialize,\n        getStreamProcessor: getStreamProcessor,\n        getSeekTarget: getSeekTarget,\n        setSeekTarget: setSeekTarget,\n        getFragmentModel: getFragmentModel,\n        setTimeToLoadDelay: setTimeToLoadDelay,\n        getTimeToLoadDelay: getTimeToLoadDelay,\n        replaceRequest: replaceRequest,\n        start: start,\n        stop: stop,\n        reset: reset,\n        setPlayList: setPlayList,\n        getBufferTarget: getBufferTarget,\n        finalisePlayList: finalisePlayList\n    };\n\n    setup();\n\n    return instance;\n}\n\nScheduleController.__dashjs_factory_name = 'ScheduleController';\nexport default FactoryMaker.getClassFactory(ScheduleController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport TextSourceBuffer from '../TextSourceBuffer';\nimport MediaController from './MediaController';\nimport DashAdapter from '../../dash/DashAdapter';\nimport ErrorHandler from '../utils/ErrorHandler';\nimport StreamController from './StreamController';\nimport TextTracks from '../TextTracks';\nimport VTTParser from '../utils/VTTParser';\nimport TTMLParser from '../utils/TTMLParser';\nimport VideoModel from '../models/VideoModel';\nimport Error from '../vo/Error';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n\nconst QUOTA_EXCEEDED_ERROR_CODE = 22;\n\nfunction SourceBufferController() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        dashManifestModel;\n\n    function createSourceBuffer(mediaSource, mediaInfo) {\n\n        var codec = mediaInfo.codec;\n        var buffer = null;\n\n        try {\n            // Safari claims to support anything starting 'application/mp4'.\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\n            // - currently no browser does, so check for it and use our own\n            // implementation. The same is true for codecs=\"wvtt\".\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt).*\"/i)) {\n                throw new Error('not really supported');\n            }\n\n            buffer = mediaSource.addSourceBuffer(codec);\n\n        } catch (ex) {\n            // Note that in the following, the quotes are open to allow for extra text after stpp and wvtt\n            if ((mediaInfo.isText) || (codec.indexOf('codecs=\"stpp') !== -1) ||  (codec.indexOf('codecs=\"wvtt') !== -1) ) {\n                buffer = TextSourceBuffer(context).getInstance();\n                buffer.setConfig({\n                    errHandler: ErrorHandler(context).getInstance(),\n                    adapter: DashAdapter(context).getInstance(),\n                    dashManifestModel: dashManifestModel,\n                    mediaController: MediaController(context).getInstance(),\n                    videoModel: VideoModel(context).getInstance(),\n                    streamController: StreamController(context).getInstance(),\n                    textTracks: TextTracks(context).getInstance(),\n                    VTTParser: VTTParser(context).getInstance(),\n                    TTMLParser: TTMLParser(context).getInstance()\n\n                });\n            } else {\n                throw ex;\n            }\n        }\n\n        return buffer;\n    }\n\n    function removeSourceBuffer(mediaSource, buffer) {\n        try {\n            mediaSource.removeSourceBuffer(buffer);\n        } catch (ex) {\n        }\n    }\n\n    function getBufferRange(buffer, time, tolerance) {\n        var ranges = null;\n        var start = 0;\n        var end = 0;\n        var firstStart = null;\n        var lastEnd = null;\n        var gap = 0;\n\n        var len,\n            i;\n\n        var toler = (tolerance || 0.15);\n\n        try {\n            ranges = buffer.buffered;\n        } catch (ex) {\n            return null;\n        }\n\n        if (ranges !== null && ranges !== undefined) {\n            for (i = 0, len = ranges.length; i < len; i++) {\n                start = ranges.start(i);\n                end = ranges.end(i);\n                if (firstStart === null) {\n                    gap = Math.abs(start - time);\n                    if (time >= start && time < end) {\n                        // start the range\n                        firstStart = start;\n                        lastEnd = end;\n                    } else if (gap <= toler) {\n                        // start the range even though the buffer does not contain time 0\n                        firstStart = start;\n                        lastEnd = end;\n                    }\n                } else {\n                    gap = start - lastEnd;\n                    if (gap <= toler) {\n                        // the discontinuity is smaller than the tolerance, combine the ranges\n                        lastEnd = end;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            if (firstStart !== null) {\n                return {start: firstStart, end: lastEnd};\n            }\n        }\n\n        return null;\n    }\n\n    function getAllRanges(buffer) {\n        var ranges = null;\n\n        try {\n            ranges = buffer.buffered;\n            return ranges;\n        } catch (ex) {\n            return null;\n        }\n    }\n\n    function getTotalBufferedTime(buffer) {\n        var ranges = getAllRanges(buffer);\n        var totalBufferedTime = 0;\n        var ln,\n            i;\n\n        if (!ranges) return totalBufferedTime;\n\n        for (i = 0, ln = ranges.length; i < ln; i++) {\n            totalBufferedTime += ranges.end(i) - ranges.start(i);\n        }\n\n        return totalBufferedTime;\n    }\n\n    function getBufferLength(buffer, time, tolerance) {\n\n        var range,\n            length;\n\n        range = getBufferRange(buffer, time, tolerance);\n\n        if (range === null) {\n            length = 0;\n        } else {\n            length = range.end - time;\n        }\n\n        return length;\n    }\n\n    function getRangeDifference(currentRanges, buffer) {\n        if (!buffer) return null;\n\n        //TODO we may need to look for a more elegant and robust method\n        // The logic below checks that is the difference between currentRanges and actual SourceBuffer ranges\n\n        var newRanges = getAllRanges(buffer);\n        var newStart,\n            newEnd,\n            equalStart,\n            equalEnd,\n            currentRange,\n            nextCurrentRange,\n            nextNewRange,\n            hasRange,\n            diff;\n\n        if (!newRanges) return null;\n\n        for (var i = 0, ln = newRanges.length; i < ln; i++) {\n            hasRange = currentRanges.length > i;\n            currentRange = hasRange ? {start: currentRanges.start(i), end: currentRanges.end(i)} : null;\n            newStart = newRanges.start(i);\n            newEnd = newRanges.end(i);\n\n            // if there is no range with the same index it means that a new range has been added. This range is\n            // the difference we are looking for\n            // Example\n            // current ranges\n            // 0|---range1---|4  8|--range2--|12\n            // new ranges\n            // 0|---range1---|4| 8|--range2--|12  16|--range3--|20\n\n            if (!currentRange) {\n                diff = {start: newStart, end: newEnd};\n                return diff;\n            }\n\n            equalStart = currentRange.start === newStart;\n            equalEnd = currentRange.end === newEnd;\n\n            // if ranges are equal do nothing here and go the next ranges\n            if (equalStart && equalEnd) continue;\n\n            // start or/and end of the range has been changed\n            if (equalStart) {\n                diff = {start: currentRange.end, end: newEnd};\n            } else if (equalEnd) {\n                diff = {start: newStart, end: currentRange.start};\n            } else {\n                // new range has been added before the current one\n                diff = {start: newStart, end: newEnd};\n                return diff;\n            }\n\n            // if there is next current range but no next new range (it it is not equal the next current range) it means\n            // that the ranges have been merged\n            // Example 1\n            // current ranges\n            // 0|---range1---|4  8|--range2--|12  16|---range3---|\n            // new ranges\n            // 0|-----------range1-----------|12  16|---range3--|\n            nextCurrentRange = currentRanges.length > (i + 1) ? {start: currentRanges.start(i + 1), end: currentRanges.end(i + 1)} : null;\n            nextNewRange = (i + 1) < ln ? {start: newRanges.start(i + 1), end: newRanges.end(i + 1)} : null;\n\n            if (nextCurrentRange && (!nextNewRange || (nextNewRange.start !== nextCurrentRange.start || nextNewRange.end !== nextCurrentRange.end))) {\n                diff.end = nextCurrentRange.start;\n            }\n\n            return diff;\n        }\n\n        return null;\n    }\n\n    function append(buffer, chunk) {\n        var bytes = chunk.bytes;\n        var appendMethod = ('append' in buffer) ? 'append' : (('appendBuffer' in buffer) ? 'appendBuffer' : null);\n        // our user-defined sourcebuffer-like object has Object as its\n        // prototype whereas built-in SourceBuffers will have something\n        // more sensible. do not pass chunk to built-in append.\n        var acceptsChunk = Object.prototype.toString.call(buffer).slice(8, -1) === 'Object';\n\n        if (!appendMethod) return;\n\n        try {\n            waitForUpdateEnd(buffer, function () {\n                if (acceptsChunk) {\n                    // chunk.start is used in calculations by TextSourceBuffer\n                    buffer[appendMethod](bytes, chunk);\n                } else {\n                    buffer[appendMethod](bytes);\n                }\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                waitForUpdateEnd(buffer, function () {\n                    eventBus.trigger(Events.SOURCEBUFFER_APPEND_COMPLETED, {buffer: buffer, bytes: bytes});\n                });\n            });\n        } catch (err) {\n            eventBus.trigger(Events.SOURCEBUFFER_APPEND_COMPLETED, {buffer: buffer, bytes: bytes, error: new Error(err.code, err.message, null)});\n        }\n    }\n\n    function remove(buffer, start, end, mediaSource) {\n\n        try {\n            // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\n            waitForUpdateEnd(buffer, function () {\n                if ((start >= 0) && (end > start) && (mediaSource.readyState !== 'ended')) {\n                    buffer.remove(start, end);\n                }\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                waitForUpdateEnd(buffer, function () {\n                    eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {buffer: buffer, from: start, to: end});\n                });\n            });\n        } catch (err) {\n            eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {buffer: buffer, from: start, to: end, error: new Error(err.code, err.message, null)});\n        }\n    }\n\n    function abort(mediaSource, buffer) {\n        try {\n            if (mediaSource.readyState === 'open') {\n                buffer.abort();\n            } else if (buffer.setTextTrack && mediaSource.readyState === 'ended') {\n                buffer.abort(); //The cues need to be removed from the TextSourceBuffer via a call to abort()\n            }\n        } catch (ex) {\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function waitForUpdateEnd(buffer, callback) {\n        var intervalId;\n        var CHECK_INTERVAL = 50;\n\n        var checkIsUpdateEnded = function () {\n            // if updating is still in progress do nothing and wait for the next check again.\n            if (buffer.updating) return;\n            // updating is completed, now we can stop checking and resolve the promise\n            clearInterval(intervalId);\n            callback();\n        };\n\n        var updateEndHandler = function () {\n            if (buffer.updating) return;\n\n            buffer.removeEventListener('updateend', updateEndHandler, false);\n            callback();\n        };\n\n        if (!buffer.updating) {\n            callback();\n            return;\n        }\n\n        // use updateend event if possible\n        if (typeof buffer.addEventListener === 'function') {\n            try {\n                buffer.addEventListener('updateend', updateEndHandler, false);\n            } catch (err) {\n                // use setInterval to periodically check if updating has been completed\n                intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\n            }\n        } else {\n            // use setInterval to periodically check if updating has been completed\n            intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\n        }\n    }\n\n    instance = {\n        append: append,\n        remove: remove,\n        abort: abort,\n        createSourceBuffer: createSourceBuffer,\n        removeSourceBuffer: removeSourceBuffer,\n        getBufferRange: getBufferRange,\n        getAllRanges: getAllRanges,\n        getTotalBufferedTime: getTotalBufferedTime,\n        getBufferLength: getBufferLength,\n        getRangeDifference: getRangeDifference,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nSourceBufferController.__dashjs_factory_name = 'SourceBufferController';\nlet factory = FactoryMaker.getSingletonFactory(SourceBufferController);\nfactory.QUOTA_EXCEEDED_ERROR_CODE = QUOTA_EXCEEDED_ERROR_CODE;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport PlaybackController from './PlaybackController';\nimport Stream from '../Stream';\nimport ManifestUpdater from '../ManifestUpdater';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport URIQueryAndFragmentModel from '../models/URIQueryAndFragmentModel';\nimport VideoModel from '../models/VideoModel';\nimport MediaPlayerModel from '../models/MediaPlayerModel';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {PlayList, PlayListTrace} from '../vo/metrics/PlayList';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\n\nfunction StreamController() {\n\n    const STREAM_END_THRESHOLD = 0.1;\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        capabilities,\n        manifestUpdater,\n        manifestLoader,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        metricsModel,\n        dashMetrics,\n        liveEdgeFinder,\n        mediaSourceController,\n        timeSyncController,\n        baseURLController,\n        initCache,\n        errHandler,\n        timelineConverter,\n        streams,\n        activeStream,\n        protectionController,\n        protectionData,\n        autoPlay,\n        isStreamSwitchingInProgress,\n        isUpdating,\n        hasMediaError,\n        hasInitialisationError,\n        mediaSource,\n        videoModel,\n        playbackController,\n        mediaPlayerModel,\n        isPaused,\n        initialPlayback,\n        playListMetrics,\n        videoTrackDetected;\n\n    function setup() {\n        protectionController = null;\n        streams = [];\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        autoPlay = true;\n        isStreamSwitchingInProgress = false;\n        isUpdating = false;\n        isPaused = false;\n        initialPlayback = true;\n        playListMetrics = null;\n        hasMediaError = false;\n        hasInitialisationError = false;\n    }\n\n    function initialize(autoPl, protData) {\n        autoPlay = autoPl;\n        protectionData = protData;\n        timelineConverter.initialize();\n        initCache = InitCache(context).getInstance();\n\n        manifestUpdater = ManifestUpdater(context).getInstance();\n        manifestUpdater.setConfig({\n            log: log,\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel\n        });\n        manifestUpdater.initialize(manifestLoader);\n\n        videoModel = VideoModel(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        playbackController.setConfig({\n            streamController: instance,\n            timelineConverter: timelineConverter,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel,\n            adapter: adapter,\n            videoModel: videoModel\n        });\n\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncCompleted, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.on(Events.PLAYBACK_ENDED, onEnded, this);\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdated, this);\n        eventBus.on(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\n    }\n\n    /*\n     * Called when current playback position is changed.\n     * Used to determine the time current stream is finished and we should switch to the next stream.\n     */\n    function onPlaybackTimeUpdated(e) {\n\n        if (isVideoTrackPresent()) {\n            const playbackQuality = videoModel.getPlaybackQuality();\n            if (playbackQuality) {\n                metricsModel.addDroppedFrames('video', playbackQuality);\n            }\n        }\n\n        // Sometimes after seeking timeUpdateHandler is called before seekingHandler and a new stream starts\n        // from beginning instead of from a chosen position. So we do nothing if the player is in the seeking state\n        if (playbackController.isSeeking()) return;\n\n        if (e.timeToEnd <= STREAM_END_THRESHOLD) {\n            //only needed for multiple period content when the native event does not fire due to duration manipulation.\n            onEnded();\n        }\n    }\n\n    function onPlaybackSeeking(e) {\n        const seekingStream = getStreamForTime(e.seekTime);\n\n        if (seekingStream && seekingStream !== activeStream) {\n            flushPlaylistMetrics(PlayListTrace.END_OF_PERIOD_STOP_REASON);\n            switchStream(activeStream, seekingStream, e.seekTime);\n        } else {\n            flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n        }\n\n        addPlaylistMetrics(PlayList.SEEK_START_REASON);\n    }\n\n    function onPlaybackStarted(/*e*/) {\n        if (initialPlayback) {\n            initialPlayback = false;\n            addPlaylistMetrics(PlayList.INITIAL_PLAYOUT_START_REASON);\n        } else {\n            if (isPaused) {\n                isPaused = false;\n                addPlaylistMetrics(PlayList.RESUME_FROM_PAUSE_START_REASON);\n            }\n        }\n    }\n\n    function onPlaybackPaused(e) {\n        if (!e.ended) {\n            isPaused = true;\n            flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n        }\n    }\n\n    function onStreamBufferingCompleted() {\n        const isLast = getActiveStreamInfo().isLast;\n        if (mediaSource && isLast) {\n            mediaSourceController.signalEndOfStream(mediaSource);\n        }\n    }\n\n    function getStreamForTime(time) {\n        var duration = 0;\n        var stream = null;\n\n        var ln = streams.length;\n\n        if (ln > 0) {\n            duration += streams[0].getStartTime();\n        }\n\n        for (var i = 0; i < ln; i++) {\n            stream = streams[i];\n            duration += stream.getDuration();\n\n            if (time < duration) {\n                return stream;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a playhead time, in seconds, converted to be relative\n     * to the start of an identified stream/period or null if no such stream\n     * @param {number} time\n     * @param {string} id\n     * @returns {number|null}\n     */\n    function getTimeRelativeToStreamId(time, id) {\n        var stream = null;\n        var baseStart = 0;\n        var streamStart = 0;\n        var streamDur = null;\n\n        var ln = streams.length;\n\n        for (var i = 0; i < ln; i++) {\n            stream = streams[i];\n            streamStart = stream.getStartTime();\n            streamDur = stream.getDuration();\n\n            // use start time, if not undefined or NaN or similar\n            if (Number.isFinite(streamStart)) {\n                baseStart = streamStart;\n            }\n\n            if (stream.getId() === id) {\n                return time - baseStart;\n            } else {\n                // use duration if not undefined or NaN or similar\n                if (Number.isFinite(streamDur)) {\n                    baseStart += streamDur;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getActiveStreamCommonEarliestTime() {\n        let commonEarliestTime = [];\n        activeStream.getProcessors().forEach(p => {\n            commonEarliestTime.push(p.getIndexHandler().getEarliestTime());\n        });\n        return Math.min.apply(Math, commonEarliestTime);\n    }\n\n    function onEnded() {\n        const nextStream = getNextStream();\n        if (nextStream) {\n            switchStream(activeStream, nextStream, NaN);\n        }\n        flushPlaylistMetrics(nextStream ? PlayListTrace.END_OF_PERIOD_STOP_REASON : PlayListTrace.END_OF_CONTENT_STOP_REASON);\n    }\n\n    function getNextStream() {\n        if (activeStream) {\n            const start = activeStream.getStreamInfo().start;\n            const duration = activeStream.getStreamInfo().duration;\n\n            return streams.filter(function (stream) {\n                return (stream.getStreamInfo().start === (start + duration));\n            })[0];\n        }\n    }\n\n    function switchStream(oldStream, newStream, seekTime) {\n\n        if (isStreamSwitchingInProgress || !newStream || oldStream === newStream) return;\n        isStreamSwitchingInProgress = true;\n\n        eventBus.trigger(Events.PERIOD_SWITCH_STARTED,\n            {\n                fromStreamInfo: oldStream ? oldStream.getStreamInfo() : null,\n                toStreamInfo: newStream.getStreamInfo()\n            });\n\n        if (oldStream) oldStream.deactivate();\n        activeStream = newStream;\n        playbackController.initialize(activeStream.getStreamInfo());\n        videoTrackDetected = checkVideoPresence();\n\n        //TODO detect if we should close and repose or jump to activateStream.\n        openMediaSource(seekTime);\n    }\n\n    function openMediaSource(seekTime) {\n\n        let sourceUrl;\n\n        function onMediaSourceOpen() {\n            log('MediaSource is open!');\n            window.URL.revokeObjectURL(sourceUrl);\n            mediaSource.removeEventListener('sourceopen', onMediaSourceOpen);\n            mediaSource.removeEventListener('webkitsourceopen', onMediaSourceOpen);\n            setMediaDuration();\n            activateStream(seekTime);\n        }\n\n        if (!mediaSource) {\n            mediaSource = mediaSourceController.createMediaSource();\n        } else {\n            mediaSourceController.detachMediaSource(videoModel);\n        }\n\n        mediaSource.addEventListener('sourceopen', onMediaSourceOpen, false);\n        mediaSource.addEventListener('webkitsourceopen', onMediaSourceOpen, false);\n        sourceUrl = mediaSourceController.attachMediaSource(mediaSource, videoModel);\n        log('MediaSource attached to element.  Waiting on open...');\n    }\n\n    function activateStream(seekTime) {\n\n        activeStream.activate(mediaSource);\n\n        if (!initialPlayback) {\n            if (!isNaN(seekTime)) {\n                playbackController.seek(seekTime); //we only need to call seek here, IndexHandlerTime was set from seeking event\n            } else {\n                let startTime = playbackController.getStreamStartTime(true);\n                activeStream.getProcessors().forEach(p => {\n                    adapter.setIndexHandlerTime(p, startTime);\n                });\n                playbackController.seek(startTime); //seek to period start time\n            }\n        }\n\n        activeStream.startEventController();\n        if (autoPlay || !initialPlayback) {\n            playbackController.play();\n        }\n\n        isStreamSwitchingInProgress = false;\n        eventBus.trigger(Events.PERIOD_SWITCH_COMPLETED, {toStreamInfo: activeStream.getStreamInfo()});\n    }\n\n    function setMediaDuration() {\n        const manifestDuration = activeStream.getStreamInfo().manifestInfo.duration;\n        const mediaDuration = mediaSourceController.setDuration(mediaSource, manifestDuration);\n        log('Duration successfully set to: ' + mediaDuration);\n    }\n\n    function getComposedStream(streamInfo) {\n        for (let i = 0, ln = streams.length; i < ln; i++) {\n            if (streams[i].getId() === streamInfo.id) {\n                return streams[i];\n            }\n        }\n        return null;\n    }\n\n    function composeStreams(manifest) {\n\n        try {\n            const streamsInfo = adapter.getStreamsInfo(manifest);\n            if (streamsInfo.length === 0) {\n                throw new Error('There are no streams');\n            }\n\n            const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor('stream'));\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\n                currentTime: playbackController.getTime(),\n                buffered: videoModel.getElement().buffered,\n                presentationStartTime: streamsInfo[0].start,\n                clientTimeOffset: timelineConverter.getClientTimeOffset()\n            });\n\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\n\n                // If the Stream object does not exist we probably loaded the manifest the first time or it was\n                // introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations\n                const streamInfo = streamsInfo[i];\n                let stream = getComposedStream(streamInfo);\n\n                if (!stream) {\n\n                    stream = Stream(context).create({\n                        manifestModel: manifestModel,\n                        manifestUpdater: manifestUpdater,\n                        adapter: adapter,\n                        timelineConverter: timelineConverter,\n                        capabilities: capabilities,\n                        errHandler: errHandler,\n                        baseURLController: baseURLController\n                    });\n                    streams.push(stream);\n                    stream.initialize(streamInfo, protectionController);\n\n                } else {\n                    stream.updateData(streamInfo);\n                }\n\n                metricsModel.addManifestUpdateStreamInfo(manifestUpdateInfo, streamInfo.id, streamInfo.index, streamInfo.start, streamInfo.duration);\n            }\n\n            if (!activeStream) {\n                //const initStream = streamsInfo[0].manifestInfo.isDynamic ? streams[streams.length -1] : streams[0];\n                //TODO we need to figure out what the correct starting period is here and not just go to first or last in array.\n                switchStream(null, streams[0], NaN);\n            }\n\n            eventBus.trigger(Events.STREAMS_COMPOSED);\n\n        } catch (e) {\n            errHandler.manifestError(e.message, 'nostreamscomposed', manifest);\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    function onTimeSyncCompleted(/*e*/) {\n        const manifest = manifestModel.getValue();\n        //TODO check if we can move this to initialize??\n        if (protectionController) {\n            eventBus.trigger(Events.PROTECTION_CREATED, {controller: protectionController, manifest: manifest});\n            protectionController.setMediaElement(videoModel.getElement());\n            if (protectionData) {\n                protectionController.setProtectionData(protectionData);\n            }\n        }\n\n        composeStreams(manifest);\n    }\n\n    function onManifestUpdated(e) {\n        if (!e.error) {\n            //Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream\n            //is SegmentTimeline to avoid using time source\n            var manifest = e.manifest;\n            var streamInfo = adapter.getStreamsInfo(manifest)[0];\n            var mediaInfo = (\n                adapter.getMediaInfoForType(manifest, streamInfo, 'video') ||\n                adapter.getMediaInfoForType(manifest, streamInfo, 'audio')\n            );\n\n            var adaptation,\n                useCalculatedLiveEdgeTime;\n\n            if (mediaInfo) {\n                adaptation = adapter.getDataForMedia(mediaInfo);\n                useCalculatedLiveEdgeTime = dashManifestModel.getRepresentationsForAdaptation(manifest, adaptation)[0].useCalculatedLiveEdgeTime;\n\n                if (useCalculatedLiveEdgeTime) {\n                    log('SegmentTimeline detected using calculated Live Edge Time');\n                    mediaPlayerModel.setUseManifestDateHeaderTimeSource(false);\n                }\n            }\n\n            var manifestUTCTimingSources = dashManifestModel.getUTCTimingSources(e.manifest);\n            var allUTCTimingSources = (!dashManifestModel.getIsDynamic(manifest) || useCalculatedLiveEdgeTime) ? manifestUTCTimingSources : manifestUTCTimingSources.concat(mediaPlayerModel.getUTCTimingSources());\n            var isHTTPS = URIQueryAndFragmentModel(context).getInstance().isManifestHTTPS();\n\n            //If https is detected on manifest then lets apply that protocol to only the default time source(s). In the future we may find the need to apply this to more then just default so left code at this level instead of in MediaPlayer.\n            allUTCTimingSources.forEach(function (item) {\n                if (item.value.replace(/.*?:\\/\\//g, '') === MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value.replace(/.*?:\\/\\//g, '')) {\n                    item.value = item.value.replace(isHTTPS ? new RegExp(/^(http:)?\\/\\//i) : new RegExp(/^(https:)?\\/\\//i), isHTTPS ? 'https://' : 'http://');\n                    log('Matching default timing source protocol to manifest protocol: ', item.value);\n                }\n            });\n\n            baseURLController.initialize(manifest);\n\n            timeSyncController.setConfig({\n                metricsModel: metricsModel,\n                dashMetrics: dashMetrics\n            });\n            timeSyncController.initialize(allUTCTimingSources, mediaPlayerModel.getUseManifestDateHeaderTimeSource());\n        } else {\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    function isVideoTrackPresent() {\n        if (videoTrackDetected === undefined) {\n            videoTrackDetected = checkVideoPresence();\n        }\n        return videoTrackDetected;\n    }\n\n    function checkVideoPresence() {\n        let isVideoDetected = false;\n        activeStream.getProcessors().forEach(p => {\n            if (p.getMediaInfo().type === 'video') {\n                isVideoDetected = true;\n            }\n        });\n        return isVideoDetected;\n    }\n\n    function flushPlaylistMetrics(reason, time) {\n        time = time || new Date();\n\n        if (playListMetrics) {\n            if (activeStream) {\n                activeStream.getProcessors().forEach(p => {\n                    var ctrlr = p.getScheduleController();\n                    if (ctrlr) {\n                        ctrlr.finalisePlayList(time, reason);\n                    }\n                });\n            }\n            metricsModel.addPlayList(playListMetrics);\n            playListMetrics = null;\n        }\n    }\n\n    function addPlaylistMetrics(startReason) {\n        playListMetrics = new PlayList();\n        playListMetrics.start = new Date();\n        playListMetrics.mstart = playbackController.getTime() * 1000;\n        playListMetrics.starttype = startReason;\n\n        if (activeStream) {\n            activeStream.getProcessors().forEach(p => {\n                var ctrlr = p.getScheduleController();\n                if (ctrlr) {\n                    ctrlr.setPlayList(playListMetrics);\n                }\n            });\n        }\n    }\n\n\n    function onPlaybackError(e) {\n\n        if (!e.error) return;\n\n        let msg = '';\n\n        switch (e.error.code) {\n            case 1:\n                msg = 'MEDIA_ERR_ABORTED';\n                break;\n            case 2:\n                msg = 'MEDIA_ERR_NETWORK';\n                break;\n            case 3:\n                msg = 'MEDIA_ERR_DECODE';\n                break;\n            case 4:\n                msg = 'MEDIA_ERR_SRC_NOT_SUPPORTED';\n                break;\n            case 5:\n                msg = 'MEDIA_ERR_ENCRYPTED';\n                break;\n            default:\n                msg = 'UNKNOWN';\n                break;\n        }\n\n        hasMediaError = true;\n\n        if (e.error.message) {\n            msg += ' (' + e.error.message + ')';\n        }\n\n        if (e.error.msExtendedCode) {\n            msg += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')';\n        }\n\n        log('Video Element Error: ' + msg);\n        if (e.error) {\n            log(e.error);\n        }\n        errHandler.mediaSourceError(msg);\n        reset();\n    }\n\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    function getActiveStreamInfo() {\n        return activeStream ? activeStream.getStreamInfo() : null;\n    }\n\n    function isStreamActive(streamInfo) {\n        return (activeStream.getId() === streamInfo.id);\n    }\n\n    function getStreamById(id) {\n        return streams.filter(function (item) {\n            return item.getId() === id;\n        })[0];\n    }\n\n    function load(url) {\n        manifestLoader.load(url);\n    }\n\n    function loadWithManifest(manifest) {\n        manifestUpdater.setManifest(manifest);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.liveEdgeFinder) {\n            liveEdgeFinder = config.liveEdgeFinder;\n        }\n        if (config.mediaSourceController) {\n            mediaSourceController = config.mediaSourceController;\n        }\n        if (config.timeSyncController) {\n            timeSyncController = config.timeSyncController;\n        }\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n    }\n\n    function reset() {\n        timeSyncController.reset();\n\n        flushPlaylistMetrics(\n            hasMediaError || hasInitialisationError ?\n                PlayListTrace.FAILURE_STOP_REASON :\n                PlayListTrace.USER_REQUEST_STOP_REASON\n        );\n\n        for (let i = 0, ln = streams.length; i < ln; i++) {\n            let stream = streams[i];\n            stream.reset(hasMediaError);\n        }\n\n        streams = [];\n\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, this);\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.PLAYBACK_ENDED, onEnded, this);\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdated, this);\n        eventBus.off(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\n\n        baseURLController.reset();\n        manifestUpdater.reset();\n        metricsModel.clearAllCurrentMetrics();\n        manifestModel.setValue(null);\n        manifestLoader.reset();\n        timelineConverter.reset();\n        liveEdgeFinder.reset();\n        adapter.reset();\n        initCache.reset();\n        isStreamSwitchingInProgress = false;\n        isUpdating = false;\n        activeStream = null;\n        hasMediaError = false;\n        hasInitialisationError = false;\n        videoTrackDetected = undefined;\n        initialPlayback = true;\n        isPaused = false;\n\n        if (mediaSource) {\n            mediaSourceController.detachMediaSource(videoModel);\n            mediaSource = null;\n        }\n        videoModel = null;\n        if (protectionController) {\n            protectionController.setMediaElement(null);\n            protectionController = null;\n            protectionData = null;\n            if (manifestModel.getValue()) {\n                eventBus.trigger(Events.PROTECTION_DESTROYED, {data: manifestModel.getValue().url});\n            }\n        }\n\n        eventBus.trigger(Events.STREAM_TEARDOWN_COMPLETE);\n    }\n\n    instance = {\n        initialize: initialize,\n        getAutoPlay: getAutoPlay,\n        getActiveStreamInfo: getActiveStreamInfo,\n        isStreamActive: isStreamActive,\n        isVideoTrackPresent: isVideoTrackPresent,\n        getStreamById: getStreamById,\n        getTimeRelativeToStreamId: getTimeRelativeToStreamId,\n        load: load,\n        loadWithManifest: loadWithManifest,\n        getActiveStreamCommonEarliestTime: getActiveStreamCommonEarliestTime,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamController.__dashjs_factory_name = 'StreamController';\n\nexport default FactoryMaker.getSingletonFactory(StreamController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction TextController(config) {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let sourceBufferController = config.sourceBufferController;\n    let errHandler = config.errHandler;\n\n    let instance,\n        isBufferingCompleted,\n        initialized,\n        mediaSource,\n        buffer,\n        type,\n        streamProcessor,\n        representationController;\n\n    function setup() {\n\n        initialized = false;\n        mediaSource = null;\n        buffer = null;\n        type = null;\n        streamProcessor = null;\n        representationController = null;\n        isBufferingCompleted = false;\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n    }\n\n    function initialize(Type, source, StreamProcessor) {\n        type = Type;\n        setMediaSource(source);\n        streamProcessor = StreamProcessor;\n        representationController = streamProcessor.getRepresentationController();\n    }\n\n    /**\n     * @param {MediaInfo }mediaInfo\n     * @returns {Object} SourceBuffer object\n     * @memberof BufferController#\n     */\n    function createBuffer(mediaInfo) {\n        try {\n            buffer = sourceBufferController.createSourceBuffer(mediaSource, mediaInfo);\n\n            if (!initialized) {\n                if (buffer.hasOwnProperty('initialize')) {\n                    buffer.initialize(type, this);\n                }\n                initialized = true;\n            }\n        } catch (e) {\n            errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\n        }\n\n        return buffer;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function setBuffer(value) {\n        buffer = value;\n    }\n\n    function setMediaSource(value) {\n        mediaSource = value;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function reset(errored) {\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n\n        if (!errored) {\n            sourceBufferController.abort(mediaSource, buffer);\n            sourceBufferController.removeSourceBuffer(mediaSource, buffer);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        eventBus.trigger(Events.TIMED_TEXT_REQUESTED, { index: 0, sender: e.sender }); //TODO make index dynamic if referring to MP?\n    }\n\n    function onInitFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel() || (!e.chunk.bytes)) return;\n        sourceBufferController.append(buffer, e.chunk);\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    instance = {\n        initialize: initialize,\n        createBuffer: createBuffer,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        getStreamProcessor: getStreamProcessor,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        setMediaSource: setMediaSource,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextController.__dashjs_factory_name = 'TextController';\nexport default FactoryMaker.getClassFactory(TextController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Error from './../vo/Error';\nimport EventBus from './../../core/EventBus';\nimport Events from './../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst TIME_SYNC_FAILED_ERROR_CODE = 1;\nconst HTTP_TIMEOUT_MS = 5000;\n\nfunction TimeSyncController() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        offsetToDeviceTimeMs,\n        isSynchronizing,\n        isInitialised,\n        useManifestDateHeaderTimeSource,\n        handlers,\n        metricsModel,\n        dashMetrics;\n\n    function initialize(timingSources, useManifestDateHeader) {\n        useManifestDateHeaderTimeSource = useManifestDateHeader;\n        offsetToDeviceTimeMs = 0;\n        isSynchronizing = false;\n        isInitialised = false;\n\n        // a list of known schemeIdUris and a method to call with @value\n        handlers = {\n            'urn:mpeg:dash:utc:http-head:2014':     httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2014':   httpHandler.bind(null, xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2014':      httpHandler.bind(null, iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2014':        directHandler,\n\n            // some specs referencing early ISO23009-1 drafts incorrectly use\n            // 2012 in the URI, rather than 2014. support these for now.\n            'urn:mpeg:dash:utc:http-head:2012':     httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2012':   httpHandler.bind(null, xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2012':      httpHandler.bind(null, iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2012':        directHandler,\n\n            // it isn't clear how the data returned would be formatted, and\n            // no public examples available so http-ntp not supported for now.\n            // presumably you would do an arraybuffer type xhr and decode the\n            // binary data returned but I would want to see a sample first.\n            'urn:mpeg:dash:utc:http-ntp:2014':      notSupportedHandler,\n\n            // not clear how this would be supported in javascript (in browser)\n            'urn:mpeg:dash:utc:ntp:2014':           notSupportedHandler,\n            'urn:mpeg:dash:utc:sntp:2014':          notSupportedHandler\n        };\n\n        if (!getIsSynchronizing()) {\n            attemptSync(timingSources);\n            setIsInitialised(true);\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n    }\n\n    function getOffsetToDeviceTimeMs() {\n        return getOffsetMs();\n    }\n\n    function setIsSynchronizing(value) {\n        isSynchronizing = value;\n    }\n\n    function getIsSynchronizing() {\n        return isSynchronizing;\n    }\n\n    function setIsInitialised(value) {\n        isInitialised = value;\n    }\n\n    function setOffsetMs(value) {\n        offsetToDeviceTimeMs = value;\n    }\n\n    function getOffsetMs() {\n        return offsetToDeviceTimeMs;\n    }\n\n    // takes xsdatetime and returns milliseconds since UNIX epoch\n    // may not be necessary as xsdatetime is very similar to ISO 8601\n    // which is natively understood by javascript Date parser\n    function alternateXsdatetimeDecoder(xsdatetimeStr) {\n        // taken from DashParser - should probably refactor both uses\n        var SECONDS_IN_MIN = 60;\n        var MINUTES_IN_HOUR = 60;\n        var MILLISECONDS_IN_SECONDS = 1000;\n        var datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+\\-])([0-9]{2})([0-9]{2}))?/;\n\n        var utcDate,\n            timezoneOffset;\n\n        var match = datetimeRegex.exec(xsdatetimeStr);\n\n        // If the string does not contain a timezone offset different browsers can interpret it either\n        // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n        // all browsers\n        utcDate = Date.UTC(\n            parseInt(match[1], 10),\n            parseInt(match[2], 10) - 1, // months start from zero\n            parseInt(match[3], 10),\n            parseInt(match[4], 10),\n            parseInt(match[5], 10),\n            (match[6] && (parseInt(match[6], 10) || 0)),\n            (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0\n        );\n        // If the date has timezone offset take it into account as well\n        if (match[9] && match[10]) {\n            timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n            utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n        }\n\n        return new Date(utcDate).getTime();\n    }\n\n    // try to use the built in parser, since xsdate is a constrained ISO8601\n    // which is supported natively by Date.parse. if that fails, try a\n    // regex-based version used elsewhere in this application.\n    function xsdatetimeDecoder(xsdatetimeStr) {\n        var parsedDate = Date.parse(xsdatetimeStr);\n\n        if (isNaN(parsedDate)) {\n            parsedDate = alternateXsdatetimeDecoder(xsdatetimeStr);\n        }\n\n        return parsedDate;\n    }\n\n    // takes ISO 8601 timestamp and returns milliseconds since UNIX epoch\n    function iso8601Decoder(isoStr) {\n        return Date.parse(isoStr);\n    }\n\n    // takes RFC 1123 timestamp (which is same as ISO8601) and returns\n    // milliseconds since UNIX epoch\n    function rfc1123Decoder(dateStr) {\n        return Date.parse(dateStr);\n    }\n\n    function notSupportedHandler(url, onSuccessCB, onFailureCB) {\n        onFailureCB();\n    }\n\n    function directHandler(xsdatetimeStr, onSuccessCB, onFailureCB) {\n        var time = xsdatetimeDecoder(xsdatetimeStr);\n\n        if (!isNaN(time)) {\n            onSuccessCB(time);\n            return;\n        }\n\n        onFailureCB();\n    }\n\n    function httpHandler(decoder, url, onSuccessCB, onFailureCB, isHeadRequest) {\n        var oncomplete,\n            onload;\n        var complete = false;\n        var req = new XMLHttpRequest();\n\n        var verb = isHeadRequest ? 'HEAD' : 'GET';\n        var urls = url.match(/\\S+/g);\n\n        // according to ISO 23009-1, url could be a white-space\n        // separated list of URLs. just handle one at a time.\n        url = urls.shift();\n\n        oncomplete = function () {\n            if (complete) {\n                return;\n            }\n\n            // we only want to pass through here once per xhr,\n            // regardless of whether the load was successful.\n            complete = true;\n\n            // if there are more urls to try, call self.\n            if (urls.length) {\n                httpHandler(decoder, urls.join(' '), onSuccessCB, onFailureCB, isHeadRequest);\n            } else {\n                onFailureCB();\n            }\n        };\n\n        onload = function () {\n            var time,\n                result;\n\n            if (req.status === 200) {\n                time = isHeadRequest ?\n                        req.getResponseHeader('Date') :\n                        req.response;\n\n                result = decoder(time);\n\n                // decoder returns NaN if non-standard input\n                if (!isNaN(result)) {\n                    onSuccessCB(result);\n                    complete = true;\n                }\n            }\n        };\n\n        req.open(verb, url);\n        req.timeout = HTTP_TIMEOUT_MS || 0;\n        req.onload = onload;\n        req.onloadend = oncomplete;\n        req.send();\n    }\n\n    function httpHeadHandler(url, onSuccessCB, onFailureCB) {\n        httpHandler(rfc1123Decoder, url, onSuccessCB, onFailureCB, true);\n    }\n\n    function checkForDateHeader() {\n        var metrics = metricsModel.getReadOnlyMetricsFor('stream');\n        var dateHeaderValue = dashMetrics.getLatestMPDRequestHeaderValueByID(metrics, 'Date');\n        var dateHeaderTime = dateHeaderValue !== null ? new Date(dateHeaderValue).getTime() : Number.NaN;\n\n        if (!isNaN(dateHeaderTime)) {\n            setOffsetMs(dateHeaderTime - new Date().getTime());\n            completeTimeSyncSequence(false, dateHeaderTime / 1000, offsetToDeviceTimeMs);\n        }else {\n            completeTimeSyncSequence(true);\n        }\n    }\n\n    function completeTimeSyncSequence(failed, time, offset) {\n        setIsSynchronizing(false);\n        eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED, { time: time, offset: offset, error: failed ? new Error(TIME_SYNC_FAILED_ERROR_CODE) : null });\n    }\n\n    function attemptSync(sources, sourceIndex) {\n\n        // if called with no sourceIndex, use zero (highest priority)\n        var  index = sourceIndex || 0;\n\n        // the sources should be ordered in priority from the manifest.\n        // try each in turn, from the top, until either something\n        // sensible happens, or we run out of sources to try.\n        var source = sources[index];\n\n        // callback to emit event to listeners\n        var onComplete = function (time, offset) {\n            var failed = !time || !offset;\n            if (failed && useManifestDateHeaderTimeSource) {\n                //Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.\n                checkForDateHeader();\n            } else {\n                completeTimeSyncSequence(failed, time, offset);\n            }\n        };\n\n        setIsSynchronizing(true);\n\n        if (source) {\n            // check if there is a handler for this @schemeIdUri\n            if (handlers.hasOwnProperty(source.schemeIdUri)) {\n                // if so, call it with its @value\n                handlers[source.schemeIdUri](\n                    source.value,\n                    function (serverTime) {\n                        // the timing source returned something useful\n                        var deviceTime = new Date().getTime();\n                        var offset = serverTime - deviceTime;\n\n                        setOffsetMs(offset);\n\n                        log('Local time:      ' + new Date(deviceTime));\n                        log('Server time:     ' + new Date(serverTime));\n                        log('Difference (ms): ' + offset);\n\n                        onComplete(serverTime, offset);\n                    },\n                    function () {\n                        // the timing source was probably uncontactable\n                        // or returned something we can't use - try again\n                        // with the remaining sources\n                        attemptSync(sources, index + 1);\n                    }\n                );\n            } else {\n                // an unknown schemeIdUri must have been found\n                // try again with the remaining sources\n                attemptSync(sources, index + 1);\n            }\n        } else {\n            // no valid time source could be found, just use device time\n            setOffsetMs(0);\n            onComplete();\n        }\n    }\n\n    function reset() {\n        setIsInitialised(false);\n        setIsSynchronizing(false);\n    }\n\n    instance = {\n        initialize: initialize,\n        getOffsetToDeviceTimeMs: getOffsetToDeviceTimeMs,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    return instance;\n}\n\nTimeSyncController.__dashjs_factory_name = 'TimeSyncController';\nlet factory = FactoryMaker.getSingletonFactory(TimeSyncController);\nfactory.TIME_SYNC_FAILED_ERROR_CODE = TIME_SYNC_FAILED_ERROR_CODE;\nfactory.HTTP_TIMEOUT_MS = HTTP_TIMEOUT_MS;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst ELEMENT_TYPE_PERIOD = 'Period';\nconst ELEMENT_TYPE_ADAPTATIONSET = 'AdaptationSet';\nconst ELEMENT_TYPE_EVENTSTREAM = 'EventStream';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function setMatchers(value) {\n        matchers = value;\n    }\n\n    function setIron(value) {\n        iron = value;\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        var elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n        elements = getElementsToResolve(manifest.Period_asArray, manifest, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n        resolve(elements, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        var resolveObject = {};\n        var element,\n            url,\n            i;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        var element,\n            resolveObject,\n            index;\n\n        var openingTag = '<response>';\n        var closingTag = '</response>';\n        var mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            index = element.resolvedContent.indexOf('>') + 1; //find the closing position of the xml tag\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        var elements = [];\n        var i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case ELEMENT_TYPE_PERIOD:\n                    for (i = 0; i < manifest[ELEMENT_TYPE_PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[ELEMENT_TYPE_PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_ADAPTATIONSET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_ADAPTATIONSET + '_asArray'], obj, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_EVENTSTREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_EVENTSTREAM + '_asArray'], obj, ELEMENT_TYPE_EVENTSTREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case ELEMENT_TYPE_ADAPTATIONSET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        var toResolve = [];\n        var element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        var resolvedElements = [];\n        var element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        var i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n\n    let instance;\n    let root;\n\n    const context = this.context;\n    const dashManifestModel = DashManifestModel(context).getInstance();\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        root = new Node();\n    }\n\n    function updateChildData(node, index, element) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areSimpleEquivalent(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areSimpleEquivalent(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                dashManifestModel.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        var target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        var target = root;\n        var nodes = [target.data];\n\n        path.forEach(p => {\n            target = target.children[p];\n\n            if (target) {\n                nodes.push(target.data);\n            }\n        });\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport FragmentRequest from '../vo/FragmentRequest';\nimport Debug from '../../core/Debug';\n\nconst FRAGMENT_MODEL_LOADING = 'loading';\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\nconst FRAGMENT_MODEL_FAILED = 'failed';\n\nfunction FragmentModel(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n\n    let instance,\n        scheduleController,\n        executedRequests,\n        loadingRequests,\n        fragmentLoader;\n\n    function setup() {\n        scheduleController = null;\n        fragmentLoader = null;\n        executedRequests = [];\n        loadingRequests = [];\n        eventBus.on(Events.LOADING_COMPLETED, onLoadingCompleted, instance);\n    }\n\n    function setLoader(value) {\n        fragmentLoader = value;\n    }\n\n    function setScheduleController(value) {\n        scheduleController = value;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function isFragmentLoaded(request) {\n        const isEqualComplete = function (req1, req2) {\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\n        };\n\n        const isEqualMedia = function (req1, req2) {\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex);\n        };\n\n        const isEqualInit = function (req1, req2) {\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\n        };\n\n        const check = function (requests) {\n            let isLoaded = false;\n            requests.some( req => {\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\n                    isLoaded = true;\n                    return isLoaded;\n                }\n            });\n            return isLoaded;\n        };\n\n        return check(executedRequests);\n    }\n\n    /**\n     *\n     * Gets an array of {@link FragmentRequest} objects\n     *\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\n     *  the only mandatory property is state, which must be a value from\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\n     *  all the requests from executedRequests array where requests.quality = filter.quality\n     *\n     * @returns {Array}\n     * @memberof FragmentModel#\n     */\n    function getRequests(filter) {\n\n        const states = filter.state instanceof Array ? filter.state : [filter.state];\n\n        let filteredRequests = [];\n        states.forEach( state => {\n            const requests = getRequestsForState(state);\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\n        });\n\n        return filteredRequests;\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        executedRequests = executedRequests.filter( req => isNaN(req.startTime) || req.startTime >= time );\n    }\n\n    function abortRequests() {\n        fragmentLoader.abort();\n        loadingRequests = [];\n    }\n\n    function executeRequest(request) {\n\n        switch (request.action) {\n            case FragmentRequest.ACTION_COMPLETE:\n                executedRequests.push(request);\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_EXECUTED);\n                eventBus.trigger(Events.STREAM_COMPLETED, {request: request, fragmentModel: this});\n                break;\n            case FragmentRequest.ACTION_DOWNLOAD:\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\n                loadingRequests.push(request);\n                loadCurrentFragment(request);\n                break;\n            default:\n                log('Unknown request action.');\n        }\n    }\n\n    function loadCurrentFragment(request) {\n        eventBus.trigger(Events.FRAGMENT_LOADING_STARTED, {sender: instance, request: request});\n        fragmentLoader.load(request);\n    }\n\n    function getRequestForTime(arr, time, threshold) {\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\n        const lastIdx = arr.length - 1;\n        for (let i = lastIdx; i >= 0; i--) {\n            const req = arr[i];\n            const start = req.startTime;\n            const end = start + req.duration;\n            threshold = threshold !== undefined ? threshold : (req.duration / 2);\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\n                return req;\n            }\n        }\n        return null;\n    }\n\n    function filterRequests(arr, filter) {\n        // for time use a specific filtration function\n        if (filter.hasOwnProperty('time')) {\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\n        }\n\n        return arr.filter(request => {\n            for (const prop in filter) {\n                if (prop === 'state') continue;\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\n            }\n\n            return true;\n        });\n    }\n\n    function getRequestsForState(state) {\n\n        let requests;\n        switch (state) {\n            case FRAGMENT_MODEL_LOADING:\n                requests = loadingRequests;\n                break;\n            case FRAGMENT_MODEL_EXECUTED:\n                requests = executedRequests;\n                break;\n            default:\n                requests = [];\n        }\n        return requests;\n    }\n\n    function addSchedulingInfoMetrics(request, state) {\n\n        metricsModel.addSchedulingInfo(\n            request.mediaType,\n            new Date(),\n            request.type,\n            request.startTime,\n            request.availabilityStartTime,\n            request.duration,\n            request.quality,\n            request.range,\n            state);\n\n        metricsModel.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\n    }\n\n    function onLoadingCompleted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\n\n        if (e.response && !e.error) {\n            executedRequests.push(e.request);\n        }\n\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_COMPLETED, {\n            request: e.request,\n            response: e.response,\n            error: e.error,\n            sender: this\n        });\n    }\n\n    function reset() {\n        eventBus.off(Events.LOADING_COMPLETED, onLoadingCompleted, this);\n\n        if (fragmentLoader) {\n            fragmentLoader.reset();\n            fragmentLoader = null;\n        }\n\n        executedRequests = [];\n        loadingRequests = [];\n    }\n\n    instance = {\n        setLoader: setLoader,\n        setScheduleController: setScheduleController,\n        getScheduleController: getScheduleController,\n        getRequests: getRequests,\n        isFragmentLoaded: isFragmentLoaded,\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\n        abortRequests: abortRequests,\n        executeRequest: executeRequest,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ManifestModel() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        manifest;\n\n    function getValue() {\n        return manifest;\n    }\n\n    function setValue(value) {\n        manifest = value;\n        if (value) {\n            eventBus.trigger(Events.MANIFEST_LOADED,  {data: value});\n        }\n    }\n\n    instance = {\n        getValue: getValue,\n        setValue: setValue\n    };\n\n    return instance;\n}\n\nManifestModel.__dashjs_factory_name = 'ManifestModel';\nexport default FactoryMaker.getSingletonFactory(ManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\n\nconst DEFAULT_UTC_TIMING_SOURCE = { scheme: 'urn:mpeg:dash:utc:http-xsdate:2014', value: 'http://time.akamai.com/?iso' };\nconst LIVE_DELAY_FRAGMENT_COUNT = 4;\n\nconst DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION = 360000;\nconst DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION = 360000;\n\nconst BANDWIDTH_SAFETY_FACTOR = 0.9;\nconst ABANDON_LOAD_TIMEOUT = 10000;\n\nconst BUFFER_TO_KEEP = 30;\nconst BUFFER_PRUNING_INTERVAL = 30;\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nconst BUFFER_TIME_AT_TOP_QUALITY = 30;\nconst BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM = 60;\nconst LONG_FORM_CONTENT_DURATION_THRESHOLD = 600;\nconst RICH_BUFFER_THRESHOLD = 20;\n\nconst FRAGMENT_RETRY_ATTEMPTS = 3;\nconst FRAGMENT_RETRY_INTERVAL = 1000;\n\nconst MANIFEST_RETRY_ATTEMPTS = 3;\nconst MANIFEST_RETRY_INTERVAL = 500;\n\nconst XLINK_RETRY_ATTEMPTS = 1;\nconst XLINK_RETRY_INTERVAL = 500;\n\n//This value influences the startup time for live (in ms).\nconst WALLCLOCK_TIME_UPDATE_INTERVAL = 50;\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n\n    let instance,\n        useManifestDateHeaderTimeSource,\n        useSuggestedPresentationDelay,\n        UTCTimingSources,\n        liveDelayFragmentCount,\n        liveDelay,\n        scheduleWhilePaused,\n        bufferToKeep,\n        bufferPruningInterval,\n        lastBitrateCachingInfo,\n        lastMediaSettingsCachingInfo,\n        stableBufferTime,\n        bufferTimeAtTopQuality,\n        bufferTimeAtTopQualityLongForm,\n        longFormContentDurationThreshold,\n        richBufferThreshold,\n        bandwidthSafetyFactor,\n        abandonLoadTimeout,\n        retryAttempts,\n        retryIntervals,\n        wallclockTimeUpdateInterval,\n        bufferOccupancyABREnabled,\n        xhrWithCredentials,\n        fastSwitchEnabled;\n\n    function setup() {\n        UTCTimingSources = [];\n        useSuggestedPresentationDelay = false;\n        useManifestDateHeaderTimeSource = true;\n        scheduleWhilePaused = true;\n        bufferOccupancyABREnabled = false;\n        fastSwitchEnabled = false;\n        lastBitrateCachingInfo = {enabled: true , ttl: DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION};\n        lastMediaSettingsCachingInfo = {enabled: true , ttl: DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION};\n        liveDelayFragmentCount = LIVE_DELAY_FRAGMENT_COUNT;\n        liveDelay = undefined; // Explicitly state that default is undefined\n        bufferToKeep = BUFFER_TO_KEEP;\n        bufferPruningInterval = BUFFER_PRUNING_INTERVAL;\n        stableBufferTime = NaN;\n        bufferTimeAtTopQuality = BUFFER_TIME_AT_TOP_QUALITY;\n        bufferTimeAtTopQualityLongForm = BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM;\n        longFormContentDurationThreshold = LONG_FORM_CONTENT_DURATION_THRESHOLD;\n        richBufferThreshold = RICH_BUFFER_THRESHOLD;\n        bandwidthSafetyFactor = BANDWIDTH_SAFETY_FACTOR;\n        abandonLoadTimeout = ABANDON_LOAD_TIMEOUT;\n        wallclockTimeUpdateInterval = WALLCLOCK_TIME_UPDATE_INTERVAL;\n        xhrWithCredentials = { default: DEFAULT_XHR_WITH_CREDENTIALS };\n\n\n        retryAttempts = {\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_ATTEMPTS,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_ATTEMPTS,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_ATTEMPTS\n        };\n\n        retryIntervals = {\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_INTERVAL,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_INTERVAL,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_INTERVAL\n        };\n    }\n\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n    function setBufferOccupancyABREnabled(value) {\n        bufferOccupancyABREnabled = value;\n    }\n\n    function getBufferOccupancyABREnabled() {\n        return bufferOccupancyABREnabled;\n    }\n\n    function setBandwidthSafetyFactor(value) {\n        bandwidthSafetyFactor = value;\n    }\n\n    function getBandwidthSafetyFactor() {\n        return bandwidthSafetyFactor;\n    }\n\n    function setAbandonLoadTimeout(value) {\n        abandonLoadTimeout = value;\n    }\n\n    function getAbandonLoadTimeout() {\n        return abandonLoadTimeout;\n    }\n\n    function setStableBufferTime (value) {\n        stableBufferTime = value;\n    }\n\n    function getStableBufferTime() {\n        return !isNaN(stableBufferTime) ? stableBufferTime : fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n    }\n\n    function setBufferTimeAtTopQuality(value) {\n        bufferTimeAtTopQuality = value;\n    }\n\n    function getBufferTimeAtTopQuality() {\n        return bufferTimeAtTopQuality;\n    }\n\n    function setBufferTimeAtTopQualityLongForm(value) {\n        bufferTimeAtTopQualityLongForm = value;\n    }\n\n    function getBufferTimeAtTopQualityLongForm() {\n        return bufferTimeAtTopQualityLongForm;\n    }\n\n    function setLongFormContentDurationThreshold(value) {\n        longFormContentDurationThreshold = value;\n    }\n\n    function getLongFormContentDurationThreshold() {\n        return longFormContentDurationThreshold;\n    }\n\n    function setRichBufferThreshold(value) {\n        richBufferThreshold = value;\n    }\n\n    function getRichBufferThreshold() {\n        return richBufferThreshold;\n    }\n\n\n    function setBufferToKeep(value) {\n        bufferToKeep = value;\n    }\n\n    function getBufferToKeep() {\n        return bufferToKeep;\n    }\n\n    function setLastBitrateCachingInfo(enable, ttl) {\n        lastBitrateCachingInfo.enabled = enable;\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\n            lastBitrateCachingInfo.ttl = ttl;\n        }\n    }\n\n    function getLastBitrateCachingInfo() {\n        return lastBitrateCachingInfo;\n    }\n\n    function setLastMediaSettingsCachingInfo(enable, ttl) {\n        lastMediaSettingsCachingInfo.enabled = enable;\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\n            lastMediaSettingsCachingInfo.ttl = ttl;\n        }\n    }\n\n    function getLastMediaSettingsCachingInfo() {\n        return lastMediaSettingsCachingInfo;\n    }\n\n    function setBufferPruningInterval(value) {\n        bufferPruningInterval = value;\n    }\n\n    function getBufferPruningInterval() {\n        return bufferPruningInterval;\n    }\n\n    function setFragmentRetryAttempts(value) {\n        retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\n    }\n\n    function setRetryAttemptsForType(type, value) {\n        retryAttempts[type] = value;\n    }\n\n    function getFragmentRetryAttempts() {\n        return retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE];\n    }\n\n    function getRetryAttemptsForType(type) {\n        return retryAttempts[type];\n    }\n\n    function setFragmentRetryInterval(value) {\n        retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\n    }\n\n    function setRetryIntervalForType(type, value) {\n        retryIntervals[type] = value;\n    }\n\n    function getFragmentRetryInterval() {\n        return retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE];\n    }\n\n    function getRetryIntervalForType(type) {\n        return retryIntervals[type];\n    }\n\n    function setWallclockTimeUpdateInterval(value) {\n        wallclockTimeUpdateInterval = value;\n    }\n\n    function getWallclockTimeUpdateInterval() {\n        return wallclockTimeUpdateInterval;\n    }\n\n    function setScheduleWhilePaused(value) {\n        scheduleWhilePaused = value;\n    }\n\n    function getScheduleWhilePaused() {\n        return scheduleWhilePaused;\n    }\n\n    function setLiveDelayFragmentCount(value) {\n        liveDelayFragmentCount = value;\n    }\n\n    function setLiveDelay(value) {\n        liveDelay = value;\n    }\n\n    function getLiveDelayFragmentCount() {\n        return liveDelayFragmentCount;\n    }\n\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    function setUseManifestDateHeaderTimeSource(value) {\n        useManifestDateHeaderTimeSource = value;\n    }\n\n    function getUseManifestDateHeaderTimeSource() {\n        return useManifestDateHeaderTimeSource;\n    }\n\n    function setUseSuggestedPresentationDelay(value) {\n        useSuggestedPresentationDelay = value;\n    }\n\n    function getUseSuggestedPresentationDelay() {\n        return useSuggestedPresentationDelay;\n    }\n\n    function setUTCTimingSources(value) {\n        UTCTimingSources = value;\n    }\n\n    function getUTCTimingSources() {\n        return UTCTimingSources;\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        if (useCreds === undefined) {\n            return xhrWithCredentials.default;\n        }\n\n        return useCreds;\n    }\n\n\n    function getFastSwitchEnabled() {\n        return fastSwitchEnabled;\n    }\n\n    function setFastSwitchEnabled(value) {\n        fastSwitchEnabled = value;\n    }\n\n    function reset() {\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\n        //setup();\n    }\n\n    instance = {\n        setBufferOccupancyABREnabled: setBufferOccupancyABREnabled,\n        getBufferOccupancyABREnabled: getBufferOccupancyABREnabled,\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\n        getAbandonLoadTimeout: getAbandonLoadTimeout,\n        setLastBitrateCachingInfo: setLastBitrateCachingInfo,\n        getLastBitrateCachingInfo: getLastBitrateCachingInfo,\n        setLastMediaSettingsCachingInfo: setLastMediaSettingsCachingInfo,\n        getLastMediaSettingsCachingInfo: getLastMediaSettingsCachingInfo,\n        setStableBufferTime: setStableBufferTime,\n        getStableBufferTime: getStableBufferTime,\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\n        getBufferTimeAtTopQuality: getBufferTimeAtTopQuality,\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\n        getBufferTimeAtTopQualityLongForm: getBufferTimeAtTopQualityLongForm,\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\n        getLongFormContentDurationThreshold: getLongFormContentDurationThreshold,\n        setRichBufferThreshold: setRichBufferThreshold,\n        getRichBufferThreshold: getRichBufferThreshold,\n        setBufferToKeep: setBufferToKeep,\n        getBufferToKeep: getBufferToKeep,\n        setBufferPruningInterval: setBufferPruningInterval,\n        getBufferPruningInterval: getBufferPruningInterval,\n        setFragmentRetryAttempts: setFragmentRetryAttempts,\n        getFragmentRetryAttempts: getFragmentRetryAttempts,\n        setRetryAttemptsForType: setRetryAttemptsForType,\n        getRetryAttemptsForType: getRetryAttemptsForType,\n        setFragmentRetryInterval: setFragmentRetryInterval,\n        getFragmentRetryInterval: getFragmentRetryInterval,\n        setRetryIntervalForType: setRetryIntervalForType,\n        getRetryIntervalForType: getRetryIntervalForType,\n        setWallclockTimeUpdateInterval: setWallclockTimeUpdateInterval,\n        getWallclockTimeUpdateInterval: getWallclockTimeUpdateInterval,\n        setScheduleWhilePaused: setScheduleWhilePaused,\n        getScheduleWhilePaused: getScheduleWhilePaused,\n        getUseSuggestedPresentationDelay: getUseSuggestedPresentationDelay,\n        setUseSuggestedPresentationDelay: setUseSuggestedPresentationDelay,\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\n        getLiveDelayFragmentCount: getLiveDelayFragmentCount,\n        getLiveDelay: getLiveDelay,\n        setLiveDelay: setLiveDelay,\n        setUseManifestDateHeaderTimeSource: setUseManifestDateHeaderTimeSource,\n        getUseManifestDateHeaderTimeSource: getUseManifestDateHeaderTimeSource,\n        setUTCTimingSources: setUTCTimingSources,\n        getUTCTimingSources: getUTCTimingSources,\n        setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n        setFastSwitchEnabled: setFastSwitchEnabled,\n        getFastSwitchEnabled: getFastSwitchEnabled,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\n//TODO see if you can move this and not export and just getter to get default value.\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nlet factory = FactoryMaker.getSingletonFactory(MediaPlayerModel);\nfactory.DEFAULT_UTC_TIMING_SOURCE = DEFAULT_UTC_TIMING_SOURCE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MetricsList from '../vo/MetricsList';\nimport TCPConnection from '../vo/metrics/TCPConnection';\nimport {HTTPRequest, HTTPRequestTrace} from '../vo/metrics/HTTPRequest';\nimport TrackSwitch from '../vo/metrics/RepresentationSwitch';\nimport BufferLevel from '../vo/metrics/BufferLevel';\nimport BufferState from '../vo/metrics/BufferState';\nimport DVRInfo from '../vo/metrics/DVRInfo';\nimport DroppedFrames from '../vo/metrics/DroppedFrames';\nimport {ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateTrackInfo} from '../vo/metrics/ManifestUpdate';\nimport SchedulingInfo from '../vo/metrics/SchedulingInfo';\nimport EventBus from '../../core/EventBus';\nimport RequestsQueue from '../vo/metrics/RequestsQueue';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport BolaState from '../vo/metrics/BolaState';\n\nfunction MetricsModel() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        adapter,\n        streamMetrics;\n\n    function setup() {\n        streamMetrics = {};\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function metricsChanged() {\n        eventBus.trigger(Events.METRICS_CHANGED);\n    }\n\n    function metricChanged(mediaType) {\n        eventBus.trigger(Events.METRIC_CHANGED, {mediaType: mediaType});\n        metricsChanged();\n    }\n\n    function metricUpdated(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_UPDATED, {mediaType: mediaType, metric: metricType, value: vo});\n        metricChanged(mediaType);\n    }\n\n    function metricAdded(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_ADDED, {mediaType: mediaType, metric: metricType, value: vo});\n        metricChanged(mediaType);\n    }\n\n    function clearCurrentMetricsForType(type) {\n        delete streamMetrics[type];\n        metricChanged(type);\n    }\n\n    function clearAllCurrentMetrics() {\n        streamMetrics = {};\n        metricsChanged();\n    }\n\n    function getReadOnlyMetricsFor(type) {\n        if (streamMetrics.hasOwnProperty(type)) {\n            return streamMetrics[type];\n        }\n\n        return null;\n    }\n\n    function getMetricsFor(type) {\n        var metrics;\n\n        if (streamMetrics.hasOwnProperty(type)) {\n            metrics = streamMetrics[type];\n        } else {\n            metrics = new MetricsList();\n            streamMetrics[type] = metrics;\n        }\n\n        return metrics;\n    }\n\n    function addTcpConnection(mediaType, tcpid, dest, topen, tclose, tconnect) {\n        var vo = new TCPConnection();\n\n        vo.tcpid = tcpid;\n        vo.dest = dest;\n        vo.topen = topen;\n        vo.tclose = tclose;\n        vo.tconnect = tconnect;\n\n        getMetricsFor(mediaType).TcpList.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.TCP_CONNECTION, vo);\n        return vo;\n    }\n\n    function appendHttpTrace(httpRequest, s, d, b) {\n        var vo = new HTTPRequestTrace();\n\n        vo.s = s;\n        vo.d = d;\n        vo.b = b;\n\n        httpRequest.trace.push(vo);\n\n        if (!httpRequest.interval) {\n            httpRequest.interval = 0;\n        }\n\n        httpRequest.interval += d;\n\n        return vo;\n    }\n\n    function addHttpRequest(mediaType, tcpid, type, url, actualurl, serviceLocation, range, trequest, tresponse, tfinish, responsecode, mediaduration, responseHeaders, traces) {\n        var vo = new HTTPRequest();\n\n        // ISO 23009-1 D.4.3 NOTE 2:\n        // All entries for a given object will have the same URL and range\n        // and so can easily be correlated. If there were redirects or\n        // failures there will be one entry for each redirect/failure.\n        // The redirect-to URL or alternative url (where multiple have been\n        // provided in the MPD) will appear as the actualurl of the next\n        // entry with the same url value.\n        if (actualurl && (actualurl !== url)) {\n\n            // given the above, add an entry for the original request\n            addHttpRequest(\n                mediaType,\n                null,\n                type,\n                url,\n                null,\n                null,\n                range,\n                trequest,\n                null, // unknown\n                null, // unknown\n                null, // unknown, probably a 302\n                mediaduration,\n                null,\n                null\n            );\n\n            vo.actualurl = actualurl;\n        }\n\n        vo.tcpid = tcpid;\n        vo.type = type;\n        vo.url = url;\n        vo.range = range;\n        vo.trequest = trequest;\n        vo.tresponse = tresponse;\n        vo.responsecode = responsecode;\n\n        vo._tfinish = tfinish;\n        vo._stream = mediaType;\n        vo._mediaduration = mediaduration;\n        vo._responseHeaders = responseHeaders;\n        vo._serviceLocation = serviceLocation;\n\n        if (traces) {\n            traces.forEach(trace => {\n                appendHttpTrace(vo, trace.s, trace.d, trace.b);\n            });\n        } else {\n            // The interval and trace shall be absent for redirect and failure records.\n            delete vo.interval;\n            delete vo.trace;\n        }\n\n        getMetricsFor(mediaType).HttpList.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.HTTP_REQUEST, vo);\n        return vo;\n    }\n\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        var vo = new TrackSwitch();\n\n        vo.t = t;\n        vo.mt = mt;\n        vo.to = to;\n\n        if (lto) {\n            vo.lto = lto;\n        } else {\n            delete vo.lto;\n        }\n\n        getMetricsFor(mediaType).RepSwitchList.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.TRACK_SWITCH, vo);\n        return vo;\n    }\n\n    function addBufferLevel(mediaType, t, level) {\n        var vo = new BufferLevel();\n        vo.t = t;\n        vo.level = level;\n        getMetricsFor(mediaType).BufferLevel.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.BUFFER_LEVEL, vo);\n        return vo;\n    }\n\n    function addBufferState(mediaType, state, target) {\n        var vo = new BufferState();\n        vo.target = target;\n        vo.state = state;\n        getMetricsFor(mediaType).BufferState.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.BUFFER_STATE, vo);\n        return vo;\n    }\n\n\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        var vo = new DVRInfo();\n\n        vo.time = currentTime ;\n        vo.range = range;\n        vo.manifestInfo = mpd;\n\n        getMetricsFor(mediaType).DVRInfo.push(vo);\n        metricAdded(mediaType, adapter.metricsList.DVR_INFO, vo);\n\n        return vo;\n    }\n\n    function addDroppedFrames(mediaType, quality) {\n        var vo = new DroppedFrames();\n        var list = getMetricsFor(mediaType).DroppedFrames;\n\n        vo.time = quality.creationTime;\n        vo.droppedFrames = quality.droppedVideoFrames;\n\n        if (list.length > 0 && list[list.length - 1] == vo) {\n            return list[list.length - 1];\n        }\n\n        list.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.DROPPED_FRAMES, vo);\n        return vo;\n    }\n\n    function addSchedulingInfo(mediaType, t, type, startTime, availabilityStartTime, duration, quality, range, state) {\n        var vo = new SchedulingInfo();\n\n        vo.mediaType = mediaType;\n        vo.t = t;\n\n        vo.type = type;\n        vo.startTime = startTime;\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.duration = duration;\n        vo.quality = quality;\n        vo.range = range;\n\n        vo.state = state;\n\n        getMetricsFor(mediaType).SchedulingInfo.push(vo);\n\n        metricAdded(mediaType, adapter.metricsList.SCHEDULING_INFO, vo);\n        return vo;\n    }\n\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        var vo = new RequestsQueue();\n        vo.loadingRequests = loadingRequests;\n        vo.executedRequests = executedRequests;\n\n        getMetricsFor(mediaType).RequestsQueue = vo;\n        metricAdded(mediaType, adapter.metricsList.REQUESTS_QUEUE, vo);\n    }\n\n    function addManifestUpdate(mediaType, type, requestTime, fetchTime, availabilityStartTime, presentationStartTime, clientTimeOffset, currentTime, buffered, latency) {\n        var vo = new ManifestUpdate();\n        var metrics = getMetricsFor('stream');\n\n        vo.mediaType = mediaType;\n        vo.type = type;\n        vo.requestTime = requestTime; // when this manifest update was requested\n        vo.fetchTime = fetchTime; // when this manifest update was received\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.presentationStartTime = presentationStartTime; // the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n        vo.clientTimeOffset = clientTimeOffset; // the calculated difference between the server and client wall clock time\n        vo.currentTime = currentTime; // actual element.currentTime\n        vo.buffered = buffered; // actual element.ranges\n        vo.latency = latency; // (static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - currentTime)\n\n        metrics.ManifestUpdate.push(vo);\n        metricAdded(mediaType, adapter.metricsList.MANIFEST_UPDATE, vo);\n\n        return vo;\n    }\n\n    function updateManifestUpdateInfo(manifestUpdate, updatedFields) {\n        if (manifestUpdate) {\n            for (var field in updatedFields) {\n                manifestUpdate[field] = updatedFields[field];\n            }\n\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateStreamInfo(manifestUpdate, id, index, start, duration) {\n        if (manifestUpdate) {\n            var vo = new ManifestUpdateStreamInfo();\n\n            vo.id = id;\n            vo.index = index;\n            vo.start = start;\n            vo.duration = duration;\n\n            manifestUpdate.streamInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE_STREAM_INFO, manifestUpdate);\n\n            return vo;\n        }\n        return null;\n    }\n\n    function addManifestUpdateRepresentationInfo(manifestUpdate, id, index, streamIndex, mediaType, presentationTimeOffset, startNumber, fragmentInfoType) {\n        if (manifestUpdate) {\n            var vo = new ManifestUpdateTrackInfo();\n\n            vo.id = id;\n            vo.index = index;\n            vo.streamIndex = streamIndex;\n            vo.mediaType = mediaType;\n            vo.startNumber = startNumber;\n            vo.fragmentInfoType = fragmentInfoType;\n            vo.presentationTimeOffset = presentationTimeOffset;\n\n            manifestUpdate.trackInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, adapter.metricsList.MANIFEST_UPDATE_TRACK_INFO, manifestUpdate);\n\n            return vo;\n        }\n        return null;\n    }\n\n    function addPlayList(vo) {\n        var type = 'stream';\n\n        if (vo.trace && Array.isArray(vo.trace)) {\n            vo.trace.forEach(trace => {\n                if (trace.hasOwnProperty('subreplevel') && !trace.subreplevel) {\n                    delete trace.subreplevel;\n                }\n            });\n        } else {\n            delete vo.trace;\n        }\n\n        getMetricsFor(type).PlayList.push(vo);\n\n        metricAdded(type, adapter.metricsList.PLAY_LIST, vo);\n        return vo;\n    }\n\n    function addDVBErrors(vo) {\n        var type = 'stream';\n\n        getMetricsFor(type).DVBErrors.push(vo);\n\n        metricAdded(type, adapter.metricsList.DVB_ERRORS, vo);\n\n        return vo;\n    }\n\n    function updateBolaState(mediaType, _s) {\n        var vo = new BolaState();\n        vo._s = _s;\n        getMetricsFor(mediaType).BolaState = [vo];\n\n        metricAdded(mediaType, 'BolaState', vo);\n        return vo;\n    }\n\n    instance = {\n        metricsChanged: metricsChanged,\n        metricChanged: metricChanged,\n        metricUpdated: metricUpdated,\n        metricAdded: metricAdded,\n        clearCurrentMetricsForType: clearCurrentMetricsForType,\n        clearAllCurrentMetrics: clearAllCurrentMetrics,\n        getReadOnlyMetricsFor: getReadOnlyMetricsFor,\n        getMetricsFor: getMetricsFor,\n        addTcpConnection: addTcpConnection,\n        addHttpRequest: addHttpRequest,\n        addRepresentationSwitch: addRepresentationSwitch,\n        addBufferLevel: addBufferLevel,\n        addBufferState: addBufferState,\n        addDVRInfo: addDVRInfo,\n        addDroppedFrames: addDroppedFrames,\n        addSchedulingInfo: addSchedulingInfo,\n        addRequestsQueue: addRequestsQueue,\n        addManifestUpdate: addManifestUpdate,\n        updateManifestUpdateInfo: updateManifestUpdateInfo,\n        addManifestUpdateStreamInfo: addManifestUpdateStreamInfo,\n        addManifestUpdateRepresentationInfo: addManifestUpdateRepresentationInfo,\n        addPlayList: addPlayList,\n        addDVBErrors: addDVBErrors,\n        updateBolaState: updateBolaState,\n        setConfig: setConfig\n    };\n\n    setup();\n    return instance;\n}\n\nMetricsModel.__dashjs_factory_name = 'MetricsModel';\nexport default FactoryMaker.getSingletonFactory(MetricsModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport URIFragmentData from '../vo/URIFragmentData';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction URIQueryAndFragmentModel() {\n\n    let instance,\n        URIFragmentDataVO,\n        URIQueryData,\n        isHTTPS;\n\n    function initialize() {\n        URIFragmentDataVO = new URIFragmentData();\n        URIQueryData = [];\n        isHTTPS = false;\n    }\n\n    function getURIFragmentData() {\n        return URIFragmentDataVO;\n    }\n\n    function getURIQueryData() {\n        return URIQueryData;\n    }\n\n    function isManifestHTTPS() {\n        return isHTTPS;\n    }\n\n    function parseURI(uri) {\n        if (!uri) return null;\n\n        var URIFragmentData = [];\n        var mappedArr;\n\n        var testQuery = new RegExp(/[?]/);\n        var testFragment = new RegExp(/[#]/);\n        var testHTTPS = new RegExp(/^(https:)?\\/\\//i);\n        var isQuery = testQuery.test(uri);\n        var isFragment = testFragment.test(uri);\n\n        isHTTPS = testHTTPS.test(uri);\n\n        function reduceArray(previousValue, currentValue, index, array) {\n            var arr =  array[0].split(/[=]/);\n            array.push({key: arr[0], value: arr[1]});\n            array.shift();\n            return array;\n        }\n\n        function mapArray(currentValue, index, array) {\n            if (index > 0)\n            {\n                if (isQuery && URIQueryData.length === 0) {\n                    URIQueryData = array[index].split(/[&]/);\n                } else if (isFragment) {\n                    URIFragmentData = array[index].split(/[&]/);\n                }\n            }\n\n            return array;\n        }\n\n        mappedArr = uri.split(/[?#]/).map(mapArray);\n\n        if (URIQueryData.length > 0) {\n            URIQueryData = URIQueryData.reduce(reduceArray, null);\n        }\n\n        if (URIFragmentData.length > 0) {\n            URIFragmentData = URIFragmentData.reduce(reduceArray, null);\n            URIFragmentData.forEach(function (object) {\n                URIFragmentDataVO[object.key] = object.value;\n            });\n        }\n\n        return uri;\n    }\n\n    instance = {\n        initialize: initialize,\n        parseURI: parseURI,\n        getURIFragmentData: getURIFragmentData,\n        getURIQueryData: getURIQueryData,\n        isManifestHTTPS: isManifestHTTPS\n    };\n\n    return instance;\n}\n\nURIQueryAndFragmentModel.__dashjs_factory_name = 'URIQueryAndFragmentModel';\nexport default FactoryMaker.getSingletonFactory(URIQueryAndFragmentModel);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction VideoModel() {\n\n    let instance,\n        element,\n        TTMLRenderingDiv,\n        videoContainer,\n        stalledStreams,\n        previousPlaybackRate;\n\n    function initialize() {\n        stalledStreams = [];\n    }\n\n    function onPlaybackCanPlay() {\n        element.playbackRate = previousPlaybackRate || 1;\n        element.removeEventListener('canplay', onPlaybackCanPlay);\n    }\n\n    function setPlaybackRate(value) {\n        if (!element) return;\n        if (element.readyState <= 2 && value > 0) {\n            // If media element hasn't loaded enough data to play yet, wait until it has\n            element.addEventListener('canplay', onPlaybackCanPlay);\n        } else {\n            element.playbackRate = value;\n        }\n    }\n\n    //TODO Move the DVR window calculations from MediaPlayer to Here.\n    function setCurrentTime(currentTime) {\n        //_currentTime = currentTime;\n\n        // We don't set the same currentTime because it can cause firing unexpected Pause event in IE11\n        // providing playbackRate property equals to zero.\n        if (element.currentTime == currentTime) return;\n\n        // TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime\n        // immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property\n        // Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to\n        // set currentTime even if readyState = 0.\n        // setTimeout is used to workaround InvalidStateError in IE11\n        try {\n            element.currentTime = currentTime;\n        } catch (e) {\n            if (element.readyState === 0 && e.code === e.INVALID_STATE_ERR) {\n                setTimeout(function () {\n                    element.currentTime = currentTime;\n                }, 400);\n            }\n        }\n    }\n\n    function getElement() {\n        return element;\n    }\n\n    function setElement(value) {\n        element = value;\n        // Workaround to force Firefox to fire the canplay event.\n        element.preload = 'auto';\n    }\n\n    function setSource(source) {\n        if (source) {\n            element.src = source;\n        } else {\n            element.removeAttribute('src');\n            element.load();\n        }\n    }\n\n    function getSource() {\n        return element.src;\n    }\n\n    function getVideoContainer() {\n        return videoContainer;\n    }\n\n    function setVideoContainer(value) {\n        videoContainer = value;\n    }\n\n    function getTTMLRenderingDiv() {\n        return TTMLRenderingDiv;\n    }\n\n    function setTTMLRenderingDiv(div) {\n        TTMLRenderingDiv = div;\n        // The styling will allow the captions to match the video window size and position.\n        TTMLRenderingDiv.style.position = 'absolute';\n        TTMLRenderingDiv.style.display = 'flex';\n        TTMLRenderingDiv.style.overflow = 'hidden';\n        TTMLRenderingDiv.style.pointerEvents = 'none';\n        TTMLRenderingDiv.style.top = 0;\n        TTMLRenderingDiv.style.left = 0;\n    }\n\n    function setStallState(type, state) {\n        stallStream(type, state);\n    }\n\n    function isStalled() {\n        return (stalledStreams.length > 0);\n    }\n\n    function addStalledStream(type) {\n\n        let event;\n\n        if (type === null || element.seeking || stalledStreams.indexOf(type) !== -1) {\n            return;\n        }\n\n        stalledStreams.push(type);\n        if (stalledStreams.length === 1) {\n            // Halt playback until nothing is stalled.\n            event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            previousPlaybackRate = element.playbackRate;\n            setPlaybackRate(0);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function removeStalledStream(type) {\n        let index = stalledStreams.indexOf(type);\n        let event;\n\n        if (type === null) {\n            return;\n        }\n        if (index !== -1) {\n            stalledStreams.splice(index, 1);\n        }\n        // If nothing is stalled resume playback.\n        if (isStalled() === false && element.playbackRate === 0) {\n            setPlaybackRate(previousPlaybackRate || 1);\n            if (!element.paused) {\n                event = document.createEvent('Event');\n                event.initEvent('playing', true, false);\n                element.dispatchEvent(event);\n            }\n        }\n    }\n\n    function stallStream(type, isStalled) {\n        if (isStalled) {\n            addStalledStream(type);\n        } else {\n            removeStalledStream(type);\n        }\n    }\n\n    function getPlaybackQuality() {\n        let hasWebKit = ('webkitDroppedFrameCount' in element);\n        let hasQuality = ('getVideoPlaybackQuality' in element);\n        let result = null;\n\n        if (hasQuality) {\n            result = element.getVideoPlaybackQuality();\n        }\n        else if (hasWebKit) {\n            result = {droppedVideoFrames: element.webkitDroppedFrameCount, creationTime: new Date()};\n        }\n\n        return result;\n    }\n\n    instance = {\n        initialize: initialize,\n        setCurrentTime: setCurrentTime,\n        setStallState: setStallState,\n        getElement: getElement,\n        setElement: setElement,\n        setSource: setSource,\n        getSource: getSource,\n        getVideoContainer: getVideoContainer,\n        setVideoContainer: setVideoContainer,\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\n        setTTMLRenderingDiv: setTTMLRenderingDiv,\n        getPlaybackQuality: getPlaybackQuality\n    };\n\n    return instance;\n}\n\nVideoModel.__dashjs_factory_name = 'VideoModel';\nexport default FactoryMaker.getSingletonFactory(VideoModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    let instance;\n    let representationInfo = config.streamProcessor.getCurrentRepresentationInfo();\n    let sp = config.streamProcessor;\n    let currentValue = config.currentValue;\n\n    function getStreamInfo() {\n        return representationInfo.mediaInfo.streamInfo;\n    }\n\n    function getMediaInfo() {\n        return representationInfo.mediaInfo;\n    }\n\n    function getTrackInfo() {\n        return representationInfo;\n    }\n\n    function getCurrentValue() {\n        return currentValue;\n    }\n\n    function getManifestInfo() {\n        return representationInfo.mediaInfo.streamInfo.manifestInfo;\n    }\n\n    function getStreamProcessor() {\n        return sp;\n    }\n\n    instance = {\n        getStreamInfo: getStreamInfo,\n        getMediaInfo: getMediaInfo,\n        getTrackInfo: getTrackInfo,\n        getCurrentValue: getCurrentValue,\n        getManifestInfo: getManifestInfo,\n        getStreamProcessor: getStreamProcessor\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RulesContext from './RulesContext';\nimport SwitchRequest from './SwitchRequest';\nimport ABRRulesCollection from './abr/ABRRulesCollection';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst ABR_RULE = 0;\n\nfunction RulesController() {\n\n    let context = this.context;\n\n    let instance,\n        rules;\n\n    function initialize() {\n        rules = {};\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.abrRulesCollection) {\n            rules[ABR_RULE] = config.abrRulesCollection;\n        }\n    }\n\n    function applyRules(rulesArr, streamProcessor, callback, current, overrideFunc) {\n        var values = {};\n        var reasons = {};\n        var rule,\n            i;\n\n        var rulesCount = rulesArr.length;\n        var ln = rulesCount;\n        var rulesContext = getRulesContext(streamProcessor, current);\n\n        var callbackFunc = function (result) {\n            var value,\n                reason,\n                confidence;\n\n            if (result.value !== SwitchRequest.NO_CHANGE) {\n                var newValue = overrideFunc(values[result.priority], result.value);\n                if (newValue !== values[result.priority]) {\n                    // change in value\n                    values[result.priority] = newValue; // === result.value\n                    reasons[result.priority] = result.reason;\n                }\n            }\n\n            if (--rulesCount) return;\n\n            if (values[SwitchRequest.WEAK] !== SwitchRequest.NO_CHANGE) {\n                confidence = SwitchRequest.WEAK;\n                value = values[SwitchRequest.WEAK];\n                reason = reasons[SwitchRequest.WEAK];\n            }\n\n            if (values[SwitchRequest.DEFAULT] !== SwitchRequest.NO_CHANGE) {\n                confidence = SwitchRequest.DEFAULT;\n                value = values[SwitchRequest.DEFAULT];\n                reason = reasons[SwitchRequest.DEFAULT];\n            }\n\n            if (values[SwitchRequest.STRONG] !== SwitchRequest.NO_CHANGE) {\n                confidence = SwitchRequest.STRONG;\n                value = values[SwitchRequest.STRONG];\n                reason = reasons[SwitchRequest.STRONG];\n            }\n\n            if (confidence != SwitchRequest.STRONG &&\n                confidence != SwitchRequest.WEAK) {\n                confidence = SwitchRequest.DEFAULT;\n            }\n\n            if (value !== undefined) {\n                callback({ value: value, confidence: confidence, reason: reason});\n            } else {\n                callback({ value: current, confidence: confidence, reason: {name: 'NO_CHANGE'}});\n            }\n\n        };\n\n        values[SwitchRequest.STRONG] = SwitchRequest.NO_CHANGE;\n        values[SwitchRequest.WEAK] = SwitchRequest.NO_CHANGE;\n        values[SwitchRequest.DEFAULT] = SwitchRequest.NO_CHANGE;\n\n        for (i = 0; i < ln; i++) {\n            rule = rulesArr[i];\n            rule.execute(rulesContext, callbackFunc);\n        }\n    }\n\n    function reset() {\n        var abrRules = rules[ABR_RULE];\n        var allRules = (abrRules.getRules(ABRRulesCollection.QUALITY_SWITCH_RULES) || []).concat(abrRules.getRules(ABRRulesCollection.ABANDON_FRAGMENT_RULES) || []);\n        var ln = allRules.length;\n\n        var rule,\n            i;\n\n        for (i = 0; i < ln; i++) {\n            rule = allRules[i];\n\n            if (typeof (rule.reset) !== 'function') continue;\n\n            rule.reset();\n        }\n\n        rules = {};\n    }\n\n    function getRulesContext(streamProcessor, currentValue) {\n        return RulesContext(context).create({streamProcessor: streamProcessor, currentValue: currentValue});\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        applyRules: applyRules,\n        reset: reset\n    };\n\n    return instance;\n}\n\nRulesController.__dashjs_factory_name = 'RulesController';\nlet factory =  FactoryMaker.getSingletonFactory(RulesController);\nfactory.ABR_RULE = ABR_RULE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst NO_CHANGE = 999;\nconst DEFAULT = 0.5;\nconst STRONG = 1;\nconst WEAK = 0;\n\n\n\nfunction SwitchRequest (v, p, r) {\n    //TODO refactor all the calls to this to use config to be like everything else.\n    let value = (v === undefined) ? NO_CHANGE : v;\n    let priority = (p === undefined) ? DEFAULT : p;\n    let reason = (r === undefined) ? null : r;\n\n    let instance = {\n        value: value,\n        priority: priority,\n        reason: reason\n    };\n\n    return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\nlet factory = FactoryMaker.getClassFactory(SwitchRequest);\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.DEFAULT = DEFAULT;\nfactory.STRONG = STRONG;\nfactory.WEAK = WEAK;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ThroughputRule from './ThroughputRule';\nimport BufferOccupancyRule from './BufferOccupancyRule';\nimport InsufficientBufferRule from './InsufficientBufferRule';\nimport AbandonRequestsRule from './AbandonRequestsRule';\nimport BolaRule from './BolaRule';\nimport BolaAbandonRule from './BolaAbandonRule';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport MetricsModel from '../../models/MetricsModel';\nimport DashMetrics from '../../../dash/DashMetrics';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\n\nfunction ABRRulesCollection() {\n\n    let context = this.context;\n\n    let instance,\n        qualitySwitchRules,\n        abandonFragmentRules;\n\n    function initialize() {\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n\n        let metricsModel = MetricsModel(context).getInstance();\n        let dashMetrics = DashMetrics(context).getInstance();\n        let mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n        if (mediaPlayerModel.getBufferOccupancyABREnabled()) {\n            qualitySwitchRules.push(\n                BolaRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: DashMetrics(context).getInstance()\n                })\n            );\n            abandonFragmentRules.push(\n                BolaAbandonRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: DashMetrics(context).getInstance()\n                })\n            );\n        } else {\n            qualitySwitchRules.push(\n                ThroughputRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics\n                })\n            );\n\n            qualitySwitchRules.push(\n                BufferOccupancyRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics\n                })\n            );\n\n            qualitySwitchRules.push(InsufficientBufferRule(context).create({metricsModel: metricsModel}));\n            abandonFragmentRules.push(AbandonRequestsRule(context).create());\n        }\n    }\n\n    function getRules (type) {\n        switch (type) {\n            case QUALITY_SWITCH_RULES:\n                return qualitySwitchRules;\n            case ABANDON_FRAGMENT_RULES:\n                return abandonFragmentRules;\n            default:\n                return null;\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        getRules: getRules\n    };\n\n    return instance;\n}\n\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\nlet factory =  FactoryMaker.getSingletonFactory(ABRRulesCollection);\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction AbandonRequestsRule() {\n\n    const ABANDON_MULTIPLIER = 1.8;\n    const GRACE_TIME_THRESHOLD = 500;\n    const MIN_LENGTH_TO_AVERAGE = 5;\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n\n    let fragmentDict,\n        abandonDict,\n        throughputArray,\n        mediaPlayerModel;\n\n    function setup() {\n        fragmentDict = {};\n        abandonDict = {};\n        throughputArray = [];\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    function setFragmentRequestDict(type, id) {\n        fragmentDict[type] = fragmentDict[type] || {};\n        fragmentDict[type][id] = fragmentDict[type][id] || {};\n    }\n\n    function storeLastRequestThroughputByType(type, throughput) {\n        throughputArray[type] = throughputArray[type] || [];\n        throughputArray[type].push(throughput);\n    }\n\n    function execute(rulesContext, callback) {\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = mediaInfo.type;\n        const req = rulesContext.getCurrentValue().request;\n        const switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: AbandonRequestsRule.__dashjs_factory_name});\n\n        if (!isNaN(req.index)) {\n\n            setFragmentRequestDict(mediaType, req.index);\n\n            const fragmentInfo = fragmentDict[mediaType][req.index];\n            if (fragmentInfo === null || req.firstByteDate === null || abandonDict.hasOwnProperty(fragmentInfo.id)) {\n                callback(switchRequest);\n                return;\n            }\n\n            //setup some init info based on first progress event\n            if (fragmentInfo.firstByteTime === undefined) {\n                throughputArray[mediaType] = [];\n                fragmentInfo.firstByteTime = req.firstByteDate.getTime();\n                fragmentInfo.segmentDuration = req.duration;\n                fragmentInfo.bytesTotal = req.bytesTotal;\n                fragmentInfo.id = req.index;\n            }\n            fragmentInfo.bytesLoaded = req.bytesLoaded;\n            fragmentInfo.elapsedTime = new Date().getTime() - fragmentInfo.firstByteTime;\n\n            if (fragmentInfo.bytesLoaded > 0 && fragmentInfo.elapsedTime > 0) {\n                storeLastRequestThroughputByType(mediaType, Math.round(fragmentInfo.bytesLoaded * 8 / fragmentInfo.elapsedTime));\n            }\n\n            if (throughputArray[mediaType].length >= MIN_LENGTH_TO_AVERAGE &&\n                fragmentInfo.elapsedTime > GRACE_TIME_THRESHOLD &&\n                fragmentInfo.bytesLoaded < fragmentInfo.bytesTotal) {\n\n                const totalSampledValue = throughputArray[mediaType].reduce((a, b) => a + b, 0);\n                fragmentInfo.measuredBandwidthInKbps = Math.round(totalSampledValue / throughputArray[mediaType].length);\n                fragmentInfo.estimatedTimeOfDownload = ((fragmentInfo.bytesTotal * 8 / fragmentInfo.measuredBandwidthInKbps) / 1000).toFixed(2);\n                //log(\"id:\",fragmentInfo.id, \"kbps:\", fragmentInfo.measuredBandwidthInKbps, \"etd:\",fragmentInfo.estimatedTimeOfDownload, fragmentInfo.bytesLoaded);\n\n                if (fragmentInfo.estimatedTimeOfDownload < fragmentInfo.segmentDuration * ABANDON_MULTIPLIER || rulesContext.getTrackInfo().quality === 0 ) {\n\n                    callback(switchRequest);\n                    return;\n\n                } else if (!abandonDict.hasOwnProperty(fragmentInfo.id)) {\n\n                    const abrController = rulesContext.getStreamProcessor().getABRController();\n                    const bytesRemaining = fragmentInfo.bytesTotal - fragmentInfo.bytesLoaded;\n                    const bitrateList = abrController.getBitrateList(mediaInfo);\n                    const newQuality = abrController.getQualityForBitrate(mediaInfo, fragmentInfo.measuredBandwidthInKbps * mediaPlayerModel.getBandwidthSafetyFactor());\n                    const estimateOtherBytesTotal = fragmentInfo.bytesTotal * bitrateList[newQuality].bitrate / bitrateList[abrController.getQualityFor(mediaType, mediaInfo.streamInfo)].bitrate;\n\n                    if (bytesRemaining > estimateOtherBytesTotal) {\n\n                        switchRequest.value = newQuality;\n                        switchRequest.priority = SwitchRequest.STRONG;\n                        switchRequest.reason.throughput = fragmentInfo.measuredBandwidthInKbps;\n                        abandonDict[fragmentInfo.id] = fragmentInfo;\n                        log('AbandonRequestsRule ( ', mediaType, 'frag id',fragmentInfo.id,') is asking to abandon and switch to quality to ', newQuality, ' measured bandwidth was', fragmentInfo.measuredBandwidthInKbps);\n                        delete fragmentDict[mediaType][fragmentInfo.id];\n                    }\n                }\n            }else if (fragmentInfo.bytesLoaded === fragmentInfo.bytesTotal) {\n                delete fragmentDict[mediaType][fragmentInfo.id];\n            }\n        }\n\n        callback(switchRequest);\n    }\n\n    function reset() {\n        setup();\n    }\n\n    const instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport BolaRule from './BolaRule';\n\nfunction BolaAbandonRule(config) {\n\n    // do not abandon during the grace period\n    const GRACE_PERIOD_MS = 500;\n    const POOR_LATENCY_MS = 200;\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let dashMetrics = config.dashMetrics;\n    let metricsModel = config.metricsModel;\n\n    let instance,\n        abandonDict,\n        mediaPlayerModel;\n\n    function setup() {\n        abandonDict = {};\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    function rememberAbandon(mediaType, index, quality) {\n        // if this is called, then canStillAbandon(mediaType, index, quality) should have returned true\n        abandonDict[mediaType] = {index: index, quality: quality};\n    }\n\n    function canAbandon(mediaType, index, quality) {\n        let a = abandonDict[mediaType];\n        if (!a)\n            return true;\n        return index !== a.index || quality < a.quality;\n    }\n\n    function execute(rulesContext, callback) {\n        let mediaInfo = rulesContext.getMediaInfo();\n        let mediaType = mediaInfo.type;\n        let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        let progressEvent = rulesContext.getCurrentValue();\n        let request = progressEvent.request;\n        let switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: BolaAbandonRule.__dashjs_factory_name});\n\n        if (metrics.BolaState.length === 0) {\n            // should not arrive here - we shouldn't be downloading a fragment before BOLA is initialized\n            log('WARNING: executing BolaAbandonRule before initializing BolaRule');\n            abandonDict[mediaType] = null;\n            callback(switchRequest);\n            return;\n        }\n\n        let bolaState = metrics.BolaState[0]._s;\n        // TODO: does changing bolaState conform to coding style, or should we clone?\n\n        let index = request.index;\n        let quality = request.quality;\n\n        if (isNaN(index) || quality === 0 || !canAbandon(mediaType, index, quality) || !request.firstByteDate) {\n            callback(switchRequest);\n            return;\n        }\n\n        let nowMs = Date.now();\n        let elapsedTimeMs = nowMs - request.firstByteDate.getTime();\n\n        let bytesLoaded = request.bytesLoaded;\n        let bytesTotal = request.bytesTotal;\n        let bytesRemaining = bytesTotal - bytesLoaded;\n        let durationS = request.duration;\n\n        let bufferLevel = dashMetrics.getCurrentBufferLevel(metrics) ? dashMetrics.getCurrentBufferLevel(metrics) : 0.0;\n        let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\n\n        let estimateThroughput = 8 * bytesLoaded / (0.001 * elapsedTimeMs); // throughput in bits per second\n        let estimateThroughputBSF = bolaState.bandwidthSafetyFactor * estimateThroughput;\n        let latencyS = 0.001 * (request.firstByteDate.getTime() - request.requestStartDate.getTime());\n        if (latencyS < 0.001 * POOR_LATENCY_MS) {\n            latencyS = 0.001 * POOR_LATENCY_MS;\n        }\n        let estimateTotalTimeS = latencyS + 8 * bytesTotal / estimateThroughputBSF;\n\n        let diagnosticMessage = '';\n        if (BolaRule.BOLA_DEBUG) diagnosticMessage = 'index=' + index + ' quality=' + quality + ' bytesLoaded/bytesTotal=' + bytesLoaded + '/' + bytesTotal + ' bufferLevel=' + bufferLevel + ' timeSince1stByte=' + (elapsedTimeMs / 1000).toFixed(3) + ' estThroughput=' + (estimateThroughputBSF / 1000000).toFixed(3) + ' latency=' + latencyS.toFixed(3);\n\n        let estimateOtherBytesTotal = bytesTotal * bolaState.bitrates[0] / bolaState.bitrates[quality];\n        let estimateBytesRemainingAfterLatency = bytesRemaining - latencyS * estimateThroughputBSF / 8;\n        if (estimateBytesRemainingAfterLatency < 1) {\n            estimateBytesRemainingAfterLatency = 1;\n        }\n\n        if (elapsedTimeMs < GRACE_PERIOD_MS ||\n            bytesRemaining <= estimateOtherBytesTotal ||\n            bufferLevel > bolaState.bufferTarget ||\n            estimateBytesRemainingAfterLatency <= estimateOtherBytesTotal ||\n            estimateTotalTimeS <= durationS) {\n            // Do not abandon during first GRACE_PERIOD_MS.\n            // Do not abandon if we need to download less bytes than the size of the lowest quality fragment.\n            // Do not abandon if buffer level is above bufferTarget because the schedule controller will not download anything anyway.\n            // Do not abandon if after latencyS bytesRemaining is estimated to drop below size of lowest quality fragment.\n            // Do not abandon if fragment takes less than 1 fragment duration to download.\n            callback(switchRequest);\n            return;\n        }\n\n        // If we abandon, there will be latencyS time before we get first byte at lower quality.\n        // By that time, the no-abandon option would have downloaded some more, and the buffer level would have depleted some more.\n        // Introducing this latencyS cushion also helps avoid extra abandonment, especially with close bitrates.\n\n        let effectiveBufferAfterLatency = effectiveBufferLevel - latencyS;\n        if (effectiveBufferAfterLatency < 0) {\n            effectiveBufferAfterLatency = 0;\n        }\n\n        // if we end up abandoning, we should not consider starting a download that would require more bytes than the remaining bytes in currently downloading fragment\n        let maxDroppedQuality = 0;\n        while (maxDroppedQuality + 1 < quality &&\n               bytesTotal * bolaState.bitrates[maxDroppedQuality + 1] / bolaState.bitrates[quality] < estimateBytesRemainingAfterLatency) {\n\n            ++maxDroppedQuality;\n        }\n\n        let newQuality = quality;\n\n        if (bolaState.state === BolaRule.BOLA_STATE_STARTUP) {\n            // We are not yet using the BOLA buffer rules - use different abandonment logic.\n\n            // if we are here then we failed the test that estimateTotalTimeS <= durationS, so we abandon\n\n            // search for quality that matches the throughput\n            newQuality = 0;\n            for (let i = 0; i <= maxDroppedQuality; ++i) {\n                estimateOtherBytesTotal = bytesTotal * bolaState.bitrates[i] / bolaState.bitrates[quality];\n                if (8 * estimateOtherBytesTotal / durationS > estimateThroughputBSF) {\n                    // chunks at quality i or higher need a greater throughput\n                    break;\n                }\n                newQuality = i;\n            }\n        } else { // bolaState.state === BolaRule.BOLA_STATE_STEADY\n            // check if we should abandon using BOLA utility criteria\n\n            let score = (bolaState.Vp * (bolaState.utilities[quality] + bolaState.gp) - effectiveBufferAfterLatency) / estimateBytesRemainingAfterLatency;\n\n            for (let i = 0; i <= maxDroppedQuality; ++i) {\n                estimateOtherBytesTotal = bytesTotal * bolaState.bitrates[i] / bolaState.bitrates[quality];\n                let s = (bolaState.Vp * (bolaState.utilities[i] + bolaState.gp) - effectiveBufferAfterLatency) / estimateOtherBytesTotal;\n                if (s > score) {\n                    newQuality = i;\n                    score = s;\n                }\n            }\n        }\n\n        // Perform check for rebuffer avoidance - now use real buffer level as opposed to effective buffer level.\n        let safeByteSize = bolaState.rebufferSafetyFactor * estimateThroughput * (bufferLevel - latencyS) / 8;\n\n        if (newQuality === quality && estimateBytesRemainingAfterLatency > safeByteSize) {\n            newQuality = maxDroppedQuality;\n        }\n\n        if (newQuality === quality) {\n            // no change\n            callback(switchRequest);\n            return;\n        }\n\n        // newQuality < quality, we are abandoning\n        while (newQuality > 0) {\n            estimateOtherBytesTotal = bytesTotal * bolaState.bitrates[newQuality] / bolaState.bitrates[quality];\n            if (estimateOtherBytesTotal <= safeByteSize) {\n                break;\n            }\n            --newQuality;\n        }\n\n        // deflate placeholder buffer - we want to be conservative after abandoning\n        let wantBufferLevel = NaN;\n        if (newQuality > 0) {\n            // deflate to point where score for newQuality is just getting better than for (newQuality - 1)\n            let u  = bolaState.utilities[newQuality];\n            let u1 = bolaState.utilities[newQuality - 1];\n            let s  = bolaState.bitrates[newQuality];\n            let s1 = bolaState.bitrates[newQuality - 1];\n            wantBufferLevel = bolaState.Vp * ((s * u1 - s1 * u) / (s - s1) + bolaState.gp);\n        } else {\n            // deflate to point where score for (newQuality + 1) is just getting better than for newQuality\n            let u  = bolaState.utilities[0];\n            let u1 = bolaState.utilities[1];\n            let s  = bolaState.bitrates[0];\n            let s1 = bolaState.bitrates[1];\n            wantBufferLevel = bolaState.Vp * ((s * u1 - s1 * u) / (s - s1) + bolaState.gp);\n            // then reduce one fragment duration to be conservative\n            wantBufferLevel -= durationS;\n        }\n        if (effectiveBufferLevel > wantBufferLevel) {\n            bolaState.placeholderBuffer = wantBufferLevel - bufferLevel;\n            if (bolaState.placeholderBuffer < 0)\n                bolaState.placeholderBuffer = 0;\n        }\n\n        bolaState.lastQuality = newQuality;\n        metricsModel.updateBolaState(mediaType, bolaState);\n\n        if (BolaRule.BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaAbandonRule abandon to ' + newQuality + ' - ' + diagnosticMessage);\n\n        rememberAbandon(mediaType, index, quality);\n        switchRequest.value = newQuality;\n        switchRequest.priority = SwitchRequest.STRONG;\n        switchRequest.reason.state = bolaState.state;\n        switchRequest.reason.throughput = estimateThroughput;\n        switchRequest.reason.bufferLevel = bufferLevel;\n        // following entries used for tuning algorithm\n        switchRequest.reason.bytesLoaded = request.bytesLoaded;\n        switchRequest.reason.bytesTotal = request.bytesTotal;\n        switchRequest.reason.elapsedTimeMs = elapsedTimeMs;\n\n        callback(switchRequest);\n    }\n\n    function reset() {\n        abandonDict = {};\n    }\n\n    instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nBolaAbandonRule.__dashjs_factory_name = 'BolaAbandonRule';\nexport default FactoryMaker.getClassFactory(BolaAbandonRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\n\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport PlaybackController from '../../controllers/PlaybackController';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport DashAdapter from '../../../dash/DashAdapter';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport Debug from '../../../core/Debug';\n\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\n// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\n// TODO: add BOLA_STATE_SEEK and tune Bola behavior on seeking\nconst BOLA_STATE_ONE_BITRATE    = 0;\nconst BOLA_STATE_STARTUP        = 1;\nconst BOLA_STATE_STEADY         = 2;\nconst BOLA_DEBUG = false; // TODO: remove\n\nconst MINIMUM_BUFFER_S = 10; // BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.\nconst BUFFER_TARGET_S = 30; // If Schedule Controller does not allow buffer level to reach BUFFER_TARGET_S, this can be a placeholder buffer level.\nconst REBUFFER_SAFETY_FACTOR = 0.5; // Used when buffer level is dangerously low, might happen often in live streaming.\n\nfunction BolaRule(config) {\n\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 2;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 3;\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        lastCallTimeDict,\n        lastFragmentLoadedDict,\n        lastFragmentWasSwitchDict,\n        eventMediaTypes,\n        mediaPlayerModel,\n        playbackController,\n        adapter;\n\n    function setup() {\n        lastCallTimeDict = {};\n        lastFragmentLoadedDict = {};\n        lastFragmentWasSwitchDict = {};\n        eventMediaTypes = [];\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        adapter = DashAdapter(context).getInstance();\n        eventBus.on(Events.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n    }\n\n    function utilitiesFromBitrates(bitrates) {\n        return bitrates.map(b => Math.log(b));\n        // no need to worry about offset, any offset will be compensated for by gp\n    }\n\n    // NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but bola should not stick to lowest bitrate by using a placeholder buffer level\n    function calculateParameters(minimumBufferS, bufferTargetS, bitrates, utilities) {\n        let highestUtilityIndex = NaN;\n        if (!utilities) {\n            utilities = utilitiesFromBitrates(bitrates);\n            highestUtilityIndex = utilities.length - 1;\n        } else {\n            highestUtilityIndex = 0;\n            utilities.forEach((u, i) => {if (u > utilities[highestUtilityIndex]) highestUtilityIndex = i;});\n        }\n\n        if (highestUtilityIndex === 0) {\n            // if highestUtilityIndex === 0, then always use lowest bitrate\n            return null;\n        }\n\n        // TODO: Investigate if following can be better if utilities are not the default Math.log utilities.\n        // If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTargetS.\n        // (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:\n        // Vp * (utilities[0] + gp - 1) = minimumBufferS and Vp * (utilities[max] + gp - 1) = bufferTargetS\n        // giving:\n        const gp = 1 - utilities[0] + (utilities[highestUtilityIndex] - utilities[0]) / (bufferTargetS / minimumBufferS - 1);\n        const Vp = minimumBufferS / (utilities[0] + gp - 1);\n\n        return {utilities: utilities, gp: gp, Vp: Vp};\n    }\n\n    function calculateInitialState(rulesContext) {\n        let initialState = {};\n\n        const mediaInfo = rulesContext.getMediaInfo();\n\n        const streamProcessor = rulesContext.getStreamProcessor();\n        const streamInfo = rulesContext.getStreamInfo();\n        const trackInfo = rulesContext.getTrackInfo();\n\n        const isDynamic = streamProcessor.isDynamic();\n        const duration = streamInfo.manifestInfo.duration;\n        const fragmentDuration = trackInfo.fragmentDuration;\n\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\n        const params = calculateParameters(MINIMUM_BUFFER_S, BUFFER_TARGET_S, bitrates, null);\n        if (params === null) {\n            // The best soloution is to always use the lowest bitrate...\n            initialState.state = BOLA_STATE_ONE_BITRATE;\n            return initialState;\n        }\n\n        initialState.state                 = BOLA_STATE_STARTUP;\n\n        initialState.bitrates              = bitrates;\n        initialState.utilities             = params.utilities;\n        initialState.Vp                    = params.Vp;\n        initialState.gp                    = params.gp;\n\n        initialState.isDynamic             = isDynamic;\n        initialState.movieDuration         = duration;\n        initialState.fragmentDuration      = fragmentDuration;\n        initialState.bandwidthSafetyFactor = mediaPlayerModel.getBandwidthSafetyFactor();\n        initialState.rebufferSafetyFactor  = REBUFFER_SAFETY_FACTOR;\n        initialState.bufferTarget          = mediaPlayerModel.getStableBufferTime();\n\n        initialState.lastQuality           = 0;\n        initialState.placeholderBuffer     = 0;\n        initialState.throughputCount       = (isDynamic ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD);\n\n        if (BOLA_DEBUG) {\n            let info = '';\n            for (let i = 0; i < bitrates.length; ++i) {\n                let u  = params.utilities[i];\n                let b  = bitrates[i];\n                let th = 0;\n                if (i > 0) {\n                    let u1 = params.utilities[i - 1];\n                    let b1 = bitrates[i - 1];\n                    th  = params.Vp * ((u1 * b - u * b1) / (b - b1) + params.gp);\n                }\n                let z = params.Vp * (u + params.gp);\n                info += '\\n' + i + ':' + (0.000001 * bitrates[i]).toFixed(3) + 'Mbps ' + th.toFixed(3) + '/' + z.toFixed(3);\n            }\n            log('BolaDebug ' + mediaInfo.type + ' bitrates' + info);\n        }\n\n        return initialState;\n    }\n\n    function getQualityFromBufferLevel(bolaState, bufferLevel) {\n        const bitrateCount = bolaState.bitrates.length;\n        let quality = NaN;\n        let score = NaN;\n        for (let i = 0; i < bitrateCount; ++i) {\n            let s = (bolaState.Vp * (bolaState.utilities[i] + bolaState.gp) - bufferLevel) / bolaState.bitrates[i];\n            if (isNaN(score) || s >= score) {\n                score = s;\n                quality = i;\n            }\n        }\n        return quality;\n    }\n\n    function getLastHttpRequests(metrics, count) {\n        let allHttpRequests = dashMetrics.getHttpRequests(metrics);\n        let httpRequests = [];\n\n        for (let i = allHttpRequests.length - 1; i >= 0 && httpRequests.length < count; --i) {\n            let request = allHttpRequests[i];\n            if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE && request._tfinish && request.tresponse && request.trace) {\n                httpRequests.push(request);\n            }\n        }\n\n        return httpRequests;\n    }\n\n    function getRecentThroughput(metrics, count, mediaType) { // TODO: mediaType only used for debugging, remove it\n        let lastRequests = getLastHttpRequests(metrics, count);\n        if (lastRequests.length === 0) {\n            return 0;\n        }\n\n        let totalInverse = 0;\n        let msg = '';\n        for (let i = 0; i < lastRequests.length; ++i) {\n            // The RTT delay results in a lower throughput. We can avoid this delay in the calculation, but we do not want to.\n            let downloadSeconds = 0.001 * (lastRequests[i]._tfinish.getTime() - lastRequests[i].trequest.getTime());\n            let downloadBits = 8 * lastRequests[i].trace.reduce((prev, cur) => (prev + cur.b[0]), 0);\n            if (BOLA_DEBUG) msg += ' ' + (0.000001 * downloadBits).toFixed(3) + '/' + downloadSeconds.toFixed(3) + '=' + (0.000001 * downloadBits / downloadSeconds).toFixed(3) + 'Mbps';\n            totalInverse += downloadSeconds / downloadBits;\n        }\n\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule recent throughput = ' + (lastRequests.length / (1000000 * totalInverse)).toFixed(3) + 'Mbps:' + msg);\n\n        return lastRequests.length / totalInverse;\n    }\n\n    function getQualityFromThroughput(bolaState, throughput) {\n        // do not factor in bandwidthSafetyFactor here - it is factored at point of function invocation\n\n        let q = 0;\n\n        bolaState.bitrates.some(function (value, index) {\n            if (value > throughput) {\n                return true;\n            }\n            q = index;\n            return false;\n        });\n\n        return q;\n    }\n\n    function getPlaceholderIncrementInSeconds(metrics, mediaType) {\n        // find out if there was delay because of\n        // 1. lack of availability in live streaming or\n        // 2. bufferLevel > bufferTarget or\n        // 3. fast switching\n\n        let nowMs = Date.now();\n        let lctMs = lastCallTimeDict[mediaType];\n        let wasSwitch = lastFragmentWasSwitchDict[mediaType];\n        let lastRequestFinishMs = NaN;\n\n        lastCallTimeDict[mediaType] = nowMs;\n        lastFragmentWasSwitchDict[mediaType] = false;\n\n        if (!wasSwitch) {\n            let lastRequests = getLastHttpRequests(metrics, 1);\n            if (lastRequests.length > 0) {\n                lastRequestFinishMs = lastRequests[0]._tfinish.getTime();\n                if (lastRequestFinishMs > nowMs) {\n                    // this shouldn't happen, try to handle gracefully\n                    lastRequestFinishMs = nowMs;\n                }\n            }\n        }\n\n        // return the time since the finish of the last request.\n        // The return will be added cumulatively to the placeholder buffer, so we must be sure not to add the same delay twice.\n\n        let delayMs = 0;\n        if (wasSwitch || lctMs > lastRequestFinishMs) {\n            delayMs = nowMs - lctMs;\n        } else {\n            delayMs = nowMs - lastRequestFinishMs;\n        }\n\n        if (isNaN(delayMs) || delayMs <= 0)\n            return 0;\n        return 0.001 * delayMs;\n    }\n\n    function onBufferEmpty() {\n        if (BOLA_DEBUG) log('BolaDebug BUFFER_EMPTY');\n        // if we rebuffer, we don't want the placeholder buffer to artificially raise BOLA quality\n        eventMediaTypes.forEach(function (mediaType) {\n            let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n            if (metrics.BolaState.length !== 0) {\n                let bolaState = metrics.BolaState[0]._s;\n                if (bolaState.state === BOLA_STATE_STEADY) {\n                    bolaState.placeholderBuffer = 0;\n                    metricsModel.updateBolaState(mediaType, bolaState);\n                }\n            }\n        });\n    }\n\n    function onPlaybackSeeking(e) {\n        if (BOLA_DEBUG) log('BolaDebug PLAYBACK_SEEKING ' + e.seekTime.toFixed(3));\n        // TODO: 1. Verify what happens if we seek mid-fragment.\n        // TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.\n        eventMediaTypes.forEach(function (mediaType) {\n            let metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n            if (metrics.BolaState.length !== 0) {\n                let bolaState = metrics.BolaState[0]._s;\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                    bolaState.state = BOLA_STATE_STARTUP;\n                }\n                metricsModel.updateBolaState(mediaType, bolaState);\n            }\n        });\n\n        lastFragmentLoadedDict = {};\n        lastFragmentWasSwitchDict = {};\n    }\n\n    function onPeriodSwitchStarted() {\n        // TODO\n    }\n\n    function onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.mediaInfo) {\n            let type = e.chunk.mediaInfo.type;\n            let start = e.chunk.start;\n            if (type !== undefined && !isNaN(start)) {\n                if (start <= lastFragmentLoadedDict[type]) {\n                    lastFragmentWasSwitchDict[type] = true;\n                    // keep lastFragmentLoadedDict[type] e.g. last fragment start 10, switch fragment 8, last is still 10\n                } else {\n                    // isNaN(lastFragmentLoadedDict[type]) also falls here\n                    lastFragmentWasSwitchDict[type] = false;\n                    lastFragmentLoadedDict[type] = start;\n                }\n            }\n        }\n    }\n\n    function execute(rulesContext, callback) {\n        const streamProcessor = rulesContext.getStreamProcessor();\n        streamProcessor.getScheduleController().setTimeToLoadDelay(0);\n\n        let switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: BolaRule.__dashjs_factory_name});\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = mediaInfo.type;\n        const metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n\n        if (metrics.BolaState.length === 0) {\n            // initialization\n\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + '\\nBolaDebug ' + mediaType + ' BolaRule for state=- fragmentStart=' + adapter.getIndexHandlerTime(rulesContext.getStreamProcessor()).toFixed(3));\n\n            let initState = calculateInitialState(rulesContext);\n            metricsModel.updateBolaState(mediaType, initState);\n\n            let q = 0;\n            if (initState.state !== BOLA_STATE_ONE_BITRATE) {\n                // initState.state === BOLA_STATE_STARTUP\n\n                eventMediaTypes.push(mediaType);\n\n                // Bola is not invoked by dash.js to determine the bitrate quality for the first fragment. We might estimate the throughput level here, but the metric related to the HTTP request for the first fragment is usually not available.\n                // TODO: at some point, we may want to consider a tweak that redownloads the first fragment at a higher quality\n\n                let initThroughput = getRecentThroughput(metrics, initState.throughputCount, mediaType);\n                if (initThroughput === 0) {\n                    // We don't have information about any download yet - let someone else decide quality.\n                    if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality unchanged for INITIALIZE');\n                    callback(switchRequest);\n                    return;\n                }\n                q = getQualityFromThroughput(initState, initThroughput * initState.bandwidthSafetyFactor);\n                initState.lastQuality = q;\n                switchRequest.value = q;\n                switchRequest.priority = SwitchRequest.DEFAULT;\n                switchRequest.reason.state = initState.state;\n                switchRequest.reason.throughput = initThroughput;\n            }\n\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + q + ' for INITIALIZE');\n            callback(switchRequest);\n            return;\n        } // initialization\n\n        // metrics.BolaState.length > 0\n        let bolaState = metrics.BolaState[0]._s;\n        // TODO: does changing bolaState conform to coding style, or should we clone?\n\n        if (bolaState.state === BOLA_STATE_ONE_BITRATE) {\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality 0 for ONE_BITRATE');\n            callback(switchRequest);\n            return;\n        }\n\n        let bitrates = bolaState.bitrates;\n        let utilities = bolaState.utilities;\n\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + '\\nBolaDebug ' + mediaType + ' EXECUTE BolaRule for state=' + bolaState.state + ' fragmentStart=' + adapter.getIndexHandlerTime(rulesContext.getStreamProcessor()).toFixed(3));\n\n        let bufferLevel = dashMetrics.getCurrentBufferLevel(metrics) ? dashMetrics.getCurrentBufferLevel(metrics) : 0;\n        let recentThroughput = getRecentThroughput(metrics, bolaState.throughputCount, mediaType);\n\n        if (bufferLevel <= 0.1) {\n            // rebuffering occurred, reset placeholder buffer\n            bolaState.placeholderBuffer = 0;\n        }\n\n        // find out if there was delay because of lack of availability or because buffer level > bufferTarget or because of fast switching\n        let placeholderInc = getPlaceholderIncrementInSeconds(metrics, mediaType);\n        if (placeholderInc > 0) { // TODO: maybe we should set some positive threshold here\n            bolaState.placeholderBuffer += placeholderInc;\n        }\n        if (bolaState.placeholderBuffer < 0) {\n            bolaState.placeholderBuffer = 0;\n        }\n\n        let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\n        let bolaQuality = getQualityFromBufferLevel(bolaState, effectiveBufferLevel);\n\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule bufferLevel=' + bufferLevel.toFixed(3) + '(+' + bolaState.placeholderBuffer.toFixed(3) + '=' + effectiveBufferLevel.toFixed(3) + ') recentThroughput=' + (0.000001 * recentThroughput).toFixed(3) + ' tentativeQuality=' + bolaQuality);\n\n        if (bolaState.state === BOLA_STATE_STARTUP) {\n            // in startup phase, use some throughput estimation\n\n            let q = getQualityFromThroughput(bolaState, recentThroughput * bolaState.bandwidthSafetyFactor);\n\n            if (bufferLevel > bolaState.fragmentDuration / REBUFFER_SAFETY_FACTOR) {\n                // only switch to steady state if we believe we have enough buffer to not trigger quality drop to a safeBitrate\n                bolaState.state = BOLA_STATE_STEADY;\n\n                let wantEffectiveBuffer = 0;\n                for (let i = 0; i < q; ++i) {\n                    // We want minimum effective buffer (bufferLevel + placeholderBuffer) that gives a higher score for q when compared with any other i < q.\n                    // We want\n                    //     (Vp * (utilities[q] + gp) - bufferLevel) / bitrates[q]\n                    // to be >= any score for i < q.\n                    // We get score equality for q and i when:\n                    let b = bolaState.Vp * (bolaState.gp + (bitrates[q] * utilities[i] - bitrates[i] * utilities[q]) / (bitrates[q] - bitrates[i]));\n                    if (b > wantEffectiveBuffer) {\n                        wantEffectiveBuffer = b;\n                    }\n                }\n                if (wantEffectiveBuffer > bufferLevel) {\n                    bolaState.placeholderBuffer = wantEffectiveBuffer - bufferLevel;\n                }\n            }\n\n            if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + q + ' for STARTUP');\n            bolaState.lastQuality = q;\n            metricsModel.updateBolaState(mediaType, bolaState);\n            switchRequest.value = q;\n            switchRequest.priority = SwitchRequest.DEFAULT;\n            switchRequest.reason.state = BOLA_STATE_STARTUP;\n            switchRequest.reason.throughput = recentThroughput;\n            callback(switchRequest);\n            return;\n        }\n\n        // steady state\n\n        // we want to avoid oscillations\n        // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\n        if (bolaQuality > bolaState.lastQuality) {\n            // do not multiply throughput by bandwidthSafetyFactor here: we are not using throughput estimation but capping bitrate to avoid oscillations\n            let q = getQualityFromThroughput(bolaState, recentThroughput);\n            if (bolaQuality > q) {\n                // only intervene if we are trying to *increase* quality to an *unsustainable* level\n\n                if (q < bolaState.lastQuality) {\n                    // we are only avoid oscillations - do not drop below last quality\n                    q = bolaState.lastQuality;\n                }\n                // We are dropping to an encoding bitrate which is a little less than the network bandwidth because bitrate levels are discrete. Quality q might lead to buffer inflation, so we deflate buffer to the level that q gives postive utility. This delay will be added below.\n                bolaQuality = q;\n            }\n        }\n\n        // Try to make sure that we can download a chunk without rebuffering. This is especially important for live streaming.\n        if (recentThroughput > 0) {\n            // We can only perform this check if we have a throughput estimate.\n            let safeBitrate = REBUFFER_SAFETY_FACTOR * recentThroughput * bufferLevel / bolaState.fragmentDuration;\n            while (bolaQuality > 0 && bitrates[bolaQuality] > safeBitrate) {\n                --bolaQuality;\n            }\n        }\n\n        // We do not want to overfill buffer with low quality chunks.\n        // Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.\n        let delaySeconds = 0;\n        let wantBufferLevel = bolaState.Vp * (utilities[bolaQuality] + bolaState.gp);\n        delaySeconds = effectiveBufferLevel - wantBufferLevel;\n        if (delaySeconds > 0) {\n            // First reduce placeholder buffer.\n            // Note that this \"delay\" is the main mechanism of depleting placeholderBuffer - the real buffer is depleted by playback.\n            if (delaySeconds > bolaState.placeholderBuffer) {\n                delaySeconds -= bolaState.placeholderBuffer;\n                bolaState.placeholderBuffer = 0;\n            } else {\n                bolaState.placeholderBuffer -= delaySeconds;\n                delaySeconds = 0;\n            }\n        }\n        if (delaySeconds > 0) {\n            // After depleting all placeholder buffer, set delay.\n            if (bolaQuality === bitrates.length - 1) {\n                // At top quality, allow schedule controller to decide how far to fill buffer.\n                delaySeconds = 0;\n            } else {\n                streamProcessor.getScheduleController().setTimeToLoadDelay(1000 * delaySeconds);\n            }\n        } else {\n            delaySeconds = 0;\n        }\n\n        bolaState.lastQuality = bolaQuality;\n        metricsModel.updateBolaState(mediaType, bolaState);\n\n        switchRequest.value = bolaQuality;\n        switchRequest.priority = SwitchRequest.DEFAULT;\n        switchRequest.reason.state = bolaState.state;\n        switchRequest.reason.throughput = recentThroughput;\n        switchRequest.reason.bufferLevel = bufferLevel;\n\n        if (BOLA_DEBUG) log('BolaDebug ' + mediaType + ' BolaRule quality ' + bolaQuality + ' delay=' + delaySeconds.toFixed(3) + ' for STEADY');\n        callback(switchRequest);\n    }\n\n    function reset() {\n        eventBus.off(Events.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.off(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n        setup();\n    }\n\n    instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBolaRule.__dashjs_factory_name = 'BolaRule';\nlet factory = FactoryMaker.getClassFactory(BolaRule);\nfactory.BOLA_STATE_ONE_BITRATE    = BOLA_STATE_ONE_BITRATE;\nfactory.BOLA_STATE_STARTUP        = BOLA_STATE_STARTUP;\nfactory.BOLA_STATE_STEADY         = BOLA_STATE_STEADY;\nfactory.BOLA_DEBUG = BOLA_DEBUG; // TODO: remove\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport AbrController from '../../controllers/AbrController';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction BufferOccupancyRule(config) {\n\n    let instance;\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n\n    let metricsModel = config.metricsModel;\n    let dashMetrics = config.dashMetrics;\n\n    let lastSwitchTime,\n        mediaPlayerModel;\n\n    function setup() {\n        lastSwitchTime = 0;\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    function execute (rulesContext, callback) {\n        var now = new Date().getTime() / 1000;\n        var mediaInfo = rulesContext.getMediaInfo();\n        var representationInfo = rulesContext.getTrackInfo();\n        var mediaType = mediaInfo.type;\n        var waitToSwitchTime = !isNaN(representationInfo.fragmentDuration) ? representationInfo.fragmentDuration / 2 : 2;\n        var current = rulesContext.getCurrentValue();\n        var streamProcessor = rulesContext.getStreamProcessor();\n        var abrController = streamProcessor.getABRController();\n        var metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        var lastBufferLevel = dashMetrics.getCurrentBufferLevel(metrics);\n        var lastBufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\n        var isBufferRich = false;\n        var maxIndex = mediaInfo.representationCount - 1;\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: BufferOccupancyRule.__dashjs_factory_name});\n\n        if (now - lastSwitchTime < waitToSwitchTime ||\n            abrController.getAbandonmentStateFor(mediaType) === AbrController.ABANDON_LOAD) {\n            callback(switchRequest);\n            return;\n        }\n\n        if (lastBufferStateVO !== null) {\n            // This will happen when another rule tries to switch from top to any other.\n            // If there is enough buffer why not try to stay at high level.\n            if (lastBufferLevel > lastBufferStateVO.target) {\n                isBufferRich = (lastBufferLevel - lastBufferStateVO.target) > mediaPlayerModel.getRichBufferThreshold();\n\n                if (isBufferRich && mediaInfo.representationCount > 1) {\n                    switchRequest.value = maxIndex;\n                    switchRequest.priority = SwitchRequest.STRONG;\n                    switchRequest.reason.bufferLevel = lastBufferLevel;\n                    switchRequest.reason.bufferTarget = lastBufferStateVO.target;\n                }\n            }\n        }\n\n        if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== current) {\n            log('BufferOccupancyRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\n                switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\n                    switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak');\n        }\n\n        callback(switchRequest);\n    }\n\n    function reset() {\n        lastSwitchTime = 0;\n    }\n\n    instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nBufferOccupancyRule.__dashjs_factory_name = 'BufferOccupancyRule';\nexport default FactoryMaker.getClassFactory(BufferOccupancyRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport BufferController from '../../controllers/BufferController';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction InsufficientBufferRule(config) {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let metricsModel = config.metricsModel;\n\n    let instance,\n        bufferStateDict,\n        lastSwitchTime,\n        waitToSwitchTime;\n\n    function setup() {\n        bufferStateDict = {};\n        lastSwitchTime = 0;\n        waitToSwitchTime = 1000;\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n    }\n\n    function execute (rulesContext, callback) {\n        var now = new Date().getTime();\n        var mediaType = rulesContext.getMediaInfo().type;\n        var current = rulesContext.getCurrentValue();\n        var metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        var lastBufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\n        var switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: InsufficientBufferRule.__dashjs_factory_name});\n\n        if (now - lastSwitchTime < waitToSwitchTime ||\n            lastBufferStateVO === null) {\n            callback(switchRequest);\n            return;\n        }\n\n        setBufferInfo(mediaType, lastBufferStateVO.state);\n        // After the sessions first buffer loaded event , if we ever have a buffer empty event we want to switch all the way down.\n        if (lastBufferStateVO.state === BufferController.BUFFER_EMPTY && bufferStateDict[mediaType].firstBufferLoadedEvent !== undefined) {\n            switchRequest.value = 0;\n            switchRequest.priority = SwitchRequest.STRONG;\n            switchRequest.reason.bufferState = lastBufferStateVO.state;\n\n            switchRequest = SwitchRequest(context).create(0, SwitchRequest.STRONG);\n        }\n\n        if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== current) {\n            log('InsufficientBufferRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\n                switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\n                    switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak');\n        }\n\n        lastSwitchTime = now;\n        callback(switchRequest);\n    }\n\n    function setBufferInfo(type, state) {\n        bufferStateDict[type] = bufferStateDict[type] || {};\n        bufferStateDict[type].state = state;\n        if (state === BufferController.BUFFER_LOADED && !bufferStateDict[type].firstBufferLoadedEvent) {\n            bufferStateDict[type].firstBufferLoadedEvent = true;\n        }\n    }\n\n    function onPlaybackSeeking() {\n        bufferStateDict = {};\n    }\n\n    function reset() {\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        bufferStateDict = {};\n        lastSwitchTime = 0;\n    }\n\n    instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport BufferController from '../../controllers/BufferController';\nimport AbrController from '../../controllers/AbrController';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction ThroughputRule(config) {\n\n    const MAX_MEASUREMENTS_TO_KEEP = 20;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 3;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 4;\n    const CACHE_LOAD_THRESHOLD_VIDEO = 50;\n    const CACHE_LOAD_THRESHOLD_AUDIO = 5;\n    const THROUGHPUT_DECREASE_SCALE = 1.3;\n    const THROUGHPUT_INCREASE_SCALE = 1.3;\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n\n    let throughputArray,\n        cacheLoadDict,\n        mediaPlayerModel;\n\n    function setup() {\n        throughputArray = [];\n        cacheLoadDict = {audio: {threshold: CACHE_LOAD_THRESHOLD_AUDIO, value: NaN}, video: {threshold: CACHE_LOAD_THRESHOLD_VIDEO, value: NaN}};//threshold is in milliseconds\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n    }\n\n    function storeLastRequestThroughputByType(type, throughput) {\n        throughputArray[type] = throughputArray[type] || [];\n        throughputArray[type].push(throughput);\n    }\n\n    function getSample(type, isDynamic) {\n        let size = Math.min(throughputArray[type].length, isDynamic ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD);\n        const sampleArray = throughputArray[type].slice(size * -1, throughputArray[type].length);\n        if (sampleArray.length > 1) {\n            sampleArray.reduce((a, b) => {\n                if (a * THROUGHPUT_INCREASE_SCALE <= b || a >= b * THROUGHPUT_DECREASE_SCALE) {\n                    size++;\n                }\n                return b;\n            });\n        }\n        size = Math.min(throughputArray[type].length, size);\n        return throughputArray[type].slice(size * -1, throughputArray[type].length);\n    }\n\n    function getAverageThroughput(type, isDynamic) {\n        const sample = getSample(type, isDynamic);\n        let averageThroughput = 0;\n        if (sample.length > 0) {\n            const totalSampledValue = sample.reduce((a, b) => a + b, 0);\n            averageThroughput = totalSampledValue / sample.length;\n        }\n        if (throughputArray[type].length >= MAX_MEASUREMENTS_TO_KEEP) {\n            throughputArray[type].shift();\n        }\n        return (averageThroughput / 1000 ) * mediaPlayerModel.getBandwidthSafetyFactor();\n    }\n\n    function execute (rulesContext, callback) {\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = mediaInfo.type;\n        const currentQuality = rulesContext.getCurrentValue();\n        const metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        const streamProcessor = rulesContext.getStreamProcessor();\n        const abrController = streamProcessor.getABRController();\n        const isDynamic = streamProcessor.isDynamic();\n        const lastRequest = dashMetrics.getCurrentHttpRequest(metrics);\n        const bufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\n        const switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, SwitchRequest.WEAK, {name: ThroughputRule.__dashjs_factory_name});\n\n        if (!metrics || !lastRequest || lastRequest.type !== HTTPRequest.MEDIA_SEGMENT_TYPE || !bufferStateVO ) {\n            callback(switchRequest);\n            return;\n        }\n\n        let downloadTimeInMilliseconds;\n\n        if (lastRequest.trace && lastRequest.trace.length) {\n\n            downloadTimeInMilliseconds = lastRequest._tfinish.getTime() - lastRequest.tresponse.getTime() + 1; //Make sure never 0 we divide by this value. Avoid infinity!\n\n            const bytes = lastRequest.trace.reduce((a, b) => a + b.b[0], 0);\n            const lastRequestThroughput = Math.round((bytes * 8) / (downloadTimeInMilliseconds / 1000));\n\n            //Prevent cached fragment loads from skewing the average throughput value - allow first even if cached to set allowance for ABR rules..\n            if (downloadTimeInMilliseconds <= cacheLoadDict[mediaType].threshold) {\n                cacheLoadDict[mediaType].value = lastRequestThroughput / 1000;\n            } else {\n                cacheLoadDict[mediaType].value = NaN;\n                storeLastRequestThroughputByType(mediaType, lastRequestThroughput);\n            }\n        }\n\n        const throughput = Math.round(!isNaN(cacheLoadDict[mediaType].value) ? cacheLoadDict[mediaType].value  : getAverageThroughput(mediaType, isDynamic));\n        abrController.setAverageThroughput(mediaType, throughput);\n\n        if (abrController.getAbandonmentStateFor(mediaType) !== AbrController.ABANDON_LOAD) {\n\n            if (bufferStateVO.state === BufferController.BUFFER_LOADED || isDynamic) {\n                const newQuality = abrController.getQualityForBitrate(mediaInfo, throughput);\n                streamProcessor.getScheduleController().setTimeToLoadDelay(0);\n                switchRequest.value = newQuality;\n                switchRequest.priority = SwitchRequest.DEFAULT;\n                switchRequest.reason.throughput = throughput;\n            }\n\n            if (switchRequest.value !== SwitchRequest.NO_CHANGE && switchRequest.value !== currentQuality) {\n                log('ThroughputRule requesting switch to index: ', switchRequest.value, 'type: ',mediaType, ' Priority: ',\n                    switchRequest.priority === SwitchRequest.DEFAULT ? 'Default' :\n                        switchRequest.priority === SwitchRequest.STRONG ? 'Strong' : 'Weak', 'Average throughput', Math.round(throughput), 'kbps');\n            }\n        }\n\n        callback(switchRequest);\n    }\n\n    function reset() {\n        setup();\n    }\n\n    const instance = {\n        execute: execute,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\nexport default FactoryMaker.getClassFactory(ThroughputRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BasicSelector(config) {\n\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function select(baseUrls) {\n        var index = 0;\n        var selectedBaseUrl;\n\n        if (baseUrls && baseUrls.some((baseUrl, idx) => {\n            index = idx;\n\n            return (!blacklistController.contains(baseUrl.serviceLocation));\n        })) {\n            selectedBaseUrl = baseUrls[index];\n        }\n\n        return selectedBaseUrl;\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nBasicSelector.__dashjs_factory_name = 'BasicSelector';\nexport default FactoryMaker.getClassFactory(BasicSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction DVBSelector(config) {\n\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function getNonBlacklistedBaseUrls(urls) {\n        var removedPriorities = [];\n\n        const samePrioritiesFilter = function (el) {\n            if (removedPriorities.length) {\n                if ((el.dvb_priority) &&\n                        (removedPriorities.indexOf(el.dvb_priority) !== -1)) {\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n        const serviceLocationFilter = function (baseUrl) {\n            if (blacklistController.contains(baseUrl.serviceLocation)) {\n                // whenever a BaseURL is removed from the available list of\n                // BaseURLs, any other BaseURL with the same @priority\n                // value as the BaseURL being removed shall also be removed\n                if (baseUrl.dvb_priority) {\n                    removedPriorities.push(baseUrl.dvb_priority);\n                }\n\n                // all URLs in the list which have a @serviceLocation\n                // attribute matching an entry in the blacklist shall be\n                // removed from the available list of BaseURLs\n                return false;\n            }\n\n            return true;\n        };\n\n        return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);\n    }\n\n    function selectByWeight(availableUrls) {\n        const prioritySorter = function (a, b) {\n            var diff = a.dvb_priority - b.dvb_priority;\n            return isNaN(diff) ? 0 : diff;\n        };\n\n        const topPriorityFilter = function (baseUrl, idx, arr) {\n            return !idx || (\n                (arr[0].dvb_priority && baseUrl.dvb_priority) &&\n                (arr[0].dvb_priority === baseUrl.dvb_priority)\n            );\n        };\n\n        var totalWeight = 0;\n        var cumulWeights = [];\n        var idx = 0;\n        var rn;\n        var urls;\n\n        // It shall begin by taking the set of resolved BaseURLs present or inherited at the current\n        // position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest\n        // @priority attribute value.\n        urls = availableUrls.sort(prioritySorter).filter(topPriorityFilter);\n\n        if (urls.length) {\n            if (urls.length > 1) {\n                // If there is more than one BaseURL with this lowest @priority attribute value then the Player\n                // shall select one of them at random such that the probability of each BaseURL being chosen\n                // is proportional to the value of its @weight attribute. The method described in RFC 2782\n                // [26] or picking from a number of weighted entries is suitable for this, but there may be other\n                // algorithms which achieve the same effect.\n\n                // add all the weights together, storing the accumulated weight per entry\n                urls.forEach(baseUrl => {\n                    totalWeight += baseUrl.dvb_weight;\n                    cumulWeights.push(totalWeight);\n                });\n\n                // pick a random number between zero and totalWeight\n                rn = Math.floor(Math.random() * (totalWeight - 1));\n\n                // select the index for the range rn falls within\n                cumulWeights.every((limit, index) => {\n                    idx = index;\n\n                    if (rn < limit) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            }\n\n            return urls[idx];\n        }\n    }\n\n    function select(baseUrls) {\n        return baseUrls && selectByWeight(\n            getNonBlacklistedBaseUrls(\n                baseUrls\n            )\n        );\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nDVBSelector.__dashjs_factory_name = 'DVBSelector';\nexport default FactoryMaker.getClassFactory(DVBSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport PlaybackController from '../../controllers/PlaybackController';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BufferLevelRule(config) {\n\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const textSourceBuffer = config.textSourceBuffer;\n\n    let mediaPlayerModel,\n        playbackController;\n\n    function setup() {\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n    }\n\n    function execute(streamProcessor, type, videoTrackPresent) {\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(type));\n        return bufferLevel < getBufferTarget(streamProcessor, type, videoTrackPresent);\n    }\n\n    function getBufferTarget(streamProcessor, type, videoTrackPresent) {\n        let bufferTarget = NaN;\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        if (type === 'fragmentedText') {\n            bufferTarget = textSourceBuffer.getAllTracksAreDisabled() ? 0 : representationInfo.fragmentDuration;\n        } else if (type === 'audio' && videoTrackPresent) {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor('video'));\n            bufferTarget = Math.floor(Math.max(videoBufferLevel, representationInfo.fragmentDuration));\n        } else {\n            const streamInfo = representationInfo.mediaInfo.streamInfo;\n            const abrController = streamProcessor.getABRController();\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= mediaPlayerModel.getLongFormContentDurationThreshold();\n                bufferTarget = isLongFormContent ? mediaPlayerModel.getBufferTimeAtTopQualityLongForm() : mediaPlayerModel.getBufferTimeAtTopQuality();\n            }else {\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\n            }\n        }\n\n        return bufferTarget;\n    }\n\n    const instance = {\n        execute: execute,\n        getBufferTarget: getBufferTarget\n    };\n\n    setup();\n    return instance;\n}\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../../../core/Debug';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction NextFragmentRequestRule(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const adapter = config.adapter;\n    const sourceBufferController = config.sourceBufferController;\n    const textSourceBuffer = config.textSourceBuffer;\n\n    function execute(streamProcessor, requestToReplace) {\n\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        const mediaInfo = representationInfo.mediaInfo;\n        const mediaType = mediaInfo.type;\n        const scheduleController = streamProcessor.getScheduleController();\n        const seekTarget = scheduleController.getSeekTarget();\n        const hasSeekTarget = !isNaN(seekTarget);\n        const buffer = streamProcessor.getBuffer();\n\n        let time = hasSeekTarget ? seekTarget : adapter.getIndexHandlerTime(streamProcessor);\n\n        if (isNaN(time) || (mediaType === 'fragmentedText' && textSourceBuffer.getAllTracksAreDisabled())) {\n            return null;\n        }\n\n        if (hasSeekTarget) {\n            scheduleController.setSeekTarget(NaN);\n        }\n\n        /**\n         * This is critical for IE/Safari/EDGE\n         * */\n        if (buffer) {\n            const range = sourceBufferController.getBufferRange(streamProcessor.getBuffer(), time);\n            if (range !== null) {\n                log('Prior to making a request for time, NextFragmentRequestRule is aligning index handler\\'s currentTime with bufferedRange.end.', time, ' was changed to ', range.end);\n                time = range.end;\n            }\n        }\n\n        let request;\n        if (requestToReplace) {\n            time = requestToReplace.startTime + (requestToReplace.duration / 2);\n            request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, time, {timeThreshold: 0, ignoreIsFinished: true});\n        } else {\n            request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, time, {keepIdx: !hasSeekTarget});\n            if (request && streamProcessor.getFragmentModel().isFragmentLoaded(request)) {\n                request = adapter.getNextFragmentRequest(streamProcessor, representationInfo);\n            }\n            if (request) {\n                adapter.setIndexHandlerTime(streamProcessor, request.startTime + request.duration);\n                request.delayLoadingTime = new Date().getTime() + scheduleController.getTimeToLoadDelay();\n                scheduleController.setTimeToLoadDelay(0);\n            }\n        }\n\n        return request;\n    }\n\n    const instance = {\n        execute: execute\n    };\n\n    return instance;\n}\n\nNextFragmentRequestRule.__dashjs_factory_name = 'NextFragmentRequestRule';\nexport default FactoryMaker.getClassFactory(NextFragmentRequestRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport BlacklistController from '../controllers/BlacklistController';\nimport DVBSelector from '../rules/baseUrlResolution/DVBSelector';\nimport BasicSelector from '../rules/baseUrlResolution/BasicSelector';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 1;\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n\nfunction BaseURLSelector() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const dashManifestModel = DashManifestModel(context).getInstance();\n\n    let instance,\n        serviceLocationBlacklistController,\n        basicSelector,\n        dvbSelector,\n        selector;\n\n    function setup() {\n        serviceLocationBlacklistController = BlacklistController(context).create({\n            updateEventName:        Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            loadFailedEventName:    Events.FRAGMENT_LOADING_COMPLETED\n        });\n\n        basicSelector = BasicSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        dvbSelector = DVBSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        selector = basicSelector;\n    }\n\n    function setConfig(config) {\n        if (config.selector) {\n            selector = config.selector;\n        }\n    }\n\n    function chooseSelectorFromManifest(manifest) {\n        if (dashManifestModel.getIsDVB(manifest)) {\n            selector = dvbSelector;\n        } else {\n            selector = basicSelector;\n        }\n    }\n\n    function select(data) {\n        const baseUrls = data.baseUrls;\n        const selectedIdx = data.selectedIdx;\n\n        // Once a random selection has been carried out amongst a group of BaseURLs with the same\n        // @priority attribute value, then that choice should be re-used if the selection needs to be made again\n        // unless the blacklist has been modified or the available BaseURLs have changed.\n        if (!isNaN(selectedIdx)) {\n            return baseUrls[selectedIdx];\n        }\n\n        let selectedBaseUrl = selector.select(baseUrls);\n\n        if (!selectedBaseUrl) {\n            eventBus.trigger(\n                Events.URL_RESOLUTION_FAILED,\n                {\n                    error: new Error(\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE\n                    )\n                }\n            );\n\n            return;\n        }\n\n        data.selectedIdx = baseUrls.indexOf(selectedBaseUrl);\n\n        return selectedBaseUrl;\n    }\n\n    function reset() {\n        serviceLocationBlacklistController.reset();\n    }\n\n    instance = {\n        chooseSelectorFromManifest: chooseSelectorFromManifest,\n        select: select,\n        reset: reset,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLSelector.__dashjs_factory_name = 'BaseURLSelector';\nlet factory = FactoryMaker.getClassFactory(BaseURLSelector);\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE;\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE;\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoFile from './IsoFile';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\n\nfunction BoxParser(/*config*/) {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * @param {ArrayBuffer} data\n     * @returns {IsoFile|null}\n     * @memberof BoxParser#\n     */\n    function parse(data) {\n        if (!data) return null;\n\n        if (data.fileStart === undefined) {\n            data.fileStart = 0;\n        }\n\n        var parsedFile = ISOBoxer.parseBuffer(data);\n        var dashIsoFile = IsoFile(context).create();\n\n        dashIsoFile.setData(parsedFile);\n\n        return dashIsoFile;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    return instance;\n}\nBoxParser.__dashjs_factory_name = 'BoxParser';\nexport default FactoryMaker.getSingletonFactory(BoxParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    function supportsMediaSource() {\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        return (hasWebKit || hasMediaSource);\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    function supportsCodec(element, codec) {\n        var canPlay = element.canPlayType(codec);\n        return (canPlay === 'probably' || canPlay === 'maybe');\n    }\n\n    instance = {\n        supportsMediaSource: supportsMediaSource,\n        supportsEncryptedMedia: supportsEncryptedMedia,\n        supportsCodec: supportsCodec,\n        setEncryptedMediaSupported: setEncryptedMediaSupported\n    };\n\n    setup();\n\n    return instance;\n}\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);","/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        var i = 0;\n\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\n\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i,i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (var i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i,1);\n                i--;\n\n            }else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\n                this.customTimeRangeArray[i].end = start;\n                break;\n            }else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            }else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        var range1 = this.customTimeRangeArray[rangeIndex1];\n        var range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1,1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        }\n        return false;\n    }\n\n    function start(index) {\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport MediaPlayerModel from '../models/MediaPlayerModel';\nimport Debug from '../../core/Debug';\n\nconst legacyKeysAndReplacements = [\n    { oldKey: 'dashjs_vbitrate',  newKey: 'dashjs_video_bitrate' },\n    { oldKey: 'dashjs_abitrate',  newKey: 'dashjs_audio_bitrate' },\n    { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },\n    { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' }\n];\n\nconst LOCAL_STORAGE_BITRATE_KEY_TEMPLATE = 'dashjs_?_bitrate';\nconst LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE = 'dashjs_?_settings';\n\nconst STORAGE_TYPE_LOCAL = 'localStorage';\nconst STORAGE_TYPE_SESSION = 'sessionStorage';\n\nfunction DOMStorage() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n\n    let instance,\n        supported,\n        mediaPlayerModel;\n\n    //type can be local, session\n    function isSupported(type) {\n        if (supported !== undefined) return supported;\n\n        supported = false;\n\n        var testKey = '1';\n        var testValue = '1';\n        var storage;\n\n        try {\n            if (typeof window !== 'undefined') {\n                storage = window[type];\n            }\n        } catch (error) {\n            log('Warning: DOMStorage access denied: ' + error.message);\n            return supported;\n        }\n\n        if (!storage || (type !== STORAGE_TYPE_LOCAL && type !== STORAGE_TYPE_SESSION)) {\n            return supported;\n        }\n\n        /* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.\n         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an\n\n         Check if the storage can be used\n         */\n        try {\n            storage.setItem(testKey, testValue);\n            storage.removeItem(testKey);\n            supported = true;\n        } catch (error) {\n            log('Warning: DOMStorage is supported, but cannot be used: ' + error.message);\n        }\n\n        return supported;\n    }\n\n    function translateLegacyKeys() {\n        if (isSupported(STORAGE_TYPE_LOCAL)) {\n            legacyKeysAndReplacements.forEach(entry => {\n                const value = localStorage.getItem(entry.oldKey);\n\n                if (value) {\n                    localStorage.removeItem(entry.oldKey);\n\n                    try {\n                        localStorage.setItem(entry.newKey, value);\n                    } catch (e) {\n                        log(e.message);\n                    }\n                }\n            });\n        }\n    }\n\n    function setup() {\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n        translateLegacyKeys();\n    }\n\n    // Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user\n    function getTimestamp() {\n        let ten_minutes_ms = 60 * 1000 * 10;\n        return Math.round(new Date().getTime() / ten_minutes_ms) * ten_minutes_ms;\n    }\n\n    function canStore(storageType, key) {\n        return isSupported(storageType) && mediaPlayerModel['get' + key + 'CachingInfo']().enabled;\n    }\n\n    function getSavedMediaSettings(type) {\n        //Checks local storage to see if there is valid, non-expired media settings\n        if (!canStore(STORAGE_TYPE_LOCAL, 'LastMediaSettings')) return null;\n\n        var key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n        var obj = JSON.parse(localStorage.getItem(key)) || {};\n        var isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastMediaSettingsCachingInfo().ttl || false;\n        var settings = obj.settings;\n\n        if (isExpired) {\n            localStorage.removeItem(key);\n            settings = null;\n        }\n\n        return settings;\n    }\n\n    function getSavedBitrateSettings(type) {\n        let savedBitrate = NaN;\n        //Checks local storage to see if there is valid, non-expired bit rate\n        //hinting from the last play session to use as a starting bit rate.\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastBitrate')) {\n            var key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            var obj = JSON.parse(localStorage.getItem(key)) || {};\n            var isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastBitrateCachingInfo().ttl || false;\n            var bitrate = parseInt(obj.bitrate, 10);\n\n            if (!isNaN(bitrate) && !isExpired) {\n                savedBitrate = bitrate;\n                log('Last saved bitrate for ' + type + ' was ' + bitrate);\n            } else if (isExpired) {\n                localStorage.removeItem(key);\n            }\n        }\n        return savedBitrate;\n    }\n\n    function setSavedMediaSettings(type, value) {\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastMediaSettings')) {\n            let key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({settings: value, timestamp: getTimestamp()}));\n            } catch (e) {\n                log(e.message);\n            }\n        }\n    }\n\n    function setSavedBitrateSettings(type, bitrate) {\n        if (canStore(STORAGE_TYPE_LOCAL, 'LastBitrate') && bitrate) {\n            let key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({bitrate: bitrate / 1000, timestamp: getTimestamp()}));\n            } catch (e) {\n                log(e.message);\n            }\n        }\n    }\n\n    instance = {\n        getSavedBitrateSettings: getSavedBitrateSettings,\n        setSavedBitrateSettings: setSavedBitrateSettings,\n        getSavedMediaSettings: getSavedMediaSettings,\n        setSavedMediaSettings: setSavedMediaSettings,\n        isSupported: isSupported\n    };\n\n    setup();\n    return instance;\n}\n\nDOMStorage.__dashjs_factory_name = 'DOMStorage';\nlet factory = FactoryMaker.getSingletonFactory(DOMStorage);\nexport default factory;\n","import FactoryMaker from '../../core/FactoryMaker';\nimport Error from '../vo/Error';\n\n/**\n * Creates an instance of an EBMLParser class which implements a large subset\n * of the functionality required to parse Matroska EBML\n *\n * @param {Object} config object with data member which is the buffer to parse\n */\nfunction EBMLParser(config) {\n\n    let instance;\n\n    let data = new DataView(config.data);\n    let pos = 0;\n\n    function getPos() {\n        return pos;\n    }\n\n    function setPos(value) {\n        pos = value;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformed.\n     * @memberof EBMLParser\n     */\n    function consumeTag(tag, test) {\n        let found = true;\n        let bytesConsumed = 0;\n        let p1;\n        let p2;\n\n        if (test === undefined) {\n            test = false;\n        }\n\n        if (tag.tag > 0xFFFFFF) {\n            if (data.getUint32(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 4;\n        } else if (tag.tag > 0xFFFF) {\n            // 3 bytes\n            p1 = data.getUint16(pos);\n            p2 = data.getUint8(pos + 2);\n\n            // shift p1 over a byte and add p2\n            if (p1 * 256 + p2 !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 3;\n        } else if (tag.tag > 0xFF) {\n            if (data.getUint16(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 2;\n        } else {\n            if (data.getUint8(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 1;\n        }\n\n        if (!found && tag.required && !test) {\n            throw new Error('required tag not found');\n        }\n\n        if (found) {\n            pos += bytesConsumed;\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformedata.\n     * @memberof EBMLParser\n     */\n    function consumeTagAndSize(tag, test) {\n        let found = consumeTag(tag, test);\n\n        if (found) {\n            getMatroskaCodedNum();\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to parse a binary\n     * field, using a parser defined in the tag itself\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag,\n     * {boolean} required flag, and a parse function which takes a size parameter\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found,\n     * or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function parseTag(tag) {\n        let size;\n\n        consumeTag(tag);\n        size = getMatroskaCodedNum();\n        return instance[tag.parse](size);\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to skip over the\n     * entire section of EBML encapsulated by the tag.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag, and\n     * {boolean} required flag\n     * @param {boolean} test a flag to indicate if an exception should be thrown\n     * if a required tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test is\n     * false or undefined or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function skipOverElement(tag, test) {\n        let found = consumeTag(tag, test);\n        let headerSize;\n\n        if (found) {\n            headerSize = getMatroskaCodedNum();\n            pos += headerSize;\n        }\n\n        return found;\n    }\n\n    /**\n     * Returns and consumes a number encoded according to the Matroska EBML\n     * specification from the bitstream.\n     *\n     * @param {boolean} retainMSB whether or not to retain the Most Significant Bit (the\n     * first 1). this is usually true when reading Tag IDs.\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaCodedNum(retainMSB) {\n        let bytesUsed = 1;\n        let mask = 0x80;\n        let maxBytes = 8;\n        let extraBytes = -1;\n        let num = 0;\n        let ch = data.getUint8(pos);\n        let i;\n\n        for (i = 0; i < maxBytes; i += 1) {\n            if ((ch & mask) === mask) {\n                num = (retainMSB === undefined) ? ch & ~mask : ch;\n                extraBytes = i;\n                break;\n            }\n            mask >>= 1;\n        }\n\n        for (i = 0; i < extraBytes; i += 1, bytesUsed += 1) {\n            num = (num << 8) | (0xff & data.getUint8(pos + bytesUsed));\n        }\n\n        pos += bytesUsed;\n\n        return num;\n    }\n\n    /**\n     * Returns and consumes a float from the bitstream.\n     *\n     * @param {number} size 4 or 8 byte floats are supported\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaFloat(size) {\n        let outFloat;\n\n        switch (size) {\n        case 4:\n            outFloat = data.getFloat32(pos);\n            pos += 4;\n            break;\n        case 8:\n            outFloat = data.getFloat64(pos);\n            pos += 8;\n            break;\n        }\n        return outFloat;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaUint(size) {\n        let val = 0;\n        let i;\n\n        for (i = 0; i < size; i += 1) {\n            val <<= 8;\n            val |= data.getUint8(pos + i) & 0xff;\n        }\n\n        pos += size;\n        return val;\n    }\n\n    /**\n     * Tests whether there is more data in the bitstream for parsing\n     *\n     * @return {boolean} whether there is more data to parse\n     * @memberof EBMLParser\n     */\n    function moreData() {\n        return pos < data.byteLength;\n    }\n\n    instance = {\n        getPos: getPos,\n        setPos: setPos,\n        consumeTag: consumeTag,\n        consumeTagAndSize: consumeTagAndSize,\n        parseTag: parseTag,\n        skipOverElement: skipOverElement,\n        getMatroskaCodedNum: getMatroskaCodedNum,\n        getMatroskaFloat: getMatroskaFloat,\n        getMatroskaUint: getMatroskaUint,\n        moreData: moreData\n    };\n\n    return instance;\n}\n\nEBMLParser.__dashjs_factory_name = 'EBMLParser';\nexport default FactoryMaker.getClassFactory(EBMLParser);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const type = chunk.mediaInfo.type;\n        const quality = chunk.quality;\n\n        data[id] = data[id] || {};\n        data[id][type] = data[id][type] || {};\n        data[id][type][quality] = chunk;\n    }\n\n    function extract (streamId, mediaType, quality) {\n        return data[streamId][mediaType][quality];\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile,\n        commonProps,\n        sidxProps,\n        sidxRefProps,\n        emsgProps,\n        mdhdProps,\n        mfhdProps,\n        subsProps,\n        tfhdProps,\n        tfdtProps,\n        trunProps,\n        trunSampleProps;\n\n    /**\n    * @param {string} type\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0)) return null;\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n    * @param {string} type\n    * @returns {Array} array of {@link IsoBox}\n    * @memberof IsoFile#\n    */\n    function getBoxes(type) {\n        var boxData = parsedIsoFile.fetchAll(type);\n        var boxes = [];\n        var box;\n\n        for (var i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n    * @param {string} value\n    * @memberof IsoFile#\n    */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\n\n        var type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        var boxes = getBoxes(type);\n\n        return boxes[boxes.length - 1];\n    }\n\n    /**\n    * @returns {number}\n    * @memberof IsoFile#\n    */\n    function getOffset() {\n        return parsedIsoFile._cursor.offset;\n    }\n\n    function setup() {\n        commonProps = {\n            offset: '_offset',\n            size: 'size',\n            type: 'type'\n        };\n\n        sidxProps = {\n            references: 'references',\n            timescale: 'timescale',\n            earliest_presentation_time: 'earliest_presentation_time',\n            first_offset: 'first_offset'\n        };\n\n        sidxRefProps = {\n            reference_type: 'reference_type',\n            referenced_size: 'referenced_size',\n            subsegment_duration: 'subsegment_duration'\n        };\n\n        emsgProps = {\n            id: 'id',\n            value: 'value',\n            timescale: 'timescale',\n            scheme_id_uri: 'scheme_id_uri',\n            presentation_time_delta: 'presentation_time_delta',\n            event_duration: 'event_duration',\n            message_data: 'message_data'\n        };\n\n        mdhdProps = {\n            timescale: 'timescale'\n        };\n\n        mfhdProps = {\n            sequence_number: 'sequence_number'\n        };\n\n        subsProps = {\n            samples_with_subsamples: 'samples_with_subsamples'\n        };\n\n        tfhdProps = {\n            base_data_offset: 'base_data_offset',\n            sample_description_index: 'sample_description_index',\n            default_sample_duration: 'default_sample_duration',\n            default_sample_size: 'default_sample_size',\n            default_sample_flags: 'default_sample_flags',\n            flags: 'flags'\n        };\n\n        tfdtProps = {\n            version: 'version',\n            baseMediaDecodeTime: 'baseMediaDecodeTime',\n            flags: 'flags'\n        };\n\n        trunProps = {\n            sample_count: 'sample_count',\n            first_sample_flags: 'first_sample_flags',\n            data_offset: 'data_offset',\n            flags: 'flags',\n            samples: 'samples'\n        };\n\n        trunSampleProps = {\n            sample_size: 'sample_size',\n            sample_duration: 'sample_duration',\n            sample_composition_time_offset: 'sample_composition_time_offset'\n        };\n    }\n\n    function copyProps(from, to, props) {\n        for (var prop in props) {\n            to[prop] = from[props[prop]];\n        }\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) return null;\n\n        var box = new IsoBox();\n        var i,\n            ln;\n\n        copyProps(boxData, box, commonProps);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        switch (box.type) {\n            case 'sidx':\n                copyProps(boxData, box, sidxProps);\n                if (box.references) {\n                    for (i = 0, ln = box.references.length; i < ln; i++) {\n                        copyProps(boxData.references[i], box.references[i], sidxRefProps);\n                    }\n                }\n                break;\n            case 'emsg':\n                copyProps(boxData, box, emsgProps);\n                break;\n            case 'mdhd':\n                copyProps(boxData, box, mdhdProps);\n                break;\n            case 'mfhd':\n                copyProps(boxData, box, mfhdProps);\n                break;\n            case 'subs':\n                copyProps(boxData, box, subsProps);\n                break;\n            case 'tfhd':\n                copyProps(boxData, box, tfhdProps);\n                break;\n            case 'tfdt':\n                copyProps(boxData, box, tfdtProps);\n                break;\n            case 'trun':\n                copyProps(boxData, box, trunProps);\n                if (box.samples) {\n                    for (i = 0, ln = box.samples.length; i < ln; i++) {\n                        copyProps(boxData.samples[i], box.samples[i], trunSampleProps);\n                    }\n                }\n                break;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox,\n        getOffset: getOffset\n    };\n\n    setup();\n\n    return instance;\n}\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n *\n * @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}\n * @constructor\n */\nfunction LiveEdgeFinder() {\n\n    let instance,\n        timelineConverter,\n        streamProcessor;\n\n    function initialize(TimelineConverter, StreamProcessor) {\n        timelineConverter = TimelineConverter;\n        streamProcessor = StreamProcessor;\n    }\n\n    function getLiveEdge() {\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        const liveEdge = representationInfo.useCalculatedLiveEdgeTime ? timelineConverter.getExpectedLiveEdge() : representationInfo.DVRWindow.end;\n        return liveEdge;\n    }\n\n    function reset() {\n        timelineConverter = null;\n        streamProcessor = null;\n    }\n\n    instance = {\n        initialize: initialize,\n        getLiveEdge: getLiveEdge,\n        reset: reset\n    };\n\n    return instance;\n}\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\nlet factory = FactoryMaker.getSingletonFactory(LiveEdgeFinder);\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module ObjectUtils\n * @description Provides utility functions for objects\n */\nfunction ObjectUtils() {\n\n    let instance;\n\n    /**\n     * Returns true if objects resolve to the same string. Only really useful\n     * when the user controls the object generation\n     * @return {boolean}\n     * @param {object} obj1\n     * @param {object} obj2\n     * @memberof module:ObjectUtils\n     * @instance\n     */\n    function areSimpleEquivalent(obj1, obj2) {\n        return JSON.stringify(obj1) === JSON.stringify(obj2);\n    }\n\n    instance = {\n        areSimpleEquivalent: areSimpleEquivalent\n    };\n\n    return instance;\n}\n\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RequestModifier() {\n\n    let instance;\n\n    function modifyRequestURL(url) {\n        return url;\n    }\n\n    function modifyRequestHeader(request) {\n        return request;\n    }\n\n    instance = {\n        modifyRequestURL: modifyRequestURL,\n        modifyRequestHeader: modifyRequestHeader\n    };\n\n    return instance;\n}\n\nRequestModifier.__dashjs_factory_name = 'RequestModifier';\nexport default FactoryMaker.getSingletonFactory(RequestModifier);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport Debug from '../../core/Debug';\n\nconst SECONDS_IN_HOUR = 60 * 60; // Expression of an hour in seconds\nconst SECONDS_IN_MIN = 60; // Expression of a minute in seconds\n\nfunction TTMLParser() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n\n    /*\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n     * */\n    let instance,\n        timingRegex,\n        ttml, // contains the whole ttml document received\n        ttmlStyling, // contains the styling information from the document (from head following EBU-TT-D)\n        ttmlLayout, // contains the positioning information from the document (from head following EBU-TT-D)\n        fontSize,\n        lineHeight,\n        linePadding,\n        defaultLayoutProperties,\n        defaultStyleProperties,\n        fontFamilies,\n        textAlign,\n        multiRowAlign,\n        wrapOption,\n        unicodeBidi,\n        displayAlign,\n        writingMode,\n        videoModel,\n        converter;\n\n    let cueCounter = 0; // Used to give every cue a unique ID.\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    /**\n     * Get the begin-end interval if present, or null otherwise.\n     *\n     * @param {Object} element - TTML element which may have begin and end attributes\n     */\n    function getInterval(element) {\n        if (element.hasOwnProperty('begin') && element.hasOwnProperty('end')) {\n            let beginTime = parseTimings(element.begin);\n            let endTime = parseTimings(element.end);\n            return [beginTime, endTime];\n        } else {\n            return null;\n        }\n    }\n\n    function getCueID() {\n        let id = 'cue_TTML_' + cueCounter;\n        cueCounter++;\n        return id;\n    }\n\n    /*\n    * Create list of intervals where spans start and end. Empty list if no times.\n    * Clip to interval using startInterval and endInterval and add these two times.\n    * Also support case when startInterval/endInteval not given (sideloaded file)\n    *\n    * @param {Array} spans - array of span elements\n    */\n    function createSpanIntervalList(spans, startInterval, endInterval) {\n\n        let spanChangeTimes = [];\n        let spanChangeTimeStrings = [];\n        let cue_intervals = [];\n\n        function addSpanTime(span, name) {\n            if (span.hasOwnProperty(name)) {\n                let timeString = span[name];\n                if (spanChangeTimeStrings.indexOf(timeString) < 0) {\n                    spanChangeTimeStrings.push(timeString);\n                }\n            }\n        }\n\n        for (let i = 0; i < spans.length; i++) {\n            let span = spans[i];\n            addSpanTime(span, 'begin');\n            addSpanTime(span, 'end');\n        }\n        if (spanChangeTimeStrings.length === 0) {\n            return cue_intervals; // No span timing so no intervals.\n        }\n\n        if (typeof startInterval !== 'undefined' && typeof endInterval !== 'undefined' ) {\n            for (let i = 0; i < spanChangeTimeStrings.length; i++) {\n                let changeTime = parseTimings(spanChangeTimeStrings[i]);\n                if (startInterval < changeTime && changeTime < endInterval) {\n                    spanChangeTimes.push(changeTime);\n                }\n            }\n            spanChangeTimes.push(startInterval);\n            spanChangeTimes.push(endInterval);\n        } else {\n            for (let i = 0; i < spanChangeTimeStrings.length; i++) {\n                spanChangeTimes.push(parseTimings(spanChangeTimeStrings[i]));\n            }\n        }\n        spanChangeTimes.sort(function (a, b) { return a - b;});\n        for (let i = 0; i < spanChangeTimes.length - 1; i++) {\n            cue_intervals.push([spanChangeTimes[i], spanChangeTimes[i + 1]]);\n        }\n        return cue_intervals;\n    }\n\n\n    function clipStartTime(startTime, intervalStart) {\n        if (typeof startInterval !== 'undefined') {\n            if (startTime < intervalStart) {\n                startTime = intervalStart;\n            }\n        }\n        return startTime;\n    }\n\n\n    function clipEndTime(endTime, intervalEnd) {\n        if (typeof intervalEnd !== 'undefined') {\n            if (endTime > intervalEnd) {\n                endTime = intervalEnd;\n            }\n        }\n        return endTime;\n    }\n\n    /*\n     * Get interval from entity that has begin and end properties.\n     * If intervalStart and intervalEnd defined, use them to clip the interval.\n     * Return null if no overlap with interval\n     */\n    function getClippedInterval(entity, intervalStart, intervalEnd) {\n        let startTime = parseTimings(entity.begin);\n        let endTime = parseTimings(entity.end);\n        startTime = clipStartTime(startTime, intervalStart);\n        endTime = clipEndTime(endTime, intervalEnd);\n        if (typeof intervalStart !== 'undefined' && typeof intervalEnd !== 'undefined') {\n            if (endTime < intervalStart || startTime > intervalEnd) {\n                log('TTML: Cue ' + startTime + '-' + endTime + ' outside interval ' +\n                            intervalStart + '-' + intervalEnd);\n                return null;\n            }\n        }\n        return [startTime, endTime];\n    }\n\n    /*\n     * Check if entity timing has some overlap with interval\n     */\n    function inIntervalOrNoTiming(entity, interval) {\n        let inInterval = true;\n        if (entity.hasOwnProperty('span')) {\n            let entityInterval = getInterval(entity.span);\n            if (entityInterval !== null) { //Timing\n                inInterval = (entityInterval[0] < interval[1] && entityInterval[1] > interval[0]);\n            }\n        }\n        return inInterval;\n    }\n\n    /**\n     * Parse the raw data and process it to return the HTML element representing the cue.\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\n     * @param {string} data - raw data received from the TextSourceBuffer\n     * @param {number} intervalStart\n     * @param {number} intervalEnd\n     * @param {array} imageArray - images represented as binary strings\n     */\n\n    function parse(data, intervalStart, intervalEnd, imageArray) {\n        let tt, // Top element\n            head, // head in tt\n            body, // body in tt\n            ttExtent, // extent attribute of tt element\n            type,\n            i;\n\n        var errorMsg = '';\n\n        // Parse the TTML in a JSON object.\n        ttml = converter.xml_str2json(data);\n\n        if (!ttml) {\n            throw new Error('TTML document could not be parsed');\n        }\n\n        if (videoModel.getTTMLRenderingDiv()) {\n            type = 'html';\n        }\n\n        // Check the document and compare to the specification (TTML and EBU-TT-D).\n        tt = ttml.tt;\n        if (!tt) {\n            throw new Error('TTML document lacks tt element');\n        }\n\n        // Get the namespace if there is one defined in the JSON object.\n        var ttNS = getNamespacePrefix(tt, 'http://www.w3.org/ns/ttml');\n\n        // Remove the namespace before each node if it exists:\n        if (ttNS) {\n            removeNamespacePrefix(tt, ttNS);\n        }\n\n        ttExtent = tt['tts:extent']; // Should check that tts is right namespace.\n\n        head = tt.head;\n        if (!head) {\n            throw new Error('TTML document lacks head element');\n        }\n        if (head.layout) {\n            ttmlLayout = head.layout.region_asArray; //Mandatory in EBU-TT-D\n        }\n        if (head.styling) {\n            ttmlStyling = head.styling.style_asArray; // Mandatory in EBU-TT-D\n        }\n\n        let imageDataUrls = {};\n\n        if (imageArray) {\n            for (i = 0; i < imageArray.length; i++) {\n                let key = 'urn:mpeg:14496-30:subs:' + (i + 1).toString();\n                let dataUrl = 'data:image/png;base64,' + btoa(imageArray[i]);\n                imageDataUrls[key] = dataUrl;\n            }\n        }\n\n        if (head.metadata) {\n            let embeddedImages = head.metadata.image_asArray; // Handle embedded images\n            if (embeddedImages) {\n                for (i = 0; i < embeddedImages.length; i++) {\n                    let key = '#' + embeddedImages[i]['xml:id'];\n                    let imageType = embeddedImages[i].imagetype.toLowerCase();\n                    let dataUrl = 'data:image/' + imageType + ';base64,' + embeddedImages[i].__text;\n                    imageDataUrls[key] = dataUrl;\n                }\n            }\n        }\n\n        body = tt.body;\n        if (!body) {\n            throw new Error('TTML document lacks body element');\n        }\n\n        // Extract the cellResolution information\n        var cellResolution = getCellResolution();\n\n        // Recover the video width and height displayed by the player.\n        var videoWidth = videoModel.getElement().clientWidth;\n        var videoHeight = videoModel.getElement().clientHeight;\n\n        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n        var cellUnit = [videoWidth / cellResolution[0], videoHeight / cellResolution[1]];\n        defaultStyleProperties['font-size'] = cellUnit[1] + 'px;';\n\n        var regions = [];\n        if (ttmlLayout) {\n            for (i = 0; i < ttmlLayout.length; i++) {\n                regions.push(processRegion(JSON.parse(JSON.stringify(ttmlLayout[i])), cellUnit));\n            }\n        }\n\n        // Get the namespace prefix.\n        var nsttp = getNamespacePrefix(ttml.tt, 'http://www.w3.org/ns/ttml#parameter');\n\n        // Set the framerate.\n        if (tt.hasOwnProperty(nsttp + ':frameRate')) {\n            tt.frameRate = parseInt(tt[nsttp + ':frameRate'], 10);\n        }\n        var captionArray = [];\n        // Extract the div\n        var divs = tt.body_asArray[0].__children;\n\n        // Timing is either on div, paragraph or span level.\n\n        for (let k = 0; k < divs.length; k++) {\n            let div = divs[k].div;\n            let divInterval = null; // This is mainly for image subtitles.\n\n            if (null !== (divInterval = getInterval(div))) {\n                // Timing on div level is not allowed by EBU-TT-D.\n                // We only use it for SMPTE-TT image subtitle profile.\n\n                // Layout should be defined by a region. Given early test material, we also support that it is on\n                // div level\n                let layout;\n                if (div.region) {\n                    let region = findRegionFromID(ttmlLayout, div.region);\n                    layout = getRelativePositioning(region, ttExtent);\n                }\n                if (!layout) {\n                    layout = getRelativePositioning(div, ttExtent);\n                }\n\n                let imgKey = div['smpte:backgroundImage'];\n                if (imgKey !== undefined && imageDataUrls[imgKey] !== undefined) {\n                    captionArray.push({\n                        start: divInterval[0],\n                        end: divInterval[1],\n                        id: getCueID(),\n                        data: imageDataUrls[imgKey],\n                        type: 'image',\n                        layout: layout\n                    });\n                }\n                continue; // Next div\n            }\n\n            let paragraphs = div.p_asArray;\n            // Check if cues is not empty or undefined.\n            if (divInterval === null && (!paragraphs || paragraphs.length === 0)) {\n                errorMsg = 'TTML has div that contains no timing and no paragraphs.';\n                log(errorMsg);\n                return captionArray;\n            }\n\n            for (let j2 = 0; j2 < paragraphs.length; j2++) {\n                let paragraph = paragraphs[j2];\n                let spans = paragraph.span_asArray;\n                let cueIntervals = [];\n                // For timing, the overall goal is to find the intervals where there should be cues\n                // The timing may either be on paragraph or span level.\n                if (paragraph.hasOwnProperty('begin') && paragraph.hasOwnProperty('end')) {\n                    // Timing on paragraph level\n                    let clippedInterval = getClippedInterval(paragraph, intervalStart, intervalEnd);\n                    if (clippedInterval !== null) {\n                        cueIntervals.push(clippedInterval);\n                    }\n                } else {\n                    // Timing must be on span level\n                    cueIntervals = createSpanIntervalList(spans, intervalStart, intervalEnd);\n                }\n                if (cueIntervals.length === 0) {\n                    errorMsg = 'TTML: Empty paragraph';\n                    continue; // Nothing in this paragraph\n                }\n\n                let paragraphChildren = paragraph.__children;\n\n                for (let i2 = 0; i2 < cueIntervals.length; i2++) {\n                    let interval = cueIntervals[i2];\n                    let childrenInInterval = [];\n                    for (let k2 = 0; k2 < paragraphChildren.length; k2++) {\n                        let child = paragraphChildren[k2];\n                        if (inIntervalOrNoTiming(child, interval)) {\n                            childrenInInterval.push(child);\n                        }\n                    }\n                    if (childrenInInterval.length === 0) {\n                        continue; // No children to render\n                    }\n\n                    if (type === 'html') {\n                        lineHeight = {};\n                        linePadding = {};\n                        fontSize = {};\n\n                        /**\n                         * Find the region defined for the cue.\n                         */\n                        // properties to be put in the \"captionRegion\" HTML element.\n                        var cueRegionProperties = constructCueRegion(paragraph, div, cellUnit);\n\n                        /**\n                         * Find the style defined for the cue.\n                         */\n                        // properties to be put in the \"paragraph\" HTML element.\n                        var cueStyleProperties = constructCueStyle(paragraph, cellUnit);\n\n                        /**\n                         * /!\\ Create the cue HTML Element containing the whole cue.\n                         */\n                        var styleIDs = cueStyleProperties[1];\n                        cueStyleProperties = cueStyleProperties[0];\n\n                        // Final cue HTML element.\n                        var cueParagraph = document.createElement('div');\n                        cueParagraph.className = styleIDs;\n\n                        // Create a wrapper containing the cue information about unicodeBidi and direction\n                        // as they need to be defined on at this level.\n                        // We append to the wrapper the cue itself.\n                        var cueDirUniWrapper = constructCue(childrenInInterval, cellUnit);\n                        cueDirUniWrapper.className = 'cueDirUniWrapper';\n\n                        // If the style defines these two properties, we place them in cueContainer\n                        // and delete them from the cue style so it is not added afterwards to the final cue.\n                        if (arrayContains('unicode-bidi', cueStyleProperties)) {\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('unicode-bidi', cueStyleProperties);\n                            deletePropertyFromArray('unicode-bidi', cueStyleProperties);\n                        }\n                        if (arrayContains('direction', cueStyleProperties)) {\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('direction', cueStyleProperties);\n                            deletePropertyFromArray('direction', cueStyleProperties);\n                        }\n\n                        // Apply the linePadding property if it is specified in the cue style.\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\n                            cueDirUniWrapper.innerHTML = applyLinePadding(cueDirUniWrapper, cueStyleProperties);\n                        }\n\n                        /**\n                         * Clean and set the style and region for the cue to be returned.\n                         */\n\n                        // Remove the line padding property from being added at the \"paragraph\" element level.\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\n                            deletePropertyFromArray('padding-left', cueStyleProperties);\n                            deletePropertyFromArray('padding-right', cueStyleProperties);\n                        }\n\n                        // Remove the ID of the region from being added at the \"paragraph\" element level.\n                        var regionID = '';\n                        if (arrayContains('regionID', cueRegionProperties)) {\n                            var wholeRegionID = getPropertyFromArray('regionID', cueRegionProperties);\n                            regionID = wholeRegionID.slice(wholeRegionID.indexOf(':') + 1, wholeRegionID.length - 1);\n                        }\n\n                        // We link the p style to the finale cueParagraph element.\n                        if (cueStyleProperties) {\n                            cueParagraph.style.cssText = cueStyleProperties.join(' ') + 'display:flex;';\n                        }\n                        // We define the CSS style for the cue region.\n                        if (cueRegionProperties) {\n                            cueRegionProperties = cueRegionProperties.join(' ');\n                        }\n\n                        // We then place the cue wrapper inside the paragraph element.\n                        cueParagraph.appendChild(cueDirUniWrapper);\n\n                        // Final cue.\n                        var finalCue = document.createElement('div');\n                        finalCue.appendChild(cueParagraph);\n                        finalCue.id = getCueID();\n                        finalCue.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n                        if (Object.keys(fontSize).length === 0) {\n                            fontSize.defaultFontSize = '100';\n                        }\n\n                        // We add all the cue information in captionArray.\n                        captionArray.push({\n                            start: interval[0],\n                            end: interval[1],\n                            type: 'html',\n                            cueHTMLElement: finalCue,\n                            regions: regions,\n                            regionID: regionID,\n                            cueID: finalCue.id,\n                            videoHeight: videoHeight,\n                            videoWidth: videoWidth,\n                            cellResolution: cellResolution,\n                            fontSize: fontSize || {\n                                defaultFontSize: '100'\n                            },\n                            lineHeight: lineHeight,\n                            linePadding: linePadding\n                        });\n\n                    } else {\n                        var text = '';\n                        var textElements = childrenInInterval;\n                        if (textElements.length) {\n                            textElements.forEach(function (el) {\n                                if (el.hasOwnProperty('span')) {\n                                    var spanElements = el.span.__children;\n                                    spanElements.forEach(function (spanEl) {\n                                        // If metadata is present, do not process.\n                                        if (spanElements.hasOwnProperty('metadata')) {\n                                            return;\n                                        }\n                                        // If the element is a string\n                                        if (spanEl.hasOwnProperty('#text')) {\n                                            text += spanEl['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\n                                            // If the element is a 'br' tag\n                                        } else if ('br' in spanEl) {\n                                            // Create a br element.\n                                            text += '\\n';\n                                        }\n                                    });\n                                } else if (el.hasOwnProperty('br')) {\n                                    text += '\\n';\n                                } else {\n                                    text += el['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\n                                }\n                            });\n                        }\n\n                        captionArray.push({\n                            start: interval[0],\n                            end: interval[1],\n                            data: text,\n                            type: 'text'\n                        });\n                    }\n                }\n            }\n        }\n\n        if (errorMsg !== '') {\n            log(errorMsg);\n        }\n\n        if (captionArray.length > 0) {\n            return captionArray;\n        } else { // This seems too strong given that there are segments with no TTML subtitles\n            throw new Error(errorMsg);\n        }\n    }\n\n    function setup() {\n        /*\n         * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n         * */\n        timingRegex = /^([0-9][0-9]+):([0-5][0-9]):([0-5][0-9])|(60)(\\.([0-9])+)?$/; // Regex defining the time\n        fontSize = {};\n        lineHeight = {};\n        linePadding = {};\n        defaultLayoutProperties = {\n            'top': 'auto;',\n            'left': 'auto;',\n            'width': '90%;',\n            'height': '10%;',\n            'align-items': 'flex-start;',\n            'overflow': 'visible;',\n            '-ms-writing-mode': 'lr-tb, horizontal-tb;',\n            '-webkit-writing-mode': 'horizontal-tb;',\n            '-moz-writing-mode': 'horizontal-tb;',\n            'writing-mode': 'horizontal-tb;'\n        };\n        defaultStyleProperties = {\n            'color': 'rgb(255,255,255);',\n            'direction': 'ltr;',\n            'font-family': 'monospace, sans-serif;',\n            'font-style': 'normal;',\n            'line-height': 'normal;',\n            'font-weight': 'normal;',\n            'text-align': 'start;',\n            'justify-content': 'flex-start;',\n            'text-decoration': 'none;',\n            'unicode-bidi': 'normal;',\n            'white-space': 'normal;',\n            'width': '100%;'\n        };\n        fontFamilies = {\n            monospace: 'font-family: monospace;',\n            sansSerif: 'font-family: sans-serif;',\n            serif: 'font-family: serif;',\n            monospaceSansSerif: 'font-family: monospace, sans-serif;',\n            monospaceSerif: 'font-family: monospace, serif;',\n            proportionalSansSerif: 'font-family: Arial;',\n            proportionalSerif: 'font-family: Times New Roman;',\n            'default': 'font-family: monospace, sans-serif;'\n        };\n        textAlign = {\n            right: ['justify-content: flex-end;', 'text-align: right;'],\n            start: ['justify-content: flex-start;', 'text-align: start;'],\n            center: ['justify-content: center;', 'text-align: center;'],\n            end: ['justify-content: flex-end;', 'text-align: end;'],\n            left: ['justify-content: flex-start;', 'text-align: left;']\n        };\n        multiRowAlign = {\n            start: 'text-align: start;',\n            center: 'text-align: center;',\n            end: 'text-align: end;',\n            auto: ''\n        };\n        wrapOption = {\n            wrap: 'white-space: normal;',\n            noWrap: 'white-space: nowrap;'\n        };\n        unicodeBidi = {\n            normal: 'unicode-bidi: normal;',\n            embed: 'unicode-bidi: embed;',\n            bidiOverride: 'unicode-bidi: bidi-override;'\n        };\n        displayAlign = {\n            before: 'align-items: flex-start;',\n            center: 'align-items: center;',\n            after: 'align-items: flex-end;'\n        };\n        writingMode = {\n            lrtb: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;',\n            rltb: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;' +\n                'direction: rtl;' +\n                'unicode-bidi: bidi-override;',\n            tbrl: '-webkit-writing-mode: vertical-rl;' +\n                'writing-mode: vertical-rl;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;',\n            tblr: '-webkit-writing-mode: vertical-lr;' +\n                'writing-mode: vertical-lr;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;',\n            lr: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;',\n            rl: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;' +\n                'direction: rtl;',\n            tb: '-webkit-writing-mode: vertical-rl;' +\n                'writing-mode: vertical-rl;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;'\n        };\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            matchers:           []\n        });\n    }\n\n    function parseTimings(timingStr) {\n        // Test if the time provided by the caption is valid.\n        var test = timingRegex.test(timingStr);\n        var timeParts,\n            parsedTime,\n            frameRate;\n\n        if (!test) {\n            // Return NaN so it will throw an exception at internalParse if the time is incorrect.\n            return NaN;\n        }\n\n        timeParts = timingStr.split(':');\n\n        // Process the timings by decomposing it and converting it in numbers.\n        parsedTime = (parseFloat(timeParts[0]) * SECONDS_IN_HOUR +\n            parseFloat(timeParts[1]) * SECONDS_IN_MIN +\n            parseFloat(timeParts[2]));\n\n        // In case a frameRate is provided, we adjust the parsed time.\n        if (timeParts[3]) {\n            frameRate = ttml.tt.frameRate;\n            if (frameRate && !isNaN(frameRate)) {\n                parsedTime += parseFloat(timeParts[3]) / frameRate;\n            } else {\n                return NaN;\n            }\n        }\n        return parsedTime;\n    }\n\n    function getNamespacePrefix(json, ns) {\n        // Obtain the namespace prefix.\n        var r = Object.keys(json)\n            .filter(function (k) {\n                return (k.split(':')[0] === 'xmlns' || k.split(':')[1] === 'xmlns') && json[k] === ns;\n            }).map(function (k) {\n                return k.split(':')[2] || k.split(':')[1];\n            });\n        if (r.length != 1) {\n            return null;\n        }\n        return r[0];\n    }\n\n    function removeNamespacePrefix(json, nsPrefix) {\n        for (var key in json) {\n            if (json.hasOwnProperty(key)) {\n                if ((typeof json[key] === 'object' || json[key] instanceof Object) && !Array.isArray(json[key])) {\n                    removeNamespacePrefix(json[key], nsPrefix);\n                } else if (Array.isArray(json[key])) {\n                    for (var i = 0; i < json[key].length; i++) {\n                        removeNamespacePrefix(json[key][i], nsPrefix);\n                    }\n                }\n                var fullNsPrefix = nsPrefix + ':';\n                var nsPrefixPos = key.indexOf(fullNsPrefix);\n                if (nsPrefixPos >= 0) {\n                    var newKey = key.slice(nsPrefixPos + fullNsPrefix.length);\n                    json[newKey] = json[key];\n                    delete json[key];\n                }\n            }\n        }\n    }\n\n    // backgroundColor = background-color, convert from camelCase to dash.\n    function camelCaseToDash(key) {\n        return key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    // Convert an RGBA value written in Hex to rgba(v,v,v,a).\n    function convertHexToRGBA(rgba) {\n        // Get the hexadecimal value without the #.\n        var hex = rgba.slice(1);\n        // Separate the values in pairs.\n        var hexMatrice = hex.match(/.{2}/g);\n        // Convert the alpha value in decimal between 0 and 1.\n        var alpha = parseFloat(parseInt((parseInt(hexMatrice[3], 16) / 255) * 1000, 10) / 1000);\n        // Get the standard RGB value.\n        var rgb = hexMatrice.slice(0, 3).map(function (i) {\n            return parseInt(i, 16);\n        });\n        // Return the RGBA value for CSS.\n        return 'rgba(' + rgb.join(',') + ',' + alpha + ');';\n    }\n\n    // Convert an RGBA value written in TTML rgba(v,v,v,a => 0 to 255) to CSS rgba(v,v,v,a => 0 to 1).\n    function convertAlphaValue(rgbaTTML) {\n        let rgba,\n            alpha,\n            resu;\n\n        rgba = rgbaTTML.replace(/^(rgb|rgba)\\(/,'').replace(/\\)$/,'').replace(/\\s/g,'').split(',');\n        alpha = parseInt(rgba[rgba.length - 1], 10) / 255;\n        resu = 'rgba(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ',' + alpha + ');';\n\n        return resu;\n    }\n\n    // Return whether or not an array contains a certain text\n    function arrayContains(text, array) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i].indexOf(text) > -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Return the whole value that contains \"text\"\n    function getPropertyFromArray(text, array) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i].indexOf(text) > -1) {\n                return array[i];\n            }\n        }\n        return null;\n    }\n\n    // Delete a a property from an array.\n    function deletePropertyFromArray(property, array) {\n        array.splice(array.indexOf(getPropertyFromArray(property, array)), 1);\n    }\n\n    function mergeArrays(primeArray, arrayToAdd) {\n        for (var i = 0; i < primeArray.length; i++) {\n            for (var j = 0; j < arrayToAdd.length; j++) {\n                // Take only the name of the property\n                if (primeArray[i]) {\n                    if (primeArray[i].split(':')[0].indexOf(arrayToAdd[j].split(':')[0]) > -1) {\n                        primeArray.splice(i, 1);\n                    }\n                }\n            }\n        }\n        return primeArray.concat(arrayToAdd);\n    }\n\n    function getSizeTypeAndDefinition(cueStyleElement) {\n        let returnTab = new Array(2);\n        let startRef = cueStyleElement.indexOf(':') === -1 ? 0 : cueStyleElement.indexOf(':');\n        let endRef;\n        if (cueStyleElement.indexOf('%') === -1) {\n            if (cueStyleElement.indexOf('c') === -1) {\n                if (cueStyleElement.indexOf('p') === -1) {\n                    returnTab[0] = returnTab[1] = null;\n                } else {\n                    returnTab[0] = 'p';\n                    endRef = cueStyleElement.indexOf('p');\n                }\n            } else {\n                returnTab[0] = 'c';\n                endRef = cueStyleElement.indexOf('c');\n            }\n        } else {\n            returnTab[0] = '%';\n            endRef = cueStyleElement.indexOf('%');\n        }\n        returnTab [1] = cueStyleElement.slice(startRef, endRef);\n        return returnTab;\n    }\n\n    /**\n     * Processing of styling information:\n     * - processStyle: return an array of strings with the cue style under a CSS style form.\n     * - findStyleFromID: Return the unprocessed style from TTMLStyling corresponding to the ID researched.\n     * - getProcessedStyle: Return the processed style(s) from the ID(s) received in entry.\n     * **/\n\n\n    // Compute the style properties to return an array with the cleaned properties.\n    function processStyle(cueStyle, cellUnit, includeRegionStyles) {\n        var properties = [];\n        var valueFtSizeInPx,\n            valueLHSizeInPx;\n\n        // Clean up from the xml2json parsing:\n        for (var key in cueStyle) {\n            if (cueStyle.hasOwnProperty(key)) {\n                //Clean the properties from the parsing.\n                var newKey = key.replace('ebutts:', '');\n                newKey = newKey.replace('xml:', '');\n                newKey = newKey.replace('tts:', '');\n\n                // Clean the properties' names.\n                newKey = camelCaseToDash(newKey);\n                cueStyle[newKey] = cueStyle[key];\n                delete cueStyle[key];\n            }\n        }\n\n        // Line padding is computed from the cellResolution.\n        if ('line-padding' in cueStyle) {\n            var valuePadding = parseFloat(cueStyle['line-padding'].slice(cueStyle['line-padding'].indexOf(':') + 1,\n                cueStyle['line-padding'].indexOf('c')));\n            if ('id' in cueStyle) {\n                linePadding[cueStyle.id] = valuePadding;\n            }\n            var valuePaddingInPx = valuePadding * cellUnit[0] + 'px;';\n            properties.push('padding-left:' + valuePaddingInPx);\n            properties.push('padding-right:' + valuePaddingInPx);\n        }\n        // Font size is computed from the cellResolution.\n        if ('font-size' in cueStyle) {\n            var fontSizeTab = getSizeTypeAndDefinition(cueStyle['font-size']);\n            var valueFtSize = parseFloat(fontSizeTab[1]);\n            if ('id' in cueStyle) {\n                fontSize[cueStyle.id] = fontSizeTab;\n            }\n\n            if (fontSizeTab[0] === '%') {\n                valueFtSizeInPx = valueFtSize / 100 * cellUnit[1] + 'px;';\n            } else if (fontSizeTab[0] === 'c') {\n                valueFtSizeInPx = valueFtSize * cellUnit[1] + 'px;';\n            }\n\n            properties.push('font-size:' + valueFtSizeInPx);\n        }\n        // Line height is computed from the cellResolution.\n        if ('line-height' in cueStyle) {\n            if (cueStyle['line-height'] === 'normal') {\n                properties.push('line-height: normal;');\n            } else {\n                var LineHeightTab = getSizeTypeAndDefinition(cueStyle['line-height']);\n                var valueLHSize = parseFloat(LineHeightTab[1]);\n                if ('id' in cueStyle) {\n                    lineHeight[cueStyle.id] = LineHeightTab;\n                }\n\n                if (LineHeightTab[0] === '%') {\n                    valueLHSizeInPx = valueLHSize / 100 * cellUnit[1] + 'px;';\n                } else if (LineHeightTab[0] === 'c') {\n                    valueLHSizeInPx = valueLHSize * cellUnit[1] + 'px;';\n                }\n\n                properties.push('line-height:' + valueLHSizeInPx);\n            }\n        }\n        // Font-family can be specified by a generic family name or a custom family name.\n        if ('font-family' in cueStyle) {\n            if (cueStyle['font-family'] in fontFamilies) {\n                properties.push(fontFamilies[cueStyle['font-family']]);\n            } else {\n                properties.push('font-family:' + cueStyle['font-family'] + ';');\n            }\n        }\n        // Text align needs to be set from two properties:\n        // The standard text-align CSS property.\n        // The justify-content property as we use flex boxes.\n        if ('text-align' in cueStyle) {\n            if (cueStyle['text-align'] in textAlign) {\n                properties.push(textAlign[cueStyle['text-align']][0]);\n                properties.push(textAlign[cueStyle['text-align']][1]);\n            }\n        }\n        // Multi Row align is set only by the text-align property.\n        // TODO: TO CHECK\n        if ('multi-row-align' in cueStyle) {\n            if (arrayContains('text-align', properties) && cueStyle['multi-row-align'] != 'auto') {\n                deletePropertyFromArray('text-align', properties);\n            }\n            if (cueStyle['multi-row-align'] in multiRowAlign) {\n                properties.push(multiRowAlign[cueStyle['multi-row-align']]);\n            }\n        }\n        // Background color can be specified from hexadecimal (RGB or RGBA) value.\n        var rgbaValue;\n        if ('background-color' in cueStyle) {\n            if (cueStyle['background-color'].indexOf('#') > -1 && (cueStyle['background-color'].length - 1) === 8) {\n                rgbaValue = convertHexToRGBA(cueStyle['background-color']);\n            } else if (cueStyle['background-color'].indexOf('rgba') > -1) {\n                rgbaValue = convertAlphaValue(cueStyle['background-color']);\n            }  else {\n                rgbaValue = cueStyle['background-color'] + ';';\n            }\n            properties.push('background-color: ' + rgbaValue);\n        }\n        // Color can be specified from hexadecimal (RGB or RGBA) value.\n        if ('color' in cueStyle) {\n            if (cueStyle.color.indexOf('#') > -1 && (cueStyle.color.length - 1) === 8) {\n                rgbaValue = convertHexToRGBA(cueStyle.color);\n            } else if (cueStyle.color.indexOf('rgba') > -1) {\n                rgbaValue = convertAlphaValue(cueStyle.color);\n            }  else {\n                rgbaValue = cueStyle.color + ';';\n            }\n            properties.push('color: ' + rgbaValue);\n        }\n        // Wrap option is determined by the white-space CSS property.\n        if ('wrap-option' in cueStyle) {\n            if (cueStyle['wrap-option'] in wrapOption) {\n                properties.push(wrapOption[cueStyle['wrap-option']]);\n            } else {\n                properties.push('white-space:' + cueStyle['wrap-option']);\n            }\n        }\n        // Unicode bidi is determined by the unicode-bidi CSS property.\n        if ('unicode-bidi' in cueStyle) {\n            if (cueStyle['unicode-bidi'] in unicodeBidi) {\n                properties.push(unicodeBidi[cueStyle['unicode-bidi']]);\n            } else {\n                properties.push('unicode-bidi:' + cueStyle['unicode-bidi']);\n            }\n        }\n\n        // Standard properties identical to CSS.\n\n        if ('font-style' in cueStyle) {\n            properties.push('font-style:' + cueStyle['font-style'] + ';');\n        }\n        if ('font-weight' in cueStyle) {\n            properties.push('font-weight:' + cueStyle['font-weight'] + ';');\n        }\n        if ('direction' in cueStyle) {\n            properties.push('direction:' + cueStyle.direction + ';');\n        }\n        if ('text-decoration' in cueStyle) {\n            properties.push('text-decoration:' + cueStyle['text-decoration'] + ';');\n        }\n\n        if (includeRegionStyles) {\n            properties = properties.concat(processRegion(cueStyle, cellUnit));\n        }\n\n        // Handle white-space preserve\n        if (ttml.tt.hasOwnProperty('xml:space')) {\n            if (ttml.tt['xml:space'] === 'preserve') {\n                properties.push('white-space: pre;');\n            }\n        }\n\n        return properties;\n    }\n\n    // Find the style set by comparing the style IDs available.\n    // Return null if no style is found\n    function findStyleFromID(ttmlStyling, cueStyleID) {\n        // For every styles available, search the corresponding style in ttmlStyling.\n        for (var j = 0; j < ttmlStyling.length; j++) {\n            var currStyle = ttmlStyling[j];\n            if (currStyle['xml:id'] === cueStyleID || currStyle.id === cueStyleID) {\n                // Return the style corresponding to the ID in parameter.\n                return currStyle;\n            }\n        }\n        return null;\n    }\n    // Return the computed style from a certain ID.\n    function getProcessedStyle(reference, cellUnit, includeRegionStyles) {\n        var styles = [];\n        var ids = reference.match(/\\S+/g);\n        ids.forEach(function (id) {\n            // Find the style for each id received.\n            var cueStyle = findStyleFromID(ttmlStyling, id);\n            if (cueStyle) {\n                // Process the style for the cue in CSS form.\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\n                var stylesFromId = processStyle(JSON.parse(JSON.stringify(cueStyle)), cellUnit, includeRegionStyles);\n                styles = styles.concat(stylesFromId);\n            }\n        });\n        return styles;\n    }\n\n    // Calculate relative left, top, width, height from extent and origin in percent.\n    // Return object with {left, top, width, height} as numbers in percent or null.\n    function getRelativePositioning(element, ttExtent) {\n\n        let pairRe = /([\\d\\.]+)(%|px)\\s+([\\d\\.]+)(%|px)/;\n\n        if (('tts:extent' in element) && ('tts:origin' in element) ) {\n            let extentParts = pairRe.exec(element['tts:extent']);\n            let originParts = pairRe.exec(element['tts:origin']);\n            if (extentParts === null || originParts === null) {\n                log('Bad extent or origin: ' + element['tts:extent'] + ' ' + element['tts:origin']);\n                return null;\n            }\n            let width = parseFloat(extentParts[1]);\n            let height = parseFloat(extentParts[3]);\n            let left = parseFloat(originParts[1]);\n            let top = parseFloat(originParts[3]);\n\n            if (ttExtent) { // Should give overall scale in pixels\n                let ttExtentParts = pairRe.exec(ttExtent);\n                if (ttExtentParts === null || ttExtentParts[2] !== 'px' || ttExtentParts[4] !== 'px') {\n                    log('Bad tt.extent: ' + ttExtent);\n                    return null;\n                }\n                let exWidth = parseFloat(ttExtentParts[1]);\n                let exHeight = parseFloat(ttExtentParts[3]);\n                if (extentParts[2] === 'px') {\n                    width = width / exWidth * 100;\n                }\n                if (extentParts[4] === 'px') {\n                    height = height / exHeight * 100;\n                }\n                if (originParts[2] === 'px') {\n                    left = left / exWidth * 100;\n                }\n                if (originParts[4] === 'px') {\n                    top = top / exHeight * 100;\n                }\n            }\n            return { 'left': left, 'top': top, 'width': width, 'height': height };\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Processing of layout information:\n     * - processRegion: return an array of strings with the cue region under a CSS style form.\n     * - findRegionFromID: Return the unprocessed region from TTMLLayout corresponding to the ID researched.\n     * - getProcessedRegion: Return the processed region(s) from the ID(s) received in entry.\n     ***/\n\n    // Compute the region properties to return an array with the cleaned properties.\n    function processRegion(cueRegion, cellUnit) {\n        var properties = [];\n\n        // Clean up from the xml2json parsing:\n        for (var key in cueRegion) {\n            //Clean the properties from the parsing.\n            var newKey = key.replace('tts:', '');\n            newKey = newKey.replace('xml:', '');\n\n            // Clean the properties' names.\n            newKey = camelCaseToDash(newKey);\n            cueRegion[newKey] = cueRegion[key];\n            if (newKey !== key) {\n                delete cueRegion[key];\n            }\n        }\n        // Extent property corresponds to width and height\n        if ('extent' in cueRegion) {\n            var coordsExtent = cueRegion.extent.split(/\\s/);\n            properties.push('width: ' + coordsExtent[0] + ';');\n            properties.push('height: ' + coordsExtent[1] + ';');\n        }\n        // Origin property corresponds to top and left\n        if ('origin' in cueRegion) {\n            var coordsOrigin = cueRegion.origin.split(/\\s/);\n            properties.push('left: ' + coordsOrigin[0] + ';');\n            properties.push('top: ' + coordsOrigin[1] + ';');\n        }\n        // DisplayAlign property corresponds to vertical-align\n        if ('display-align' in cueRegion) {\n            properties.push(displayAlign[cueRegion['display-align']]);\n        }\n        // WritingMode is not yet implemented (for CSS3, to come)\n        if ('writing-mode' in cueRegion) {\n            properties.push(writingMode[cueRegion['writing-mode']]);\n        }\n        // Style will give to the region the style properties from the style selected\n        if ('style' in cueRegion) {\n            var styleFromID = getProcessedStyle(cueRegion.style, cellUnit, true);\n            properties = properties.concat(styleFromID);\n        }\n\n        // Standard properties identical to CSS.\n\n        if ('padding' in cueRegion) {\n            properties.push('padding:' + cueRegion.padding + ';');\n        }\n        if ('overflow' in cueRegion) {\n            properties.push('overflow:' + cueRegion.overflow + ';');\n        }\n        if ('show-background' in cueRegion) {\n            properties.push('show-background:' + cueRegion['show-background'] + ';');\n        }\n        if ('id' in cueRegion) {\n            properties.push('regionID:' + cueRegion.id + ';');\n        }\n\n        return properties;\n    }\n\n    // Find the region set by comparing the region IDs available.\n    // Return null if no region is found\n    function findRegionFromID(ttmlLayout, cueRegionID) {\n        // For every region available, search the corresponding style in ttmlLayout.\n        for (var j = 0; j < ttmlLayout.length; j++) {\n            var currReg = ttmlLayout[j];\n            if (currReg['xml:id'] === cueRegionID || currReg.id === cueRegionID) {\n                // Return the region corresponding to the ID in parameter.\n                return currReg;\n            }\n        }\n        return null;\n    }\n\n    // Return the computed region from a certain ID.\n    function getProcessedRegion(reference, cellUnit) {\n        var regions = [];\n        var ids = reference.match(/\\S+/g);\n        ids.forEach(function (id) {\n            // Find the region for each id received.\n            var cueRegion = findRegionFromID(ttmlLayout, id);\n            if (cueRegion) {\n                // Process the region for the cue in CSS form.\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\n                var regionsFromId = processRegion(JSON.parse(JSON.stringify(cueRegion)), cellUnit);\n                regions = regions.concat(regionsFromId);\n            }\n        });\n        return regions;\n    }\n\n    //Return the cellResolution defined by the TTML document.\n    function getCellResolution() {\n        var defaultCellResolution = [32, 15]; // Default cellResolution.\n        if (ttml.tt.hasOwnProperty('ttp:cellResolution')) {\n            return ttml.tt['ttp:cellResolution'].split(' ').map(parseFloat);\n        } else {\n            return defaultCellResolution;\n        }\n    }\n\n    // Return the cue wrapped into a span specifying its linePadding.\n    function applyLinePadding(cueHTML, cueStyle) {\n        // Extract the linePadding property from cueStyleProperties.\n        var linePaddingLeft = getPropertyFromArray('padding-left', cueStyle);\n        var linePaddingRight = getPropertyFromArray('padding-right', cueStyle);\n        var linePadding = linePaddingLeft.concat(' ' + linePaddingRight + ' ');\n\n        // Declaration of the HTML elements to be used in the cue innerHTML construction.\n        var outerHTMLBeforeBr = '';\n        var outerHTMLAfterBr = '';\n        var cueInnerHTML = '';\n\n        // List all the nodes of the subtitle.\n        var nodeList = Array.prototype.slice.call(cueHTML.children);\n        // Take a br element as reference.\n        var brElement = cueHTML.getElementsByClassName('lineBreak')[0];\n        // First index of the first br element.\n        var idx = nodeList.indexOf(brElement);\n        // array of all the br element indices\n        var indices = [];\n        // Find all the indices of the br elements.\n        while (idx != -1) {\n            indices.push(idx);\n            idx = nodeList.indexOf(brElement, idx + 1);\n        }\n\n        // Strings for the cue innerHTML construction.\n        var spanStringEnd = '<\\/span>';\n        var br = '<br>';\n        var clonePropertyString = '<span' + ' class=\"spanPadding\" ' + 'style=\"-webkit-box-decoration-break: clone; box-decoration-break: clone; ';\n\n        // If br elements are found:\n        if (indices.length) {\n            // For each index of a br element we compute the HTML coming before and/or after it.\n            indices.forEach(function (i, index) {\n                // If this is the first line break, we compute the HTML of the element coming before.\n                if (index === 0) {\n                    var styleBefore = '';\n                    // for each element coming before the line break, we add its HTML.\n                    for (var j = 0; j < i; j++) {\n                        outerHTMLBeforeBr += nodeList[j].outerHTML;\n                        // If this is the first element, we add its style to the wrapper.\n                        if (j === 0) {\n                            styleBefore = linePadding.concat(nodeList[j].style.cssText);\n                        }\n                    }\n                    // The before element will comprises the clone property (for line wrapping), the style that\n                    // need to be applied (ex: background-color) and the rest og the HTML.\n                    outerHTMLBeforeBr = clonePropertyString + styleBefore + '\">' + outerHTMLBeforeBr;\n                }\n                // For every element of the list, we compute the element coming after the line break.s\n                var styleAfter = '';\n                // for each element coming after the line break, we add its HTML.\n                for (var k = i + 1; k < nodeList.length; k++) {\n                    outerHTMLAfterBr += nodeList[k].outerHTML;\n                    // If this is the last element, we add its style to the wrapper.\n                    if (k === nodeList.length - 1) {\n                        styleAfter += linePadding.concat(nodeList[k].style.cssText);\n                    }\n                }\n\n                // The before element will comprises the clone property (for line wrapping), the style that\n                // need to be applied (ex: background-color) and the rest og the HTML.\n                outerHTMLAfterBr = clonePropertyString + styleAfter + '\">' + outerHTMLAfterBr;\n\n                // For each line break we must add the before and/or after element to the final cue as well as\n                // the line break when needed.\n                if (outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd;\n                } else if (outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd + br;\n                } else if (outerHTMLBeforeBr && !outerHTMLAfterBr) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd;\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd;\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd + br;\n                }\n            });\n        } else {\n            // If there is no line break in the subtitle, we simply wrap cue in a span indicating the linePadding.\n            var style = '';\n            for (var k = 0; k < nodeList.length; k++) {\n                style += nodeList[k].style.cssText;\n            }\n            cueInnerHTML = clonePropertyString + linePadding + style + '\">' + cueHTML.innerHTML + spanStringEnd;\n        }\n        return cueInnerHTML;\n    }\n\n    /*\n    * Create the cue element\n     * I. The cues are text only:\n     *      i) The cue contains a 'br' element\n     *      ii) The cue contains a span element\n     *      iii) The cue contains text\n     */\n\n    function constructCue(cueElements, cellUnit) {\n        var cue = document.createElement('div');\n        cueElements.forEach(function (el) {\n            // If metadata is present, do not process.\n            if (el.hasOwnProperty('metadata')) {\n                return;\n            }\n\n            /**\n             * If the p element contains spans: create the span elements.\n             */\n            if (el.hasOwnProperty('span')) {\n\n                // Stock the span subtitles in an array (in case there are only one value).\n                var spanElements = el.span.__children;\n\n                // Create the span element.\n                var spanHTMLElement = document.createElement('span');\n                // Extract the style of the span.\n                if (el.span.hasOwnProperty('style')) {\n                    var spanStyle = getProcessedStyle(el.span.style, cellUnit);\n                    spanHTMLElement.className = 'spanPadding ' + el.span.style;\n                    spanHTMLElement.style.cssText = spanStyle.join(' ');\n                }\n\n\n                // if the span has more than one element, we check for each of them their nature (br or text).\n                spanElements.forEach(function (spanEl) {\n                    // If metadata is present, do not process.\n                    if (spanElements.hasOwnProperty('metadata')) {\n                        return;\n                    }\n                    // If the element is a string\n                    if (spanEl.hasOwnProperty('#text')) {\n                        var textNode = document.createTextNode(spanEl['#text']);\n                        spanHTMLElement.appendChild(textNode);\n                        // If the element is a 'br' tag\n                    } else if ('br' in spanEl) {\n                        // To handle br inside span we need to add the current span\n                        // to the cue and then create a br and add that the cue\n                        // then create a new span that we use for the next line of\n                        // text, that is a copy of the current span\n\n                        // Add the current span to the cue, only if it has childNodes (text)\n                        if (spanHTMLElement.hasChildNodes()) {\n                            cue.appendChild(spanHTMLElement);\n                        }\n\n                        // Create a br and add that to the cue\n                        var brEl = document.createElement('br');\n                        brEl.className = 'lineBreak';\n                        cue.appendChild(brEl);\n\n                        // Create an replacement span and copy the style and classname from the old one\n                        var newSpanHTMLElement = document.createElement('span');\n                        newSpanHTMLElement.className = spanHTMLElement.className;\n                        newSpanHTMLElement.style.cssText = spanHTMLElement.style.cssText;\n\n                        // Replace the current span with the one we just created\n                        spanHTMLElement = newSpanHTMLElement;\n                    }\n                });\n                // We append the element to the cue container.\n                cue.appendChild(spanHTMLElement);\n            }\n\n            /**\n             * Create a br element if there is one in the cue.\n             */\n            else if (el.hasOwnProperty('br')) {\n                // We append the line break to the cue container.\n                var brEl = document.createElement('br');\n                brEl.className = 'lineBreak';\n                cue.appendChild(brEl);\n            }\n\n            /**\n             * Add the text that is not in any inline element\n             */\n            else if (el.hasOwnProperty('#text')) {\n                // Add the text to an individual span element (to add line padding if it is defined).\n                var textNode = document.createElement('span');\n                textNode.textContent = el['#text'];\n\n                // We append the element to the cue container.\n                cue.appendChild(textNode);\n            }\n        });\n        return cue;\n    }\n\n    function constructCueRegion(cue, div, cellUnit) {\n        var cueRegionProperties = []; // properties to be put in the \"captionRegion\" HTML element\n        // Obtain the region ID(s) assigned to the cue.\n        var pRegionID = cue.region;\n        // If div has a region.\n        var divRegionID = div.region;\n\n        var divRegion;\n        var pRegion;\n\n        // If the div element reference a region.\n        if (divRegionID) {\n            divRegion = getProcessedRegion(divRegionID, cellUnit);\n        }\n        // If the p element reference a region.\n        if (pRegionID) {\n            pRegion = cueRegionProperties.concat(getProcessedRegion(pRegionID, cellUnit));\n            if (divRegion) {\n                cueRegionProperties = mergeArrays(divRegion, pRegion);\n            } else {\n                cueRegionProperties = pRegion;\n            }\n        } else if (divRegion) {\n            cueRegionProperties = divRegion;\n        }\n\n        // Add initial/default values to what's not defined in the layout:\n        applyDefaultProperties(cueRegionProperties, defaultLayoutProperties);\n\n        return cueRegionProperties;\n    }\n\n    function constructCueStyle(cue, cellUnit) {\n        var cueStyleProperties = []; // properties to be put in the \"paragraph\" HTML element\n        // Obtain the style ID(s) assigned to the cue.\n        var pStyleID = cue.style;\n        // If body has a style.\n        var bodyStyleID = ttml.tt.body.style;\n        // If div has a style.\n        var divStyleID = ttml.tt.body.div.style;\n\n        var bodyStyle;\n        var divStyle;\n        var pStyle;\n        var styleIDs = '';\n\n        // If the body element reference a style.\n        if (bodyStyleID) {\n            bodyStyle = getProcessedStyle(bodyStyleID, cellUnit);\n            styleIDs = 'paragraph ' + bodyStyleID;\n        }\n\n        // If the div element reference a style.\n        if (divStyleID) {\n            divStyle = getProcessedStyle(divStyleID, cellUnit);\n            if (bodyStyle) {\n                divStyle = mergeArrays(bodyStyle, divStyle);\n                styleIDs += ' ' + divStyleID;\n            } else {\n                styleIDs = 'paragraph ' + divStyleID;\n            }\n        }\n\n        // If the p element reference a style.\n        if (pStyleID) {\n            pStyle = getProcessedStyle(pStyleID, cellUnit);\n            if (bodyStyle && divStyle) {\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else if (bodyStyle) {\n                cueStyleProperties = mergeArrays(bodyStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else if (divStyle) {\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else {\n                cueStyleProperties = pStyle;\n                styleIDs = 'paragraph ' + pStyleID;\n            }\n        } else if (bodyStyle && !divStyle) {\n            cueStyleProperties = bodyStyle;\n        } else if (!bodyStyle && divStyle) {\n            cueStyleProperties = divStyle;\n        }\n\n\n        // Add initial/default values to what's not defined in the styling:\n        applyDefaultProperties(cueStyleProperties, defaultStyleProperties);\n\n        return [cueStyleProperties, styleIDs];\n    }\n\n    function applyDefaultProperties(array, defaultProperties) {\n        for (var key in defaultProperties) {\n            if (defaultProperties.hasOwnProperty(key)) {\n                if (!arrayContains(key, array)) {\n                    array.push(key + ':' + defaultProperties[key]);\n                }\n            }\n        }\n    }\n\n    instance = {\n        parse: parse,\n        setConfig: setConfig\n    };\n\n    setup();\n    return instance;\n}\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\nexport\ndefault FactoryMaker.getSingletonFactory(TTMLParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module URLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            // this will throw if baseurl is undefined, invalid etc\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        var baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n              base.charAt(base.length - 1) !== '/' &&\n              url.charAt(0) !== '/' ?\n              '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl:   parseBaseUrl,\n        parseOrigin:    parseOrigin,\n        isRelative:     isRelative,\n        isPathAbsolute: isPathAbsolute,\n        isHTTPURL:      isHTTPURL,\n        resolve:        resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nexport default FactoryMaker.getSingletonFactory(URLUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction VTTParser() {\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n\n    let instance,\n        regExNewLine,\n        regExToken,\n        regExWhiteSpace,\n        regExWhiteSpaceWordBoundary;\n\n    function setup() {\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\n        regExToken = /-->/;\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\n    }\n\n    function parse(data) {\n        var captionArray = [];\n        var len,\n            lastStartTime;\n\n        data = data.split( regExNewLine );\n        len = data.length;\n        lastStartTime = -1;\n\n        for (var i = 0 ; i < len; i++)\n        {\n            var item = data[i];\n\n            if (item.length > 0 && item !== 'WEBVTT')\n            {\n                if (item.match(regExToken))\n                {\n                    var attributes = parseItemAttributes(item);\n                    var cuePoints = attributes.cuePoints;\n                    var styles = attributes.styles;\n                    var text = getSublines(data, i + 1);\n                    var startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\n                    var endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\n\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\n                        if (text !== '') {\n                            lastStartTime = startTime;\n                            //TODO Make VO external so other parsers can use.\n                            captionArray.push({\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: styles\n                            });\n                        }\n                        else {\n                            log('Skipping cue due to empty/malformed cue text');\n                        }\n                    }\n                    else {\n                        log('Skipping cue due to incorrect cue timing');\n                    }\n                }\n            }\n        }\n\n        return captionArray;\n    }\n\n    function convertCuePointTimes(time) {\n        var timeArray = time.split(':');\n        var len = timeArray.length - 1;\n\n        time = parseInt( timeArray[len - 1], 10 ) * 60 + parseFloat( timeArray[len]);\n\n        if ( len === 2 ) {\n            time += parseInt( timeArray[0], 10 ) * 3600;\n        }\n\n        return time;\n    }\n\n    function parseItemAttributes(data) {\n        var vttCuePoints = data.split(regExToken);\n        var arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\n        arr.shift(); //remove first array index it is empty...\n        vttCuePoints[1] = arr[0];\n        arr.shift();\n        return {cuePoints: vttCuePoints, styles: getCaptionStyles(arr)};\n    }\n\n    function getCaptionStyles(arr) {\n        var styleObject = {};\n        arr.forEach(function (element) {\n            if (element.split(/:/).length > 1) {\n                var val = element.split(/:/)[1];\n                if (val && val.search(/%/) != -1) {\n                    val = parseInt(val.replace(/%/, ''), 10);\n                }\n                if (element.match(/align/) || element.match(/A/)) {\n                    styleObject.align = val;\n                }\n                if (element.match(/line/) || element.match(/L/) ) {\n                    styleObject.line = val;\n                }\n                if (element.match(/position/) || element.match(/P/) ) {\n                    styleObject.position = val;\n                }\n                if (element.match(/size/) || element.match(/S/)) {\n                    styleObject.size = val;\n                }\n            }\n        });\n\n        return styleObject;\n    }\n\n    /*\n    * VTT can have multiple lines to display per cuepoint.\n    */\n    function getSublines(data, idx) {\n        var i = idx;\n\n        var subline = '';\n        var lineData = '';\n        var lineCount;\n\n        while (data[i] !== '' && i < data.length) {\n            i++;\n        }\n\n        lineCount = i - idx;\n        if (lineCount > 1) {\n            for (var j = 0; j < lineCount; j++) {\n                lineData = data[(idx + j)];\n                if (!lineData.match(regExToken)) {\n                    subline += lineData;\n                    if (j !== lineCount - 1) {\n                        subline += '\\n';\n                    }\n                }\n                else {\n                    // caption text should not have '-->' in it\n                    subline = '';\n                    break;\n                }\n            }\n        } else {\n            lineData = data[idx];\n            if (!lineData.match(regExToken))\n                subline = lineData;\n        }\n        return decodeURI(subline);\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n    return instance;\n}\nVTTParser.__dashjs_factory_name = 'VTTParser';\nexport default FactoryMaker.getSingletonFactory(VTTParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass BitrateInfo {\n    constructor() {\n        this.mediaType = null;\n        this.bitrate = null;\n        this.width = null;\n        this.height = null;\n        this.qualityIndex = NaN;\n    }\n}\n\nexport default BitrateInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Error {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default Error;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport FragmentRequest from './FragmentRequest';\n\nclass HeadRequest extends FragmentRequest {\n    constructor(url) {\n        super();\n        this.url = url || null;\n        this.checkForExistenceOnly = true;\n    }\n}\n\nexport default HeadRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor() {\n        this.offset = NaN;\n        this.type = null;\n        this.size = NaN;\n        this.isComplete = true;\n    }\n}\n\nexport default IsoBox;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ManifestInfo {\n    constructor() {\n        this.DVRWindowSize = NaN;\n        this.loadedTime = null;\n        this.availableFrom = null;\n        this.minBufferTime = NaN;\n        this.duration = NaN;\n        this.isDynamic = false;\n        this.maxFragmentDuration = null;\n    }\n}\n\nexport default ManifestInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.type = null;\n        this.streamInfo = null;\n        this.representationCount = 0;\n        this.lang = null;\n        this.viewpoint = null;\n        this.accessibility = null;\n        this.audioChannelConfiguration = null;\n        this.roles = null;\n        this.codec = null;\n        this.mimeType = null;\n        this.contentProtection = null;\n        this.isText = false;\n        this.KID = null;\n        this.bitrateList = null;\n    }\n}\n\nexport default MediaInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MetricsList {\n    constructor() {\n        this.TcpList = [];\n        this.HttpList = [];\n        this.RepSwitchList = [];\n        this.BufferLevel = [];\n        this.BufferState = [];\n        this.PlayList = [];\n        this.DroppedFrames = [];\n        this.SchedulingInfo = [];\n        this.DVRInfo = [];\n        this.ManifestUpdate = [];\n        this.RequestsQueue = null;\n        this.DVBErrors = [];\n        this.BolaState = [];\n    }\n}\n\nexport default MetricsList;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass StreamInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.start = NaN;\n        this.duration = NaN;\n        this.manifestInfo = null;\n        this.isLast = true;\n        this.isFirst = true;\n    }\n}\n\nexport default StreamInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport FragmentRequest from './FragmentRequest';\n\nclass TextRequest extends FragmentRequest {\n    constructor(url, type) {\n        super();\n        this.url = url || null;\n        this.type = type || null;\n        this.mediaType = 'stream';\n        this.responseType = 'text';\n    }\n}\n\nexport default TextRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass TextTrackInfo {\n    constructor() {\n        this.video = null;\n        this.captionData = null;\n        this.label = null;\n        this.lang = null;\n        this.defaultTrack = false;\n        this.kind = null;\n        this.isFragmented = false;\n        this.isEmbedded = false;\n    }\n}\n\nexport default TextTrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass TrackInfo {\n    constructor() {\n        this.id = null;\n        this.quality = null;\n        this.DVRWindow = null;\n        this.fragmentDuration = null;\n        this.mediaInfo = null;\n        this.MSETimeOffset = null;\n    }\n}\n\nexport default TrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass URIFragmentData {\n    constructor() {\n        this.t = null;\n        this.xywh = null;\n        this.track = null;\n        this.id = null;\n        this.s = null;\n    }\n}\n\nexport default URIFragmentData;\n\n/*\n    From Spec http://www.w3.org/TR/media-frags/\n\n    temporal (t)     - This dimension denotes a specific time range in the original media, such as \"starting at second 10, continuing until second 20\";\n    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as \"a rectangle with size (100,100) with its top-left at coordinate (10,10)\";\n                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):\n    track    (track) - this dimension denotes one or more tracks in the original media, such as \"the english audio and the video track\";\n    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.\n\n\n    ## Note\n    Akamai is purposing to add #s=X to the ISO standard.\n        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge\n        - Allows for seeking back before the start time unlike a temporal clipping.\n*/","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass BolaState {\n    constructor() {\n        /**\n         * number\n         * @private\n         */\n        this._s = undefined;\n    }\n}\n\nexport default BolaState;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n */\nclass BufferLevel {\n    /**\n     * @description This Object holds reference to the current buffer level and the time it was recorded.\n     */\n    constructor() {\n        /**\n         * Real-Time | Time of the measurement of the buffer level.\n         * @public\n         */\n        this.t = null;\n        /**\n         * Level of the buffer in milliseconds. Indicates the playout duration for which\n         * media data of all active media components is available starting from the\n         * current playout time.\n         * @public\n         */\n        this.level = null;\n    }\n}\n\nexport default BufferLevel;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport BufferController from '../../controllers/BufferController';\n/**\n * @class\n */\nclass BufferState {\n    /**\n     * @description This Object holds reference to the current buffer state of the video element.\n     */\n    constructor() {\n        /**\n         * The Buffer Level Target determined by the BufferLevelRule.\n         * @public\n         */\n        this.target = null;\n        /**\n         * Current buffer state. Will be BufferController.BUFFER_EMPTY or BufferController.BUFFER_LOADED.\n         * @public\n         */\n        this.state = BufferController.BUFFER_EMPTY;\n    }\n}\n\nexport default BufferState;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass DVRInfo {\n    /**\n     * @description This Object holds reference to DVR availability window information.\n     */\n    constructor() {\n\n        /**\n         * The current time of the video element when this was created.\n         * @public\n         */\n        this.time = null;\n        /**\n         * The current Segment Availability Range as an object with start and end properties.\n         * It's delta defined by the timeShiftBufferDepth MPD attribute.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Reference to the internal ManifestInfo.js VO.\n         * @public\n         */\n        this.manifestInfo = null;\n    }\n}\n\nexport default DVRInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass DroppedFrames {\n    /**\n     * @description This Object holds reference to DroppedFrames count and the time it was recorded.\n     */\n    constructor()\n    {\n        /**\n         * Real-Time | Time of the measurement of the dropped frames.\n         * @public\n         */\n        this.time = null;\n        /**\n         * Number of dropped frames\n         * @public\n         */\n        this.droppedFrames = null;\n    }\n}\n\nexport default DroppedFrames;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in milliseconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the manifest update information.\n */\nclass ManifestUpdate {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * MPD Type static | dynamic\n         * @public\n         */\n        this.type = null;\n        /**\n         * When this manifest update was requested\n         * @public\n         */\n        this.requestTime = null;\n        /**\n         * When this manifest update was received\n         * @public\n         */\n        this.fetchTime = null;\n        /**\n         * Calculated Availability Start time of the stream.\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n         * @public\n         */\n        this.presentationStartTime = 0;\n        /**\n         * The calculated difference between the server and client wall clock time\n         * @public\n         */\n        this.clientTimeOffset = 0;\n        /**\n         * Actual element.currentTime\n         * @public\n         */\n        this.currentTime = null;\n        /**\n         * Actual element.ranges\n         * @public\n         */\n        this.buffered = null;\n        /**\n         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)\n         * @public\n         */\n        this.latency = 0;\n        /**\n         * Array holding list of StreamInfo VO Objects\n         * @public\n         */\n        this.streamInfo = [];\n        /**\n         * Array holding list of TrackInfo VO Objects\n         * @public\n         */\n        this.trackInfo = [];\n\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current period's stream information when the manifest was updated.\n */\nclass ManifestUpdateStreamInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Stream@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Period Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Stream@start\n         * @public\n         */\n        this.start = null;\n        /**\n         * Stream@duration\n         * @public\n         */\n        this.duration = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current representation's info when the manifest was updated.\n */\nclass ManifestUpdateTrackInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Track@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Representation Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Which reprenset\n         * @public\n         */\n        this.streamIndex = null;\n        /**\n         * Holds reference to @presentationTimeOffset\n         * @public\n         */\n        this.presentationTimeOffset = null;\n        /**\n         * Holds reference to @startNumber\n         * @public\n         */\n        this.startNumber = null;\n        /**\n         * list|template|timeline\n         * @public\n         */\n        this.fragmentInfoType = null;\n    }\n}\n\nexport { ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateTrackInfo };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a PlayList from ISO23009-1 Annex D, this Object holds reference to the playback session information\n */\nclass PlayList {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Timestamp of the user action that starts the playback stream...\n         * @public\n         */\n        this.start = null;\n        /**\n         * Presentation time at which playout was requested by the user...\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * Type of user action which triggered playout\n         * - New playout request (e.g. initial playout or seeking)\n         * - Resume from pause\n         * - Other user request (e.g. user-requested quality change)\n         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)\n         * @public\n         */\n        this.starttype = null;\n\n        /**\n         * List of streams of continuous rendering of decoded samples.\n         * @public\n         */\n        this.trace = [];\n    }\n}\n\n/* Public Static Constants */\nPlayList.INITIAL_PLAYOUT_START_REASON = 'initial_playout';\nPlayList.SEEK_START_REASON = 'seek';\nPlayList.RESUME_FROM_PAUSE_START_REASON = 'resume';\nPlayList.METRICS_COLLECTION_START_REASON = 'metrics_collection_start';\n\n/**\n * @classdesc a PlayList.Trace from ISO23009-1 Annex D\n */\nclass PlayListTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * The value of the Representation@id of the Representation from which the samples were taken.\n         * @type {string}\n         * @public\n         */\n        this.representationid = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, subreplevel indicates the greatest value of any\n         * Subrepresentation@level being rendered.\n         * @type {number}\n         * @public\n         */\n        this.subreplevel = null;\n        /**\n         * The time at which the first sample was rendered\n         * @type {number}\n         * @public\n         */\n        this.start = null;\n        /**\n         * The presentation time of the first sample rendered.\n         * @type {number}\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * The duration of the continuously presented samples (which is the same in real time and media time). \"Continuously presented\" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.\n         * @type {number}\n         * @public\n         */\n        this.duration = null;\n        /**\n         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).\n         * @type {number}\n         * @public\n         */\n        this.playbackspeed = null;\n        /**\n         * The reason why continuous presentation of this Representation was stopped.\n         * representation switch\n         * rebuffering\n         * user request\n         * end of Period\n         * end of Stream\n         * end of content\n         * end of a metrics collection period\n         *\n         * @type {string}\n         * @public\n         */\n        this.stopreason = null;\n    }\n}\n\nPlayListTrace.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch';\nPlayListTrace.REBUFFERING_REASON = 'rebuffering';\nPlayListTrace.USER_REQUEST_STOP_REASON = 'user_request';\nPlayListTrace.END_OF_PERIOD_STOP_REASON = 'end_of_period';\nPlayListTrace.END_OF_CONTENT_STOP_REASON = 'end_of_content';\nPlayListTrace.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end';\nPlayListTrace.FAILURE_STOP_REASON = 'failure';\n\nexport { PlayList, PlayListTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass RepresentationSwitch {\n    /**\n     * @description This Object holds reference to the info at quality switch between two representations.\n     */\n    constructor() {\n\n        /**\n         * Time of the switch event.\n         * @public\n         */\n        this.t = null;\n        /**\n         * The media presentation time of the earliest access unit\n         * (out of all media content components) played out from\n         * the Representation.\n         *\n         * @public\n         */\n        this.mt = null;\n        /**\n         * Value of Representation@id identifying the switch-to Representation.\n         * @public\n         */\n        this.to = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, lto indicates the value of SubRepresentation@level within\n         * Representation identifying the switch-to level of the Representation.\n         *\n         * @public\n         */\n        this.lto = null;\n\n    }\n}\n\nexport default RepresentationSwitch;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass RequestsQueue {\n    /**\n     * @description This Object holds reference to Fragment Model's request queues\n     */\n    constructor() {\n\n        /**\n         * Array of all of the requests that have begun to load\n         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.\n         * @public\n         */\n        this.loadingRequests = [];\n        /**\n         * Array of the The requests that have completed\n         * @public\n         */\n        this.executedRequests = [];\n    }\n}\n\nexport default RequestsQueue;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass SchedulingInfo {\n    /**\n     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.\n     */\n    constructor() {\n\n        /**\n         * Type of stream Audio | Video | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Time of the scheduling event.\n         * @public\n         */\n        this.t = null;\n\n        /**\n         * Type of fragment (initialization | media)\n         * @public\n         */\n        this.type = null;\n        /**\n         * Presentation start time of fragment\n         * @public\n         */\n        this.startTime = null;\n        /**\n         * Availability start time of fragment\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * Duration of fragment\n         * @public\n         */\n        this.duration = null;\n        /**\n         * Bit Rate Quality of fragment\n         * @public\n         */\n        this.quality = null;\n        /**\n         * Range of fragment\n         * @public\n         */\n        this.range = null;\n\n        /**\n         * Current state of fragment\n         * @public\n         */\n        this.state = null;\n    }\n}\n\nexport default SchedulingInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass TCPConnection {\n    /**\n     * @description This Object holds reference to the current tcp connection\n     */\n    constructor() {\n\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * IP Address of the interface over which the client is receiving the TCP data.\n         * @public\n         */\n        this.dest = null;\n        /**\n         * Real-Time | The time at which the connection was opened (sending time of the initial SYN or connect socket operation).\n         * @public\n         */\n        this.topen = null;\n        /**\n         * Real-Time | The time at which the connection was closed (sending or reception time of FIN or RST or close socket operation).\n         * @public\n         */\n        this.tclose = null;\n        /**\n         * Connect time in ms (time from sending the initial SYN to receiving the ACK or completion of the connect socket operation).\n         * @public\n         */\n        this.tconnect = null;\n\n    }\n}\n\nexport default TCPConnection;"]}