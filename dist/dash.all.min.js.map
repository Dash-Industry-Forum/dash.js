{"version":3,"file":"dash.all.min.js","mappings":"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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./externals/base64.js","webpack://dashjs/./externals/cea608-parser.js","webpack://dashjs/./index_mediaplayerOnly.js","webpack://dashjs/./src/core/Debug.js","webpack://dashjs/./src/core/EventBus.js","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Settings.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/Version.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/CoreEvents.js","webpack://dashjs/./src/core/events/Events.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/dash/DashHandler.js","webpack://dashjs/./src/dash/constants/DashConstants.js","webpack://dashjs/./src/dash/controllers/SegmentsController.js","webpack://dashjs/./src/dash/utils/ListSegmentsGetter.js","webpack://dashjs/./src/dash/utils/SegmentBaseGetter.js","webpack://dashjs/./src/dash/utils/SegmentsUtils.js","webpack://dashjs/./src/dash/utils/TemplateSegmentsGetter.js","webpack://dashjs/./src/dash/utils/TimelineSegmentsGetter.js","webpack://dashjs/./src/dash/vo/Segment.js","webpack://dashjs/./src/dash/vo/UTCTiming.js","webpack://dashjs/./src/streaming/controllers/PlaybackController.js","webpack://dashjs/./src/streaming/models/FragmentModel.js","webpack://dashjs/./src/core/errors/Errors.js","webpack://dashjs/./src/streaming/SourceBufferSink.js","webpack://dashjs/./src/streaming/PreBufferSink.js","webpack://dashjs/./src/streaming/utils/InitCache.js","webpack://dashjs/./src/streaming/controllers/BufferController.js","webpack://dashjs/./src/streaming/text/NotFragmentedTextBufferController.js","webpack://dashjs/./src/streaming/controllers/ScheduleController.js","webpack://dashjs/./src/dash/controllers/RepresentationController.js","webpack://dashjs/./src/streaming/vo/metrics/PlayList.js","webpack://dashjs/./src/streaming/utils/TimeUtils.js","webpack://dashjs/./src/streaming/StreamProcessor.js","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/net/FetchLoader.js","webpack://dashjs/./src/dash/vo/Representation.js","webpack://dashjs/./src/dash/vo/AdaptationSet.js","webpack://dashjs/./src/dash/vo/Period.js","webpack://dashjs/./src/dash/vo/Mpd.js","webpack://dashjs/./src/dash/vo/Event.js","webpack://dashjs/./src/dash/vo/BaseURL.js","webpack://dashjs/./src/dash/vo/EventStream.js","webpack://dashjs/./src/dash/vo/ProducerReferenceTime.js","webpack://dashjs/./src/dash/vo/ContentSteering.js","webpack://dashjs/./src/dash/vo/DescriptorType.js","webpack://dashjs/./src/streaming/utils/ObjectUtils.js","webpack://dashjs/./src/dash/vo/MpdLocation.js","webpack://dashjs/./src/dash/vo/PatchLocation.js","webpack://dashjs/./src/dash/models/DashManifestModel.js","webpack://dashjs/./src/streaming/models/CmcdModel.js","webpack://dashjs/./src/streaming/models/CmsdModel.js","webpack://dashjs/./src/streaming/models/LowLatencyThroughputModel.js","webpack://dashjs/./src/streaming/net/HTTPLoader.js","webpack://dashjs/./src/streaming/net/SchemeLoaderFactory.js","webpack://dashjs/./src/streaming/net/URLLoader.js","webpack://dashjs/./src/streaming/vo/HeadRequest.js","webpack://dashjs/./src/streaming/FragmentLoader.js","webpack://dashjs/./src/streaming/utils/SegmentResponseModifier.js","webpack://dashjs/./src/streaming/controllers/FragmentController.js","webpack://dashjs/./src/streaming/vo/Thumbnail.js","webpack://dashjs/./src/streaming/vo/BitrateInfo.js","webpack://dashjs/./src/streaming/thumbnail/ThumbnailController.js","webpack://dashjs/./src/streaming/controllers/BlacklistController.js","webpack://dashjs/./src/streaming/Stream.js","webpack://dashjs/./src/dash/vo/ContentSteeringRequest.js","webpack://dashjs/./src/dash/vo/ContentSteeringResponse.js","webpack://dashjs/./src/dash/controllers/ContentSteeringController.js","webpack://dashjs/./src/streaming/utils/LocationSelector.js","webpack://dashjs/./src/streaming/ManifestUpdater.js","webpack://dashjs/./src/streaming/controllers/TimeSyncController.js","webpack://dashjs/./src/streaming/controllers/MediaSourceController.js","webpack://dashjs/./src/streaming/controllers/EventController.js","webpack://dashjs/./src/streaming/constants/ConformanceViolationConstants.js","webpack://dashjs/./src/streaming/controllers/StreamController.js","webpack://dashjs/./src/streaming/controllers/GapController.js","webpack://dashjs/./src/streaming/controllers/CatchupController.js","webpack://dashjs/./src/dash/controllers/ServiceDescriptionController.js","webpack://dashjs/./src/streaming/controllers/MediaController.js","webpack://dashjs/./src/streaming/models/BaseURLTreeModel.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/DVBSelector.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/BasicSelector.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/ContentSteeringSelector.js","webpack://dashjs/./src/streaming/utils/BaseURLSelector.js","webpack://dashjs/./src/streaming/controllers/BaseURLController.js","webpack://dashjs/./src/streaming/vo/TextRequest.js","webpack://dashjs/./src/streaming/XlinkLoader.js","webpack://dashjs/./externals/xml2json.js","webpack://dashjs/./src/streaming/controllers/XlinkController.js","webpack://dashjs/./src/dash/parser/objectiron.js","webpack://dashjs/./src/dash/parser/matchers/BaseMatcher.js","webpack://dashjs/./src/dash/parser/matchers/StringMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DurationMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DateTimeMatcher.js","webpack://dashjs/./src/dash/parser/matchers/NumericMatcher.js","webpack://dashjs/./src/dash/parser/matchers/LangMatcher.js","webpack://dashjs/./src/dash/parser/maps/CommonProperty.js","webpack://dashjs/./src/dash/parser/maps/MapNode.js","webpack://dashjs/./src/dash/parser/maps/RepresentationBaseValuesMap.js","webpack://dashjs/./src/dash/parser/maps/SegmentValuesMap.js","webpack://dashjs/./src/dash/parser/DashParser.js","webpack://dashjs/./src/streaming/ManifestLoader.js","webpack://dashjs/./src/streaming/utils/ErrorHandler.js","webpack://dashjs/./src/streaming/utils/CapabilitiesFilter.js","webpack://dashjs/./src/streaming/vo/URIFragmentData.js","webpack://dashjs/./src/streaming/models/URIFragmentModel.js","webpack://dashjs/./src/streaming/models/ManifestModel.js","webpack://dashjs/./src/streaming/models/MediaPlayerModel.js","webpack://dashjs/./src/streaming/rules/RulesContext.js","webpack://dashjs/./src/streaming/rules/SwitchRequestHistory.js","webpack://dashjs/./src/streaming/rules/DroppedFramesHistory.js","webpack://dashjs/./src/streaming/rules/ThroughputHistory.js","webpack://dashjs/./src/streaming/controllers/AbrController.js","webpack://dashjs/./src/streaming/models/VideoModel.js","webpack://dashjs/./src/streaming/utils/DOMStorage.js","webpack://dashjs/./src/dash/SegmentBaseLoader.js","webpack://dashjs/./src/streaming/utils/EBMLParser.js","webpack://dashjs/./src/dash/WebmSegmentBaseLoader.js","webpack://dashjs/./src/dash/controllers/SegmentBaseController.js","webpack://dashjs/./src/dash/vo/RepresentationInfo.js","webpack://dashjs/./src/dash/vo/MediaInfo.js","webpack://dashjs/./src/dash/vo/StreamInfo.js","webpack://dashjs/./src/dash/vo/ManifestInfo.js","webpack://dashjs/./src/dash/vo/SimpleXPath.js","webpack://dashjs/./src/dash/vo/PatchOperation.js","webpack://dashjs/./src/dash/models/PatchManifestModel.js","webpack://dashjs/./src/dash/DashAdapter.js","webpack://dashjs/./src/dash/utils/Round10.js","webpack://dashjs/./src/streaming/vo/MetricsList.js","webpack://dashjs/./src/streaming/vo/metrics/RepresentationSwitch.js","webpack://dashjs/./src/streaming/vo/metrics/BufferLevel.js","webpack://dashjs/./src/streaming/vo/metrics/BufferState.js","webpack://dashjs/./src/streaming/vo/metrics/DVRInfo.js","webpack://dashjs/./src/streaming/vo/metrics/DroppedFrames.js","webpack://dashjs/./src/streaming/vo/metrics/ManifestUpdate.js","webpack://dashjs/./src/streaming/vo/metrics/SchedulingInfo.js","webpack://dashjs/./src/streaming/vo/metrics/RequestsQueue.js","webpack://dashjs/./src/streaming/models/MetricsModel.js","webpack://dashjs/./src/dash/DashMetrics.js","webpack://dashjs/./src/dash/utils/TimelineConverter.js","webpack://dashjs/./src/streaming/vo/TextTrackInfo.js","webpack://dashjs/./src/streaming/text/EmbeddedTextHtmlRender.js","webpack://dashjs/./src/streaming/text/TextSourceBuffer.js","webpack://dashjs/./src/streaming/text/TextTracks.js","webpack://dashjs/./src/streaming/utils/VTTParser.js","webpack://dashjs/./src/streaming/utils/VttCustomRenderingParser.js","webpack://dashjs/./src/streaming/utils/TTMLParser.js","webpack://dashjs/./src/streaming/text/TextController.js","webpack://dashjs/./src/streaming/MediaPlayer.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/constants/MetricsConstants.js","webpack://dashjs/./src/streaming/metrics/vo/DVBErrors.js","webpack://dashjs/./src/streaming/metrics/utils/DVBErrorsTranslator.js","webpack://dashjs/./src/streaming/metrics/controllers/RangeController.js","webpack://dashjs/./src/streaming/metrics/utils/MetricSerialiser.js","webpack://dashjs/./src/streaming/metrics/utils/RNG.js","webpack://dashjs/./src/streaming/metrics/reporting/reporters/DVBReporting.js","webpack://dashjs/./src/streaming/metrics/reporting/ReportingFactory.js","webpack://dashjs/./src/streaming/metrics/controllers/ReportingController.js","webpack://dashjs/./src/streaming/metrics/utils/HandlerHelpers.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/BufferLevelHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/HttpListHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/handlers/GenericMetricHandler.js","webpack://dashjs/./src/streaming/metrics/metrics/MetricsHandlerFactory.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsHandlersController.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsController.js","webpack://dashjs/./src/streaming/metrics/vo/Metrics.js","webpack://dashjs/./src/streaming/metrics/vo/Range.js","webpack://dashjs/./src/streaming/metrics/vo/Reporting.js","webpack://dashjs/./src/streaming/metrics/utils/ManifestParsing.js","webpack://dashjs/./src/streaming/metrics/controllers/MetricsCollectionController.js","webpack://dashjs/./src/streaming/metrics/MetricsReporting.js","webpack://dashjs/./src/streaming/metrics/MetricsReportingEvents.js","webpack://dashjs/./src/streaming/models/CustomParametersModel.js","webpack://dashjs/./src/streaming/net/XHRLoader.js","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/Protection.js","webpack://dashjs/./src/streaming/rules/SwitchRequest.js","webpack://dashjs/./src/streaming/rules/abr/ABRRulesCollection.js","webpack://dashjs/./src/streaming/rules/abr/AbandonRequestsRule.js","webpack://dashjs/./src/streaming/rules/abr/BolaRule.js","webpack://dashjs/./src/streaming/rules/abr/DroppedFramesRule.js","webpack://dashjs/./src/streaming/rules/abr/InsufficientBufferRule.js","webpack://dashjs/./src/streaming/rules/abr/L2ARule.js","webpack://dashjs/./src/streaming/rules/abr/SwitchHistoryRule.js","webpack://dashjs/./src/streaming/rules/abr/ThroughputRule.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LearningAbrController.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpQoEEvaluator.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpRule.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpWeightSelector.js","webpack://dashjs/./src/streaming/rules/abr/lolp/QoeInfo.js","webpack://dashjs/./src/streaming/thumbnail/ThumbnailTracks.js","webpack://dashjs/./src/streaming/utils/BoxParser.js","webpack://dashjs/./src/streaming/utils/Capabilities.js","webpack://dashjs/./src/streaming/utils/CustomTimeRanges.js","webpack://dashjs/./src/streaming/utils/DefaultURLUtils.js","webpack://dashjs/./src/streaming/utils/IsoFile.js","webpack://dashjs/./src/streaming/utils/RequestModifier.js","webpack://dashjs/./src/streaming/utils/SupervisorTools.js","webpack://dashjs/./src/streaming/utils/URLUtils.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/streaming/vo/IsoBox.js","webpack://dashjs/./src/streaming/vo/IsoBoxSearchInfo.js","webpack://dashjs/./src/streaming/vo/ThumbnailTrackInfo.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./node_modules/bcp-47-match/index.js","webpack://dashjs/./node_modules/bcp-47-normalize/index.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/index.js","webpack://dashjs/./node_modules/bcp-47/index.js","webpack://dashjs/./node_modules/bcp-47/lib/parse.js","webpack://dashjs/./node_modules/bcp-47/lib/stringify.js","webpack://dashjs/./node_modules/buffer/index.js","webpack://dashjs/./node_modules/buffer/node_modules/base64-js/index.js","webpack://dashjs/./node_modules/buffer/node_modules/ieee754/index.js","webpack://dashjs/./node_modules/codem-isoboxer/dist/iso_boxer.js","webpack://dashjs/./node_modules/es6-promise/auto.js","webpack://dashjs/./node_modules/es6-promise/dist/es6-promise.js","webpack://dashjs/./node_modules/events/events.js","webpack://dashjs/./node_modules/fast-deep-equal/index.js","webpack://dashjs/./node_modules/imsc/src/main/js/doc.js","webpack://dashjs/./node_modules/imsc/src/main/js/html.js","webpack://dashjs/./node_modules/imsc/src/main/js/isd.js","webpack://dashjs/./node_modules/imsc/src/main/js/main.js","webpack://dashjs/./node_modules/imsc/src/main/js/names.js","webpack://dashjs/./node_modules/imsc/src/main/js/styles.js","webpack://dashjs/./node_modules/imsc/src/main/js/utils.js","webpack://dashjs/./node_modules/is-alphabetical/index.js","webpack://dashjs/./node_modules/is-alphanumerical/index.js","webpack://dashjs/./node_modules/is-decimal/index.js","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/safe-buffer/index.js","webpack://dashjs/./node_modules/sax/lib/sax.js","webpack://dashjs/./node_modules/stream-browserify/index.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/inherits/inherits_browser.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://dashjs/./node_modules/string_decoder/lib/string_decoder.js","webpack://dashjs/./node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/./node_modules/util-deprecate/browser.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/global","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/./src/streaming/MediaPlayerFactory.js","webpack://dashjs/./index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, () => {\nreturn ","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n    exports.encode = BASE64.encode;\n    exports.encodeASCII = BASE64.encodeASCII;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n(function(exports) {\n\n    \"use strict\";\n\n    /**\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n     */\n\n    var specialCea608CharsCodes = {\n        0x2a : 0xe1, // lowercase a, acute accent\n        0x5c : 0xe9, // lowercase e, acute accent\n        0x5e : 0xed, // lowercase i, acute accent\n        0x5f : 0xf3, // lowercase o, acute accent\n        0x60 : 0xfa, // lowercase u, acute accent\n        0x7b : 0xe7, // lowercase c with cedilla\n        0x7c : 0xf7, // division symbol\n        0x7d : 0xd1, // uppercase N tilde\n        0x7e : 0xf1, // lowercase n tilde\n        0x7f : 0x2588, // Full block\n        // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n        // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n        0x80 : 0xae, // Registered symbol (R)\n        0x81 : 0xb0, // degree sign\n        0x82 : 0xbd, // 1/2 symbol\n        0x83 : 0xbf, // Inverted (open) question mark\n        0x84 : 0x2122, // Trademark symbol (TM)\n        0x85 : 0xa2, // Cents symbol\n        0x86 : 0xa3, // Pounds sterling\n        0x87 : 0x266a, // Music 8'th note\n        0x88 : 0xe0, // lowercase a, grave accent\n        0x89 : 0x20, // transparent space (regular)\n        0x8a : 0xe8, // lowercase e, grave accent\n        0x8b : 0xe2, // lowercase a, circumflex accent\n        0x8c : 0xea, // lowercase e, circumflex accent\n        0x8d : 0xee, // lowercase i, circumflex accent\n        0x8e : 0xf4, // lowercase o, circumflex accent\n        0x8f : 0xfb, // lowercase u, circumflex accent\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n        0x90 : 0xc1, // capital letter A with acute\n        0x91 : 0xc9, // capital letter E with acute\n        0x92 : 0xd3, // capital letter O with acute\n        0x93 : 0xda, // capital letter U with acute\n        0x94 : 0xdc, // capital letter U with diaresis\n        0x95 : 0xfc, // lowercase letter U with diaeresis\n        0x96 : 0x2018, // opening single quote\n        0x97 : 0xa1, // inverted exclamation mark\n        0x98 : 0x2a, // asterisk\n        0x99 : 0x2019, // closing single quote\n        0x9a : 0x2501, // box drawings heavy horizontal\n        0x9b : 0xa9, // copyright sign\n        0x9c : 0x2120, // Service mark\n        0x9d : 0x2022, // (round) bullet\n        0x9e : 0x201c, // Left double quotation mark\n        0x9f : 0x201d, // Right double quotation mark\n        0xa0 : 0xc0, // uppercase A, grave accent\n        0xa1 : 0xc2, // uppercase A, circumflex\n        0xa2 : 0xc7, // uppercase C with cedilla\n        0xa3 : 0xc8, // uppercase E, grave accent\n        0xa4 : 0xca, // uppercase E, circumflex\n        0xa5 : 0xcb, // capital letter E with diaresis\n        0xa6 : 0xeb, // lowercase letter e with diaresis\n        0xa7 : 0xce, // uppercase I, circumflex\n        0xa8 : 0xcf, // uppercase I, with diaresis\n        0xa9 : 0xef, // lowercase i, with diaresis\n        0xaa : 0xd4, // uppercase O, circumflex\n        0xab : 0xd9, // uppercase U, grave accent\n        0xac : 0xf9, // lowercase u, grave accent\n        0xad : 0xdb, // uppercase U, circumflex\n        0xae : 0xab, // left-pointing double angle quotation mark\n        0xaf : 0xbb, // right-pointing double angle quotation mark\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n        0xb0 : 0xc3, // Uppercase A, tilde\n        0xb1 : 0xe3, // Lowercase a, tilde\n        0xb2 : 0xcd, // Uppercase I, acute accent\n        0xb3 : 0xcc, // Uppercase I, grave accent\n        0xb4 : 0xec, // Lowercase i, grave accent\n        0xb5 : 0xd2, // Uppercase O, grave accent\n        0xb6 : 0xf2, // Lowercase o, grave accent\n        0xb7 : 0xd5, // Uppercase O, tilde\n        0xb8 : 0xf5, // Lowercase o, tilde\n        0xb9 : 0x7b, // Open curly brace\n        0xba : 0x7d, // Closing curly brace\n        0xbb : 0x5c, // Backslash\n        0xbc : 0x5e, // Caret\n        0xbd : 0x5f, // Underscore\n        0xbe : 0x7c, // Pipe (vertical line)\n        0xbf : 0x223c, // Tilde operator\n        0xc0 : 0xc4, // Uppercase A, umlaut\n        0xc1 : 0xe4, // Lowercase A, umlaut\n        0xc2 : 0xd6, // Uppercase O, umlaut\n        0xc3 : 0xf6, // Lowercase o, umlaut\n        0xc4 : 0xdf, // Esszett (sharp S)\n        0xc5 : 0xa5, // Yen symbol\n        0xc6 : 0xa4, // Generic currency sign\n        0xc7 : 0x2503, // Box drawings heavy vertical\n        0xc8 : 0xc5, // Uppercase A, ring\n        0xc9 : 0xe5, // Lowercase A, ring\n        0xca : 0xd8, // Uppercase O, stroke\n        0xcb : 0xf8, // Lowercase o, strok\n        0xcc : 0x250f, // Box drawings heavy down and right\n        0xcd : 0x2513, // Box drawings heavy down and left\n        0xce : 0x2517, // Box drawings heavy up and right\n        0xcf : 0x251b // Box drawings heavy up and left\n    };\n\n    /**\n     * Get Unicode Character from CEA-608 byte code\n     */\n    var getCharForByte = function(byte) {\n        var charCode = byte;\n        if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n            charCode = specialCea608CharsCodes[byte];\n        }\n        return String.fromCharCode(charCode);\n    };\n\n    var NR_ROWS = 15,\n        NR_COLS = 32;\n    // Tables to look up row from PAC data\n    var rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\n    var rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\n    var rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\n    var rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\n\n    var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n    /**\n     * Simple logger class to be able to write with time-stamps and filter on level.\n     */\n    var logger = {\n        verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\n        time : null,\n        verboseLevel : 0, // Only write errors\n        setTime : function(newTime) {\n            this.time = newTime;\n        },\n        log : function(severity, msg) {\n            var minLevel = this.verboseFilter[severity];\n            if (this.verboseLevel >= minLevel) {\n                console.log(this.time + \" [\" + severity + \"] \" + msg);\n            }\n        }\n    };\n\n    var numArrayToHexArray = function(numArray) {\n        var hexArray = [];\n        for (var j = 0; j < numArray.length; j++) {\n            hexArray.push(numArray[j].toString(16));\n        }\n        return hexArray;\n    };\n\n    /**\n     * State of CEA-608 pen or character\n     * @constructor\n     */\n    var PenState = function(foreground, underline, italics, background, flash) {\n        this.foreground = foreground || \"white\";\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || \"black\";\n        this.flash = flash || false;\n    };\n\n    PenState.prototype = {\n        \n        reset : function() {\n            this.foreground = \"white\";\n            this.underline = false;\n            this.italics = false;\n            this.background = \"black\";\n            this.flash = false;\n        },\n        \n        setStyles : function(styles) {\n            var attribs = [\"foreground\", \"underline\", \"italics\", \"background\", \"flash\"];\n            for (var i = 0 ; i < attribs.length; i++) {\n                var style = attribs[i];\n                if (styles.hasOwnProperty(style)) {\n                    this[style] = styles[style];\n                }\n            }\n        },\n        \n        isDefault : function() {\n            return (this.foreground === \"white\" && !this.underline && !this.italics && \n                    this.background === \"black\" && !this.flash);\n        },\n\n        equals : function(other) {\n            return ( (this.foreground === other.foreground) && \n                     (this.underline === other.underline) &&\n                     (this.italics === other.italics) &&\n                     (this.background === other.background) &&\n                     (this.flash === other.flash) );\n        },\n\n        copy : function(newPenState) {\n            this.foreground = newPenState.foreground;\n            this.underline = newPenState.underline;\n            this.italics = newPenState.italics;\n            this.background = newPenState.background;\n            this.flash = newPenState.flash;\n        },\n        \n        toString: function() {\n            return (\"color=\" + this.foreground + \", underline=\" + this.underline + \", italics=\" + this.italics +\n                \", background=\" + this.background + \", flash=\" + this.flash);\n        }\n    };\n\n    /**\n     * Unicode character with styling and background.\n     * @constructor\n     */\n    var StyledUnicodeChar = function(uchar, foreground, underline, italics, background, flash) {\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline,italics, background, flash);\n    };\n\n    StyledUnicodeChar.prototype = {\n        \n        reset: function() {\n            this.uchar = ' ';\n            this.penState.reset();\n        },\n        \n        setChar: function(uchar, newPenState) {\n            this.uchar = uchar;\n            this.penState.copy(newPenState);\n        },\n        \n        setPenState: function(newPenState) {\n            this.penState.copy(newPenState);\n        },\n        \n        equals: function(other) {\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\n        },\n        \n        copy: function(newChar) {\n            this.uchar = newChar.uchar;\n            this.penState.copy(newChar.penState);\n        },\n        \n        isEmpty : function() {\n            return this.uchar === ' ' && this.penState.isDefault();\n        }\n    };\n\n    /**\n     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n     * @constructor\n     */\n    var Row = function() {\n        this.chars = [];\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    };\n\n    Row.prototype = {\n        \n        equals: function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].equals(other.chars[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n        \n        copy: function(other) {\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                this.chars[i].copy(other.chars[i]);\n            }\n        },\n        \n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        /**\n         *  Set the cursor to a valid column.\n         */\n        setCursor : function(absPos) {\n            if (this.pos !== absPos) {\n                this.pos = absPos;\n            }\n            if (this.pos < 0) {\n                logger.log(\"ERROR\", \"Negative cursor position \" + this.pos);\n                this.pos = 0;\n            } else if (this.pos > NR_COLS) {\n                logger.log(\"ERROR\", \"Too large cursor position \" + this.pos);\n                this.pos = NR_COLS;\n            }\n        },\n\n        /** \n         * Move the cursor relative to current position.\n         */\n        moveCursor : function(relPos) {\n            var newPos = this.pos + relPos;\n            if (relPos > 1) {\n                for (var i = this.pos+1; i < newPos+1 ; i++) {\n                    this.chars[i].setPenState(this.currPenState);\n                }\n            }\n            this.setCursor(newPos);\n        },\n\n        /**\n         * Backspace, move one step back and clear character.\n         */\n        backSpace : function () {\n            this.moveCursor(-1);\n            this.chars[this.pos].setChar(' ', this.currPenState);\n        },\n\n        insertChar: function(byte) {\n            if (byte >= 0x90) { //Extended char\n                this.backSpace();\n            }\n            var char = getCharForByte(byte);\n            if (this.pos >= NR_COLS) {\n                logger.log(\"ERROR\", \"Cannot insert \" + byte.toString(16) +  \n                            \" (\" + char + \") at position \" + this.pos + \". Skipping it!\");\n                return;\n            }\n            this.chars[this.pos].setChar(char, this.currPenState);\n            this.moveCursor(1);\n        },\n\n        clearFromPos : function(startPos) {\n            var i;\n            for (i = startPos ; i < NR_COLS ; i++) {\n                this.chars[i].reset();\n            }\n        },\n\n        clear : function() {\n            this.clearFromPos(0);\n            this.pos = 0;\n            this.currPenState.reset();\n        },\n\n        clearToEndOfRow : function() {\n            this.clearFromPos(this.pos);\n        },\n\n        getTextString: function() {\n            var chars = [];\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS ; i++) {\n                var char = this.chars[i].uchar;\n                if (char !== \" \") {\n                    empty = false;\n                }\n                chars.push(char);\n            }\n            if (empty) {\n                return \"\";\n            } else {\n                return chars.join(\"\");\n            }\n        },\n\n        setPenStyles: function(styles) {\n            this.currPenState.setStyles(styles);\n            var currChar = this.chars[this.pos];\n            currChar.setPenState(this.currPenState);\n        }\n    };\n\n    /**\n     * Keep a CEA-608 screen of 32x15 styled characters\n     * @constructor\n    */\n    var CaptionScreen = function() {\n\n        this.rows = [];\n        for (var i = 0 ; i <  NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    };\n\n    CaptionScreen.prototype = {\n\n        reset : function() {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].clear();\n            }\n            this.currRow = NR_ROWS - 1;\n        },\n\n        equals : function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].equals(other.rows[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n\n        copy : function(other) {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].copy(other.rows[i]);\n            }\n        },\n\n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        backSpace : function() {\n            var row = this.rows[this.currRow]; \n            row.backSpace();\n        },\n\n        clearToEndOfRow : function() {\n            var row = this.rows[this.currRow];\n            row.clearToEndOfRow();\n        },\n\n        /**\n         * Insert a character (without styling) in the current row.\n         */\n        insertChar : function(char) {\n            var row = this.rows[this.currRow];\n            row.insertChar(char);\n        },\n\n        setPen : function(styles) {\n            var row = this.rows[this.currRow];\n            row.setPenStyles(styles);\n        },\n\n        moveCursor : function(relPos) {\n            var row = this.rows[this.currRow];\n            row.moveCursor(relPos); \n        },\n\n        setCursor : function(absPos) {\n            logger.log(\"INFO\", \"setCursor: \" + absPos);\n            var row = this.rows[this.currRow];\n            row.setCursor(absPos);\n        },\n\n        setPAC : function(pacData) {\n            logger.log(\"INFO\", \"pacData = \" + JSON.stringify(pacData));\n            var newRow = pacData.row - 1;\n            if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\n                    newRow = this.nrRollUpRows-1;\n            }\n            this.currRow = newRow;\n            var row = this.rows[this.currRow];\n            if (pacData.indent !== null) {\n                var indent = pacData.indent;\n                var prevPos = Math.max(indent-1, 0);\n                row.setCursor(pacData.indent);\n                pacData.color = row.chars[prevPos].penState.foreground;\n            }\n            var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\n            this.setPen(styles);\n        },\n\n        /**\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n         */\n        setBkgData : function(bkgData) {\n\n            logger.log(\"INFO\", \"bkgData = \" + JSON.stringify(bkgData));\n            this.backSpace();\n            this.setPen(bkgData);\n            this.insertChar(0x20); //Space\n        },\n\n        setRollUpRows : function(nrRows) {\n            this.nrRollUpRows = nrRows;\n        },\n\n        rollUp : function() {\n            if (this.nrRollUpRows === null) {\n                logger.log(\"DEBUG\", \"roll_up but nrRollUpRows not set yet\");\n                return; //Not properly setup\n            }\n            logger.log(\"TEXT\", this.getDisplayText());\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\n            topRow.clear();\n            this.rows.splice(this.currRow, 0, topRow);\n            logger.log(\"INFO\", \"Rolling up\");\n            //logger.log(\"TEXT\", this.get_display_text())\n        },\n\n       /**\n        * Get all non-empty rows with as unicode text. \n        */        \n        getDisplayText : function(asOneRow) {\n            asOneRow = asOneRow || false;\n            var displayText = [];\n            var text = \"\";\n            var rowNr = -1;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                var rowText = this.rows[i].getTextString();\n                if (rowText) {\n                    rowNr = i+1;\n                    if (asOneRow) {\n                        displayText.push(\"Row \" + rowNr + ': \"' + rowText + '\"');\n                    } else {\n                        displayText.push(rowText.trim());\n                    }\n                }\n            }\n            if (displayText.length > 0) {\n                if (asOneRow) {\n                    text = \"[\" + displayText.join(\" | \") + \"]\";\n                } else {\n                    text = displayText.join(\"\\n\");\n                }\n            }\n            return text;\n        },\n\n        getTextAndFormat : function() {\n            return this.rows;\n        }\n    };\n\n    /**\n     * Handle a CEA-608 channel and send decoded data to outputFilter\n     * @constructor\n     * @param {Number} channelNumber (1 or 2)\n     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)\n    */\n    var Cea608Channel = function(channelNumber, outputFilter) {\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    };\n\n    Cea608Channel.prototype = {\n        \n        modes : [\"MODE_ROLL-UP\", \"MODE_POP-ON\", \"MODE_PAINT-ON\", \"MODE_TEXT\"],\n        \n        reset : function() {\n            this.mode = null;\n            this.displayedMemory.reset();\n            this.nonDisplayedMemory.reset();\n            this.lastOutputScreen.reset();\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n            this.writeScreen = this.displayedMemory;\n            this.mode = null;\n            this.cueStartTime = null;\n            this.lastCueEndTime = null;\n        },\n\n        getHandler : function() {\n            return this.outputFilter;\n        },\n\n        setHandler : function(newHandler) {\n            this.outputFilter = newHandler;\n        },\n\n        setPAC : function(pacData) {\n            this.writeScreen.setPAC(pacData);\n        },\n\n        setBkgData : function(bkgData) {\n            this.writeScreen.setBkgData(bkgData);\n        },\n\n        setMode : function(newMode) {\n            if (newMode === this.mode) {\n                return;\n            }\n            this.mode = newMode;\n            logger.log(\"INFO\", \"MODE=\" + newMode);\n            if (this.mode == \"MODE_POP-ON\") {\n                this.writeScreen = this.nonDisplayedMemory;\n            } else {\n                this.writeScreen = this.displayedMemory;\n                this.writeScreen.reset();\n            }\n            if (this.mode !== \"MODE_ROLL-UP\") {\n                this.displayedMemory.nrRollUpRows = null;\n                this.nonDisplayedMemory.nrRollUpRows = null;\n            }\n            this.mode = newMode;\n        },\n\n        insertChars : function(chars) {\n            for (var i = 0 ; i < chars.length ; i++) {\n                this.writeScreen.insertChar(chars[i]);\n            }\n            var screen = this.writeScreen === this.displayedMemory ? \"DISP\" : \"NON_DISP\";\n            logger.log(\"INFO\", screen + \": \" + this.writeScreen.getDisplayText(true));\n            if (this.mode === \"MODE_PAINT-ON\" || this.mode === \"MODE_ROLL-UP\") {\n                logger.log(\"TEXT\", \"DISPLAYED: \" + this.displayedMemory.getDisplayText(true));\n                this.outputDataUpdate();\n            }\n        },\n\n        cc_RCL: function() { // Resume Caption Loading (switch mode to Pop On)\n            logger.log(\"INFO\", \"RCL - Resume Caption Loading\");\n            this.setMode(\"MODE_POP-ON\");\n        },\n        cc_BS: function() { // BackSpace\n            logger.log(\"INFO\", \"BS - BackSpace\");\n            if (this.mode === \"MODE_TEXT\") {\n                return;\n            }\n            this.writeScreen.backSpace();\n            if (this.writeScreen === this.displayedMemory) {\n                this.outputDataUpdate();\n            }\n        },\n        cc_AOF : function() { // Reserved (formerly Alarm Off)\n            return;\n        },\n        cc_AON: function() { // Reserved (formerly Alarm On)\n            return;\n        },\n        cc_DER: function() { // Delete to End of Row\n            logger.log(\"INFO\", \"DER- Delete to End of Row\");\n            this.writeScreen.clearToEndOfRow();\n            this.outputDataUpdate();\n        },\n        cc_RU: function(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\n            logger.log(\"INFO\", \"RU(\" + nrRows +\") - Roll Up\");\n            this.writeScreen = this.displayedMemory;\n            this.setMode(\"MODE_ROLL-UP\");\n            this.writeScreen.setRollUpRows(nrRows);\n        },\n        cc_FON: function() { //Flash On\n            logger.log(\"INFO\", \"FON - Flash On\");\n            this.writeScreen.setPen({flash : true});\n        },\n        cc_RDC: function() { // Resume Direct Captioning (switch mode to PaintOn)\n            logger.log(\"INFO\", \"RDC - Resume Direct Captioning\");\n            this.setMode(\"MODE_PAINT-ON\");\n        },\n        cc_TR: function() { // Text Restart in text mode (not supported, however)\n            logger.log(\"INFO\", \"TR\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_RTD: function() { // Resume Text Display in Text mode (not supported, however)\n            logger.log(\"INFO\", \"RTD\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_EDM: function() { // Erase Displayed Memory\n            logger.log(\"INFO\", \"EDM - Erase Displayed Memory\");\n            this.displayedMemory.reset();\n            this.outputDataUpdate();\n        },\n        cc_CR: function() { // Carriage Return\n            logger.log(\"CR - Carriage Return\");\n            this.writeScreen.rollUp();\n            this.outputDataUpdate();\n        },\n        cc_ENM: function() { //Erase Non-Displayed Memory\n            logger.log(\"INFO\", \"ENM - Erase Non-displayed Memory\");\n            this.nonDisplayedMemory.reset();\n        },\n        cc_EOC: function() { //End of Caption (Flip Memories)\n            logger.log(\"INFO\", \"EOC - End Of Caption\");\n            if (this.mode === \"MODE_POP-ON\") {\n                var tmp = this.displayedMemory;\n                this.displayedMemory = this.nonDisplayedMemory;\n                this.nonDisplayedMemory = tmp;\n                this.writeScreen = this.nonDisplayedMemory;\n                logger.log(\"TEXT\", \"DISP: \" + this.displayedMemory.getDisplayText());\n            }\n            this.outputDataUpdate();\n        },\n        cc_TO: function(nrCols) { // Tab Offset 1,2, or 3 columns\n            logger.log(\"INFO\", \"TO(\" + nrCols + \") - Tab Offset\");\n            this.writeScreen.moveCursor(nrCols);\n        },\n        cc_MIDROW: function(secondByte) { // Parse MIDROW command\n            var styles = {flash : false};\n            styles.underline = secondByte % 2 === 1;\n            styles.italics = secondByte >= 0x2e;\n            if (!styles.italics) {\n                var colorIndex = Math.floor(secondByte/2) - 0x10;\n                var colors = [\"white\", \"green\", \"blue\", \"cyan\", \"red\", \"yellow\", \"magenta\"];\n                styles.foreground = colors[colorIndex];\n            } else {\n                styles.foreground = \"white\";\n            }\n            logger.log(\"INFO\", \"MIDROW: \" + JSON.stringify(styles));\n            this.writeScreen.setPen(styles);\n        },\n\n        outputDataUpdate: function() {\n            var t = logger.time;\n            if (t === null) {\n                return;\n            }\n            if (this.outputFilter) {\n                if (this.outputFilter.updateData) {\n                    this.outputFilter.updateData(t, this.displayedMemory);\n                }\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\n                    this.cueStartTime = t;\n                } else {\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) { \n                        if (this.outputFilter.newCue) {\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                        }\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                    }\n                }\n                this.lastOutputScreen.copy(this.displayedMemory);\n            }\n        },\n\n        cueSplitAtTime : function(t) {\n            if (this.outputFilter) {\n                if (!this.displayedMemory.isEmpty()) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                    }\n                    this.cueStartTime = t;\n                }\n            }\n        }\n    };\n\n    /**\n     * Parse CEA-608 data and send decoded data to out1 and out2.\n     * @constructor\n     * @param {Number} field  CEA-608 field (1 or 2)\n     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)\n     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)\n     */\n    var Cea608Parser = function(field, out1, out2) {\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\n    };\n\n    Cea608Parser.prototype = {\n        \n        getHandler : function(index) {\n            return this.channels[index].getHandler();\n        },\n        \n        setHandler : function(index, newHandler) {\n            this.channels[index].setHandler(newHandler);\n        },\n\n        /**\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n         */\n        addData : function(t, byteList) {\n            var cmdFound, a, b, \n            charsFound = false;\n            \n            this.lastTime = t;\n            logger.setTime(t);\n\n            for (var i = 0 ; i < byteList.length ; i+=2) {\n                a = byteList[i] & 0x7f;\n                b = byteList[i+1] & 0x7f;\n\n                if (a >= 0x10 && a <= 0x1f && a === this.lastCmdA && b === this.lastCmdB) {\n                    this.lastCmdA = null;\n                    this.lastCmdB = null;\n                    logger.log(\"DEBUG\", \"Repeated command (\" + numArrayToHexArray([a, b]) + \") is dropped\");\n                    continue; // Repeated commands are dropped (once)\n                }\n\n                if (a === 0 && b === 0) {\n                    this.dataCounters.padding += 2;\n                    continue;\n                } else {\n                    logger.log(\"DATA\", \"[\" + numArrayToHexArray([byteList[i], byteList[i+1]]) +\"] -> (\" + numArrayToHexArray([a, b]) + \")\");\n                }\n                cmdFound = this.parseCmd(a, b);\n                if (!cmdFound) {\n                    cmdFound = this.parseMidrow(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parsePAC(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parseBackgroundAttributes(a, b);\n                }\n                if (!cmdFound) {\n                    charsFound = this.parseChars(a, b);\n                    if (charsFound) {\n                        if (this.currChNr && this.currChNr >=0) {\n                            var channel = this.channels[this.currChNr-1];\n                            channel.insertChars(charsFound);\n                        } else {\n                            logger.log(\"WARNING\", \"No channel found yet. TEXT-MODE?\");\n                        }\n                    }\n                }\n                if (cmdFound) {\n                    this.dataCounters.cmd += 2;\n                } else if (charsFound) {\n                    this.dataCounters.char += 2;\n                } else {\n                    this.dataCounters.other += 2;\n                    logger.log(\"WARNING\", \"Couldn't parse cleaned data \" + numArrayToHexArray([a, b]) +\n                                \" orig: \" + numArrayToHexArray([byteList[i], byteList[i+1]]));\n                }\n            }\n        },\n\n        /**\n         * Parse Command.\n         * @returns {Boolean} Tells if a command was found\n         */\n        parseCmd: function(a, b) {\n            var chNr = null;\n\n            var cond1 = (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) && (0x20 <= b && b <= 0x2F);\n            var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\n            if (!(cond1 || cond2)) {\n                return false;\n            }\n                 \n            if (a === 0x14 || a === 0x15 || a === 0x17) {\n                chNr = 1;\n            } else {\n                chNr = 2; // (a === 0x1C || a === 0x1D || a=== 0x1f)\n            }\n\n            var channel = this.channels[chNr - 1];\n\n            if (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) {\n                if (b === 0x20) {\n                    channel.cc_RCL();\n                } else if (b === 0x21) {\n                    channel.cc_BS();\n                } else if (b === 0x22) {\n                    channel.cc_AOF();\n                } else if (b === 0x23) {\n                    channel.cc_AON();\n                } else if (b === 0x24) {\n                    channel.cc_DER();\n                } else if (b === 0x25) {\n                    channel.cc_RU(2);\n                } else if (b === 0x26) {\n                    channel.cc_RU(3);\n                } else if (b === 0x27) {\n                    channel.cc_RU(4);\n                } else if (b === 0x28) {\n                    channel.cc_FON();\n                } else if (b === 0x29) {\n                    channel.cc_RDC();\n                } else if (b === 0x2A) {\n                    channel.cc_TR();\n                } else if (b === 0x2B) {\n                    channel.cc_RTD();\n                } else if (b === 0x2C) {\n                    channel.cc_EDM();\n                } else if (b === 0x2D) {\n                    channel.cc_CR();\n                } else if (b === 0x2E) {\n                    channel.cc_ENM();\n                } else if (b === 0x2F) {\n                    channel.cc_EOC();\n                }\n            } else { //a == 0x17 || a == 0x1F\n                channel.cc_TO(b - 0x20);\n            }\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Parse midrow styling command\n         * @returns {Boolean}\n         */\n        parseMidrow : function(a, b) {\n            var chNr = null;\n                \n            if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\n                if (a === 0x11) {\n                    chNr = 1;\n                } else  {\n                    chNr = 2;\n                }\n                if (chNr !== this.currChNr) {\n                    logger.log(\"ERROR\", \"Mismatch channel in midrow parsing\");\n                    return false;\n                }\n                var channel = this.channels[chNr-1];\n                // cea608 spec says midrow codes should inject a space\n                channel.insertChars([0x20]);\n                channel.cc_MIDROW(b);\n                logger.log(\"DEBUG\", \"MIDROW (\" + numArrayToHexArray([a, b]) + \")\");\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Parse Preable Access Codes (Table 53).\n         * @returns {Boolean} Tells if PAC found\n         */\n        parsePAC : function(a, b) {\n\n           var chNr = null;\n           var row = null;\n            \n            var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\n            var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\n            if (! (case1 || case2)) {\n                return false;\n            }\n\n            chNr = (a <= 0x17) ? 1 : 2;\n\n            if (0x40 <= b && b <= 0x5F) {\n                row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\n            } else { // 0x60 <= b <= 0x7F\n                row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\n            }\n            var pacData = this.interpretPAC(row, b);\n            var channel = this.channels[chNr-1];\n            channel.setPAC(pacData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Interpret the second byte of the pac, and return the information.\n         * @returns {Object} pacData with style parameters.\n         */\n        interpretPAC : function (row, byte) {\n            var pacIndex = byte;\n            var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\n            \n            if (byte > 0x5F) {\n                pacIndex = byte - 0x60;\n            } else {\n                pacIndex = byte - 0x40;\n            }\n            pacData.underline = (pacIndex & 1) === 1;\n            if (pacIndex <= 0xd) {\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\n            } else if (pacIndex <= 0xf) {\n                pacData.italics = true;\n                pacData.color = 'white';\n            } else {\n                pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\n            }\n            return pacData; // Note that row has zero offset. The spec uses 1.\n        },\n\n        /**\n         * Parse characters.\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n         */\n        parseChars : function(a, b) {\n\n           var  channelNr = null,\n                charCodes = null,\n                charCode1 = null,\n                charCode2 = null;\n\n            if (a >= 0x19) {\n                channelNr = 2;\n                charCode1 = a - 8;\n            } else {\n                channelNr = 1;\n                charCode1 = a;\n            }\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n                // Special character\n                var oneCode = b;\n                if (charCode1 === 0x11) {\n                    oneCode = b + 0x50;\n                } else if (charCode1 === 0x12) {\n                    oneCode = b + 0x70;\n                } else {\n                    oneCode = b + 0x90;\n                }\n                logger.log(\"INFO\", \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr);\n                charCodes = [oneCode];\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n            } else if (0x20 <= a && a <= 0x7f) {\n                charCodes = (b === 0) ? [a] : [a, b];\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n            }\n            if (charCodes) {\n                var hexCodes = numArrayToHexArray(charCodes);\n                logger.log(\"DEBUG\", \"Char codes =  \" + hexCodes.join(\",\"));\n            }\n            return charCodes;\n        },\n        \n        /**\n        * Parse extended background attributes as well as new foreground color black.\n        * @returns{Boolean} Tells if background attributes are found\n        */\n        parseBackgroundAttributes : function(a, b) {\n           var  bkgData,\n                index,\n                chNr,\n                channel;\n\n            var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\n            var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\n            if (!(case1 || case2)) {\n                return false;\n            }\n            bkgData = {};\n            if (a  === 0x10 || a === 0x18) {\n                index = Math.floor((b-0x20)/2);\n                bkgData.background = backgroundColors[index];\n                if (b % 2 === 1) {\n                    bkgData.background = bkgData.background + \"_semi\";\n                }\n            } else if (b === 0x2d) {\n                bkgData.background = \"transparent\";\n            } else {\n                bkgData.foreground = \"black\";\n                if (b === 0x2f) {\n                    bkgData.underline = true;\n                }\n            }\n            chNr = (a < 0x18) ? 1 : 2;\n            channel = this.channels[chNr-1];\n            channel.setBkgData(bkgData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            return true;\n        },\n\n        /**\n         * Reset state of parser and its channels.\n         */\n        reset : function() {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].reset();\n                }\n            }\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        },\n\n        /**\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n         */\n        cueSplitAtTime : function(t) {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].cueSplitAtTime(t);\n                }\n            }\n        },\n    };\n\n    /**\n     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.\n     * @param {raw} dataView of binary data\n     * @param {startPos} start position in raw\n     * @param {size} total size of data in raw to consider\n     * @returns \n     */\n    var findCea608Nalus = function(raw, startPos, size) {\n        var nalSize = 0,\n            cursor = startPos,\n            nalType = 0,\n            cea608NaluRanges = [],\n            // Check SEI data according to ANSI-SCTE 128\n            isCEA608SEI = function (payloadType, payloadSize, raw, pos) {\n                if (payloadType !== 4 || payloadSize < 8) {\n                    return null;\n                }\n                var countryCode = raw.getUint8(pos);\n                var providerCode = raw.getUint16(pos + 1);\n                var userIdentifier = raw.getUint32(pos + 3);\n                var userDataTypeCode = raw.getUint8(pos + 7);\n                return countryCode == 0xB5 && providerCode == 0x31 && userIdentifier == 0x47413934 && userDataTypeCode == 0x3;\n            };\n        while (cursor < startPos + size) {\n            nalSize = raw.getUint32(cursor);\n            nalType = raw.getUint8(cursor + 4) & 0x1F;\n            //console.log(time + \"  NAL \" + nalType);\n            if (nalType === 6) {\n                // SEI NAL Unit. The NAL header is the first byte\n                //console.log(\"SEI NALU of size \" + nalSize + \" at time \" + time);\n                var pos = cursor + 5;\n                var payloadType = -1;\n                while (pos < cursor + 4 + nalSize - 1) { // The last byte should be rbsp_trailing_bits\n                    payloadType = 0;\n                    var b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadType += b;\n                        pos++;\n                    }\n                    var payloadSize = 0;\n                    b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadSize += b;\n                        pos++;\n                    }\n                    if (isCEA608SEI(payloadType, payloadSize, raw, pos)) {\n                        //console.log(\"CEA608 SEI \" + time + \" \" + payloadSize);\n                        cea608NaluRanges.push([pos, payloadSize]);\n                    }\n                    pos += payloadSize;\n                }\n            }\n            cursor += nalSize + 4;\n        }\n        return cea608NaluRanges;\n    };\n    \n    var extractCea608DataFromRange = function(raw, cea608Range) {\n        var pos = cea608Range[0];\n        var fieldData = [[], []];\n\n        pos += 8; // Skip the identifier up to userDataTypeCode\n        var ccCount = raw.getUint8(pos) & 0x1f;\n        pos += 2; // Advance 1 and skip reserved byte\n          \n        for (var i = 0; i < ccCount; i++) {\n            var byte = raw.getUint8(pos);\n            var ccValid = byte & 0x4;\n            var ccType = byte & 0x3;\n            pos++;\n            var ccData1 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            var ccData2 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            if (ccValid && ((ccData1 & 0x7f) + (ccData2 & 0x7f) !== 0)) { //Check validity and non-empty data\n                if (ccType === 0) {\n                    fieldData[0].push(ccData1);\n                    fieldData[0].push(ccData2);\n                } else if (ccType === 1) {\n                    fieldData[1].push(ccData1);\n                    fieldData[1].push(ccData2);\n                }\n            }\n        }\n        return fieldData;\n    };\n\n    exports.logger = logger;\n    exports.PenState = PenState;\n    exports.CaptionScreen = CaptionScreen;  \n    exports.Cea608Parser = Cea608Parser;\n    exports.findCea608Nalus = findCea608Nalus;\n    exports.extractCea608DataFromRange = extractCea608DataFromRange;\n\n}(typeof exports === 'undefined' ? this.cea608parser = {} : exports));\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MediaPlayer from './src/streaming/MediaPlayer';\nimport FactoryMaker from './src/core/FactoryMaker';\nimport Debug from './src/core/Debug';\nimport { getVersionString } from './src/core/Version';\n\nimport { } from 'es6-promise/auto';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MediaPlayer = MediaPlayer;\ndashjs.FactoryMaker = FactoryMaker;\ndashjs.Debug = Debug;\ndashjs.Version = getVersionString();\n\nexport default dashjs;\nexport { MediaPlayer, FactoryMaker, Debug};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\nconst LOG_LEVEL_NONE = 0;\nconst LOG_LEVEL_FATAL = 1;\nconst LOG_LEVEL_ERROR = 2;\nconst LOG_LEVEL_WARNING = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DEBUG = 5;\n\n/**\n * @module Debug\n * @param {object} config\n * @ignore\n */\nfunction Debug(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = config.settings;\n\n    const logFn = [];\n\n    let instance,\n        showLogTimestamp,\n        showCalleeName,\n        startTime;\n\n    function setup() {\n        showLogTimestamp = true;\n        showCalleeName = true;\n        startTime = new Date().getTime();\n\n        if (typeof window !== 'undefined' && window.console) {\n            logFn[LOG_LEVEL_FATAL] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_ERROR] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_WARNING] = getLogFn(window.console.warn);\n            logFn[LOG_LEVEL_INFO] = getLogFn(window.console.info);\n            logFn[LOG_LEVEL_DEBUG] = getLogFn(window.console.debug);\n        }\n    }\n\n    function getLogFn(fn) {\n        if (fn && fn.bind) {\n            return fn.bind(window.console);\n        }\n        // if not define, return the default function for reporting logs\n        return window.console.log.bind(window.console);\n    }\n\n    /**\n     * Retrieves a logger which can be used to write logging information in browser console.\n     * @param {object} instance Object for which the logger is created. It is used\n     * to include calle object information in log messages.\n     * @memberof module:Debug\n     * @returns {Logger}\n     * @instance\n     */\n    function getLogger(instance) {\n        return {\n            fatal: fatal.bind(instance),\n            error: error.bind(instance),\n            warn: warn.bind(instance),\n            info: info.bind(instance),\n            debug: debug.bind(instance)\n        };\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default LOG_LEVEL_WARNING\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n\n    /**\n     * Prepends the callee object name, and media type if available, to each log message.\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setCalleeNameVisible(value) {\n        showCalleeName = value;\n    }\n\n    function fatal(...params) {\n        doLog(LOG_LEVEL_FATAL, this, ...params);\n    }\n\n    function error(...params) {\n        doLog(LOG_LEVEL_ERROR, this, ...params);\n    }\n\n    function warn(...params) {\n        doLog(LOG_LEVEL_WARNING, this, ...params);\n    }\n\n    function info(...params) {\n        doLog(LOG_LEVEL_INFO, this, ...params);\n    }\n\n    function debug(...params) {\n        doLog(LOG_LEVEL_DEBUG, this, ...params);\n    }\n\n    function doLog(level, _this, ...params) {\n        let message = '';\n        let logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (showCalleeName && _this && _this.getClassName) {\n            message += '[' + _this.getClassName() + ']';\n            if (_this.getType) {\n                message += '[' + _this.getType() + ']';\n            }\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, params).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        // log to console if the log level is high enough\n        if (logFn[level] && settings && settings.get().debug.logLevel >= level) {\n            logFn[level](message);\n        }\n\n        // send log event regardless of log level\n        if (settings && settings.get().debug.dispatchEvent) {\n            eventBus.trigger(Events.LOG, { message: message, level: level });\n        }\n    }\n\n    instance = {\n        getLogger: getLogger,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setCalleeNameVisible: setCalleeNameVisible\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\n\nconst factory = FactoryMaker.getSingletonFactory(Debug);\nfactory.LOG_LEVEL_NONE = LOG_LEVEL_NONE;\nfactory.LOG_LEVEL_FATAL = LOG_LEVEL_FATAL;\nfactory.LOG_LEVEL_ERROR = LOG_LEVEL_ERROR;\nfactory.LOG_LEVEL_WARNING = LOG_LEVEL_WARNING;\nfactory.LOG_LEVEL_INFO = LOG_LEVEL_INFO;\nfactory.LOG_LEVEL_DEBUG = LOG_LEVEL_DEBUG;\nFactoryMaker.updateSingletonFactory(Debug.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, options = {}) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        let priority = options.priority || EVENT_PRIORITY_LOW;\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope,\n            priority\n        };\n\n        if (scope && scope.getStreamId) {\n            handler.streamId = scope.getStreamId();\n        }\n        if (scope && scope.getType) {\n            handler.mediaType = scope.getType();\n        }\n        if (options && options.mode) {\n            handler.mode = options.mode;\n        }\n\n        const inserted = handlers[type].some((item, idx) => {\n            if (item && priority > item.priority) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type][idx] = null;\n    }\n\n    function trigger(type, payload = {}, filters = {}) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        if (filters.streamId) {\n            payload.streamId = filters.streamId;\n        }\n        if (filters.mediaType) {\n            payload.mediaType = filters.mediaType;\n        }\n\n        handlers[type]\n            .filter((handler) => {\n                if (!handler) {\n                    return false;\n                }\n                if (filters.streamId && handler.streamId && handler.streamId !== filters.streamId) {\n                    return false;\n                }\n                if (filters.mediaType && handler.mediaType && handler.mediaType !== filters.mediaType) {\n                    return false;\n                }\n                // This is used for dispatching DASH events. By default we use the onStart mode. Consequently we filter everything that has a non matching mode and the onReceive events for handlers that did not specify a mode.\n                if ((filters.mode && handler.mode && handler.mode !== filters.mode) || (!handler.mode && filters.mode && filters.mode === MediaPlayerEvents.EVENT_MODE_ON_RECEIVE)) {\n                    return false;\n                }\n                return true;\n            })\n            .forEach(handler => handler && handler.callback.call(handler.scope, payload));\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some((item, index) => {\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n * @ignore\n */\nconst FactoryMaker = (function () {\n\n    let instance;\n    let singletonContexts = [];\n    const singletonFactories = {};\n    const classFactories = {};\n\n    function extend(name, childInstance, override, context) {\n        if (!context[name] && childInstance) {\n            context[name] = {\n                instance: childInstance,\n                override: override\n            };\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({\n            name: className,\n            context: context,\n            instance: instance\n        });\n    }\n\n    /**\n     * Use this method to remove all singleton instances associated with a particular context.\n     *\n     * @param {Object} context\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function deleteSingletonInstances(context) {\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Factories storage Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function getFactoryByName(name, factoriesArray) {\n        return factoriesArray[name];\n    }\n\n    function updateFactory(name, factory, factoriesArray) {\n        if (name in factoriesArray) {\n            factoriesArray[name] = factory;\n        }\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Class Factories Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateClassFactory(name, factory) {\n        updateFactory(name, factory, classFactories);\n    }\n\n    function getClassFactoryByName(name) {\n        return getFactoryByName(name, classFactories);\n    }\n\n    function getClassFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\n\n        if (!factory) {\n            factory = function (context) {\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    create: function () {\n                        return merge(classConstructor, context, arguments);\n                    }\n                };\n            };\n\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n        return factory;\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Singleton Factory MAangement\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateSingletonFactory(name, factory) {\n        updateFactory(name, factory, singletonFactories);\n    }\n\n    function getSingletonFactoryByName(name) {\n        return getFactoryByName(name, singletonFactories);\n    }\n\n    function getSingletonFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\n        if (!factory) {\n            factory = function (context) {\n                let instance;\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    getInstance: function () {\n                        // If we don't have an instance yet check for one on the context\n                        if (!instance) {\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                        }\n                        // If there's no instance on the context then create one\n                        if (!instance) {\n                            instance = merge(classConstructor, context, arguments);\n                            singletonContexts.push({\n                                name: classConstructor.__dashjs_factory_name,\n                                context: context,\n                                instance: instance\n                            });\n                        }\n                        return instance;\n                    }\n                };\n            };\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n\n        return factory;\n    }\n\n    function merge(classConstructor, context, args) {\n\n        let classInstance;\n        const className = classConstructor.__dashjs_factory_name;\n        const extensionObject = context[className];\n\n        if (extensionObject) {\n\n            let extension = extensionObject.instance;\n\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n\n                classInstance = classConstructor.apply({context}, args);\n                extension = extension.apply({\n                    context,\n                    factory: instance,\n                    parent: classInstance\n                }, args);\n\n                for (const prop in extension) {\n                    if (classInstance.hasOwnProperty(prop)) {\n                        classInstance[prop] = extension[prop];\n                    }\n                }\n\n            } else { //replace parent object completely with new object. Same as dijon.\n\n                return extension.apply({\n                    context,\n                    factory: instance\n                }, args);\n\n            }\n        } else {\n            // Create new instance of the class\n            classInstance = classConstructor.apply({context}, args);\n        }\n\n        // Add getClassName function to class instance prototype (used by Debug)\n        classInstance.getClassName = function () {return className;};\n\n        return classInstance;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        deleteSingletonInstances: deleteSingletonInstances,\n        getSingletonFactory: getSingletonFactory,\n        getSingletonFactoryByName: getSingletonFactoryByName,\n        updateSingletonFactory: updateSingletonFactory,\n        getClassFactory: getClassFactory,\n        getClassFactoryByName: getClassFactoryByName,\n        updateClassFactory: updateClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\nimport Utils from './Utils.js';\nimport Debug from '../core/Debug';\nimport Constants from '../streaming/constants/Constants';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport EventBus from './EventBus';\nimport Events from './events/Events';\n\n/** @module Settings\n * @description Define the configuration parameters of Dash.js MediaPlayer.\n * @see {@link module:Settings~PlayerSettings PlayerSettings} for further information about the supported configuration properties.\n */\n\n\n/**\n * @typedef {Object} PlayerSettings\n * @property {module:Settings~DebugSettings} [debug]\n * Debug related settings.\n * @property {module:Settings~ErrorSettings} [errors]\n * Error related settings\n * @property {module:Settings~StreamingSettings} [streaming]\n * Streaming related settings.\n * @example\n *\n * // Full settings object\n * settings = {\n *        debug: {\n *            logLevel: Debug.LOG_LEVEL_WARNING,\n *            dispatchEvent: false\n *        },\n *        streaming: {\n *            abandonLoadTimeout: 10000,\n *            wallclockTimeUpdateInterval: 100,\n *            manifestUpdateRetryInterval: 100,\n *            cacheInitSegments: false,\n *            applyServiceDescription: true,\n *            applyProducerReferenceTime: true,\n *            applyContentSteering: true,\n *            eventControllerRefreshDelay: 100,\n *            enableManifestDurationMismatchFix: true,\n *            enableManifestTimescaleMismatchFix: false,\n *            parseInbandPrft: false,\n *            capabilities: {\n *               filterUnsupportedEssentialProperties: true,\n *               useMediaCapabilitiesApi: false\n *            },\n *            timeShiftBuffer: {\n *                calcFromSegmentTimeline: false,\n *                fallbackToSegmentTimeline: true\n *            },\n *            metrics: {\n *              maxListDepth: 100\n *            },\n *            delay: {\n *                liveDelayFragmentCount: NaN,\n *                liveDelay: NaN,\n *                useSuggestedPresentationDelay: true\n *            },\n *            protection: {\n *                keepProtectionMediaKeys: false,\n *                ignoreEmeEncryptedEvent: false,\n *                detectPlayreadyMessageFormat: true,\n *            },\n *            buffer: {\n *                enableSeekDecorrelationFix: false,\n *                fastSwitchEnabled: true,\n *                flushBufferAtTrackSwitch: false,\n *                reuseExistingSourceBuffers: true,\n *                bufferPruningInterval: 10,\n *                bufferToKeep: 20,\n *                bufferTimeAtTopQuality: 30,\n *                bufferTimeAtTopQualityLongForm: 60,\n *                initialBufferLevel: NaN,\n *                stableBufferTime: 12,\n *                longFormContentDurationThreshold: 600,\n *                stallThreshold: 0.3,\n *                useAppendWindow: true,\n *                setStallState: true,\n *                avoidCurrentTimeRangePruning: false,\n *                useChangeTypeForTrackSwitch: true\n *            },\n *            gaps: {\n *                jumpGaps: true,\n *                jumpLargeGaps: true,\n *                smallGapLimit: 1.5,\n *                threshold: 0.3,\n *                enableSeekFix: true,\n *                enableStallFix: false,\n *                stallSeek: 0.1\n *            },\n *            utcSynchronization: {\n *                enabled: true,\n *                useManifestDateHeaderTimeSource: true,\n *                backgroundAttempts: 2,\n *                timeBetweenSyncAttempts: 30,\n *                maximumTimeBetweenSyncAttempts: 600,\n *                minimumTimeBetweenSyncAttempts: 2,\n *                timeBetweenSyncAttemptsAdjustmentFactor: 2,\n *                maximumAllowedDrift: 100,\n *                enableBackgroundSyncAfterSegmentDownloadError: true,\n *                defaultTimingSource: {\n *                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\n *                    value: 'http://time.akamai.com/?iso&ms'\n *                }\n *            },\n *            scheduling: {\n *                defaultTimeout: 500,\n *                lowLatencyTimeout: 0,\n *                scheduleWhilePaused: true\n *            },\n *            text: {\n *                defaultEnabled: true,\n *                extendSegmentedCues: true,\n *                webvtt: {\n *                    customRenderingEnabled: false\n *                }\n *            },\n *            liveCatchup: {\n *                maxDrift: NaN,\n *                playbackRate: {min: NaN, max: NaN},\n *                playbackBufferMin: 0.5,\n *                enabled: null,\n *                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\n *            },\n *            lastBitrateCachingInfo: { enabled: true, ttl: 360000 },\n *            lastMediaSettingsCachingInfo: { enabled: true, ttl: 360000 },\n *            cacheLoadThresholds: { video: 50, audio: 5 },\n *            trackSwitchMode: {\n *                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n *                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n *            },\n *            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\n *            fragmentRequestTimeout: 20000,\n *            fragmentRequestProgressTimeout: -1,\n *            manifestRequestTimeout: 10000,\n *            retryIntervals: {\n *                [HTTPRequest.MPD_TYPE]: 500,\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.LICENSE]: 1000,\n *                [HTTPRequest.OTHER_TYPE]: 1000,\n *                lowLatencyReductionFactor: 10\n *            },\n *            retryAttempts: {\n *                [HTTPRequest.MPD_TYPE]: 3,\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.LICENSE]: 3,\n *                [HTTPRequest.OTHER_TYPE]: 3,\n *                lowLatencyMultiplyFactor: 5\n *            },\n *            abr: {\n *                movingAverageMethod: Constants.MOVING_AVERAGE_SLIDING_WINDOW,\n *                ABRStrategy: Constants.ABR_STRATEGY_DYNAMIC,\n *                additionalAbrRules: {\n *                   insufficientBufferRule: true,\n *                   switchHistoryRule: true,\n *                   droppedFramesRule: true,\n *                   abandonRequestsRule: true\n *                },\n *                bandwidthSafetyFactor: 0.9,\n *                useDefaultABRRules: true,\n *                useDeadTimeLatency: true,\n *                limitBitrateByPortal: false,\n *                usePixelRatioInLimitBitrateByPortal: false,\n *                maxBitrate: { audio: -1, video: -1 },\n *                minBitrate: { audio: -1, video: -1 },\n *                maxRepresentationRatio: { audio: 1, video: 1 },\n *                initialBitrate: { audio: -1, video: -1 },\n *                initialRepresentationRatio: { audio: -1, video: -1 },\n *                autoSwitchBitrate: { audio: true, video: true },\n *                fetchThroughputCalculationMode: Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA\n *            },\n *            cmcd: {\n *                enabled: false,\n *                sid: null,\n *                cid: null,\n *                rtp: null,\n *                rtpSafetyFactor: 5,\n *                mode: Constants.CMCD_MODE_QUERY,\n *                enabledKeys: ['br', 'd', 'ot', 'tb' , 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su' , 'bs', 'rtp' , 'cid', 'pr', 'sf', 'sid', 'st', 'v']\n *            },\n *            cmsd: {\n *                enabled: false,\n *                abr: {\n *                    applyMb: false,\n *                    etpWeightRatio: 0\n *                }\n *           }\n *          },\n *          errors: {\n *            recoverAttempts: {\n *                mediaErrorDecode: 5\n *             }\n *          }\n * }\n */\n\n/**\n * @typedef {Object} TimeShiftBuffer\n * @property {boolean} [calcFromSegmentTimeline=false]\n * Enable calculation of the DVR window for SegmentTimeline manifests based on the entries in \\<SegmentTimeline\\>.\n *  * @property {boolean} [fallbackToSegmentTimeline=true]\n * In case the MPD uses \\<SegmentTimeline\\ and no segment is found within the DVR window the DVR window is calculated based on the entries in \\<SegmentTimeline\\>.\n */\n\n/**\n * @typedef {Object} LiveDelay\n * @property {number} [liveDelayFragmentCount=NaN]\n * Changing this value will lower or increase live stream latency.\n *\n * The detected segment duration will be multiplied by this value to define a time in seconds to delay a live stream from the live edge.\n *\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\n * @property {number} [liveDelay=NaN]\n * Equivalent in seconds of setLiveDelayFragmentCount.\n *\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\n *\n * This value should be less than the manifest duration by a couple of segment durations to avoid playback issues.\n *\n * If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info.\n * @property {boolean} [useSuggestedPresentationDelay=true]\n * Set to true if you would like to overwrite the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.\n */\n\n/**\n * @typedef {Object} Buffer\n * @property {boolean} [enableSeekDecorrelationFix=false]\n * Enables a workaround for playback start on some devices, e.g. WebOS 4.9.\n * It is necessary because some browsers do not support setting currentTime on video element to a value that is outside of current buffer.\n *\n * If you experience unexpected seeking triggered by BufferController, you can try setting this value to false.\n\n * @property {boolean} [fastSwitchEnabled=true]\n * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment at the end of the current buffer range it is requested and appended closer to the current time.\n *\n * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).\n *\n * Note, When ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the\n * higher quality media for as long as possible.\n *\n * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather just append at the end.\n * 1. When the buffer level is less than one fragment duration.\n * 2. The client is in an Abandonment State due to recent fragment abandonment event.\n *\n * Known issues:\n * 1. In IE11 with auto switching off, if a user switches to a quality they can not download in time the fragment may be appended in the same range as the playhead or even in the past, in IE11 it may cause a stutter or stall in playback.\n * @property {boolean} [flushBufferAtTrackSwitch=false]\n * When enabled, after a track switch and in case buffer is being replaced, the video element is flushed (seek at current playback time) once a segment of the new track is appended in buffer in order to force video decoder to play new track.\n *\n * This can be required on some devices like GoogleCast devices to make track switching functional.\n *\n * Otherwise track switching will be effective only once after previous buffered track is fully consumed.\n * @property {boolean} [reuseExistingSourceBuffers=true]\n * Enable reuse of existing MediaSource Sourcebuffers during period transition.\n * @property {number} [bufferPruningInterval=10]\n * The interval of pruning buffer in seconds.\n * @property {number} [bufferToKeep=20]\n * This value influences the buffer pruning logic.\n *\n * Allows you to modify the buffer that is kept in source buffer in seconds.\n * 0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|\n * @property {number} [bufferTimeAtTopQuality=30]\n * The time that the internal buffer target will be set to once playing the top quality.\n *\n * If there are multiple bitrates in your adaptation, and the media is playing at the highest bitrate, then we try to build a larger buffer at the top quality to increase stability and to maintain media quality.\n * @property {number} [bufferTimeAtTopQualityLongForm=60]\n * The time that the internal buffer target will be set to once playing the top quality for long form content.\n * @property {number} [longFormContentDurationThreshold=600]\n * The threshold which defines if the media is considered long form content.\n *\n * This will directly affect the buffer targets when playing back at the top quality.\n * @property {number} [initialBufferLevel=NaN]\n * Initial buffer level before playback starts\n * @property {number} [stableBufferTime=12]\n * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\n *\n * When the time is set higher than the default you will have to wait longer to see automatic bitrate switches but will have a larger buffer which will increase stability.\n * @property {number} [stallThreshold=0.3]\n * Stall threshold used in BufferController.js to determine whether a track should still be changed and which buffer range to prune.\n * @property {boolean} [useAppendWindow=true]\n * Specifies if the appendWindow attributes of the MSE SourceBuffers should be set according to content duration from manifest.\n * @property {boolean} [setStallState=true]\n * Specifies if we fire manual waiting events once the stall threshold is reached\n * @property {boolean} [avoidCurrentTimeRangePruning=false]\n * Avoids pruning of the buffered range that contains the current playback time.\n *\n * That buffered range is likely to have been enqueued for playback. Pruning it causes a flush and reenqueue in WPE and WebKitGTK based browsers. This stresses the video decoder and can cause stuttering on embedded platforms.\n * @property {boolean} [useChangeTypeForTrackSwitch=true]\n * If this flag is set to true then dash.js will use the MSE v.2 API call \"changeType()\" before switching to a different track.\n * Note that some platforms might not implement the changeType functio. dash.js is checking for the availability before trying to call it.\n */\n\n/**\n * @typedef {Object} module:Settings~AudioVideoSettings\n * @property {number|boolean|string} [audio]\n * Configuration for audio media type of tracks.\n * @property {number|boolean|string} [video]\n * Configuration for video media type of tracks.\n */\n\n/**\n * @typedef {Object} DebugSettings\n * @property {number} [logLevel=dashjs.Debug.LOG_LEVEL_WARNING]\n * Sets up the log level. The levels are cumulative.\n *\n * For example, if you set the log level to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged.\n *\n * Possible values.\n *\n * - dashjs.Debug.LOG_LEVEL_NONE\n * No message is written in the browser console.\n *\n * - dashjs.Debug.LOG_LEVEL_FATAL\n * Log fatal errors.\n * An error is considered fatal when it causes playback to fail completely.\n *\n * - dashjs.Debug.LOG_LEVEL_ERROR\n * Log error messages.\n *\n * - dashjs.Debug.LOG_LEVEL_WARNING\n * Log warning messages.\n *\n * - dashjs.Debug.LOG_LEVEL_INFO\n * Log info messages.\n *\n * - dashjs.Debug.LOG_LEVEL_DEBUG\n * Log debug messages.\n * @property {boolean} [dispatchEvent=false]\n * Enable to trigger a Events.LOG event whenever log output is generated.\n *\n * Note this will be dispatched regardless of log level.\n */\n\n/**\n * @typedef {Object} module:Settings~ErrorSettings\n * @property {object} [recoverAttempts={mediaErrorDecode: 5}]\n * Defines the maximum number of recover attempts for specific media errors.\n *\n * For mediaErrorDecode the player will reset the MSE and skip the blacklisted segment that caused the decode error. The resulting gap will be handled by the GapController.\n */\n\n/**\n * @typedef {Object} CachingInfoSettings\n * @property {boolean} [enable]\n * Enable or disable the caching feature.\n * @property {number} [ttl]\n * Time to live.\n *\n * A value defined in milliseconds representing how log to cache the settings for.\n */\n\n/**\n * @typedef {Object} Gaps\n * @property {boolean} [jumpGaps=true]\n * Sets whether player should jump small gaps (discontinuities) in the buffer.\n * @property {boolean} [jumpLargeGaps=true]\n * Sets whether player should jump large gaps (discontinuities) in the buffer.\n * @property {number} [smallGapLimit=1.5]\n * Time in seconds for a gap to be considered small.\n * @property {number} [threshold=0.3]\n * Threshold at which the gap handling is executed. If currentRangeEnd - currentTime < threshold the gap jump will be triggered.\n * For live stream the jump might be delayed to keep a consistent live edge.\n * Note that the amount of buffer at which platforms automatically stall might differ.\n * @property {boolean} [enableSeekFix=true]\n * Enables the adjustment of the seek target once no valid segment request could be generated for a specific seek time. This can happen if the user seeks to a position for which there is a gap in the timeline.\n * @property {boolean} [enableStallFix=false]\n * If playback stalled in a buffered range this fix will perform a seek by the value defined in stallSeek to trigger playback again.\n * @property {number} [stallSeek=0.1]\n * Value to be used in case enableStallFix is set to true\n */\n\n/**\n * @typedef {Object} UtcSynchronizationSettings\n * @property {boolean} [enabled=true]\n * Enables or disables the UTC clock synchronization\n * @property {boolean} [useManifestDateHeaderTimeSource=true]\n * Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection.\n *\n * The use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\n * @property {number} [backgroundAttempts=2]\n * Number of synchronization attempts to perform in the background after an initial synchronization request has been done. This is used to verify that the derived client-server offset is correct.\n *\n * The background requests are async and done in parallel to the start of the playback.\n *\n * This value is also used to perform a resync after 404 errors on segments.\n * @property {number} [timeBetweenSyncAttempts=30]\n * The time in seconds between two consecutive sync attempts.\n *\n * Note: This value is used as an initial starting value. The internal value of the TimeSyncController is adjusted during playback based on the drift between two consecutive synchronization attempts.\n *\n * Note: A sync is only performed after an MPD update. In case the @minimumUpdatePeriod is larger than this value the sync will be delayed until the next MPD update.\n * @property {number} [maximumTimeBetweenSyncAttempts=600]\n * The maximum time in seconds between two consecutive sync attempts.\n *\n * @property {number} [minimumTimeBetweenSyncAttempts=2]\n * The minimum time in seconds between two consecutive sync attempts.\n *\n * @property {number} [timeBetweenSyncAttemptsAdjustmentFactor=2]\n * The factor used to multiply or divide the timeBetweenSyncAttempts parameter after a sync. The maximumAllowedDrift defines whether this value is used as a factor or a dividend.\n *\n * @property {number} [maximumAllowedDrift=100]\n * The maximum allowed drift specified in milliseconds between two consecutive synchronization attempts.\n *\n * @property {boolean} [enableBackgroundSyncAfterSegmentDownloadError=true]\n * Enables or disables the background sync after the player ran into a segment download error.\n *\n * @property {object} [defaultTimingSource={scheme:'urn:mpeg:dash:utc:http-xsdate:2014',value: 'http://time.akamai.com/?iso&ms'}]\n * The default timing source to be used. The timing sources in the MPD take precedence over this one.\n */\n\n/**\n * @typedef {Object} Scheduling\n * @property {number} [defaultTimeout=500]\n * Default timeout between two consecutive segment scheduling attempts\n * @property {number} [lowLatencyTimeout=0]\n * Default timeout between two consecutive low-latency segment scheduling attempts\n * @property {boolean} [scheduleWhilePaused=true]\n * Set to true if you would like dash.js to keep downloading fragments in the background when the video element is paused.\n */\n\n/**\n * @typedef {Object} Text\n * @property {boolean} [defaultEnabled=true]\n * Enable/disable subtitle rendering by default.\n * @property {boolean} [extendSegmentedCues=true]\n * Enable/disable patching of segmented cues in order to merge as a single cue by extending cue end time.\n * @property {object} [webvtt={customRenderingEnabled=false}]\n * Enables the custom rendering for WebVTT captions. For details refer to the \"Subtitles and Captions\" sample section of dash.js.\n * Custom WebVTT rendering requires the external library vtt.js that can be found in the contrib folder.\n */\n\n/**\n * @typedef {Object} LiveCatchupSettings\n * @property {number} [maxDrift=NaN]\n * Use this method to set the maximum latency deviation allowed before dash.js to do a seeking to live position.\n *\n * In low latency mode, when the difference between the measured latency and the target one, as an absolute number, is higher than the one sets with this method, then dash.js does a seek to live edge position minus the target live delay.\n *\n * LowLatencyMaxDriftBeforeSeeking should be provided in seconds.\n *\n * If 0, then seeking operations won't be used for fixing latency deviations.\n *\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\n * @property {number} [playbackRate={min: NaN, max: NaN}]\n * Use this parameter to set the minimum and maximum catch up rates, as percentages, for low latency live streams.\n *\n * In low latency mode, when measured latency is higher/lower than the target one, dash.js increases/decreases playback rate respectively up to (+/-) the percentage defined with this method until target is reached.\n *\n * Valid values for min catch up rate are in the range -0.5 to 0 (-50% to 0% playback rate decrease)\n *\n * Valid values for max catch up rate are in the range 0 to 1 (0% to 100% playback rate increase).\n *\n * Set min and max to NaN to turn off live catch up feature.\n *\n * These playback rate limits take precedence over any PlaybackRate values in ServiceDescription elements in an MPD. If only one of the min/max properties is given a value, the property without a value will not fall back to a ServiceDescription value. Its default value of NaN will be used.\n *\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\n * @property {number} [playbackBufferMin=0.5]\n * Use this parameter to specify the minimum buffer which is used for LoL+ based playback rate reduction.\n *\n *\n * @property {boolean} [enabled=null]\n * Use this parameter to enable the catchup mode for non low-latency streams.\n *\n * @property {string} [mode=\"liveCatchupModeDefault\"]\n * Use this parameter to switch between different catchup modes.\n *\n * Options: \"liveCatchupModeDefault\" or \"liveCatchupModeLOLP\".\n *\n * Note: Catch-up mechanism is automatically applied when playing low latency live streams.\n */\n\n/**\n * @typedef {Object} RequestTypeSettings\n * @property {number} [MPD]\n * Manifest type of requests.\n * @property {number} [XLinkExpansion]\n * XLink expansion type of requests.\n * @property {number} [InitializationSegment]\n * Request to retrieve an initialization segment.\n * @property {number} [IndexSegment]\n * Request to retrieve an index segment (SegmentBase).\n * @property {number} [MediaSegment]\n * Request to retrieve a media segment (video/audio/image/text chunk).\n * @property {number} [BitstreamSwitchingSegment]\n * Bitrate stream switching type of request.\n * @property {number} [FragmentInfoSegment]\n * Request to retrieve a FragmentInfo segment (specific to Smooth Streaming live streams).\n * @property {number} [other]\n * Other type of request.\n * @property {number} [lowLatencyReductionFactor]\n * For low latency mode, values of type of request are divided by lowLatencyReductionFactor.\n *\n * Note: It's not type of request.\n * @property {number} [lowLatencyMultiplyFactor]\n * For low latency mode, values of type of request are multiplied by lowLatencyMultiplyFactor.\n *\n * Note: It's not type of request.\n */\n\n/**\n * @typedef {Object} Protection\n * @property {boolean} [keepProtectionMediaKeys=false]\n * Set the value for the ProtectionController and MediaKeys life cycle.\n *\n * If true, the ProtectionController and then created MediaKeys and MediaKeySessions will be preserved during the MediaPlayer lifetime.\n * @property {boolean} [ignoreEmeEncryptedEvent=false]\n * If set to true the player will ignore \"encrypted\" and \"needkey\" events thrown by the EME.\n *\n * @property {boolean} [detectPlayreadyMessageFormat=true]\n * If set to true the player will use the raw unwrapped message from the Playready CDM\n */\n\n/**\n * @typedef {Object} Capabilities\n * @property {boolean} [filterUnsupportedEssentialProperties=true]\n * Enable to filter all the AdaptationSets and Representations which contain an unsupported \\<EssentialProperty\\> element.\n * @property {boolean} [useMediaCapabilitiesApi=false]\n * Enable to use the MediaCapabilities API to check whether codecs are supported. If disabled MSE.isTypeSupported will be used instead.\n */\n\n/**\n * @typedef {Object} AbrSettings\n * @property {string} [movingAverageMethod=\"slidingWindow\"]\n * Sets the moving average method used for smoothing throughput estimates.\n *\n * Valid methods are \"slidingWindow\" and \"ewma\".\n *\n * The call has no effect if an invalid method is passed.\n *\n * The sliding window moving average method computes the average throughput using the last four segments downloaded.\n *\n * If the stream is live (as opposed to VOD), then only the last three segments are used.\n *\n * If wide variations in throughput are detected, the number of segments can be dynamically increased to avoid oscillations.\n *\n * The exponentially weighted moving average (EWMA) method computes the average using exponential smoothing.\n *\n * Two separate estimates are maintained, a fast one with a three-second half life and a slow one with an eight-second half life.\n *\n * The throughput estimate at any time is the minimum of the fast and slow estimates.\n *\n * This allows a fast reaction to a bandwidth drop and prevents oscillations on bandwidth spikes.\n * @property {string} [ABRStrategy=\"abrDynamic\"]\n * Returns the current ABR strategy being used: \"abrDynamic\", \"abrBola\" or \"abrThroughput\".\n * @property {object} [trackSwitchMode={video: \"neverReplace\", audio: \"alwaysReplace\"}]\n * @property {object} [additionalAbrRules={insufficientBufferRule: true,switchHistoryRule: true,droppedFramesRule: true,abandonRequestsRule: true}]\n * Enable/Disable additional ABR rules in case ABRStrategy is set to \"abrDynamic\", \"abrBola\" or \"abrThroughput\".\n * @property {number} [bandwidthSafetyFactor=0.9]\n * Standard ABR throughput rules multiply the throughput by this value.\n *\n * It should be between 0 and 1, with lower values giving less rebuffering (but also lower quality).\n * @property {boolean} [useDefaultABRRules=true]\n * Should the default ABR rules be used, or the custom ones added.\n * @property {boolean} [useDeadTimeLatency=true]\n * If true, only the download portion will be considered part of the download bitrate and latency will be regarded as static.\n *\n * If false, the reciprocal of the whole transfer time will be used.\n * @property {boolean} [limitBitrateByPortal=false]\n * If true, the size of the video portal will limit the max chosen video resolution.\n * @property {boolean} [usePixelRatioInLimitBitrateByPortal=false]\n * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.\n *\n * Useful on, for example, retina displays.\n * @property {module:Settings~AudioVideoSettings} [maxBitrate={audio: -1, video: -1}]\n * The maximum bitrate that the ABR algorithms will choose. This value is specified in kbps.\n *\n * Use -1 for no limit.\n * @property {module:Settings~AudioVideoSettings} [minBitrate={audio: -1, video: -1}]\n * The minimum bitrate that the ABR algorithms will choose. This value is specified in kbps.\n *\n * Use -1 for no limit.\n * @property {module:Settings~AudioVideoSettings} [maxRepresentationRatio={audio: 1, video: 1}]\n * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed, as a proportion of the size of the representation set.\n *\n * You can set or remove this cap at anytime before or during playback.\n *\n * To clear this setting you set the value to 1.\n *\n * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation, i.e. the lowest value from executing these rules is used.\n *\n * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.\n * @property {module:Settings~AudioVideoSettings} [initialBitrate={audio: -1, video: -1}]\n * Explicitly set the starting bitrate for audio or video. This value is specified in kbps.\n *\n * Use -1 to let the player decide.\n * @property {module:Settings~AudioVideoSettings} [initialRepresentationRatio={audio: -1, video: -1}]\n * Explicitly set the initial representation ratio.\n *\n * If initalBitrate is specified, this is ignored.\n * @property {module:Settings~AudioVideoSettings} [autoSwitchBitrate={audio: true, video: true}]\n * Indicates whether the player should enable ABR algorithms to switch the bitrate.\n *\n * @property {string} [fetchThroughputCalculationMode=\"abrFetchThroughputCalculationDownloadedData\"]\n * Algorithm to determine the throughput in case the Fetch API is used for low latency streaming.\n *\n * For details please check the samples section and FetchLoader.js.\n */\n\n/**\n * @typedef {Object} module:Settings~CmcdSettings\n * @property {boolean} [enable=false]\n * Enable or disable the CMCD reporting.\n * @property {string} [sid]\n * GUID identifying the current playback session.\n *\n * Should be in UUID format.\n *\n * If not specified a UUID will be automatically generated.\n * @property {string} [cid]\n * A unique string to identify the current content.\n *\n * If not specified it will be a hash of the MPD url.\n * @property {number} [rtp]\n * The requested maximum throughput that the client considers sufficient for delivery of the asset.\n *\n * If not specified this value will be dynamically calculated in the CMCDModel based on the current buffer level.\n * @property {number} [rtpSafetyFactor=5]\n * This value is used as a factor for the rtp value calculation: rtp = minBandwidth * rtpSafetyFactor\n *\n * If not specified this value defaults to 5. Note that this value is only used when no static rtp value is defined.\n * @property {number} [mode=\"query\"]\n * The method to use to attach cmcd metrics to the requests. 'query' to use query parameters, 'header' to use http headers.\n *\n * If not specified this value defaults to 'query'.\n * @property {Array.<string>} [enabledKeys]\n * This value is used to specify the desired CMCD parameters. Parameters not included in this list are not reported.\n */\n\n/**\n * @typedef {Object} module:Settings~CmsdSettings\n * @property {boolean} [enabled=false]\n * Enable or disable the CMSD response headers parsing.\n * @property {module:Settings~CmsdAbrSettings} [abr]\n * Sets additional ABR rules based on CMSD response headers.\n */\n\n/**\n * @typedef {Object} CmsdAbrSettings\n * @property {boolean} [applyMb=false]\n * Set to true if dash.js should apply CMSD maximum suggested bitrate in ABR logic.\n * @property {number} [etpWeightRatio=0]\n * Sets the weight ratio (between 0 and 1) that shall be applied on CMSD estimated throuhgput compared to measured throughput when calculating throughput.\n */\n\n/**\n * @typedef {Object} Metrics\n * @property {number} [metricsMaxListDepth=100]\n * Maximum number of metrics that are persisted per type.\n */\n\n/**\n * @typedef {Object} StreamingSettings\n * @property {number} [abandonLoadTimeout=10000]\n * A timeout value in seconds, which during the ABRController will block switch-up events.\n *\n * This will only take effect after an abandoned fragment event occurs.\n * @property {number} [wallclockTimeUpdateInterval=100]\n * How frequently the wallclockTimeUpdated internal event is triggered (in milliseconds).\n * @property {number} [manifestUpdateRetryInterval=100]\n * For live streams, set the interval-frequency in milliseconds at which dash.js will check if the current manifest is still processed before downloading the next manifest once the minimumUpdatePeriod time has.\n * @property {boolean} [cacheInitSegments=false]\n * Enables the caching of init segments to avoid requesting the init segments before each representation switch.\n * @property {boolean} [applyServiceDescription=true]\n * Set to true if dash.js should use the parameters defined in ServiceDescription elements\n * @property {boolean} [applyProducerReferenceTime=true]\n * Set to true if dash.js should use the parameters defined in ProducerReferenceTime elements in combination with ServiceDescription elements.\n * @property {boolean} [applyContentSteering=true]\n * Set to true if dash.js should apply content steering during playback.\n * @property {number} [eventControllerRefreshDelay=100]\n * For multi-period streams, overwrite the manifest mediaPresentationDuration attribute with the sum of period durations if the manifest mediaPresentationDuration is greater than the sum of period durations\n * @property {boolean} [enableManifestDurationMismatchFix=true]\n * Overwrite the manifest segments base information timescale attributes with the timescale set in initialization segments\n * @property {boolean} [enableManifestTimescaleMismatchFix=false]\n * Defines the delay in milliseconds between two consecutive checks for events to be fired.\n * @property {boolean} [parseInbandPrft=false]\n * Set to true if dash.js should parse inband prft boxes (ProducerReferenceTime) and trigger events.\n * @property {module:Settings~Metrics} metrics Metric settings\n * @property {module:Settings~LiveDelay} delay Live Delay settings\n * @property {module:Settings~TimeShiftBuffer} timeShiftBuffer TimeShiftBuffer settings\n * @property {module:Settings~Protection} protection DRM related settings\n * @property {module:Settings~Capabilities} capabilities Capability related settings\n * @property {module:Settings~Buffer}  buffer Buffer related settings\n * @property {module:Settings~Gaps}  gaps Gap related settings\n * @property {module:Settings~UtcSynchronizationSettings} utcSynchronization Settings related to UTC clock synchronization\n * @property {module:Settings~Scheduling} scheduling Settings related to segment scheduling\n * @property {module:Settings~Text} text Settings related to Subtitles and captions\n * @property {module:Settings~LiveCatchupSettings} liveCatchup  Settings related to live catchup.\n * @property {module:Settings~CachingInfoSettings} [lastBitrateCachingInfo={enabled: true, ttl: 360000}]\n * Set to false if you would like to disable the last known bit rate from being stored during playback and used to set the initial bit rate for subsequent playback within the expiration window.\n *\n * The default expiration is one hour, defined in milliseconds.\n *\n * If expired, the default initial bit rate (closest to 1000 kbps) will be used for that session and a new bit rate will be stored during that session.\n * @property {module:Settings~AudioVideoSettings} [cacheLoadThresholds={video: 50, audio: 5}]\n * For a given media type, the threshold which defines if the response to a fragment request is coming from browser cache or not.\n * @property {module:Settings~AudioVideoSettings} [trackSwitchMode={video: \"neverReplace\", audio: \"alwaysReplace\"}]\n * For a given media type defines if existing segments in the buffer should be overwritten once the track is switched. For instance if the user switches the audio language the existing segments in the audio buffer will be replaced when setting this value to \"alwaysReplace\".\n *\n * Possible values\n *\n * - Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE\n * Replace existing segments in the buffer\n *\n * - Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n * Do not replace existing segments in the buffer\n *\n * @property {string} [selectionModeForInitialTrack=\"highestSelectionPriority\"]\n * Sets the selection mode for the initial track. This mode defines how the initial track will be selected if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\n *\n * Possible values\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY\n * This mode makes the player select the track with the highest selectionPriority as defined in the manifest. If not selectionPriority is given we fallback to TRACK_SELECTION_MODE_HIGHEST_BITRATE. This mode is a default mode.\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE\n * This mode makes the player select the track with a highest bitrate.\n *\n * - Constants.TRACK_SELECTION_MODE_FIRST_TRACK\n * This mode makes the player select the first track found in the manifest.\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY\n * This mode makes the player select the track with the lowest bitrate per pixel average.\n *\n * - Constants.TRACK_SELECTION_MODE_WIDEST_RANGE\n * This mode makes the player select the track with a widest range of bitrates.\n *\n *\n * @property {number} [fragmentRequestTimeout=20000]\n * Time in milliseconds before timing out on loading a media fragment.\n *\n * @property {number} [fragmentRequestProgressTimeout=-1]\n * Time in milliseconds before timing out on loading progress of a media fragment.\n *\n * @property {number} [manifestRequestTimeout=10000]\n * Time in milliseconds before timing out on loading a manifest.\n *\n * Fragments that timeout are retried as if they failed.\n * @property {module:Settings~RequestTypeSettings} [retryIntervals]\n * Time in milliseconds of which to reload a failed file load attempt.\n *\n * For low latency mode these values are divided by lowLatencyReductionFactor.\n * @property {module:Settings~RequestTypeSettings} [retryAttempts]\n * Total number of retry attempts that will occur on a file load before it fails.\n *\n * For low latency mode these values are multiplied by lowLatencyMultiplyFactor.\n * @property {module:Settings~AbrSettings} abr\n * Adaptive Bitrate algorithm related settings.\n * @property {module:Settings~CmcdSettings} cmcd\n * Settings related to Common Media Client Data reporting.\n * @property {module:Settings~CmsdSettings} cmsd\n * Settings related to Common Media Server Data parsing.\n */\n\n\n/**\n * @class\n * @ignore\n */\nfunction Settings() {\n    let instance;\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const DISPATCH_KEY_MAP = {\n        'streaming.delay.liveDelay': Events.SETTING_UPDATED_LIVE_DELAY,\n        'streaming.delay.liveDelayFragmentCount': Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT,\n        'streaming.liveCatchup.enabled': Events.SETTING_UPDATED_CATCHUP_ENABLED,\n        'streaming.liveCatchup.playbackRate.min': Events.SETTING_UPDATED_PLAYBACK_RATE_MIN,\n        'streaming.liveCatchup.playbackRate.max': Events.SETTING_UPDATED_PLAYBACK_RATE_MAX\n    };\n\n\n    /**\n     * @const {PlayerSettings} defaultSettings\n     * @ignore\n     */\n    const defaultSettings = {\n        debug: {\n            logLevel: Debug.LOG_LEVEL_WARNING,\n            dispatchEvent: false\n        },\n        streaming: {\n            abandonLoadTimeout: 10000,\n            wallclockTimeUpdateInterval: 100,\n            manifestUpdateRetryInterval: 100,\n            cacheInitSegments: false,\n            applyServiceDescription: true,\n            applyProducerReferenceTime: true,\n            applyContentSteering: true,\n            eventControllerRefreshDelay: 100,\n            enableManifestDurationMismatchFix: true,\n            parseInbandPrft: false,\n            enableManifestTimescaleMismatchFix: false,\n            capabilities: {\n                filterUnsupportedEssentialProperties: true,\n                useMediaCapabilitiesApi: false\n            },\n            timeShiftBuffer: {\n                calcFromSegmentTimeline: false,\n                fallbackToSegmentTimeline: true\n            },\n            metrics: {\n                maxListDepth: 100\n            },\n            delay: {\n                liveDelayFragmentCount: NaN,\n                liveDelay: NaN,\n                useSuggestedPresentationDelay: true\n            },\n            protection: {\n                keepProtectionMediaKeys: false,\n                ignoreEmeEncryptedEvent: false,\n                detectPlayreadyMessageFormat: true,\n            },\n            buffer: {\n                enableSeekDecorrelationFix: false,\n                fastSwitchEnabled: true,\n                flushBufferAtTrackSwitch: false,\n                reuseExistingSourceBuffers: true,\n                bufferPruningInterval: 10,\n                bufferToKeep: 20,\n                bufferTimeAtTopQuality: 30,\n                bufferTimeAtTopQualityLongForm: 60,\n                initialBufferLevel: NaN,\n                stableBufferTime: 12,\n                longFormContentDurationThreshold: 600,\n                stallThreshold: 0.3,\n                useAppendWindow: true,\n                setStallState: true,\n                avoidCurrentTimeRangePruning: false,\n                useChangeTypeForTrackSwitch: true\n            },\n            gaps: {\n                jumpGaps: true,\n                jumpLargeGaps: true,\n                smallGapLimit: 1.5,\n                threshold: 0.3,\n                enableSeekFix: true,\n                enableStallFix: false,\n                stallSeek: 0.1\n            },\n            utcSynchronization: {\n                enabled: true,\n                useManifestDateHeaderTimeSource: true,\n                backgroundAttempts: 2,\n                timeBetweenSyncAttempts: 30,\n                maximumTimeBetweenSyncAttempts: 600,\n                minimumTimeBetweenSyncAttempts: 2,\n                timeBetweenSyncAttemptsAdjustmentFactor: 2,\n                maximumAllowedDrift: 100,\n                enableBackgroundSyncAfterSegmentDownloadError: true,\n                defaultTimingSource: {\n                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\n                    value: 'https://time.akamai.com/?iso&ms'\n                }\n            },\n            scheduling: {\n                defaultTimeout: 500,\n                lowLatencyTimeout: 0,\n                scheduleWhilePaused: true\n            },\n            text: {\n                defaultEnabled: true,\n                extendSegmentedCues: true,\n                webvtt: {\n                    customRenderingEnabled: false\n                }\n            },\n            liveCatchup: {\n                maxDrift: NaN,\n                playbackRate: {\n                    min: NaN,\n                    max: NaN\n                },\n                playbackBufferMin: 0.5,\n                enabled: null,\n                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\n            },\n            lastBitrateCachingInfo: {\n                enabled: true,\n                ttl: 360000\n            },\n            lastMediaSettingsCachingInfo: {\n                enabled: true,\n                ttl: 360000\n            },\n            cacheLoadThresholds: {\n                video: 50,\n                audio: 5\n            },\n            trackSwitchMode: {\n                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n            },\n            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\n            fragmentRequestTimeout: 20000,\n            fragmentRequestProgressTimeout: -1,\n            manifestRequestTimeout: 10000,\n            retryIntervals: {\n                [HTTPRequest.MPD_TYPE]: 500,\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.LICENSE]: 1000,\n                [HTTPRequest.OTHER_TYPE]: 1000,\n                lowLatencyReductionFactor: 10\n            },\n            retryAttempts: {\n                [HTTPRequest.MPD_TYPE]: 3,\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\n                [HTTPRequest.LICENSE]: 3,\n                [HTTPRequest.OTHER_TYPE]: 3,\n                lowLatencyMultiplyFactor: 5\n            },\n            abr: {\n                movingAverageMethod: Constants.MOVING_AVERAGE_SLIDING_WINDOW,\n                ABRStrategy: Constants.ABR_STRATEGY_DYNAMIC,\n                additionalAbrRules: {\n                    insufficientBufferRule: true,\n                    switchHistoryRule: true,\n                    droppedFramesRule: true,\n                    abandonRequestsRule: true\n                },\n                bandwidthSafetyFactor: 0.9,\n                useDefaultABRRules: true,\n                useDeadTimeLatency: true,\n                limitBitrateByPortal: false,\n                usePixelRatioInLimitBitrateByPortal: false,\n                maxBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                minBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                maxRepresentationRatio: {\n                    audio: 1,\n                    video: 1\n                },\n                initialBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                initialRepresentationRatio: {\n                    audio: -1,\n                    video: -1\n                },\n                autoSwitchBitrate: {\n                    audio: true,\n                    video: true\n                },\n                fetchThroughputCalculationMode: Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING\n            },\n            cmcd: {\n                enabled: false,\n                sid: null,\n                cid: null,\n                rtp: null,\n                rtpSafetyFactor: 5,\n                mode: Constants.CMCD_MODE_QUERY,\n                enabledKeys: ['br', 'd', 'ot', 'tb', 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su', 'bs', 'rtp', 'cid', 'pr', 'sf', 'sid', 'st', 'v']\n            },\n            cmsd: {\n                enabled: false,\n                abr: {\n                    applyMb: false,\n                    etpWeightRatio: 0\n                }\n            }\n        },\n        errors: {\n            recoverAttempts: {\n                mediaErrorDecode: 5\n            }\n        }\n    };\n\n    let settings = Utils.clone(defaultSettings);\n\n    //Merge in the settings. If something exists in the new config that doesn't match the schema of the default config,\n    //regard it as an error and log it.\n    function mixinSettings(source, dest, path) {\n        for (let n in source) {\n            if (source.hasOwnProperty(n)) {\n                if (dest.hasOwnProperty(n)) {\n                    if (typeof source[n] === 'object' && !(source[n] instanceof Array) && source[n] !== null) {\n                        mixinSettings(source[n], dest[n], path.slice() + n + '.');\n                    } else {\n                        dest[n] = Utils.clone(source[n]);\n                        if (DISPATCH_KEY_MAP[path + n]) {\n                            eventBus.trigger(DISPATCH_KEY_MAP[path + n]);\n                        }\n                    }\n                } else {\n                    console.error('Settings parameter ' + path + n + ' is not supported');\n                }\n            }\n        }\n    }\n\n    /**\n     * Return the settings object. Don't copy/store this object, you won't get updates.\n     * @func\n     * @instance\n     */\n    function get() {\n        return settings;\n    }\n\n    /**\n     * @func\n     * @instance\n     * @param {object} settingsObj - This should be a partial object of the Settings.Schema type. That is, fields defined should match the path (e.g.\n     * settingsObj.streaming.abr.autoSwitchBitrate.audio -> defaultSettings.streaming.abr.autoSwitchBitrate.audio). Where an element's path does\n     * not match it is ignored, and a warning is logged.\n     *\n     * Use to change the settings object. Any new values defined will overwrite the settings and anything undefined will not change.\n     * Implementers of new settings should add it in an approriate namespace to the defaultSettings object and give it a default value (that is not undefined).\n     *\n     */\n    function update(settingsObj) {\n        if (typeof settingsObj === 'object') {\n            mixinSettings(settingsObj, settings, '');\n        }\n    }\n\n    /**\n     * Resets the settings object. Everything is set to its default value.\n     * @func\n     * @instance\n     *\n     */\n    function reset() {\n        settings = Utils.clone(defaultSettings);\n    }\n\n    instance = {\n        get,\n        update,\n        reset\n    };\n\n    return instance;\n}\n\n\nSettings.__dashjs_factory_name = 'Settings';\nlet factory = FactoryMaker.getSingletonFactory(Settings);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\n\nimport path from 'path-browserify'\nimport { UAParser } from 'ua-parser-js'\n\nclass Utils {\n    static mixin(dest, source, copy) {\n        let s;\n        let empty = {};\n        if (dest) {\n            for (let name in source) {\n                if (source.hasOwnProperty(name)) {\n                    s = source[name];\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\n                            dest[name] = Utils.mixin(dest[name], s, copy);\n                        } else {\n                            dest[name] = copy(s);\n                        }\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    static clone(src) {\n        if (!src || typeof src !== 'object') {\n            return src; // anything\n        }\n        let r;\n        if (src instanceof Array) {\n            // array\n            r = [];\n            for (let i = 0, l = src.length; i < l; ++i) {\n                if (i in src) {\n                    r.push(Utils.clone(src[i]));\n                }\n            }\n        } else {\n            r = {};\n        }\n        return Utils.mixin(r, src, Utils.clone);\n    }\n\n    static addAditionalQueryParameterToUrl(url, params) {\n        try {\n            if (!params || params.length === 0) {\n                return url;\n            }\n\n            let modifiedUrl = new URL(url);\n\n            params.forEach((param) => {\n                if (param.key && param.value) {\n                    modifiedUrl.searchParams.set(param.key, param.value);\n                }\n            });\n\n            return modifiedUrl.href;\n\n\n        } catch (e) {\n            return url;\n        }\n    }\n\n    static parseHttpHeaders(headerStr) {\n        let headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\n        // which send a string starting with a \"\\n\" character\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            let headerPair = headerPairs[i];\n            let index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    static generateUuid() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static generateHashCode(string) {\n        let hash = 0;\n\n        if (string.length === 0) {\n            return hash;\n        }\n\n        for (let i = 0; i < string.length; i++) {\n            const chr = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0;\n        }\n        return hash;\n    }\n\n    /**\n     * Compares both urls and returns a relative url (target relative to original)\n     * @param {string} originalUrl\n     * @param {string} targetUrl\n     * @return {string|*}\n     */\n    static getRelativeUrl(originalUrl, targetUrl) {\n        try {\n            const original = new URL(originalUrl);\n            const target = new URL(targetUrl);\n\n            // Unify the protocol to compare the origins\n            original.protocol = target.protocol;\n            if (original.origin !== target.origin) {\n                return targetUrl;\n            }\n\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\n\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\n\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\n            if (target.pathname.length < relativePath.length) {\n                return target.pathname;\n            }\n            return relativePath;\n        } catch (e) {\n            return targetUrl\n        }\n    }\n\n    static parseUserAgent(ua = null) {\n        try {\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\n\n            return UAParser(uaString);\n        }\n        catch(e) {\n            return {};\n        }\n    }\n\n    /**\n     * Checks for existence of \"http\" or \"https\" in a string\n     * @param string\n     * @returns {boolean}\n     */\n    static stringHasProtocol(string) {\n        return (/(http(s?)):\\/\\//i.test(string))\n    }\n}\n\nexport default Utils;\n","const VERSION = '__VERSION__';\nexport function getVersionString() {\n    return VERSION;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * These are internal events that should not be needed at the player level.\n * If you find and event in here that you would like access to from MediaPlayer level\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.ATTEMPT_BACKGROUND_SYNC = 'attemptBackgroundSync';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BYTES_APPENDED_END_FRAGMENT = 'bytesAppendedEndFragment';\n        this.BUFFER_REPLACEMENT_STARTED = 'bufferReplacementStarted';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CMSD_STATIC_HEADER = 'cmsdStaticHeader';\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.INBAND_EVENTS = 'inbandEvents';\n        this.INITIAL_STREAM_SWITCH = 'initialStreamSwitch';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_FRAGMENT_NEEDED = 'initFragmentNeeded';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.ORIGINAL_MANIFEST_LOADED = 'originalManifestLoaded';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.LOADING_DATA_PROGRESS = 'loadingDataProgress';\n        this.LOADING_ABANDONED = 'loadingAborted';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.MEDIA_FRAGMENT_NEEDED = 'mediaFragmentNeeded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.SEGMENT_LOCATION_BLACKLIST_ADD = 'segmentLocationBlacklistAdd';\n        this.SEGMENT_LOCATION_BLACKLIST_CHANGED = 'segmentLocationBlacklistChanged';\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD = 'serviceLocationBlacklistAdd';\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD = 'serviceLocationLocationBlacklistAdd';\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED = 'serviceLocationLocationBlacklistChanged';\n        this.SET_FRAGMENTED_TEXT_AFTER_DISABLED = 'setFragmentedTextAfterDisabled';\n        this.SET_NON_FRAGMENTED_TEXT = 'setNonFragmentedText';\n        this.SOURCE_BUFFER_ERROR = 'sourceBufferError';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_REQUESTING_COMPLETED = 'streamRequestingCompleted';\n        this.TEXT_TRACKS_QUEUE_INITIALIZED = 'textTracksQueueInitialized';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.UPDATE_TIME_SYNC_OFFSET = 'updateTimeSyncOffset';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n        this.SEEK_TARGET = 'seekTarget';\n        this.SETTING_UPDATED_LIVE_DELAY = 'settingUpdatedLiveDelay';\n        this.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT = 'settingUpdatedLiveDelayFragmentCount';\n        this.SETTING_UPDATED_CATCHUP_ENABLED = 'settingUpdatedCatchupEnabled';\n        this.SETTING_UPDATED_PLAYBACK_RATE_MIN = 'settingUpdatedPlaybackRateMin';\n        this.SETTING_UPDATED_PLAYBACK_RATE_MAX = 'settingUpdatedPlaybackRateMax';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FactoryMaker from '../core/FactoryMaker';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\nimport {\n    replaceIDForTemplate,\n    replaceTokenForTemplate,\n    unescapeDollarsInTemplate\n} from './utils/SegmentsUtils';\nimport DashConstants from './constants/DashConstants';\n\n\nconst DEFAULT_ADJUST_SEEK_TIME_THRESHOLD = 0.5;\nconst SEGMENT_START_TIME_DELTA = 0.001;\n\nfunction DashHandler(config) {\n\n    config = config || {};\n\n    const eventBus = config.eventBus;\n    const debug = config.debug;\n    const urlUtils = config.urlUtils;\n    const type = config.type;\n    const streamInfo = config.streamInfo;\n    const segmentsController = config.segmentsController;\n    const timelineConverter = config.timelineConverter;\n    const baseURLController = config.baseURLController;\n\n    let instance,\n        logger,\n        lastSegment,\n        isDynamicManifest,\n        mediaHasFinished;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\n    }\n\n    function initialize(isDynamic) {\n        isDynamicManifest = isDynamic;\n        mediaHasFinished = false;\n        segmentsController.initialize(isDynamic);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function resetInitialSettings() {\n        lastSegment = null;\n    }\n\n    function reset() {\n        resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\n    }\n\n    function _setRequestUrl(request, destination, representation) {\n        const baseURL = baseURLController.resolve(representation.path);\n        let url,\n            serviceLocation,\n            queryParams = {};\n\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\n            url = destination;\n        } else {\n            url = baseURL.url;\n            serviceLocation = baseURL.serviceLocation;\n            queryParams = baseURL.queryParams;\n\n            if (destination) {\n                url = urlUtils.resolve(destination, url);\n            }\n        }\n\n        if (urlUtils.isRelative(url)) {\n            return false;\n        }\n\n        request.url = url;\n        request.serviceLocation = serviceLocation;\n        request.queryParams = queryParams;\n\n        return true;\n    }\n\n    function getInitRequest(mediaInfo, representation) {\n        if (!representation) return null;\n        return _generateInitRequest(mediaInfo, representation, getType());\n    }\n\n    function _generateInitRequest(mediaInfo, representation, mediaType) {\n        const request = new FragmentRequest();\n        const period = representation.adaptation.period;\n        const presentationStartTime = period.start;\n\n        request.mediaType = mediaType;\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\n        request.range = representation.range;\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation, isDynamicManifest);\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, representation, isDynamicManifest);\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        if (_setRequestUrl(request, representation.initialization, representation)) {\n            request.url = replaceTokenForTemplate(request.url, 'Bandwidth', representation.bandwidth);\n            return request;\n        }\n    }\n\n    function _getRequestForSegment(mediaInfo, segment) {\n        if (segment === null || segment === undefined) {\n            return null;\n        }\n\n        const request = new FragmentRequest();\n        const representation = segment.representation;\n        const bandwidth = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;\n        let url = segment.media;\n\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\n        url = replaceIDForTemplate(url, representation.id);\n        url = unescapeDollarsInTemplate(url);\n\n        request.mediaType = getType();\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.range = segment.mediaRange;\n        request.startTime = segment.presentationStartTime;\n        request.mediaStartTime = segment.mediaStartTime;\n        request.duration = segment.duration;\n        request.timescale = representation.timescale;\n        request.availabilityStartTime = segment.availabilityStartTime;\n        request.availabilityEndTime = segment.availabilityEndTime;\n        request.availabilityTimeComplete = representation.availabilityTimeComplete;\n        request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = segment.index;\n        request.mediaInfo = mediaInfo;\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n\n        if (_setRequestUrl(request, url, representation)) {\n            return request;\n        }\n    }\n\n    function isLastSegmentRequested(representation, bufferingTime) {\n        if (!representation || !lastSegment) {\n            return false;\n        }\n\n        // Either transition from dynamic to static was done or no next static segment found\n        if (mediaHasFinished) {\n            return true;\n        }\n\n        // Period is endless\n        if (!isFinite(representation.adaptation.period.duration)) {\n            return false;\n        }\n\n        // we are replacing existing stuff in the buffer for instance after a track switch\n        if (lastSegment.presentationStartTime + lastSegment.duration > bufferingTime) {\n            return false;\n        }\n\n        // Additional segment references may be added to the last period.\n        // Additional periods may be added to the end of the MPD.\n        // Segment references SHALL NOT be added to any period other than the last period.\n        // An MPD update MAY combine adding segment references to the last period with adding of new periods. An MPD update that adds content MAY be combined with an MPD update that removes content.\n        // The index of the last requested segment is higher than the number of available segments.\n        // For SegmentTimeline and SegmentTemplate the index does not include the startNumber.\n        // For SegmentList the index includes the startnumber which is why the numberOfSegments includes this as well\n        if (representation.mediaFinishedInformation && !isNaN(representation.mediaFinishedInformation.numberOfSegments) && !isNaN(lastSegment.index) && lastSegment.index >= (representation.mediaFinishedInformation.numberOfSegments - 1)) {\n            // For static manifests and Template addressing we can compare the index against the number of available segments\n            if (!isDynamicManifest || representation.segmentInfoType === DashConstants.SEGMENT_TEMPLATE) {\n                return true;\n            }\n            // For SegmentList we need to check if the next period is signaled\n            else if (isDynamicManifest && representation.segmentInfoType === DashConstants.SEGMENT_LIST && representation.adaptation.period.nextPeriodId) {\n                return true\n            }\n        }\n\n        // For dynamic SegmentTimeline manifests we need to check if the next period is already signaled and the segment we fetched before is the last one that is signaled.\n        // We can not simply use the index, as numberOfSegments might have decreased after an MPD update\n        return !!(isDynamicManifest && representation.adaptation.period.nextPeriodId && representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE && representation.mediaFinishedInformation &&\n            !isNaN(representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment) && lastSegment && !isNaN(lastSegment.mediaStartTime) && !isNaN(lastSegment.duration) && lastSegment.mediaStartTime + lastSegment.duration >= (representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment - 0.05));\n    }\n\n\n    function getSegmentRequestForTime(mediaInfo, representation, time) {\n        let request = null;\n\n        if (!representation || !representation.segmentInfoType) {\n            return request;\n        }\n\n        const segment = segmentsController.getSegmentByTime(representation, time);\n        if (segment) {\n            lastSegment = segment;\n            logger.debug('Index for time ' + time + ' is ' + segment.index);\n            request = _getRequestForSegment(mediaInfo, segment);\n        }\n\n        return request;\n    }\n\n    /**\n     * This function returns the next segment request without modifying any internal variables. Any class (e.g CMCD Model) that needs information about the upcoming request should use this method.\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @return {FragmentRequest|null}\n     */\n    function getNextSegmentRequestIdempotent(mediaInfo, representation) {\n        let request = null;\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\n        const segment = segmentsController.getSegmentByIndex(\n            representation,\n            indexToRequest,\n            lastSegment ? lastSegment.mediaStartTime : -1\n        );\n        if (!segment) return null;\n        request = _getRequestForSegment(mediaInfo, segment);\n        return request;\n    }\n\n    /**\n     * Main function to get the next segment request.\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @return {FragmentRequest|null}\n     */\n    function getNextSegmentRequest(mediaInfo, representation) {\n        let request = null;\n\n        if (!representation || !representation.segmentInfoType) {\n            return null;\n        }\n\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\n\n        const segment = segmentsController.getSegmentByIndex(representation, indexToRequest, lastSegment ? lastSegment.mediaStartTime : -1);\n\n        // No segment found\n        if (!segment) {\n            // Dynamic manifest there might be something available in the next iteration\n            if (isDynamicManifest && !mediaHasFinished) {\n                logger.debug(getType() + ' No segment found at index: ' + indexToRequest + '. Wait for next loop');\n                return null;\n            } else {\n                mediaHasFinished = true;\n            }\n        } else {\n            request = _getRequestForSegment(mediaInfo, segment);\n            lastSegment = segment;\n        }\n\n        return request;\n    }\n\n    /**\n     * This function returns a time larger than the current time for which we can generate a request.\n     * This is useful in scenarios in which the user seeks into a gap in a dynamic Timeline manifest. We will not find a valid request then and need to adjust the seektime.\n     * @param {number} time\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @param {number} targetThreshold\n     * @return {number}\n     */\n    function getValidTimeAheadOfTargetTime(time, mediaInfo, representation, targetThreshold) {\n        try {\n\n            if (isNaN(time) || !mediaInfo || !representation) {\n                return NaN;\n            }\n\n            if (time < 0) {\n                time = 0;\n            }\n\n            if (isNaN(targetThreshold)) {\n                targetThreshold = DEFAULT_ADJUST_SEEK_TIME_THRESHOLD;\n            }\n\n            if (getSegmentRequestForTime(mediaInfo, representation, time)) {\n                return time;\n            }\n\n            if (representation.adaptation.period.start + representation.adaptation.period.duration < time) {\n                return NaN;\n            }\n\n            // If we have a duration look until the end of the duration, otherwise maximum 30 seconds\n            const end = isFinite(representation.adaptation.period.duration) ? representation.adaptation.period.start + representation.adaptation.period.duration : time + 30;\n            let currentUpperTime = Math.min(time + targetThreshold, end);\n            let adjustedTime = NaN;\n            let targetRequest = null;\n\n            while (currentUpperTime <= end) {\n                let upperRequest = null;\n\n                if (currentUpperTime <= end) {\n                    upperRequest = getSegmentRequestForTime(mediaInfo, representation, currentUpperTime);\n                }\n\n                if (upperRequest) {\n                    adjustedTime = currentUpperTime;\n                    targetRequest = upperRequest;\n                    break;\n                }\n\n                currentUpperTime += targetThreshold;\n            }\n\n            if (targetRequest) {\n                const requestEndTime = targetRequest.startTime + targetRequest.duration;\n\n                // Keep the original start time in case it is covered by a segment\n                if (time > targetRequest.startTime && requestEndTime - time > targetThreshold) {\n                    return time;\n                }\n\n                if (!isNaN(targetRequest.startTime) && time < targetRequest.startTime && adjustedTime > targetRequest.startTime) {\n                    // Apply delta to segment start time to get around rounding issues\n                    return targetRequest.startTime + SEGMENT_START_TIME_DELTA;\n                }\n\n                return Math.min(requestEndTime - targetThreshold, adjustedTime);\n            }\n\n            return adjustedTime;\n\n\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function getCurrentIndex() {\n        return lastSegment ? lastSegment.index : -1;\n    }\n\n    function _onDynamicToStatic() {\n        logger.debug('Dynamic stream complete');\n        mediaHasFinished = true;\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        getType,\n        getStreamInfo,\n        getInitRequest,\n        getSegmentRequestForTime,\n        getCurrentIndex,\n        getNextSegmentRequest,\n        isLastSegmentRequested,\n        reset,\n        getNextSegmentRequestIdempotent,\n        getValidTimeAheadOfTargetTime\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashHandler.__dashjs_factory_name = 'DashHandler';\nexport default FactoryMaker.getClassFactory(DashHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Dash constants declaration\n * @class\n * @ignore\n */\nclass DashConstants {\n\n    init() {\n        this.BASE_URL = 'BaseURL';\n        this.SEGMENT_BASE = 'SegmentBase';\n        this.SEGMENT_TEMPLATE = 'SegmentTemplate';\n        this.SEGMENT_LIST = 'SegmentList';\n        this.SEGMENT_URL = 'SegmentURL';\n        this.SEGMENT_TIMELINE = 'SegmentTimeline';\n        this.SEGMENT_PROFILES = 'segmentProfiles';\n        this.ADAPTATION_SET = 'AdaptationSet';\n        this.REPRESENTATION = 'Representation';\n        this.REPRESENTATION_INDEX = 'RepresentationIndex';\n        this.SUB_REPRESENTATION = 'SubRepresentation';\n        this.INITIALIZATION = 'Initialization';\n        this.INITIALIZATION_MINUS = 'initialization';\n        this.MPD = 'MPD';\n        this.PERIOD = 'Period';\n        this.ASSET_IDENTIFIER = 'AssetIdentifier';\n        this.EVENT_STREAM = 'EventStream';\n        this.ID = 'id';\n        this.PROFILES = 'profiles';\n        this.SERVICE_LOCATION = 'serviceLocation';\n        this.RANGE = 'range';\n        this.INDEX = 'index';\n        this.MEDIA = 'media';\n        this.BYTE_RANGE = 'byteRange';\n        this.INDEX_RANGE = 'indexRange';\n        this.MEDIA_RANGE = 'mediaRange';\n        this.VALUE = 'value';\n        this.CONTENT_TYPE = 'contentType';\n        this.MIME_TYPE = 'mimeType';\n        this.BITSTREAM_SWITCHING = 'BitstreamSwitching';\n        this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching';\n        this.CODECS = 'codecs';\n        this.DEPENDENCY_ID = 'dependencyId';\n        this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId';\n        this.METRICS = 'Metrics';\n        this.METRICS_MINUS = 'metrics';\n        this.REPORTING = 'Reporting';\n        this.WIDTH = 'width';\n        this.HEIGHT = 'height';\n        this.SAR = 'sar';\n        this.FRAMERATE = 'frameRate';\n        this.AUDIO_SAMPLING_RATE = 'audioSamplingRate';\n        this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod';\n        this.START_WITH_SAP = 'startWithSAP';\n        this.MAX_PLAYOUT_RATE = 'maxPlayoutRate';\n        this.CODING_DEPENDENCY = 'codingDependency';\n        this.SCAN_TYPE = 'scanType';\n        this.FRAME_PACKING = 'FramePacking';\n        this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration';\n        this.CONTENT_PROTECTION = 'ContentProtection';\n        this.ESSENTIAL_PROPERTY = 'EssentialProperty';\n        this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty';\n        this.SUPPLEMENTAL_PROPERTY_ASARRAY = 'SupplementalProperty_asArray';\n        this.INBAND_EVENT_STREAM = 'InbandEventStream';\n        this.PRODUCER_REFERENCE_TIME = 'ProducerReferenceTime';\n        this.INBAND = 'inband';\n        this.TYPE = 'type';\n        this.ACCESSIBILITY = 'Accessibility';\n        this.ROLE = 'Role';\n        this.RATING = 'Rating';\n        this.CONTENT_COMPONENT = 'ContentComponent';\n        this.SUBSET = 'Subset';\n        this.LANG = 'lang';\n        this.VIEWPOINT = 'Viewpoint';\n        this.VIEWPOINT_ASARRAY = 'Viewpoint_asArray';\n        this.ROLE_ASARRAY = 'Role_asArray';\n        this.REPRESENTATION_ASARRAY = 'Representation_asArray';\n        this.PRODUCERREFERENCETIME_ASARRAY = 'ProducerReferenceTime_asArray';\n        this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray';\n        this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray';\n        this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray';\n        this.MAIN = 'main';\n        this.DYNAMIC = 'dynamic';\n        this.STATIC = 'static';\n        this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration';\n        this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod';\n        this.CODEC_PRIVATE_DATA = 'codecPrivateData';\n        this.BANDWITH = 'bandwidth';\n        this.SOURCE_URL = 'sourceURL';\n        this.TIMESCALE = 'timescale';\n        this.DURATION = 'duration';\n        this.START_NUMBER = 'startNumber';\n        this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset';\n        this.AVAILABILITY_START_TIME = 'availabilityStartTime';\n        this.AVAILABILITY_END_TIME = 'availabilityEndTime';\n        this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth';\n        this.MAX_SEGMENT_DURATION = 'maxSegmentDuration';\n        this.PRESENTATION_TIME = 'presentationTime';\n        this.MIN_BUFFER_TIME = 'minBufferTime';\n        this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration';\n        this.START = 'start';\n        this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset';\n        this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete';\n        this.CENC_DEFAULT_KID = 'cenc:default_KID';\n        this.DVB_PRIORITY = 'dvb:priority';\n        this.DVB_WEIGHT = 'dvb:weight';\n        this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay';\n        this.SERVICE_DESCRIPTION = 'ServiceDescription';\n        this.SERVICE_DESCRIPTION_SCOPE = 'Scope';\n        this.SERVICE_DESCRIPTION_LATENCY = 'Latency';\n        this.SERVICE_DESCRIPTION_PLAYBACK_RATE = 'PlaybackRate';\n        this.SERVICE_DESCRIPTION_OPERATING_QUALITY = 'OperatingQuality';\n        this.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH = 'OperatingBandwidth';\n        this.PATCH_LOCATION = 'PatchLocation';\n        this.PATCH_LOCATION_AS_ARRAY = 'PatchLocation_asArray';\n        this.LOCATION = 'Location';\n        this.LOCATION_AS_ARRAY = 'Location_asArray';\n        this.PUBLISH_TIME = 'publishTime';\n        this.ORIGINAL_PUBLISH_TIME = 'originalPublishTime';\n        this.ORIGINAL_MPD_ID = 'mpdId';\n        this.WALL_CLOCK_TIME = 'wallClockTime';\n        this.PRESENTATION_TIME = 'presentationTime';\n        this.LABEL = 'Label';\n        this.GROUP_LABEL = 'GroupLabel';\n        this.CONTENT_STEERING = 'ContentSteering';\n        this.CONTENT_STEERING_AS_ARRAY = 'ContentSteering_asArray';\n        this.DEFAULT_SERVICE_LOCATION = 'defaultServiceLocation';\n        this.QUERY_BEFORE_START = 'queryBeforeStart';\n        this.CLIENT_REQUIREMENT = 'clientRequirement';\n        this.TTL = 'ttl';\n        this.CONTENT_STEERING_RESPONSE = {\n            VERSION: 'VERSION',\n            TTL: 'TTL',\n            RELOAD_URI: 'RELOAD-URI',\n            PATHWAY_PRIORITY : 'PATHWAY-PRIORITY',\n            PATHWAY_CLONES : 'PATHWAY-CLONES',\n            BASE_ID: 'BASE-ID',\n            ID: 'ID',\n            URI_REPLACEMENT: 'URI-REPLACEMENT',\n            HOST: 'HOST',\n            PARAMS: 'PARAMS'\n        };\n        this.PRODUCER_REFERENCE_TIME_TYPE = {\n            ENCODER: 'encoder',\n            CAPTURED: 'captured',\n            APPLICATION: 'application'\n        }\n        this.SEGMENT_ALIGNMENT = 'segmentAlignment';\n        this.SUB_SEGMENT_ALIGNMENT = 'subsegmentAlignment'\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new DashConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport TimelineSegmentsGetter from '../utils/TimelineSegmentsGetter';\nimport TemplateSegmentsGetter from '../utils/TemplateSegmentsGetter';\nimport ListSegmentsGetter from '../utils/ListSegmentsGetter';\nimport SegmentBaseGetter from '../utils/SegmentBaseGetter';\n\nfunction SegmentsController(config) {\n    config = config || {};\n\n    const context = this.context;\n    const dashConstants = config.dashConstants;\n    const type = config.type;\n    const segmentBaseController = config.segmentBaseController;\n\n    let instance,\n        getters;\n\n    function setup() {\n        getters = {};\n    }\n\n    function initialize(isDynamic) {\n        getters[dashConstants.SEGMENT_TIMELINE] = TimelineSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_TEMPLATE] = TemplateSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_LIST] = ListSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_BASE] = SegmentBaseGetter(context).create(config, isDynamic);\n    }\n\n    function updateInitData(voRepresentation, hasInitialization) {\n        if (hasInitialization) {\n            return Promise.resolve();\n        }\n        return segmentBaseController.getSegmentBaseInitSegment({\n            representation: voRepresentation,\n            mediaType: type\n        });\n    }\n\n    function updateSegmentData(voRepresentation, hasSegments) {\n        if (hasSegments) {\n            return Promise.resolve();\n        }\n        return segmentBaseController.getSegmentList({\n            mimeType: voRepresentation.mimeType,\n            representation: voRepresentation,\n            mediaType: type\n        });\n    }\n\n    function getSegmentsGetter(representation) {\n        return representation ? representation.segments ? getters[dashConstants.SEGMENT_BASE] : getters[representation.segmentInfoType] : null;\n    }\n\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getSegmentByIndex(representation, index, lastSegmentTime) : null;\n    }\n\n    function getSegmentByTime(representation, time) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getSegmentByTime(representation, time) : null;\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getMediaFinishedInformation(representation) : {\n            numberOfSegments: 0,\n            mediaTimeOfLastSignaledSegment: NaN\n        };\n    }\n\n    instance = {\n        initialize,\n        updateInitData,\n        updateSegmentData,\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentsController.__dashjs_factory_name = 'SegmentsController';\nconst factory = FactoryMaker.getClassFactory(SegmentsController);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../../streaming/constants/Constants';\n\nimport {getIndexBasedSegment} from './SegmentsUtils';\n\nfunction ListSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n\n        if (!representation) {\n            return mediaFinishedInformation;\n        }\n\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\n        const offset = Math.max(startNumber - 1, 0);\n\n        mediaFinishedInformation.numberOfSegments = offset + list.SegmentURL_asArray.length;\n\n        return mediaFinishedInformation\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const len = list.SegmentURL_asArray.length;\n\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\n        const offsetToSubtract = Math.max(startNumber - 1, 0);\n\n        const relativeIndex = Math.max(index - offsetToSubtract, 0);\n\n        let segment = null;\n        if (relativeIndex < len) {\n            const s = list.SegmentURL_asArray[relativeIndex];\n\n            segment = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\n            if (segment) {\n                segment.replacementTime = (startNumber + index - 1) * representation.segmentDuration;\n                segment.media = s.media ? s.media : '';\n                segment.mediaRange = s.mediaRange;\n                segment.indexRange = s.indexRange;\n            }\n        }\n\n        return segment;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const duration = representation.segmentDuration;\n\n        if (isNaN(duration)) {\n            return null;\n        }\n\n        const periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        const index = Math.floor(periodTime / duration);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../../streaming/constants/Constants';\n\n\nfunction SegmentBaseGetter(config) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n\n        if (!representation || !representation.segments) {\n            return mediaFinishedInformation\n        }\n\n        mediaFinishedInformation.numberOfSegments = representation.segments.length;\n\n        return mediaFinishedInformation;\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const len = representation.segments ? representation.segments.length : -1;\n        let seg;\n        if (index < len) {\n            seg = representation.segments[index];\n            if (seg && seg.index === index) {\n                return seg;\n            }\n        }\n\n        for (let i = 0; i < len; i++) {\n            seg = representation.segments[i];\n\n            if (seg && seg.index === index) {\n                return seg;\n            }\n        }\n\n        return null;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        const index = getIndexByTime(representation, requestedTime);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    function getIndexByTime(representation, time) {\n        if (!representation) {\n            return -1;\n        }\n\n        const segments = representation.segments;\n        const ln = segments ? segments.length : null;\n\n        let idx = -1;\n        let epsilon,\n            seg,\n            ft,\n            fd,\n            i;\n\n        if (segments && ln > 0) {\n            for (i = 0; i < ln; i++) {\n                seg = segments[i];\n                ft = seg.presentationStartTime;\n                fd = seg.duration;\n\n                epsilon = fd / 2;\n                if ((time + epsilon) >= ft &&\n                    (time - epsilon) < (ft + fd)) {\n                    idx = seg.index;\n                    break;\n                }\n            }\n        }\n\n        return idx;\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nSegmentBaseGetter.__dashjs_factory_name = 'SegmentBaseGetter';\nconst factory = FactoryMaker.getClassFactory(SegmentBaseGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Segment from './../vo/Segment';\n\n\nfunction zeroPadToLength(numStr, minStrLength) {\n    while (numStr.length < minStrLength) {\n        numStr = '0' + numStr;\n    }\n    return numStr;\n}\n\nfunction getNumberForSegment(segment, segmentIndex) {\n    return segment.representation.startNumber + segmentIndex;\n}\n\nexport function unescapeDollarsInTemplate(url) {\n    return url ? url.split('$$').join('$') : url;\n}\n\nexport function replaceIDForTemplate(url, value) {\n    if (!value || !url || url.indexOf('$RepresentationID$') === -1) {\n        return url;\n    }\n    let v = value.toString();\n    return url.split('$RepresentationID$').join(v);\n}\n\nexport function replaceTokenForTemplate(url, token, value) {\n    const formatTag = '%0';\n\n    let startPos,\n        endPos,\n        formatTagPos,\n        specifier,\n        width,\n        paddedValue;\n\n    const tokenLen = token.length;\n    const formatTagLen = formatTag.length;\n\n    if (!url) {\n        return url;\n    }\n\n    // keep looping round until all instances of <token> have been\n    // replaced. once that has happened, startPos below will be -1\n    // and the completed url will be returned.\n    while (true) {\n\n        // check if there is a valid $<token>...$ identifier\n        // if not, return the url as is.\n        startPos = url.indexOf('$' + token);\n        if (startPos < 0) {\n            return url;\n        }\n\n        // the next '$' must be the end of the identifier\n        // if there isn't one, return the url as is.\n        endPos = url.indexOf('$', startPos + tokenLen);\n        if (endPos < 0) {\n            return url;\n        }\n\n        // now see if there is an additional format tag suffixed to\n        // the identifier within the enclosing '$' characters\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\n        if (formatTagPos > startPos && formatTagPos < endPos) {\n\n            specifier = url.charAt(endPos - 1);\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\n\n            // support the minimum specifiers required by IEEE 1003.1\n            // (d, i , o, u, x, and X) for completeness\n            switch (specifier) {\n                // treat all int types as uint,\n                // hence deliberate fallthrough\n                case 'd':\n                case 'i':\n                case 'u':\n                    paddedValue = zeroPadToLength(value.toString(), width);\n                    break;\n                case 'x':\n                    paddedValue = zeroPadToLength(value.toString(16), width);\n                    break;\n                case 'X':\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\n                    break;\n                case 'o':\n                    paddedValue = zeroPadToLength(value.toString(8), width);\n                    break;\n                default:\n                    return url;\n            }\n        } else {\n            paddedValue = value;\n        }\n\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\n    }\n}\n\nfunction getSegment(representation, duration, presentationStartTime, mediaStartTime, timelineConverter, presentationEndTime, isDynamic, index) {\n    let seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = duration;\n    seg.presentationStartTime = presentationStartTime;\n    seg.mediaStartTime = mediaStartTime;\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationEndTime, representation, isDynamic);\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime + duration, representation, isDynamic);\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n    seg.replacementNumber = getNumberForSegment(seg, index);\n    seg.index = index;\n\n    return seg;\n}\n\nfunction isSegmentAvailable(timelineConverter, representation, segment, isDynamic) {\n    const voPeriod = representation.adaptation.period;\n\n    // Avoid requesting segments that overlap the period boundary\n    if (isFinite(voPeriod.duration) && voPeriod.start + voPeriod.duration <= segment.presentationStartTime) {\n        return false;\n    }\n\n    if (isDynamic) {\n\n        if (representation.availabilityTimeOffset === 'INF') {\n            return true;\n        }\n\n        // For dynamic manifests we check if the presentation start time + duration is included in the availability window\n        // SAST = Period@start + seg@presentationStartTime + seg@duration\n        // ASAST = SAST - ATO\n        // SAET = SAST + TSBD + seg@duration\n        // refTime serves as an anchor time to compare the availability time of the segments against.\n        const refTime = timelineConverter.getClientReferenceTime();\n        return segment.availabilityStartTime.getTime() <= refTime && (!isFinite(segment.availabilityEndTime) || segment.availabilityEndTime.getTime() >= refTime);\n    }\n\n    return true;\n}\n\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\n    let duration,\n        presentationStartTime,\n        presentationEndTime;\n\n\n    duration = representation.segmentDuration;\n\n    /*\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\n     * in the same way as for the last Media Segment in the Representation.\n     */\n    if (isNaN(duration)) {\n        duration = representation.adaptation.period.duration;\n    }\n\n    presentationStartTime = parseFloat((representation.adaptation.period.start + (index * duration)).toFixed(5));\n    presentationEndTime = parseFloat((presentationStartTime + duration).toFixed(5));\n\n    const mediaTime = timelineConverter.calcMediaTimeFromPresentationTime(presentationStartTime, representation);\n\n    const segment = getSegment(representation, duration, presentationStartTime, mediaTime,\n        timelineConverter, presentationEndTime, isDynamic, index);\n\n    if (!isSegmentAvailable(timelineConverter, representation, segment, isDynamic)) {\n        return null;\n    }\n\n    return segment;\n}\n\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index, tManifest) {\n    const scaledTime = time / fTimescale;\n    const scaledDuration = duration / fTimescale;\n\n    let presentationStartTime,\n        presentationEndTime,\n        seg;\n\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\n    presentationEndTime = presentationStartTime + scaledDuration;\n\n    seg = getSegment(representation, scaledDuration, presentationStartTime,\n        scaledTime,\n        timelineConverter, presentationEndTime, isDynamic, index);\n\n    if (!isSegmentAvailable(timelineConverter, representation, seg, isDynamic)) {\n        return null;\n    }\n\n    seg.replacementTime = tManifest ? tManifest : time;\n\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n    seg.media = url;\n    seg.mediaRange = range;\n\n    return seg;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../../streaming/constants/Constants';\n\nimport {replaceTokenForTemplate, getIndexBasedSegment} from './SegmentsUtils';\n\nfunction TemplateSegmentsGetter(config, isDynamic) {\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n        if (!representation) {\n            return mediaFinishedInformation\n        }\n\n        const duration = representation.segmentDuration;\n        if (isNaN(duration)) {\n            mediaFinishedInformation.numberOfSegments = 1;\n        } else {\n            mediaFinishedInformation.numberOfSegments = Math.ceil(representation.adaptation.period.duration / duration);\n        }\n\n        return mediaFinishedInformation;\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\n\n        // This is the index without @startNumber\n        index = Math.max(index, 0);\n\n        const seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\n        if (seg) {\n            seg.replacementTime = Math.round((index - 1) * representation.segmentDuration * representation.timescale, 10);\n\n            let url = template.media;\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n            seg.media = url;\n        }\n\n        return seg;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const duration = representation.segmentDuration;\n\n        if (isNaN(duration)) {\n            return null;\n        }\n\n        // Calculate the relative time for the requested time in this period\n        let periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        const index = Math.floor(periodTime / duration);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../../streaming/constants/Constants';\n\nimport {getTimeBasedSegment} from './SegmentsUtils';\n\nfunction TimelineSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n    const dashMetrics = config.dashMetrics;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        if (!representation) {\n            return 0;\n        }\n\n        const base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const timeline = base.SegmentTimeline;\n\n        let time = 0;\n        let scaledTime = 0;\n        let availableSegments = 0;\n\n        let fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            fTimescale;\n\n        fTimescale = representation.timescale;\n        fragments = timeline.S_asArray;\n\n        len = fragments.length;\n\n        for (i = 0; i < len; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            // For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n                scaledTime = time / fTimescale;\n            }\n\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                const nextFrag = fragments[i + 1];\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime);\n            }\n\n            for (j = 0; j <= repeat; j++) {\n                availableSegments++;\n\n                time += frag.d;\n                scaledTime = time / fTimescale;\n            }\n        }\n\n        // We need to account for the index of the segments starting at 0. We subtract 1\n        return { numberOfSegments: availableSegments, mediaTimeOfLastSignaledSegment: scaledTime };\n    }\n\n    function iterateSegments(representation, iterFunc) {\n        const base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const timeline = base.SegmentTimeline;\n        const list = base.SegmentURL_asArray;\n\n        let time = 0;\n        let relativeIdx = -1;\n\n        let fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            fTimescale;\n\n        fTimescale = representation.timescale;\n        fragments = timeline.S_asArray;\n\n        let breakIterator = false;\n\n        for (i = 0, len = fragments.length; i < len && !breakIterator; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            // For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n            }\n\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                const nextFrag = fragments[i + 1];\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, time / fTimescale);\n            }\n\n            for (j = 0; j <= repeat && !breakIterator; j++) {\n                relativeIdx++;\n\n                breakIterator = iterFunc(time, base, list, frag, fTimescale, relativeIdx, i);\n\n                if (breakIterator) {\n                    representation.segmentDuration = frag.d / fTimescale;\n                }\n\n                time += frag.d;\n            }\n        }\n    }\n\n    function _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime) {\n        let repeatEndTime;\n\n        if (nextFrag && nextFrag.hasOwnProperty('t')) {\n            repeatEndTime = nextFrag.t / fTimescale;\n        } else {\n            try {\n                let availabilityEnd = 0;\n                if (!isNaN(representation.adaptation.period.start) && !isNaN(representation.adaptation.period.duration) && isFinite(representation.adaptation.period.duration)) {\n                    // use end of the Period\n                    availabilityEnd = representation.adaptation.period.start + representation.adaptation.period.duration;\n                } else {\n                    // use DVR window\n                    const dvrWindow = dashMetrics.getCurrentDVRInfo();\n                    availabilityEnd = !isNaN(dvrWindow.end) ? dvrWindow.end : 0;\n                }\n                repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\n                representation.segmentDuration = frag.d / fTimescale;\n            } catch (e) {\n                repeatEndTime = 0;\n            }\n        }\n\n        return Math.max(Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1, 0);\n    }\n\n\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        let segment = null;\n        let found = false;\n\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\n            if (found || lastSegmentTime < 0) {\n                let media = base.media;\n                let mediaRange = frag.mediaRange;\n\n                if (list) {\n                    media = list[i].media || '';\n                    mediaRange = list[i].mediaRange;\n                }\n\n                segment = getTimeBasedSegment(\n                    timelineConverter,\n                    isDynamic,\n                    representation,\n                    time,\n                    frag.d,\n                    fTimescale,\n                    media,\n                    mediaRange,\n                    relativeIdx,\n                    frag.tManifest);\n\n                return true;\n            } else if (time >= (lastSegmentTime * fTimescale) - (frag.d * 0.5)) { // same logic, if deviation is\n                // 50% of segment duration, segment is found if time is greater than or equal to (startTime of previous segment - half of the previous segment duration)\n                found = true;\n            }\n\n            return false;\n        });\n\n        return segment;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        if (requestedTime === undefined) {\n            requestedTime = null;\n        }\n\n        let segment = null;\n        const requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime, representation);\n\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\n            // In some cases when requiredMediaTime = actual end time of the last segment\n            // it is possible that this time a bit exceeds the declared end time of the last segment.\n            // in this case we still need to include the last segment in the segment list.\n            const scaledMediaTime = precisionRound(requiredMediaTime * fTimescale);\n            if (scaledMediaTime < (time + frag.d) && scaledMediaTime >= time) {\n                let media = base.media;\n                let mediaRange = frag.mediaRange;\n\n                if (list) {\n                    media = list[i].media || '';\n                    mediaRange = list[i].mediaRange;\n                }\n\n                segment = getTimeBasedSegment(\n                    timelineConverter,\n                    isDynamic,\n                    representation,\n                    time,\n                    frag.d,\n                    fTimescale,\n                    media,\n                    mediaRange,\n                    relativeIdx,\n                    frag.tManifest);\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return segment;\n    }\n\n    function precisionRound(number) {\n        return parseFloat(number.toPrecision(15));\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Segment {\n    constructor() {\n        this.indexRange = null;\n        // The index of the segment in the list of segments. We start at 0\n        this.index = null;\n        this.mediaRange = null;\n        this.media = null;\n        this.duration = NaN;\n        // this is the time that should be inserted into the media url\n        this.replacementTime = null;\n        // this is the number that should be inserted into the media url\n        this.replacementNumber = NaN;\n        // This is supposed to match the time encoded in the media Segment\n        this.mediaStartTime = NaN;\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\n        // time that will match the seekTarget and video.currentTime\n        this.presentationStartTime = NaN;\n        // Do not schedule this segment until\n        this.availabilityStartTime = NaN;\n        // Ignore and  discard this segment after\n        this.availabilityEndTime = NaN;\n        // For dynamic mpd's, this is the wall clock time that the video\n        // element currentTime should be presentationStartTime\n        this.wallStartTime = NaN;\n        this.representation = null;\n    }\n}\n\nexport default Segment;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass UTCTiming {\n    constructor() {\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default UTCTiming;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport MetricsConstants from '../constants/MetricsConstants';\n\nconst LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS = 500;\n\nfunction PlaybackController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        streamController,\n        serviceDescriptionController,\n        dashMetrics,\n        adapter,\n        videoModel,\n        timelineConverter,\n        wallclockTimeIntervalId,\n        liveDelay,\n        originalLiveDelay,\n        streamInfo,\n        isDynamic,\n        playOnceInitialized,\n        lastLivePlaybackTime,\n        availabilityStartTime,\n        availabilityTimeComplete,\n        lowLatencyModeEnabled,\n        seekTarget,\n        internalSeek,\n        playbackStalled,\n        manifestUpdateInProgress,\n        initialCatchupModeActivated,\n        settings;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        reset();\n    }\n\n    /**\n     * Reset all settings\n     */\n    function reset() {\n        pause();\n        playOnceInitialized = false;\n        liveDelay = 0;\n        originalLiveDelay = 0;\n        availabilityStartTime = 0;\n        manifestUpdateInProgress = false;\n        availabilityTimeComplete = true;\n        lowLatencyModeEnabled = false;\n        initialCatchupModeActivated = false;\n        seekTarget = NaN;\n\n        if (videoModel) {\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance);\n            eventBus.off(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n            eventBus.off(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n            eventBus.off(Events.STREAMS_COMPOSED, _onStreamsComposed, instance);\n            eventBus.off(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n            eventBus.off(MediaPlayerEvents.STREAM_INITIALIZING, _onStreamInitializing, instance);\n            eventBus.off(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitch, instance);\n            eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n\n        wallclockTimeIntervalId = null;\n        videoModel = null;\n        streamInfo = null;\n        isDynamic = null;\n    }\n\n    /**\n     * Initializes the PlaybackController. This function is called whenever the stream is switched.\n     * @param {object} sInfo\n     * @param {boolean} periodSwitch\n     */\n    function initialize(sInfo, periodSwitch) {\n        streamInfo = sInfo;\n\n        if (periodSwitch !== true) {\n            _initializeForFirstStream();\n        }\n    }\n\n    /**\n     * Initializes the PlaybackController when the first stream is to be played.\n     * @private\n     */\n    function _initializeForFirstStream() {\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n\n        playbackStalled = false;\n        internalSeek = false;\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance);\n        eventBus.on(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n        eventBus.on(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.on(Events.STREAMS_COMPOSED, _onStreamsComposed, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance, { priority: EventBus.EVENT_PRIORITY_HIGH });\n        eventBus.on(MediaPlayerEvents.STREAM_INITIALIZING, _onStreamInitializing, instance);\n        eventBus.on(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitch, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    /**\n     * Returns stalled state\n     * @return {boolean}\n     */\n    function getPlaybackStalled() {\n        return playbackStalled\n    }\n\n    /**\n     * Returns remaining duration of a period\n     * @param {object} sInfo\n     * @return {number}\n     */\n    function getTimeToStreamEnd(sInfo = null) {\n        return parseFloat((getStreamEndTime(sInfo) - getTime()).toFixed(5));\n    }\n\n    /**\n     * Returns end time of a period\n     * @param {object} sInfo\n     * @return {number}\n     */\n    function getStreamEndTime(sInfo) {\n        const refInfo = sInfo ? sInfo : streamInfo;\n        return refInfo.start + refInfo.duration;\n    }\n\n    /**\n     * Triggers play() on the video element\n     */\n    function play(adjustLiveDelay = false) {\n        if (streamInfo && videoModel && videoModel.getElement()) {\n            if (adjustLiveDelay && isDynamic) {\n                _adjustLiveDelayAfterUserInteraction(getTime());\n            }\n            videoModel.play();\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    /**\n     * Triggers pause() on the video element\n     */\n    function pause() {\n        if (streamInfo && videoModel) {\n            videoModel.pause();\n        }\n    }\n\n    /**\n     * Triggers a seek to the specified media time. If internal is enabled there will be now \"seeked\" event dispatched\n     * @param {number} time\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seek(time, stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        if (!streamInfo || !videoModel || !videoModel.getElement()) return;\n\n        let currentTime = !isNaN(seekTarget) ? seekTarget : videoModel.getTime();\n        if (time === currentTime) return;\n\n        internalSeek = (internal === true);\n\n        if (!internalSeek) {\n            seekTarget = time;\n        }\n        logger.info('Requesting seek to time: ' + time + (internalSeek ? ' (internal)' : ''));\n\n        // We adjust the current latency. If catchup is enabled we will maintain this new latency\n        if (isDynamic && adjustLiveDelay) {\n            _adjustLiveDelayAfterUserInteraction(time);\n        }\n\n        videoModel.setCurrentTime(time, stickToBuffered);\n    }\n\n    /**\n     * Seeks back to the live edge as defined by the originally calculated live delay\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seekToOriginalLive(stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        const dvrWindowEnd = _getDvrWindowEnd();\n\n        if (dvrWindowEnd === 0) {\n            return;\n        }\n\n        liveDelay = originalLiveDelay;\n        const seektime = dvrWindowEnd - liveDelay;\n\n        seek(seektime, stickToBuffered, internal, adjustLiveDelay);\n    }\n\n    /**\n     * Seeks to the live edge as currently defined by liveDelay\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seekToCurrentLive(stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        const dvrWindowEnd = _getDvrWindowEnd();\n\n        if (dvrWindowEnd === 0) {\n            return;\n        }\n\n        const seektime = dvrWindowEnd - liveDelay;\n\n        seek(seektime, stickToBuffered, internal, adjustLiveDelay);\n    }\n\n    function _getDvrWindowEnd() {\n        if (!streamInfo || !videoModel || !isDynamic) {\n            return;\n        }\n\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        const dvrInfo = dashMetrics.getCurrentDVRInfo(type);\n\n        return dvrInfo && dvrInfo.range ? dvrInfo.range.end : 0;\n    }\n\n\n    function _adjustLiveDelayAfterUserInteraction(time) {\n        const now = new Date(timelineConverter.getClientReferenceTime());\n        const period = adapter.getRegularPeriods()[0];\n        const nowAsPresentationTime = timelineConverter.calcPresentationTimeFromWallTime(now, period);\n\n        liveDelay = nowAsPresentationTime - time;\n    }\n\n    /**\n     * Returns current time of video element\n     * @return {number|null}\n     */\n    function getTime() {\n        return streamInfo && videoModel ? videoModel.getTime() : null;\n    }\n\n    /**\n     * Returns paused state of the video element\n     * @return {boolean|null}\n     */\n    function isPaused() {\n        return streamInfo && videoModel ? videoModel.isPaused() : null;\n    }\n\n    /**\n     * Returns seeking state of the video element\n     * @return {boolean|null}\n     */\n    function isSeeking() {\n        return streamInfo && videoModel ? videoModel.isSeeking() : null;\n    }\n\n    /**\n     * Returns stalled state of the video element\n     * @return {boolean|null}\n     */\n    function isStalled() {\n        return streamInfo && videoModel ? videoModel.isStalled() : null;\n    }\n\n    /**\n     * Returns current playback rate of the video element\n     * @return {number|null}\n     */\n    function getPlaybackRate() {\n        return streamInfo && videoModel ? videoModel.getPlaybackRate() : null;\n    }\n\n    /**\n     * Returns the played ranges of the video element\n     * @return {array}\n     */\n    function getPlayedRanges() {\n        return streamInfo && videoModel ? videoModel.getPlayedRanges() : null;\n    }\n\n    /**\n     * Returns ended attribute of the video element\n     * @return {boolean|null}\n     */\n    function getEnded() {\n        return streamInfo && videoModel ? videoModel.getEnded() : null;\n    }\n\n    /**\n     * Returns whether a stream is type dynamic or not\n     * @return {boolean}\n     */\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    /**\n     * Returns the StreamController\n     * @return {object}\n     */\n    function getStreamController() {\n        return streamController;\n    }\n\n    /**\n     * Returns whether a manifest update is in progress\n     * @return {boolean}\n     */\n    function getIsManifestUpdateInProgress() {\n        return manifestUpdateInProgress;\n    }\n\n    /**\n     * Returns the availabilityStartTime\n     * @return {number}\n     */\n    function getAvailabilityStartTime() {\n        return availabilityStartTime;\n    }\n\n    /**\n     * Returns the current live delay. A seek triggered by the user adjusts this value.\n     * @return {number}\n     */\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    /**\n     * Returns the original live delay as calculated at playback start\n     */\n    function getOriginalLiveDelay() {\n        return originalLiveDelay;\n    }\n\n    /**\n     * Returns the current live latency\n     * @return {number}\n     */\n    function getCurrentLiveLatency() {\n        if (!isDynamic || isNaN(availabilityStartTime)) {\n            return NaN;\n        }\n        let currentTime = getTime();\n        if (isNaN(currentTime) || currentTime === 0) {\n            return 0;\n        }\n\n        const now = new Date().getTime() + timelineConverter.getClientTimeOffset() * 1000;\n        return Math.max(((now - availabilityStartTime - currentTime * 1000) / 1000).toFixed(3), 0);\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {object} manifestInfo\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeAndSetLiveDelay(fragmentDuration, manifestInfo) {\n        let delay,\n            ret,\n            startTime;\n        const MIN_BUFFER_TIME_FACTOR = 4;\n        const FRAGMENT_DURATION_FACTOR = 4;\n        const adjustedFragmentDuration = !isNaN(fragmentDuration) && isFinite(fragmentDuration) ? fragmentDuration : NaN;\n\n        let suggestedPresentationDelay = adapter.getSuggestedPresentationDelay();\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n\n        // Live delay specified by the user\n        if (!isNaN(settings.get().streaming.delay.liveDelay)) {\n            delay = settings.get().streaming.delay.liveDelay;\n        }\n\n        // Live delay fragment count specified by the user\n        else if (settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) && !isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * settings.get().streaming.delay.liveDelayFragmentCount;\n        }\n\n        // Live delay set via ServiceDescription element\n        else if (serviceDescriptionSettings && !isNaN(serviceDescriptionSettings.liveDelay) && serviceDescriptionSettings.liveDelay > 0) {\n            delay = serviceDescriptionSettings.liveDelay;\n        }\n        // Live delay set in the manifest using @suggestedPresentation Delay\n        else if (settings.get().streaming.delay.useSuggestedPresentationDelay === true && suggestedPresentationDelay !== null && !isNaN(suggestedPresentationDelay) && suggestedPresentationDelay > 0) {\n            delay = suggestedPresentationDelay;\n        }\n\n        // We found a fragment duration, use that to calculcate live delay\n        else if (!isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * FRAGMENT_DURATION_FACTOR;\n        }\n\n        // Fall back to @minBufferTime to calculate the live delay\n        else {\n            delay = manifestInfo && !isNaN(manifestInfo.minBufferTime) ? manifestInfo.minBufferTime * MIN_BUFFER_TIME_FACTOR : streamInfo.manifestInfo.minBufferTime * MIN_BUFFER_TIME_FACTOR;\n        }\n\n        startTime = adapter.getAvailabilityStartTime();\n        if (startTime !== null) {\n            availabilityStartTime = startTime;\n        }\n\n        if (manifestInfo && manifestInfo.dvrWindowSize > 0) {\n            // Latency can not be higher than DVR window size\n            ret = Math.min(delay, manifestInfo.dvrWindowSize);\n        } else {\n            ret = delay;\n        }\n        liveDelay = ret;\n        originalLiveDelay = ret;\n\n        return ret;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    /**\n     * Compare the current time of the video against the DVR window. If we are out of the DVR window we need to seek.\n     * @param {object} mediaType\n     */\n    function updateCurrentTime(mediaType = null) {\n        if (isPaused() || !isDynamic || videoModel.getReadyState() === 0 || isSeeking() || manifestUpdateInProgress) return;\n\n        // Note: In some cases we filter certain media types completely (for instance due to an unsupported video codec). This happens after the first entry to the DVR metric has been added.\n        // Now the DVR window for the filtered media type is not updated anymore. Consequently, always use a mediaType that is available to get a valid DVR window.\n        if (!mediaType) {\n            mediaType = streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        }\n        // Compare the current time of the video element against the range defined in the DVR window.\n        const currentTime = getTime();\n        const actualTime = _getAdjustedPresentationTime(currentTime, mediaType);\n        const timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged && !isSeeking() && (isStalled() || playbackStalled || videoModel.getReadyState() === 1)) {\n            logger.debug(`UpdateCurrentTime: Seek to actual time: ${actualTime} from currentTime: ${currentTime}`);\n            seek(actualTime, false, false);\n        }\n    }\n\n    /**\n     * Adjust the presentation time based on the DVR window. If we are out of the DVR window we return a corrected time\n     * @param {number} currentTime\n     * @param {string} mediatype\n     * @return {number}\n     * @private\n     */\n    function _getAdjustedPresentationTime(currentTime, mediatype) {\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo(mediatype);\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        let actualTime;\n\n        if (!DVRWindow) {\n            return NaN;\n        }\n\n        if (currentTime > DVRWindow.end) {\n            actualTime = Math.max(DVRWindow.end - liveDelay, DVRWindow.start);\n\n        } else if (currentTime > 0 && currentTime + 0.250 < DVRWindow.start && Math.abs(currentTime - DVRWindow.start) < 315360000) {\n\n            // Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz\n            // https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate\n            // http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource\n            // Checking also duration of the DVR makes sense. We detected temporary situations in which currentTime\n            // is bad reported by the browser which causes playback to jump to start (315360000 = 1 year)\n            if (lowLatencyModeEnabled) {\n                actualTime = Math.max(DVRWindow.end - liveDelay, DVRWindow.start);\n            } else {\n                actualTime = DVRWindow.start;\n            }\n        } else {\n            actualTime = currentTime;\n        }\n\n        return actualTime;\n    }\n\n    /**\n     * Start interval handler for wallclock time update\n     */\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) return;\n\n        wallclockTimeIntervalId = setInterval(() => {\n            _onWallclockTime();\n        }, settings.get().streaming.wallclockTimeUpdateInterval);\n    }\n\n    /**\n     * Stop the interval handler for the wallclock time update\n     */\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function _onDataUpdateCompleted(e) {\n        const representationInfo = adapter.convertRepresentationToRepresentationInfo(e.currentRepresentation);\n        const info = representationInfo ? representationInfo.mediaInfo.streamInfo : null;\n\n        if (info === null || streamInfo.id !== info.id) return;\n        streamInfo = info;\n    }\n\n    function _onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function _onCanPlayThrough() {\n        eventBus.trigger(Events.CAN_PLAY_THROUGH);\n    }\n\n    function _onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id) {\n            return;\n        }\n\n        playbackStalled = e.state === MetricsConstants.BUFFER_EMPTY;\n\n        if (settings.get().streaming.buffer.setStallState) {\n            videoModel.setStallState(e.mediaType, e.state === MetricsConstants.BUFFER_EMPTY);\n        }\n    }\n\n    function _onPlaybackStart() {\n        logger.info('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, { startTime: getTime() });\n    }\n\n    function _onPlaybackWaiting() {\n        logger.info('Native video element event: waiting');\n        eventBus.trigger(Events.PLAYBACK_WAITING, { playingTime: getTime() });\n    }\n\n    function _onPlaybackPlaying() {\n        logger.info('Native video element event: playing');\n        internalSeek = false;\n        eventBus.trigger(Events.PLAYBACK_PLAYING, { playingTime: getTime() });\n    }\n\n    function _onPlaybackPaused() {\n        logger.info('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, { ended: getEnded() });\n    }\n\n    function _onPlaybackSeeking() {\n        // Check if internal seeking to be ignored\n        if (internalSeek) {\n            return;\n        }\n\n        let seekTime = getTime();\n        // On some browsers/devices, in case of live streams, setting current time on video element fails when there is no buffered data at requested time\n        // Then re-set seek target time and video element will be seeked afterwhile once data is buffered (see BufferContoller)\n        if (!isNaN(seekTarget) && seekTarget !== seekTime) {\n            seekTime = seekTarget;\n        }\n        seekTarget = NaN;\n\n        logger.info('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {\n            seekTime: seekTime,\n            streamId: streamInfo.id\n        });\n    }\n\n    function _onPlaybackSeeked() {\n        logger.info('Native video element event: seeked');\n        internalSeek = false;\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n    }\n\n    function _onPlaybackTimeUpdated() {\n        if (streamInfo) {\n            eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {\n                timeToEnd: getTimeToStreamEnd(),\n                time: getTime(),\n                streamId: streamInfo.id\n            });\n        }\n    }\n\n    function _onPlaybackProgress() {\n        eventBus.trigger(Events.PLAYBACK_PROGRESS, { streamId: streamInfo.id });\n    }\n\n    function _onPlaybackRateChanged() {\n        const rate = getPlaybackRate();\n        logger.info('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, { playbackRate: rate });\n    }\n\n    function _onPlaybackMetaDataLoaded() {\n        logger.info('Native video element event: loadedmetadata');\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    function _onPlaybackLoadedData() {\n        logger.info('Native video element event: loadeddata');\n        eventBus.trigger(Events.PLAYBACK_LOADED_DATA);\n    }\n\n    // Event to handle the native video element ended event\n    function _onNativePlaybackEnded() {\n        logger.info('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        const streamInfo = streamController ? streamController.getActiveStreamInfo() : null;\n        if (!streamInfo) return;\n        eventBus.trigger(Events.PLAYBACK_ENDED, { 'isLast': streamInfo.isLast });\n    }\n\n    function _onVolumeChanged() {\n        eventBus.trigger(Events.PLAYBACK_VOLUME_CHANGED);\n    }\n\n    // Handle DASH PLAYBACK_ENDED event\n    function _onPlaybackEnded(e) {\n        if (wallclockTimeIntervalId && e.isLast) {\n            // PLAYBACK_ENDED was triggered elsewhere, react.\n            logger.info('onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\\'t fire ended');\n            const seekTime = e.seekTime ? e.seekTime : getStreamEndTime();\n            videoModel.setCurrentTime(seekTime);\n            pause();\n            stopUpdatingWallclockTime();\n        }\n    }\n\n    function _onPlaybackError(event) {\n        const target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, { error: target.error });\n    }\n\n    function _onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {\n            isDynamic: isDynamic,\n            time: new Date()\n        });\n\n        // Updates playback time for paused dynamic streams\n        // (video element doesn't call timeupdate when the playback is paused)\n        if (getIsDynamic()) {\n            streamController.addDVRMetric();\n            if (isPaused()) {\n                _updateLivePlaybackTime();\n            } else {\n                updateCurrentTime();\n            }\n        }\n    }\n\n    function _updateLivePlaybackTime() {\n        const now = Date.now();\n        if (!lastLivePlaybackTime || now > lastLivePlaybackTime + LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS) {\n            lastLivePlaybackTime = now;\n            _onPlaybackTimeUpdated();\n        }\n    }\n\n    /**\n     * Returns the combined minimum buffer level of all StreamProcessors. If a filter list is provided the types specified in the filter list are excluded.\n     * @param {array} filterList StreamProcessor types to exclude\n     * @return {null}\n     */\n    function getBufferLevel(filterList = null) {\n        let bufferLevel = null;\n        streamController.getActiveStreamProcessors().forEach(p => {\n            if (!filterList || filterList.length === 0 || filterList.indexOf(p.getType()) === -1) {\n                const bl = p.getBufferLevel();\n                if (bufferLevel === null) {\n                    bufferLevel = bl;\n                } else {\n                    bufferLevel = Math.min(bufferLevel, bl);\n                }\n            }\n        });\n\n        return bufferLevel;\n    }\n\n    /**\n     * Returns the value of lowLatencyModeEnabled\n     * @return {boolean} lowLatencyModeEnabled\n     */\n    function getLowLatencyModeEnabled() {\n        return lowLatencyModeEnabled\n    }\n\n\n    function _onFragmentLoadProgress(e) {\n        // If using fetch and stream mode is not available, readjust live latency so it is 20% higher than segment duration\n        if (e.stream === false && lowLatencyModeEnabled && !isNaN(e.request.duration)) {\n            const minDelay = 1.2 * e.request.duration;\n            if (minDelay > liveDelay) {\n                logger.warn('Browser does not support fetch API with StreamReader. Increasing live delay to be 20% higher than segment duration:', minDelay.toFixed(2));\n                liveDelay = minDelay;\n                originalLiveDelay = minDelay;\n            }\n        }\n    }\n\n    function onPlaybackStalled(e) {\n        eventBus.trigger(Events.PLAYBACK_STALLED, { e: e });\n    }\n\n    function _onStreamInitializing(e) {\n        _checkEnableLowLatency(e.mediaInfo);\n    }\n\n    /**\n     * We enable low latency playback if for the current representation availabilityTimeComplete is set to false\n     * @param e\n     * @private\n     */\n    function _onRepresentationSwitch(e) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n        if (!e || !activeStreamInfo || !e.currentRepresentation || !e.streamId || e.streamId !== activeStreamInfo.id || !e.mediaType || (e.mediaType !== Constants.VIDEO && e.mediaType !== Constants.AUDIO)) {\n            return;\n        }\n\n        availabilityTimeComplete = e.currentRepresentation.availabilityTimeComplete;\n        lowLatencyModeEnabled = !availabilityTimeComplete;\n\n        // If we enable low latency mode for the first time we also enable the catchup mechanism. This can be deactivated again for instance if the user seeks within the DVR window. We leave deactivation up to the application but also do not activate automatically again.\n        if (lowLatencyModeEnabled && !initialCatchupModeActivated) {\n            initialCatchupModeActivated = true;\n        }\n    }\n\n    function getInitialCatchupModeActivated() {\n        return initialCatchupModeActivated;\n    }\n\n    /**\n     * A new manifest has been loaded, updating is still in progress.\n     * @private\n     */\n    function _onManifestUpdated() {\n        manifestUpdateInProgress = true;\n    }\n\n    /**\n     * Manifest update was completed\n     * @private\n     */\n    function _onStreamsComposed() {\n        manifestUpdateInProgress = false;\n    }\n\n    function _checkEnableLowLatency(mediaInfo) {\n        if (mediaInfo && mediaInfo.supplementalProperties &&\n            mediaInfo.supplementalProperties[Constants.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME] === 'true') {\n            logger.debug('Low Latency critical SupplementalProperty set: Enabling low Latency');\n            lowLatencyModeEnabled = true;\n        }\n    }\n\n    function addAllListeners() {\n        videoModel.addEventListener('canplay', _onCanPlay);\n        videoModel.addEventListener('canplaythrough', _onCanPlayThrough);\n        videoModel.addEventListener('play', _onPlaybackStart);\n        videoModel.addEventListener('waiting', _onPlaybackWaiting);\n        videoModel.addEventListener('playing', _onPlaybackPlaying);\n        videoModel.addEventListener('pause', _onPlaybackPaused);\n        videoModel.addEventListener('error', _onPlaybackError);\n        videoModel.addEventListener('seeking', _onPlaybackSeeking);\n        videoModel.addEventListener('seeked', _onPlaybackSeeked);\n        videoModel.addEventListener('timeupdate', _onPlaybackTimeUpdated);\n        videoModel.addEventListener('progress', _onPlaybackProgress);\n        videoModel.addEventListener('ratechange', _onPlaybackRateChanged);\n        videoModel.addEventListener('loadedmetadata', _onPlaybackMetaDataLoaded);\n        videoModel.addEventListener('loadeddata', _onPlaybackLoadedData);\n        videoModel.addEventListener('stalled', onPlaybackStalled);\n        videoModel.addEventListener('ended', _onNativePlaybackEnded);\n        videoModel.addEventListener('volumechange', _onVolumeChanged);\n    }\n\n    function removeAllListeners() {\n        videoModel.removeEventListener('canplay', _onCanPlay);\n        videoModel.removeEventListener('canplaythrough', _onCanPlayThrough);\n        videoModel.removeEventListener('play', _onPlaybackStart);\n        videoModel.removeEventListener('waiting', _onPlaybackWaiting);\n        videoModel.removeEventListener('playing', _onPlaybackPlaying);\n        videoModel.removeEventListener('pause', _onPlaybackPaused);\n        videoModel.removeEventListener('error', _onPlaybackError);\n        videoModel.removeEventListener('seeking', _onPlaybackSeeking);\n        videoModel.removeEventListener('seeked', _onPlaybackSeeked);\n        videoModel.removeEventListener('timeupdate', _onPlaybackTimeUpdated);\n        videoModel.removeEventListener('progress', _onPlaybackProgress);\n        videoModel.removeEventListener('ratechange', _onPlaybackRateChanged);\n        videoModel.removeEventListener('loadedmetadata', _onPlaybackMetaDataLoaded);\n        videoModel.removeEventListener('loadeddata', _onPlaybackLoadedData);\n        videoModel.removeEventListener('stalled', onPlaybackStalled);\n        videoModel.removeEventListener('ended', _onNativePlaybackEnded);\n        videoModel.removeEventListener('volumechange', _onVolumeChanged);\n    }\n\n    instance = {\n        initialize,\n        setConfig,\n        getTimeToStreamEnd,\n        getBufferLevel,\n        getPlaybackStalled,\n        getTime,\n        getLowLatencyModeEnabled,\n        getInitialCatchupModeActivated,\n        getIsManifestUpdateInProgress,\n        getPlaybackRate,\n        getPlayedRanges,\n        getEnded,\n        getIsDynamic,\n        getStreamController,\n        computeAndSetLiveDelay,\n        getLiveDelay,\n        getOriginalLiveDelay,\n        getCurrentLiveLatency,\n        play,\n        isPaused,\n        isStalled,\n        pause,\n        isSeeking,\n        getStreamEndTime,\n        seek,\n        seekToOriginalLive,\n        seekToCurrentLive,\n        reset,\n        updateCurrentTime,\n        getAvailabilityStartTime\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport FragmentRequest from '../vo/FragmentRequest';\n\nconst FRAGMENT_MODEL_LOADING = 'loading';\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\nconst FRAGMENT_MODEL_FAILED = 'failed';\n\nfunction FragmentModel(config) {\n\n    config = config || {};\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashMetrics = config.dashMetrics;\n    const fragmentLoader = config.fragmentLoader;\n    const debug = config.debug;\n    const streamInfo = config.streamInfo;\n    const type = config.type;\n\n    let instance,\n        logger,\n        executedRequests,\n        loadingRequests;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(events.LOADING_COMPLETED, onLoadingCompleted, instance);\n        eventBus.on(events.LOADING_DATA_PROGRESS, onLoadingInProgress, instance);\n        eventBus.on(events.LOADING_ABANDONED, onLoadingAborted, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function isFragmentLoaded(request) {\n        const isEqualComplete = function (req1, req2) {\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\n        };\n\n        const isEqualMedia = function (req1, req2) {\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex) && (req1.type === req2.type);\n        };\n\n        const isEqualInit = function (req1, req2) {\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\n        };\n\n        const check = function (requests) {\n            let isLoaded = false;\n\n            requests.some(req => {\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\n                    isLoaded = true;\n                    return isLoaded;\n                }\n            });\n            return isLoaded;\n        };\n\n        if (!request) {\n            return false;\n        }\n\n        return check(executedRequests);\n    }\n\n    function isFragmentLoadedOrPending(request) {\n        let isLoaded = false;\n        let i = 0;\n        let req;\n\n        // First, check if the fragment has already been loaded\n        isLoaded = isFragmentLoaded(request);\n\n        // Then, check if the fragment is about to be loeaded\n        if (!isLoaded) {\n            for (i = 0; i < loadingRequests.length; i++) {\n                req = loadingRequests[i];\n                if ((request.url === req.url) && (request.startTime === req.startTime)) {\n                    isLoaded = true;\n                }\n            }\n        }\n\n        return isLoaded;\n    }\n\n    /**\n     *\n     * Gets an array of {@link FragmentRequest} objects\n     *\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\n     *  the only mandatory property is state, which must be a value from\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\n     *  all the requests from executedRequests array where requests.quality = filter.quality\n     *\n     * @returns {Array}\n     * @memberof FragmentModel#\n     */\n    function getRequests(filter) {\n        const states = filter ? filter.state instanceof Array ? filter.state : [filter.state] : [];\n\n        let filteredRequests = [];\n        states.forEach(state => {\n            const requests = getRequestsForState(state);\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\n        });\n\n        return filteredRequests;\n    }\n\n    function getRequestThreshold(req) {\n        return isNaN(req.duration) ? 0.25 : Math.min(req.duration / 8, 0.5);\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime >= time - threshold : false);\n        });\n    }\n\n    function removeExecutedRequestsAfterTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime < time : false);\n        });\n    }\n\n    function removeExecutedRequestsInTimeRange(start, end) {\n        if (end <= start + 0.5) {\n            return;\n        }\n\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return (isNaN(req.startTime) || req.startTime >= (end - threshold)) ||\n                (isNaN(req.duration) || (req.startTime + req.duration) <= (start + threshold));\n        });\n    }\n\n    // Remove requests that are not \"represented\" by any of buffered ranges\n    function syncExecutedRequestsWithBufferedRange(bufferedRanges, streamDuration) {\n        if (!bufferedRanges || bufferedRanges.length === 0) {\n            removeExecutedRequestsBeforeTime();\n            return;\n        }\n\n        let start = 0;\n        for (let i = 0, ln = bufferedRanges.length; i < ln; i++) {\n            removeExecutedRequestsInTimeRange(start, bufferedRanges.start(i));\n            start = bufferedRanges.end(i);\n        }\n        if (streamDuration > 0) {\n            removeExecutedRequestsInTimeRange(start, streamDuration);\n        }\n    }\n\n    function abortRequests() {\n        logger.debug('abort requests');\n        fragmentLoader.abort();\n        loadingRequests = [];\n    }\n\n    function executeRequest(request) {\n        switch (request.action) {\n            case FragmentRequest.ACTION_DOWNLOAD:\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\n                loadingRequests.push(request);\n                loadCurrentFragment(request);\n                break;\n            default:\n                logger.warn('Unknown request action.');\n        }\n    }\n\n    function loadCurrentFragment(request) {\n        eventBus.trigger(events.FRAGMENT_LOADING_STARTED,\n            { request: request },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n        fragmentLoader.load(request);\n    }\n\n    function getRequestForTime(arr, time, threshold) {\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\n        const lastIdx = arr.length - 1;\n        for (let i = lastIdx; i >= 0; i--) {\n            const req = arr[i];\n            const start = req.startTime;\n            const end = start + req.duration;\n            threshold = !isNaN(threshold) ? threshold : getRequestThreshold(req);\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\n                return req;\n            }\n        }\n        return null;\n    }\n\n    function filterRequests(arr, filter) {\n        // for time use a specific filtration function\n        if (filter.hasOwnProperty('time')) {\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\n        }\n\n        return arr.filter(request => {\n            for (const prop in filter) {\n                if (prop === 'state') continue;\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\n            }\n\n            return true;\n        });\n    }\n\n    function getRequestsForState(state) {\n        let requests;\n        switch (state) {\n            case FRAGMENT_MODEL_LOADING:\n                requests = loadingRequests;\n                break;\n            case FRAGMENT_MODEL_EXECUTED:\n                requests = executedRequests;\n                break;\n            default:\n                requests = [];\n        }\n        return requests;\n    }\n\n    function addSchedulingInfoMetrics(request, state) {\n        dashMetrics.addSchedulingInfo(request, state);\n        dashMetrics.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\n    }\n\n    function onLoadingCompleted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\n\n        if (e.response && !e.error) {\n            executedRequests.push(e.request);\n        }\n\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\n\n        eventBus.trigger(events.FRAGMENT_LOADING_COMPLETED,\n            {\n                request: e.request,\n                response: e.response,\n                error: e.error,\n                sender: this\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function onLoadingInProgress(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        eventBus.trigger(events.FRAGMENT_LOADING_PROGRESS,\n            {\n                request: e.request,\n                response: e.response,\n                error: e.error,\n                sender: this\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function onLoadingAborted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        eventBus.trigger(events.FRAGMENT_LOADING_ABANDONED,\n            { request: e.request },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function resetInitialSettings() {\n        executedRequests = [];\n        loadingRequests = [];\n    }\n\n    function reset() {\n        eventBus.off(events.LOADING_COMPLETED, onLoadingCompleted, this);\n        eventBus.off(events.LOADING_DATA_PROGRESS, onLoadingInProgress, this);\n        eventBus.off(events.LOADING_ABANDONED, onLoadingAborted, this);\n\n        if (fragmentLoader) {\n            fragmentLoader.reset();\n        }\n        resetInitialSettings();\n    }\n\n    function addExecutedRequest(request) {\n        executedRequests.push(request);\n    }\n\n    instance = {\n        getStreamId,\n        getType,\n        getRequests,\n        isFragmentLoaded,\n        isFragmentLoadedOrPending,\n        removeExecutedRequestsBeforeTime,\n        removeExecutedRequestsAfterTime,\n        syncExecutedRequestsWithBufferedRange,\n        abortRequests,\n        executeRequest,\n        reset,\n        resetInitialSettings,\n        addExecutedRequest\n    };\n\n    setup();\n    return instance;\n}\n\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\nFactoryMaker.updateClassFactory(FragmentModel.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from './ErrorsBase';\n\n/**\n * Errors declaration\n * @class\n */\nclass Errors extends ErrorsBase {\n    constructor() {\n        super();\n\n        /**\n         * Error code returned when a manifest parsing error occurs\n         */\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10;\n\n        /**\n         * Error code returned when a manifest loading error occurs\n         */\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11;\n\n        /**\n         * Error code returned when a xlink loading error occurs\n         */\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12;\n\n        /**\n         * Error code returned when no segment ranges could be determined from the sidx box\n         */\n        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15;\n\n        /**\n         * Error code returned when the time synchronization failed\n         */\n        this.TIME_SYNC_FAILED_ERROR_CODE = 16;\n\n        /**\n         * Error code returned when loading a fragment failed\n         */\n        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17;\n\n        /**\n         * Error code returned when the FragmentLoader did not receive a request object\n         */\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18;\n\n        /**\n         * Error code returned when the BaseUrl resolution failed\n         */\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19;\n\n        /**\n         * Error code returned when the append operation in the SourceBuffer failed\n         */\n        this.APPEND_ERROR_CODE = 20;\n\n        /**\n         * Error code returned when the remove operation in the SourceBuffer failed\n         */\n        this.REMOVE_ERROR_CODE = 21;\n\n        /**\n         * Error code returned when updating the internal objects after loading an MPD failed\n         */\n        this.DATA_UPDATE_FAILED_ERROR_CODE = 22;\n\n        /**\n         * Error code returned when MediaSource is not supported by the browser\n         */\n        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23;\n\n        /**\n         * Error code returned when Protected contents are not supported\n         */\n        this.CAPABILITY_MEDIAKEYS_ERROR_CODE = 24;\n\n        /**\n         * Error code returned when loading the manifest failed\n         */\n        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE = 25;\n\n        /**\n         * Error code returned when loading the sidx failed\n         */\n        this.DOWNLOAD_ERROR_ID_SIDX_CODE = 26;\n\n        /**\n         * Error code returned when loading the media content failed\n         */\n        this.DOWNLOAD_ERROR_ID_CONTENT_CODE = 27;\n\n        /**\n         * Error code returned when loading the init segment failed\n         */\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE = 28;\n\n        /**\n         * Error code returned when loading the XLink content failed\n         */\n        this.DOWNLOAD_ERROR_ID_XLINK_CODE = 29;\n\n        /**\n         * Error code returned when parsing the MPD resulted in a logical error\n         */\n        this.MANIFEST_ERROR_ID_PARSE_CODE = 31;\n\n        /**\n         * Error code returned when no stream (period) has been detected in the manifest\n         */\n        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE = 32;\n\n        /**\n         * Error code returned when something wrong has happened during parsing and appending subtitles (TTML or VTT)\n         */\n        this.TIMED_TEXT_ERROR_ID_PARSE_CODE = 33;\n\n        /**\n         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported\n         */\n\n        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE = 34;\n\n        /**\n         * Error code returned when a media source type is not supported\n         */\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35;\n\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for ';\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: ';\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: ';\n        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed';\n        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet';\n        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segment ranges from sidx';\n        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize client and server time';\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null';\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n        this.APPEND_ERROR_MESSAGE = 'chunk is not defined';\n        this.REMOVE_ERROR_MESSAGE = 'Removing data from the SourceBuffer';\n        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed';\n        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported';\n        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported';\n        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :';\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : ';\n    }\n}\n\nlet errors = new Errors();\nexport default errors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug';\nimport DashJSError from './vo/DashJSError';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Errors from '../core/errors/Errors';\nimport Settings from '../core/Settings';\nimport constants from './constants/Constants';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport Events from '../core/events/Events';\n\nconst APPEND_WINDOW_START_OFFSET = 0.1;\nconst APPEND_WINDOW_END_OFFSET = 0.01;\n\n/**\n * @class SourceBufferSink\n * @ignore\n * @implements FragmentSink\n */\n\nconst CHECK_INTERVAL = 50;\n\nfunction SourceBufferSink(config) {\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n    const textController = config.textController;\n    const eventBus = config.eventBus;\n\n    let instance,\n        type,\n        logger,\n        buffer,\n        mediaInfo,\n        intervalId;\n\n    let callbacks = [];\n    let appendQueue = [];\n    let isAppendingInProgress = false;\n    let mediaSource = config.mediaSource;\n    let lastRequestAppended = null;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initializeForStreamSwitch(mInfo, selectedRepresentation, oldSourceBufferSink) {\n        mediaInfo = mInfo;\n        type = mediaInfo.type;\n        const codec = mediaInfo.codec;\n\n        _copyPreviousSinkData(oldSourceBufferSink);\n        _addEventListeners();\n\n        const promises = [];\n\n        promises.push(_abortBeforeAppend());\n        promises.push(updateAppendWindow(mediaInfo.streamInfo));\n\n        if (settings.get().streaming.buffer.useChangeTypeForTrackSwitch) {\n            promises.push(changeType(codec));\n        }\n\n        if (selectedRepresentation && selectedRepresentation.MSETimeOffset !== undefined) {\n            promises.push(updateTimestampOffset(selectedRepresentation.MSETimeOffset));\n        }\n\n        return Promise.all(promises);\n    }\n\n    function changeType(codec) {\n        return new Promise((resolve) => {\n            _waitForUpdateEnd(() => {\n                if (buffer.changeType) {\n                    buffer.changeType(codec);\n                }\n                resolve();\n            });\n        });\n    }\n\n    function _copyPreviousSinkData(oldSourceBufferSink) {\n        buffer = oldSourceBufferSink.getBuffer();\n    }\n\n    function initializeForFirstUse(streamInfo, mInfo, selectedRepresentation) {\n        mediaInfo = mInfo;\n        type = mediaInfo.type;\n        const codec = mediaInfo.codec;\n        try {\n            // Safari claims to support anything starting 'application/mp4'.\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\n            // - currently no browser does, so check for it and use our own\n            // implementation. The same is true for codecs=\"wvtt\".\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt).*\"/i)) {\n                return _initializeForText(streamInfo);\n            }\n\n            buffer = mediaSource.addSourceBuffer(codec);\n\n            _addEventListeners();\n\n            const promises = [];\n\n            promises.push(updateAppendWindow(mediaInfo.streamInfo));\n\n            if (selectedRepresentation && selectedRepresentation.MSETimeOffset !== undefined) {\n                promises.push(updateTimestampOffset(selectedRepresentation.MSETimeOffset));\n            }\n\n            return Promise.all(promises);\n\n        } catch (e) {\n            // Note that in the following, the quotes are open to allow for extra text after stpp and wvtt\n            if ((mediaInfo.type == constants.TEXT && !mediaInfo.isFragmented) || (codec.indexOf('codecs=\"stpp') !== -1) || (codec.indexOf('codecs=\"vtt') !== -1)) {\n                return _initializeForText(streamInfo);\n            }\n            return Promise.reject(e);\n        }\n    }\n\n    function _initializeForText(streamInfo) {\n        buffer = textController.getTextSourceBuffer(streamInfo);\n        return Promise.resolve();\n    }\n\n    function _addEventListeners() {\n        // use updateend event if possible\n        if (typeof buffer.addEventListener === 'function') {\n            try {\n                buffer.addEventListener('updateend', _updateEndHandler, false);\n                buffer.addEventListener('error', _errHandler, false);\n                buffer.addEventListener('abort', _errHandler, false);\n\n            } catch (err) {\n                // use setInterval to periodically check if updating has been completed\n                intervalId = setInterval(_updateEndHandler, CHECK_INTERVAL);\n            }\n        } else {\n            // use setInterval to periodically check if updating has been completed\n            intervalId = setInterval(_updateEndHandler, CHECK_INTERVAL);\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function _removeEventListeners() {\n        try {\n            if (typeof buffer.removeEventListener === 'function') {\n                buffer.removeEventListener('updateend', _updateEndHandler, false);\n                buffer.removeEventListener('error', _errHandler, false);\n                buffer.removeEventListener('abort', _errHandler, false);\n            }\n            clearInterval(intervalId);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    function updateAppendWindow(sInfo) {\n        return new Promise((resolve) => {\n\n            if (!buffer || !settings.get().streaming.buffer.useAppendWindow) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(() => {\n                try {\n                    if (!buffer) {\n                        resolve();\n                        return;\n                    }\n\n                    let appendWindowEnd = mediaSource.duration;\n                    let appendWindowStart = 0;\n                    if (sInfo && !isNaN(sInfo.start) && !isNaN(sInfo.duration) && isFinite(sInfo.duration)) {\n                        appendWindowEnd = sInfo.start + sInfo.duration;\n                    }\n                    if (sInfo && !isNaN(sInfo.start)) {\n                        appendWindowStart = sInfo.start;\n                    }\n                    if (buffer.appendWindowEnd !== appendWindowEnd || buffer.appendWindowStart !== appendWindowStart) {\n                        buffer.appendWindowStart = 0;\n                        buffer.appendWindowEnd = appendWindowEnd + APPEND_WINDOW_END_OFFSET;\n                        buffer.appendWindowStart = Math.max(appendWindowStart - APPEND_WINDOW_START_OFFSET, 0);\n                        logger.debug(`Updated append window for ${mediaInfo.type}. Set start to ${buffer.appendWindowStart} and end to ${buffer.appendWindowEnd}`);\n                    }\n\n                    resolve();\n                } catch (e) {\n                    logger.warn(`Failed to set append window`);\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function updateTimestampOffset(MSETimeOffset) {\n        return new Promise((resolve) => {\n\n            if (!buffer) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(() => {\n                try {\n                    if (buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\n                        buffer.timestampOffset = MSETimeOffset;\n                        logger.debug(`Set MSE timestamp offset to ${MSETimeOffset}`);\n                    }\n                    resolve();\n                } catch (e) {\n                    resolve();\n                }\n            });\n        });\n    }\n\n\n    function reset() {\n        if (buffer) {\n            try {\n                callbacks = [];\n                _removeEventListeners();\n                isAppendingInProgress = false;\n                appendQueue = [];\n                if (!buffer.getClassName || buffer.getClassName() !== 'TextSourceBuffer') {\n                    logger.debug(`Removing sourcebuffer from media source`);\n                    mediaSource.removeSourceBuffer(buffer);\n                }\n            } catch (e) {\n\n            }\n            buffer = null;\n        }\n        lastRequestAppended = null;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function getAllBufferRanges() {\n        try {\n            return buffer.buffered;\n        } catch (e) {\n            logger.error('getAllBufferRanges exception: ' + e.message);\n            return null;\n        }\n    }\n\n    function append(chunk, request = null) {\n        return new Promise((resolve, reject) => {\n            if (!chunk) {\n                reject({\n                    chunk: chunk,\n                    error: new DashJSError(Errors.APPEND_ERROR_CODE, Errors.APPEND_ERROR_MESSAGE)\n                });\n                return;\n            }\n            appendQueue.push({ data: chunk, promise: { resolve, reject }, request });\n            _waitForUpdateEnd(_appendNextInQueue.bind(this));\n        });\n    }\n\n    function _abortBeforeAppend() {\n        return new Promise((resolve) => {\n            _waitForUpdateEnd(() => {\n                // Save the append window, which is reset on abort().\n                const appendWindowStart = buffer.appendWindowStart;\n                const appendWindowEnd = buffer.appendWindowEnd;\n\n                if (buffer) {\n                    buffer.abort();\n                    buffer.appendWindowStart = appendWindowStart;\n                    buffer.appendWindowEnd = appendWindowEnd;\n                }\n                resolve();\n            });\n        });\n    }\n\n    function remove(range) {\n        return new Promise((resolve, reject) => {\n            const start = range.start;\n            const end = range.end;\n\n            // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\n            if (!((start >= 0) && (end > start))) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(function () {\n                try {\n                    buffer.remove(start, end);\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                    _waitForUpdateEnd(function () {\n                        resolve({\n                            from: start,\n                            to: end,\n                            unintended: false\n                        });\n                        if (range.resolve) {\n                            range.resolve();\n                        }\n                    });\n                } catch (err) {\n                    reject({\n                        from: start,\n                        to: end,\n                        unintended: false,\n                        error: new DashJSError(Errors.REMOVE_ERROR_CODE, Errors.REMOVE_ERROR_MESSAGE)\n                    });\n                    if (range.reject) {\n                        range.reject(err);\n                    }\n                }\n            });\n        });\n    }\n\n    function _appendNextInQueue() {\n        if (isAppendingInProgress) {\n            return;\n        }\n\n        if (appendQueue.length > 0) {\n            isAppendingInProgress = true;\n            const nextChunk = appendQueue[0];\n            appendQueue.splice(0, 1);\n\n            const afterSuccess = function () {\n                isAppendingInProgress = false;\n                if (appendQueue.length > 0) {\n                    _appendNextInQueue.call(this);\n                }\n                // Init segments are cached. In any other case we dont need the chunk bytes anymore and can free the memory\n                if (nextChunk && nextChunk.data && nextChunk.data.segmentType && nextChunk.data.segmentType !== HTTPRequest.INIT_SEGMENT_TYPE) {\n                    delete nextChunk.data.bytes;\n                }\n                nextChunk.promise.resolve({ chunk: nextChunk.data });\n            };\n\n            try {\n                lastRequestAppended = nextChunk.request;\n                if (nextChunk.data.bytes.byteLength === 0) {\n                    afterSuccess.call(this);\n                } else {\n                    if (buffer.appendBuffer) {\n                        buffer.appendBuffer(nextChunk.data.bytes);\n                    } else {\n                        buffer.append(nextChunk.data.bytes, nextChunk.data);\n                    }\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                    _waitForUpdateEnd(afterSuccess.bind(this));\n                }\n            } catch (err) {\n                logger.fatal('SourceBuffer append failed \"' + err + '\"');\n                if (appendQueue.length > 0) {\n                    _appendNextInQueue();\n                } else {\n                    isAppendingInProgress = false;\n                }\n\n                delete nextChunk.data.bytes;\n                nextChunk.promise.reject({ chunk: nextChunk.data, error: new DashJSError(err.code, err.message) });\n            }\n        }\n    }\n\n    function abort() {\n        return new Promise((resolve) => {\n            try {\n                appendQueue = [];\n                if (mediaSource.readyState === 'open') {\n                    _waitForUpdateEnd(() => {\n                        try {\n                            if (buffer) {\n                                buffer.abort();\n                            }\n                            resolve();\n                        } catch (e) {\n                            resolve();\n                        }\n                    });\n                } else if (buffer && buffer.setTextTrack && mediaSource.readyState === 'ended') {\n                    buffer.abort(); //The cues need to be removed from the TextSourceBuffer via a call to abort()\n                    resolve();\n                } else {\n                    resolve();\n                }\n            } catch (e) {\n                resolve();\n            }\n        });\n    }\n\n    function _executeCallback() {\n        if (callbacks.length > 0) {\n            if (!buffer.updating) {\n                const cb = callbacks.shift();\n                cb();\n                // Try to execute next callback if still not updating\n                _executeCallback();\n            }\n        }\n    }\n\n    function _updateEndHandler() {\n        // if updating is still in progress do nothing and wait for the next check again.\n        if (buffer.updating) {\n            return;\n        }\n\n        // updating is completed, now we can stop checking and resolve the promise\n        _executeCallback();\n    }\n\n    function _errHandler(e) {\n        const error = e.target || {};\n        _triggerEvent(Events.SOURCE_BUFFER_ERROR, { error, lastRequestAppended })\n    }\n\n    function _triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: mediaInfo.streamInfo.id, mediaType: type });\n    }\n\n    function _waitForUpdateEnd(callback) {\n        callbacks.push(callback);\n\n        if (!buffer.updating) {\n            _executeCallback();\n        }\n    }\n\n    instance = {\n        getType,\n        getAllBufferRanges,\n        getBuffer,\n        append,\n        remove,\n        abort,\n        reset,\n        updateTimestampOffset,\n        initializeForStreamSwitch,\n        initializeForFirstUse,\n        updateAppendWindow,\n        changeType\n    };\n\n    setup();\n\n    return instance;\n}\n\nSourceBufferSink.__dashjs_factory_name = 'SourceBufferSink';\nconst factory = FactoryMaker.getClassFactory(SourceBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug';\nimport FactoryMaker from '../core/FactoryMaker';\n\n/**\n * This is a sink that is used to temporarily hold onto media chunks before a video element is added.\n * The discharge() function is used to get the chunks out of the PreBuffer for adding to a real SourceBuffer.\n *\n * @class PreBufferSink\n * @ignore\n * @implements FragmentSink\n */\nfunction PreBufferSink(onAppendedCallback) {\n    const context = this.context;\n\n    let instance,\n        logger,\n        outstandingInit;\n    let chunks = [];\n    let onAppended = onAppendedCallback;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function reset() {\n        chunks = [];\n        outstandingInit = null;\n        onAppended = null;\n    }\n\n    function append(chunk) {\n        if (chunk.segmentType !== 'InitializationSegment') { //Init segments are stored in the initCache.\n            chunks.push(chunk);\n            chunks.sort(function (a, b) {\n                return a.start - b.start;\n            });\n            outstandingInit = null;\n        } else {//We need to hold an init chunk for when a corresponding media segment is being downloaded when the discharge happens.\n            outstandingInit = chunk;\n        }\n\n        logger.debug('PreBufferSink appended chunk s: ' + chunk.start + '; e: ' + chunk.end);\n        if (onAppended) {\n            onAppended({\n                chunk: chunk\n            });\n        }\n        return Promise.resolve();\n    }\n\n    function remove(start, end) {\n        chunks = chunks.filter(a => !((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start))); //The opposite of the getChunks predicate.\n        return Promise.resolve();\n    }\n\n    //Nothing async, nothing to abort.\n    function abort() {\n        return Promise.resolve();\n    }\n\n    function getAllBufferRanges() {\n        let ranges = [];\n\n        for (let i = 0; i < chunks.length; i++) {\n            let chunk = chunks[i];\n            if (ranges.length === 0 || chunk.start > ranges[ranges.length - 1].end) {\n                ranges.push({start: chunk.start, end: chunk.end});\n            } else {\n                ranges[ranges.length - 1].end = chunk.end;\n            }\n        }\n\n        //Implements TimeRanges interface. So acts just like sourceBuffer.buffered.\n        const timeranges = {\n            start: function (n) {\n                return ranges[n].start;\n            },\n            end: function (n) {\n                return ranges[n].end;\n            }\n        };\n\n        Object.defineProperty(timeranges, 'length', {\n            get: function () {\n                return ranges.length;\n            }\n        });\n\n        return timeranges;\n    }\n\n    function updateTimestampOffset() {\n        return Promise.resolve();\n    }\n\n    function getBuffer() {\n        return this;\n    }\n\n    /**\n     * Return the all chunks in the buffer the lie between times start and end.\n     * Because a chunk cannot be split, this returns the full chunk if any part of its time lies in the requested range.\n     * Chunks are removed from the buffer when they are discharged.\n     * @function PreBufferSink#discharge\n     * @param {?Number} start The start time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @param {?Number} end The end time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @returns {Array} The set of chunks from the buffer within the time ranges.\n     */\n    function discharge(start, end) {\n        const result = getChunksAt(start, end);\n        if (outstandingInit) {\n            result.push(outstandingInit);\n            outstandingInit = null;\n        }\n\n        remove(start, end);\n\n        return result;\n    }\n\n    function getChunksAt(start, end) {\n        return chunks.filter(a => ((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start)));\n    }\n\n    function waitForUpdateEnd(callback) {\n        callback();\n    }\n\n    instance = {\n        getAllBufferRanges,\n        append,\n        remove,\n        abort,\n        discharge,\n        reset,\n        updateTimestampOffset,\n        waitForUpdateEnd,\n        getBuffer\n    };\n\n    setup();\n\n    return instance;\n}\n\nPreBufferSink.__dashjs_factory_name = 'PreBufferSink';\nconst factory = FactoryMaker.getClassFactory(PreBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const representationId = chunk.representationId;\n\n        data[id] = data[id] || {};\n        data[id][representationId] = chunk;\n    }\n\n    function extract (streamId, representationId) {\n        if (data && data[streamId] && data[streamId][representationId]) {\n            return data[streamId][representationId];\n        } else {\n            return null;\n        }\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport FragmentModel from '../models/FragmentModel';\nimport SourceBufferSink from '../SourceBufferSink';\nimport PreBufferSink from '../PreBufferSink';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\nimport DashJSError from '../vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\n\nconst BUFFER_END_THRESHOLD = 0.5;\nconst BUFFER_RANGE_CALCULATION_THRESHOLD = 0.01;\nconst QUOTA_EXCEEDED_ERROR_CODE = 22;\n\nconst BUFFER_CONTROLLER_TYPE = 'BufferController';\n\nfunction BufferController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const errHandler = config.errHandler;\n    const fragmentModel = config.fragmentModel;\n    const representationController = config.representationController;\n    const adapter = config.adapter;\n    const textController = config.textController;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const streamInfo = config.streamInfo;\n    const type = config.type;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        isBufferingCompleted,\n        bufferLevel,\n        criticalBufferLevel,\n        mediaSource,\n        maxAppendedIndex,\n        maximumIndex,\n        sourceBufferSink,\n        dischargeBuffer,\n        isPrebuffering,\n        dischargeFragments,\n        bufferState,\n        appendedBytesInfo,\n        wallclockTicked,\n        isPruningInProgress,\n        isQuotaExceeded,\n        initCache,\n        pendingPruningRanges,\n        replacingBuffer,\n        seekTarget;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        initCache = InitCache(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    /**\n     * Initialize the BufferController. Sets the media source and registers the event handlers.\n     * @param {object} mediaSource\n     */\n    function initialize(mediaSource) {\n        setMediaSource(mediaSource);\n\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, instance);\n\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STALLED, _onPlaybackStalled, instance);\n    }\n\n    /**\n     * Returns the stream id\n     * @return {string}\n     */\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    /**\n     * Returns the media type\n     * @return {type}\n     */\n    function getType() {\n        return type;\n    }\n\n    /**\n     * Returns the type of the BufferController. We distinguish between standard buffer controllers and buffer controllers related to texttracks.\n     * @return {string}\n     */\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    /**\n     * Sets the mediasource.\n     * @param {object} value\n     * @param {object} mediaInfo\n     */\n    function setMediaSource(value, mediaInfo = null) {\n        return new Promise((resolve, reject) => {\n            mediaSource = value;\n            // if we have a prebuffer, we should prepare to discharge it, and make a new sourceBuffer ready\n            if (sourceBufferSink && mediaInfo && typeof sourceBufferSink.discharge === 'function') {\n                dischargeBuffer = sourceBufferSink;\n                createBufferSink(mediaInfo)\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            } else {\n                resolve();\n            }\n        })\n\n    }\n\n    /**\n     * Get the RepresentationInfo for a certain quality.\n     * @param {number} quality\n     * @return {object}\n     * @private\n     */\n    function _getRepresentationInfo(quality) {\n        return adapter.convertRepresentationToRepresentationInfo(representationController.getRepresentationForQuality(quality));\n    }\n\n    /**\n     * Creates a SourceBufferSink object\n     * @param {object} mediaInfo\n     * @param {array} oldBufferSinks\n     * @return {Promise<Object>} SourceBufferSink\n     */\n    function createBufferSink(mediaInfo, oldBufferSinks = []) {\n        return new Promise((resolve, reject) => {\n            if (!initCache || !mediaInfo) {\n                resolve(null);\n                return;\n            }\n            if (mediaSource) {\n                isPrebuffering = false;\n                _initializeSinkForMseBuffering(mediaInfo, oldBufferSinks)\n                    .then((sink) => {\n                        resolve(sink);\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            } else {\n                isPrebuffering = true;\n                _initializeSinkForPrebuffering()\n                    .then((sink) => {\n                        resolve(sink);\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            }\n        });\n    }\n\n    function _initializeSinkForPrebuffering() {\n        return new Promise((resolve, reject) => {\n            const requiredQuality = abrController.getQualityFor(type, streamInfo.id);\n            sourceBufferSink = PreBufferSink(context).create(_onAppended.bind(this));\n            updateBufferTimestampOffset(_getRepresentationInfo(requiredQuality))\n                .then(() => {\n                    resolve(sourceBufferSink);\n                })\n                .catch(() => {\n                    reject();\n                })\n        })\n    }\n\n    function _initializeSinkForMseBuffering(mediaInfo, oldBufferSinks) {\n        return new Promise((resolve, reject) => {\n            const requiredQuality = abrController.getQualityFor(type, streamInfo.id);\n            sourceBufferSink = SourceBufferSink(context).create({\n                mediaSource,\n                textController,\n                eventBus\n            });\n            _initializeSink(mediaInfo, oldBufferSinks, requiredQuality)\n                .then(() => {\n                    return updateBufferTimestampOffset(_getRepresentationInfo(requiredQuality));\n                })\n                .then(() => {\n                    resolve(sourceBufferSink);\n                })\n                .catch((e) => {\n                    logger.fatal('Caught error on create SourceBuffer: ' + e);\n                    errHandler.error(new DashJSError(Errors.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, Errors.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + type));\n                    reject(e);\n                });\n        })\n    }\n\n    function _initializeSink(mediaInfo, oldBufferSinks, requiredQuality) {\n        const selectedRepresentation = _getRepresentationInfo(requiredQuality);\n\n        if (oldBufferSinks && oldBufferSinks[type] && (type === Constants.VIDEO || type === Constants.AUDIO)) {\n            return sourceBufferSink.initializeForStreamSwitch(mediaInfo, selectedRepresentation, oldBufferSinks[type]);\n        } else {\n            return sourceBufferSink.initializeForFirstUse(streamInfo, mediaInfo, selectedRepresentation);\n        }\n    }\n\n    function dischargePreBuffer() {\n        if (sourceBufferSink && dischargeBuffer && typeof dischargeBuffer.discharge === 'function') {\n            const ranges = dischargeBuffer.getAllBufferRanges();\n\n            if (ranges.length > 0) {\n                let rangeStr = 'Beginning ' + type + 'PreBuffer discharge, adding buffer for:';\n                for (let i = 0; i < ranges.length; i++) {\n                    rangeStr += ' start: ' + ranges.start(i) + ', end: ' + ranges.end(i) + ';';\n                }\n                logger.debug(rangeStr);\n            } else {\n                logger.debug('PreBuffer discharge requested, but there were no media segments in the PreBuffer.');\n            }\n\n            //A list of fragments to supress bytesAppended events for. This makes transferring from a prebuffer to a sourcebuffer silent.\n            dischargeFragments = [];\n            let chunks = dischargeBuffer.discharge();\n            let lastInit = null;\n            for (let j = 0; j < chunks.length; j++) {\n                const chunk = chunks[j];\n                if (chunk.segmentType !== HTTPRequest.INIT_SEGMENT_TYPE) {\n                    const initChunk = initCache.extract(chunk.streamId, chunk.representationId);\n                    if (initChunk) {\n                        if (lastInit !== initChunk) {\n                            dischargeFragments.push(initChunk);\n                            sourceBufferSink.append(initChunk);\n                            lastInit = initChunk;\n                        }\n                    }\n                }\n                dischargeFragments.push(chunk);\n                sourceBufferSink.append(chunk);\n            }\n\n            dischargeBuffer.reset();\n            dischargeBuffer = null;\n        }\n    }\n\n\n    /**\n     * Callback handler when init segment has been loaded. Based on settings, the init segment is saved to the cache, and appended to the buffer.\n     * @param {object} e\n     * @private\n     */\n    function _onInitFragmentLoaded(e) {\n        if (settings.get().streaming.cacheInitSegments) {\n            logger.info('Init fragment finished loading saving to', type + '\\'s init cache');\n            initCache.save(e.chunk);\n        }\n        logger.debug('Append Init fragment', type, ' with representationId:', e.chunk.representationId, ' and quality:', e.chunk.quality, ', data size:', e.chunk.bytes.byteLength);\n        _appendToBuffer(e.chunk);\n    }\n\n    /**\n     * Append the init segment for a certain representation to the buffer. If the init segment is cached we take the one from the cache. Otherwise the function returns false and the segment has to be requested again.\n     * @param {string} representationId\n     * @return {boolean}\n     */\n    function appendInitSegmentFromCache(representationId) {\n        // Get init segment from cache\n        const chunk = initCache.extract(streamInfo.id, representationId);\n\n        if (!chunk) {\n            // Init segment not in cache, shall be requested\n            return false;\n        }\n\n        // Append init segment into buffer\n        logger.info('Append Init fragment', type, ' with representationId:', chunk.representationId, ' and quality:', chunk.quality, ', data size:', chunk.bytes.byteLength);\n        _appendToBuffer(chunk);\n\n        return true;\n    }\n\n    /**\n     * Calls the _appendToBuffer function to append the segment to the buffer. In case of a track switch the buffer might be cleared.\n     * @param {object} e\n     */\n    function _onMediaFragmentLoaded(e) {\n        _appendToBuffer(e.chunk, e.request);\n    }\n\n    /**\n     * Append data to the MSE buffer using the SourceBufferSink\n     * @param {object} chunk\n     * @param {object} request\n     * @private\n     */\n    function _appendToBuffer(chunk, request = null) {\n        sourceBufferSink.append(chunk, request)\n            .then((e) => {\n                _onAppended(e);\n            })\n            .catch((e) => {\n                _onAppended(e);\n            });\n\n        if (chunk.mediaInfo.type === Constants.VIDEO) {\n            _triggerEvent(Events.VIDEO_CHUNK_RECEIVED, { chunk: chunk });\n        }\n    }\n\n    function _showBufferRanges(ranges) {\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                logger.debug('Buffered range: ' + ranges.start(i) + ' - ' + ranges.end(i) + ', currentTime = ', playbackController.getTime());\n            }\n        }\n    }\n\n    function _onAppended(e) {\n        if (e.error) {\n            // If we receive a QUOTA_EXCEEDED_ERROR_CODE we should adjust the target buffer times to avoid this error in the future.\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE) {\n                _handleQuotaExceededError();\n            }\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE || !hasEnoughSpaceToAppend()) {\n                logger.warn('Clearing playback buffer to overcome quota exceed situation');\n                // Notify ScheduleController to stop scheduling until buffer has been pruned\n                _triggerEvent(Events.QUOTA_EXCEEDED, {\n                    criticalBufferLevel: criticalBufferLevel,\n                    quotaExceededTime: e.chunk.start\n                });\n                clearBuffers(getClearRanges());\n            }\n            return;\n        }\n\n        // Check if session has not been stopped in the meantime (while last segment was being appended)\n        if (!sourceBufferSink) return;\n\n        _updateBufferLevel();\n\n        isQuotaExceeded = false;\n        appendedBytesInfo = e.chunk;\n\n        if (!appendedBytesInfo || !appendedBytesInfo.endFragment) {\n            return;\n        }\n\n        if (appendedBytesInfo && !isNaN(appendedBytesInfo.index)) {\n            maxAppendedIndex = Math.max(appendedBytesInfo.index, maxAppendedIndex);\n            _checkIfBufferingCompleted();\n        }\n\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        if (appendedBytesInfo.segmentType === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            _showBufferRanges(ranges);\n            _onPlaybackProgression();\n            _adjustSeekTarget();\n        }\n\n        let suppressAppendedEvent = false;\n        if (dischargeFragments) {\n            if (dischargeFragments.indexOf(appendedBytesInfo) > 0) {\n                suppressAppendedEvent = true;\n            }\n            dischargeFragments = null;\n        }\n\n        if (appendedBytesInfo && !suppressAppendedEvent) {\n            _triggerEvent(Events.BYTES_APPENDED_END_FRAGMENT, {\n                quality: appendedBytesInfo.quality,\n                startTime: appendedBytesInfo.start,\n                index: appendedBytesInfo.index,\n                bufferedRanges: ranges,\n                segmentType: appendedBytesInfo.segmentType,\n                mediaType: type\n            });\n        }\n    }\n\n    /**\n     * In some cases the segment we requested might start at a different time than we initially aimed for. segments timeline/template tolerance.\n     * We might need to do an internal seek if there is drift.\n     * @private\n     */\n    function _adjustSeekTarget() {\n        if (isNaN(seekTarget) || isPrebuffering) return;\n        // Check buffered data only for audio and video\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) {\n            seekTarget = NaN;\n            return;\n        }\n\n        // Check if current buffered range already contains seek target (and current video element time)\n        const currentTime = playbackController.getTime();\n        const rangeAtCurrenTime = getRangeAt(currentTime, 0);\n        const rangeAtSeekTarget = getRangeAt(seekTarget, 0);\n        if (rangeAtCurrenTime && rangeAtSeekTarget && rangeAtCurrenTime.start === rangeAtSeekTarget.start) {\n            seekTarget = NaN;\n            return;\n        }\n\n        // Get buffered range corresponding to the seek target\n        const segmentDuration = representationController.getCurrentRepresentation().segmentDuration;\n        const range = getRangeAt(seekTarget, segmentDuration);\n        if (!range) return;\n\n        if (settings.get().streaming.buffer.enableSeekDecorrelationFix && Math.abs(currentTime - seekTarget) > segmentDuration) {\n            // If current video model time is decorrelated from seek target (and appended buffer) then seek video element\n            // (in case of live streams on some browsers/devices for which we can't set video element time at unavalaible range)\n\n            // Check if appended segment is not anterior from seek target (segments timeline/template tolerance)\n            if (seekTarget <= range.end) {\n                // Seek video element to seek target or range start if appended buffer starts after seek target (segments timeline/template tolerance)\n                playbackController.seek(Math.max(seekTarget, range.start), false, true);\n            }\n        } else if (currentTime < range.start) {\n            // If appended buffer starts after seek target (segments timeline/template tolerance) then seek to range start\n            playbackController.seek(range.start, false, true);\n        }\n    }\n\n    function _handleQuotaExceededError() {\n        isQuotaExceeded = true;\n        criticalBufferLevel = getTotalBufferedTime() * 0.8;\n        logger.warn('Quota exceeded, Critical Buffer: ' + criticalBufferLevel);\n\n        if (criticalBufferLevel > 0) {\n            // recalculate buffer lengths according to criticalBufferLevel\n            const bufferToKeep = Math.max(0.2 * criticalBufferLevel, 1);\n            const bufferAhead = criticalBufferLevel - bufferToKeep;\n            const bufferTimeAtTopQuality = Math.min(settings.get().streaming.buffer.bufferTimeAtTopQuality, bufferAhead * 0.9);\n            const bufferTimeAtTopQualityLongForm = Math.min(settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm, bufferAhead * 0.9);\n            const s = {\n                streaming: {\n                    buffer: {\n                        bufferToKeep: parseFloat(bufferToKeep.toFixed(5)),\n                        bufferTimeAtTopQuality: parseFloat(bufferTimeAtTopQuality.toFixed(5)),\n                        bufferTimeAtTopQualityLongForm: parseFloat(bufferTimeAtTopQualityLongForm.toFixed(5))\n                    }\n                }\n            };\n            settings.update(s);\n        }\n    }\n\n    //**********************************************************************\n    // START Buffer Level, State & Sufficiency Handling.\n    //**********************************************************************\n    function prepareForPlaybackSeek() {\n        if (isBufferingCompleted) {\n            setIsBufferingCompleted(false);\n        }\n\n        // Abort the current request and empty all possible segments to be appended\n        return sourceBufferSink.abort();\n    }\n\n    function prepareForReplacementTrackSwitch(codec) {\n        return new Promise((resolve, reject) => {\n            sourceBufferSink.abort()\n                .then(() => {\n                    return updateAppendWindow();\n                })\n                .then(() => {\n                    if (settings.get().streaming.buffer.useChangeTypeForTrackSwitch) {\n                        return sourceBufferSink.changeType(codec);\n                    }\n\n                    return Promise.resolve();\n                })\n                .then(() => {\n                    return pruneAllSafely();\n                })\n                .then(() => {\n                    setIsBufferingCompleted(false);\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function prepareForForceReplacementQualitySwitch(representationInfo) {\n        return new Promise((resolve, reject) => {\n            sourceBufferSink.abort()\n                .then(() => {\n                    return updateAppendWindow();\n                })\n                .then(() => {\n                    return pruneAllSafely();\n                })\n                .then(() => {\n                    // In any case we need to update the MSE.timeOffset\n                    return updateBufferTimestampOffset(representationInfo)\n                })\n                .then(() => {\n                    setIsBufferingCompleted(false);\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function prepareForNonReplacementTrackSwitch(codec) {\n        return new Promise((resolve, reject) => {\n            updateAppendWindow()\n                .then(() => {\n                    if (settings.get().streaming.buffer.useChangeTypeForTrackSwitch) {\n                        return sourceBufferSink.changeType(codec);\n                    }\n\n                    return Promise.resolve();\n                })\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function pruneAllSafely() {\n        return new Promise((resolve, reject) => {\n            let ranges = getAllRangesWithSafetyFactor();\n\n            if (!ranges || ranges.length === 0) {\n                _onPlaybackProgression();\n                resolve();\n                return;\n            }\n\n            clearBuffers(ranges)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function getAllRangesWithSafetyFactor(seekTime) {\n        const clearRanges = [];\n        const ranges = sourceBufferSink.getAllBufferRanges();\n\n        // no valid ranges\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        // if no target time is provided we clear everyhing\n        if ((!seekTime && seekTime !== 0) || isNaN(seekTime)) {\n            clearRanges.push({\n                start: ranges.start(0),\n                end: ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD\n            });\n        }\n\n        // otherwise we need to calculate the correct pruning range\n        else {\n\n            const behindPruningRange = _getRangeBehindForPruning(seekTime, ranges);\n            const aheadPruningRange = _getRangeAheadForPruning(seekTime, ranges);\n\n            if (behindPruningRange) {\n                clearRanges.push(behindPruningRange);\n            }\n\n            if (aheadPruningRange) {\n                clearRanges.push(aheadPruningRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function _getRangeBehindForPruning(targetTime, ranges) {\n        const bufferToKeepBehind = settings.get().streaming.buffer.bufferToKeep;\n        const startOfBuffer = ranges.start(0);\n\n        // if we do a seek ahead of the current play position we do need to prune behind the new play position\n        const behindDiff = targetTime - startOfBuffer;\n        if (behindDiff > bufferToKeepBehind) {\n\n            let rangeEnd = Math.max(0, targetTime - bufferToKeepBehind);\n            // Ensure we keep full range of current fragment\n            const currentTimeRequest = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: targetTime,\n                threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n            })[0];\n\n            if (currentTimeRequest) {\n                rangeEnd = Math.min(currentTimeRequest.startTime, rangeEnd);\n            }\n            if (rangeEnd > 0) {\n                return {\n                    start: startOfBuffer,\n                    end: rangeEnd\n                };\n            }\n        }\n\n        return null;\n    }\n\n    function _getRangeAheadForPruning(targetTime, ranges) {\n        // if we do a seek behind the current play position we do need to prune ahead of the new play position\n        // we keep everything that is within bufferToKeepAhead but only if the buffer is continuous.\n        // Otherwise we have gaps once the seek is done which might trigger an unintentional gap jump\n        const endOfBuffer = ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD;\n        const continuousBufferTime = getContinuousBufferTimeForTargetTime(targetTime);\n\n        // This is the maximum range we keep ahead\n        const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.buffer.longFormContentDurationThreshold;\n        const bufferToKeepAhead = isLongFormContent ? settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm : settings.get().streaming.buffer.bufferTimeAtTopQuality;\n\n        // Define the start time from which we will prune. If there is no continuous range from the targettime we start immediately at the target time\n        // Otherwise we set the start point to the end of the continuous range taking the maximum buffer to keep ahead into account\n        let rangeStart = !isNaN(continuousBufferTime) ? Math.min(continuousBufferTime, targetTime + bufferToKeepAhead) : targetTime;\n\n        // Check if we are done buffering, no need to prune then\n        if (rangeStart >= ranges.end(ranges.length - 1)) {\n            return null\n        }\n\n        // Ensure we keep full range of current fragment\n        const currentTimeRequest = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: targetTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        if (currentTimeRequest) {\n            rangeStart = Math.max(currentTimeRequest.startTime + currentTimeRequest.duration, rangeStart);\n        }\n\n        // Never remove the contiguous range of targetTime in order to avoid flushes & reenqueues when the user doesn't want it\n        const avoidCurrentTimeRangePruning = settings.get().streaming.buffer.avoidCurrentTimeRangePruning;\n        if (avoidCurrentTimeRangePruning) {\n            for (let i = 0; i < ranges.length; i++) {\n                if (ranges.start(i) <= targetTime && targetTime <= ranges.end(i)\n                    && ranges.start(i) <= rangeStart && rangeStart <= ranges.end(i)) {\n                    let oldRangeStart = rangeStart;\n                    if (i + 1 < ranges.length) {\n                        rangeStart = ranges.start(i + 1);\n                    } else {\n                        rangeStart = ranges.end(i) + 1;\n                    }\n                    logger.debug('Buffered range [' + ranges.start(i) + ', ' + ranges.end(i) + '] overlaps with targetTime ' + targetTime + ' and range to be pruned [' + oldRangeStart + ', ' + endOfBuffer + '], using [' + rangeStart + ', ' + endOfBuffer + '] instead' + ((rangeStart < endOfBuffer) ? '' : ' (no actual pruning)'));\n                    break;\n                }\n            }\n        }\n\n        if (rangeStart < ranges.end(ranges.length - 1)) {\n            return {\n                start: rangeStart,\n                end: endOfBuffer\n            };\n        }\n        return null;\n    }\n\n\n    function _onPlaybackProgression() {\n        if (!replacingBuffer || (type === Constants.TEXT && textController.isTextEnabled())) {\n            _updateBufferLevel();\n        }\n    }\n\n    function _onPlaybackStalled() {\n        checkIfSufficientBuffer();\n    }\n\n    function _onPlaybackPlaying() {\n        checkIfSufficientBuffer();\n        seekTarget = NaN;\n    }\n\n    function hasBufferAtTime(time) {\n        try {\n            const ranges = sourceBufferSink.getAllBufferRanges();\n\n            if (!ranges || ranges.length === 0) {\n                return false;\n            }\n\n            let i = 0;\n\n            while (i < ranges.length) {\n                const start = ranges.start(i);\n                const end = ranges.end(i);\n\n                if (time >= start && time <= end) {\n                    return true;\n                }\n\n                i += 1;\n            }\n\n            return false\n\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    function getRangeAt(time, tolerance) {\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        let start = 0;\n        let end = 0;\n        let firstStart = null;\n        let lastEnd = null;\n        let gap = 0;\n        let len,\n            i;\n\n        const toler = !isNaN(tolerance) ? tolerance : 0.15;\n\n        if (ranges !== null && ranges !== undefined) {\n            for (i = 0, len = ranges.length; i < len; i++) {\n                start = ranges.start(i);\n                end = ranges.end(i);\n                if (firstStart === null) {\n                    gap = Math.abs(start - time);\n                    if (time >= start && time < end) {\n                        // start the range\n                        firstStart = start;\n                        lastEnd = end;\n                    } else if (gap <= toler) {\n                        // start the range even though the buffer does not contain time 0\n                        firstStart = start;\n                        lastEnd = end;\n                    }\n                } else {\n                    gap = start - lastEnd;\n                    if (gap <= toler) {\n                        // the discontinuity is smaller than the tolerance, combine the ranges\n                        lastEnd = end;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            if (firstStart !== null) {\n                return {\n                    start: firstStart,\n                    end: lastEnd\n                };\n            }\n        }\n\n        return null;\n    }\n\n    function getBufferLength(time, tolerance) {\n        let range,\n            length;\n\n        // Consider gap/discontinuity limit as tolerance\n        if (settings.get().streaming.gaps.jumpGaps) {\n            tolerance = settings.get().streaming.gaps.smallGapLimit;\n        }\n\n        range = getRangeAt(time, tolerance);\n\n        if (range === null) {\n            length = 0;\n        } else {\n            length = range.end - time;\n        }\n\n        return length;\n    }\n\n    function _updateBufferLevel() {\n        if (playbackController) {\n            let referenceTime = playbackController.getTime() || 0;\n            // In case we are prebuffering we dont have a current time yet\n            if (isPrebuffering) {\n                referenceTime = !isNaN(seekTarget) ? seekTarget : 0;\n            }\n            const tolerance = settings.get().streaming.gaps.jumpGaps && !isNaN(settings.get().streaming.gaps.smallGapLimit) ? settings.get().streaming.gaps.smallGapLimit : NaN;\n            bufferLevel = Math.max(getBufferLength(referenceTime, tolerance), 0);\n            _triggerEvent(Events.BUFFER_LEVEL_UPDATED, { mediaType: type, bufferLevel: bufferLevel });\n            checkIfSufficientBuffer();\n        }\n    }\n\n    function _checkIfBufferingCompleted() {\n        const isLastIdxAppended = maxAppendedIndex >= maximumIndex - 1; // Handles 0 and non 0 based request index\n        // To avoid rounding error when comparing, the stream time and buffer level only must be within 5 decimal places\n        const periodBuffered = playbackController.getTimeToStreamEnd(streamInfo) - bufferLevel < 0.00001;\n        if ((isLastIdxAppended || periodBuffered) && !isBufferingCompleted) {\n            setIsBufferingCompleted(true);\n            logger.debug(`checkIfBufferingCompleted trigger BUFFERING_COMPLETED for stream id ${streamInfo.id} and type ${type}`);\n        }\n    }\n\n    function checkIfSufficientBuffer() {\n        // No need to check buffer if type is not audio or video (for example if several errors occur during text parsing, so that the buffer cannot be filled, no error must occur on video playback)\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) return;\n\n        // When the player is working in low latency mode, the buffer is often below STALL_THRESHOLD.\n        // So, when in low latency mode, change dash.js behavior so it notifies a stall just when\n        // buffer reach 0 seconds\n        if (((!playbackController.getLowLatencyModeEnabled() && bufferLevel < settings.get().streaming.buffer.stallThreshold) || bufferLevel === 0) && !isBufferingCompleted) {\n            _notifyBufferStateChanged(MetricsConstants.BUFFER_EMPTY);\n        } else {\n            if (isBufferingCompleted || bufferLevel >= settings.get().streaming.buffer.stallThreshold || (playbackController.getLowLatencyModeEnabled() && bufferLevel > 0)) {\n                _notifyBufferStateChanged(MetricsConstants.BUFFER_LOADED);\n            }\n        }\n    }\n\n    function _notifyBufferStateChanged(state) {\n        if (bufferState === state ||\n            (state === MetricsConstants.BUFFER_EMPTY && playbackController.getTime() === 0) || // Don't trigger BUFFER_EMPTY if it's initial loading\n            (type === Constants.TEXT && !textController.isTextEnabled())) {\n            return;\n        }\n\n        bufferState = state;\n\n        _triggerEvent(Events.BUFFER_LEVEL_STATE_CHANGED, { state: state });\n        _triggerEvent(state === MetricsConstants.BUFFER_LOADED ? Events.BUFFER_LOADED : Events.BUFFER_EMPTY);\n        logger.debug(state === MetricsConstants.BUFFER_LOADED ? 'Got enough buffer to start' : 'Waiting for more buffer before starting playback');\n    }\n\n    /* prune buffer on our own in background to avoid browsers pruning buffer silently */\n    function pruneBuffer() {\n        if (!sourceBufferSink || type === Constants.TEXT) {\n            return;\n        }\n\n        if (!isBufferingCompleted) {\n            clearBuffers(getClearRanges());\n        }\n    }\n\n    function getClearRanges() {\n        const clearRanges = [];\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        const currentTime = playbackController.getTime();\n        let startRangeToKeep = Math.max(0, currentTime - settings.get().streaming.buffer.bufferToKeep);\n\n        const currentTimeRequest = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: currentTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        // Ensure we keep full range of current fragment\n        if (currentTimeRequest) {\n            startRangeToKeep = Math.min(currentTimeRequest.startTime, startRangeToKeep);\n        } else if (currentTime === 0 && playbackController.getIsDynamic()) {\n            // Don't prune before the live stream starts, it messes with low latency\n            return [];\n        }\n\n        if (ranges.start(0) <= startRangeToKeep) {\n            const behindRange = {\n                start: 0,\n                end: startRangeToKeep\n            };\n            for (let i = 0; i < ranges.length && ranges.end(i) <= startRangeToKeep; i++) {\n                behindRange.end = ranges.end(i);\n            }\n            if (behindRange.start < behindRange.end) {\n                clearRanges.push(behindRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function clearBuffers(ranges) {\n        return new Promise((resolve, reject) => {\n            if (!ranges || !sourceBufferSink || ranges.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            ranges.forEach((range) => {\n                promises.push(_addClearRangeWithPromise(range));\n            });\n\n\n            if (!isPruningInProgress) {\n                clearNextRange();\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function _addClearRangeWithPromise(range) {\n        return new Promise((resolve, reject) => {\n            range.resolve = resolve;\n            range.reject = reject;\n            pendingPruningRanges.push(range);\n        });\n    }\n\n    function clearNextRange() {\n        try {\n            // If there's nothing to prune reset state\n            if (pendingPruningRanges.length === 0 || !sourceBufferSink) {\n                logger.debug('Nothing to prune, halt pruning');\n                pendingPruningRanges = [];\n                isPruningInProgress = false;\n                return;\n            }\n\n            const sourceBuffer = sourceBufferSink.getBuffer();\n            // If there's nothing buffered any pruning is invalid, so reset our state\n            if (!sourceBuffer || !sourceBuffer.buffered || sourceBuffer.buffered.length === 0) {\n                logger.debug('SourceBuffer is empty (or does not exist), halt pruning');\n                pendingPruningRanges = [];\n                isPruningInProgress = false;\n                return;\n            }\n\n            const range = pendingPruningRanges.shift();\n            logger.debug(`${type}: Removing buffer from: ${range.start} to ${range.end}`);\n            isPruningInProgress = true;\n\n            // If removing buffer ahead current playback position, update maxAppendedIndex\n            const currentTime = playbackController.getTime();\n            if (currentTime < range.end) {\n                setIsBufferingCompleted(false);\n            }\n\n            sourceBufferSink.remove(range)\n                .then((e) => {\n                    _onRemoved(e);\n                })\n                .catch((e) => {\n                    _onRemoved(e);\n                });\n        } catch (e) {\n            isPruningInProgress = false;\n        }\n    }\n\n    function _onRemoved(e) {\n        logger.debug('onRemoved buffer from:', e.from, 'to', e.to);\n\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        _showBufferRanges(ranges);\n\n        if (pendingPruningRanges.length === 0) {\n            isPruningInProgress = false;\n            _updateBufferLevel();\n        }\n\n        if (e.unintended) {\n            logger.warn('Detected unintended removal from:', e.from, 'to', e.to, 'setting streamprocessor time to', e.from);\n            _triggerEvent(Events.SEEK_TARGET, { time: e.from });\n        }\n\n        if (isPruningInProgress) {\n            clearNextRange();\n        } else {\n            if (!replacingBuffer) {\n                _updateBufferLevel();\n            } else {\n                replacingBuffer = false;\n            }\n            _triggerEvent(Events.BUFFER_CLEARED, {\n                from: e.from,\n                to: e.to,\n                unintended: e.unintended,\n                hasEnoughSpaceToAppend: hasEnoughSpaceToAppend(),\n                quotaExceeded: isQuotaExceeded\n            });\n        }\n    }\n\n    function updateBufferTimestampOffset(representationInfo) {\n        return new Promise((resolve) => {\n            if (!representationInfo || representationInfo.MSETimeOffset === undefined || !sourceBufferSink || !sourceBufferSink.updateTimestampOffset) {\n                resolve();\n                return;\n            }\n            // Each track can have its own @presentationTimeOffset, so we should set the offset\n            // if it has changed after switching the quality or updating an mpd\n            sourceBufferSink.updateTimestampOffset(representationInfo.MSETimeOffset)\n                .then(() => {\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n\n    }\n\n    function updateAppendWindow() {\n        if (sourceBufferSink && !isBufferingCompleted) {\n            return sourceBufferSink.updateAppendWindow(streamInfo);\n        }\n        return Promise.resolve();\n    }\n\n    function segmentRequestingCompleted(segmentIndex) {\n        if (!isNaN(segmentIndex)) {\n            maximumIndex = segmentIndex;\n            _checkIfBufferingCompleted();\n        }\n    }\n\n    function _onWallclockTimeUpdated() {\n        wallclockTicked++;\n        const secondsElapsed = (wallclockTicked * (settings.get().streaming.wallclockTimeUpdateInterval / 1000));\n        if ((secondsElapsed >= settings.get().streaming.buffer.bufferPruningInterval)) {\n            wallclockTicked = 0;\n            pruneBuffer();\n        }\n    }\n\n    function _onPlaybackRateChanged() {\n        checkIfSufficientBuffer();\n    }\n\n    function getBuffer() {\n        return sourceBufferSink;\n    }\n\n    function getBufferLevel() {\n        return bufferLevel;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function setIsBufferingCompleted(value) {\n        isBufferingCompleted = value;\n\n        if (isBufferingCompleted) {\n            _triggerEvent(Events.BUFFERING_COMPLETED);\n        } else {\n            maximumIndex = Number.POSITIVE_INFINITY;\n        }\n    }\n\n    function getIsPruningInProgress() {\n        return isPruningInProgress;\n    }\n\n    function getTotalBufferedTime() {\n        try {\n            const ranges = sourceBufferSink.getAllBufferRanges();\n            let totalBufferedTime = 0;\n            let ln,\n                i;\n\n            if (!ranges) return totalBufferedTime;\n\n            for (i = 0, ln = ranges.length; i < ln; i++) {\n                totalBufferedTime += ranges.end(i) - ranges.start(i);\n            }\n\n            return totalBufferedTime;\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * This function returns the maximum time for which the buffer is continuous starting from a target time.\n     * As soon as there is a gap we return the time before the gap starts\n     * @param {number} targetTime\n     */\n    function getContinuousBufferTimeForTargetTime(targetTime) {\n        try {\n            let adjustedTime = targetTime;\n            const ranges = sourceBufferSink.getAllBufferRanges();\n\n            if (!ranges || ranges.length === 0) {\n                return NaN;\n            }\n\n            let i = 0;\n\n            while (adjustedTime === targetTime && i < ranges.length) {\n                const start = ranges.start(i);\n                const end = ranges.end(i);\n\n                if (adjustedTime >= start && adjustedTime <= end) {\n                    adjustedTime = end;\n                }\n\n                i += 1;\n            }\n\n            return adjustedTime === targetTime ? NaN : adjustedTime;\n\n        } catch (e) {\n\n        }\n    }\n\n    function hasEnoughSpaceToAppend() {\n        const totalBufferedTime = getTotalBufferedTime();\n        return (isNaN(totalBufferedTime) || totalBufferedTime < criticalBufferLevel);\n    }\n\n    function setSeekTarget(value) {\n        seekTarget = value;\n    }\n\n    function _triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: streamInfo.id, mediaType: type });\n    }\n\n    function resetInitialSettings(errored, keepBuffers) {\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\n        bufferState = undefined;\n        maximumIndex = Number.POSITIVE_INFINITY;\n        maxAppendedIndex = 0;\n        appendedBytesInfo = null;\n        isBufferingCompleted = false;\n        isPruningInProgress = false;\n        isQuotaExceeded = false;\n        bufferLevel = 0;\n        wallclockTicked = 0;\n        pendingPruningRanges = [];\n        seekTarget = NaN;\n        isPrebuffering = false;\n\n        if (sourceBufferSink) {\n            let tmpSourceBufferSinkToReset = sourceBufferSink;\n            sourceBufferSink = null;\n            if (!errored && !keepBuffers) {\n                tmpSourceBufferSinkToReset.abort()\n                    .then(() => {\n                        tmpSourceBufferSinkToReset.reset(keepBuffers);\n                        tmpSourceBufferSinkToReset = null;\n                    });\n            }\n        }\n\n        replacingBuffer = false;\n    }\n\n    function reset(errored, keepBuffers) {\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, this);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, this);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STALLED, _onPlaybackStalled, this);\n\n\n        resetInitialSettings(errored, keepBuffers);\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        getType,\n        getBufferControllerType,\n        createBufferSink,\n        dischargePreBuffer,\n        getBuffer,\n        getBufferLevel,\n        getRangeAt,\n        hasBufferAtTime,\n        pruneBuffer,\n        setMediaSource,\n        getMediaSource,\n        appendInitSegmentFromCache,\n        getIsBufferingCompleted,\n        setIsBufferingCompleted,\n        getIsPruningInProgress,\n        reset,\n        prepareForPlaybackSeek,\n        prepareForReplacementTrackSwitch,\n        prepareForNonReplacementTrackSwitch,\n        prepareForForceReplacementQualitySwitch,\n        updateAppendWindow,\n        getAllRangesWithSafetyFactor,\n        getContinuousBufferTimeForTargetTime,\n        clearBuffers,\n        pruneAllSafely,\n        updateBufferTimestampOffset,\n        setSeekTarget,\n        segmentRequestingCompleted\n    };\n\n    setup();\n    return instance;\n}\n\nBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nexport default FactoryMaker.getClassFactory(BufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport InitCache from '../utils/InitCache';\nimport SourceBufferSink from '../SourceBufferSink';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\n\nconst BUFFER_CONTROLLER_TYPE = 'NotFragmentedTextBufferController';\n\nfunction NotFragmentedTextBufferController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const textController = config.textController;\n    const errHandler = config.errHandler;\n    const streamInfo = config.streamInfo;\n    const type = config.type;\n\n    let instance,\n        isBufferingCompleted,\n        initialized,\n        mediaSource,\n        sourceBufferSink,\n        initCache;\n\n    function setup() {\n        initialized = false;\n        mediaSource = null;\n        isBufferingCompleted = false;\n\n        initCache = InitCache(context).getInstance();\n\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n    }\n\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    function initialize(source) {\n        setMediaSource(source);\n    }\n\n    function createBufferSink(mediaInfo) {\n        return new Promise((resolve, reject) => {\n            try {\n                sourceBufferSink = SourceBufferSink(context).create({ mediaSource, textController, eventBus });\n                sourceBufferSink.initializeForFirstUse(streamInfo, mediaInfo);\n                if (!initialized) {\n                    if (sourceBufferSink.getBuffer() && typeof sourceBufferSink.getBuffer().initialize === 'function') {\n                        sourceBufferSink.getBuffer().initialize();\n                    }\n                    initialized = true;\n                }\n                resolve(sourceBufferSink);\n            } catch (e) {\n                errHandler.error(new DashJSError(Errors.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, Errors.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + type));\n                reject(e);\n            }\n        });\n\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getBuffer() {\n        return sourceBufferSink;\n    }\n\n    function setMediaSource(value) {\n        mediaSource = value;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsPruningInProgress() {\n        return false;\n    }\n\n    function dischargePreBuffer() {\n    }\n\n    function getBufferLevel() {\n        return 0;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function setIsBufferingCompleted(value) {\n        if (isBufferingCompleted === value) {\n            return;\n        }\n\n        isBufferingCompleted = value;\n\n        if (isBufferingCompleted) {\n            triggerEvent(Events.BUFFERING_COMPLETED);\n        }\n    }\n\n    function reset(errored) {\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n\n        if (!errored && sourceBufferSink) {\n            sourceBufferSink.abort();\n            sourceBufferSink.reset();\n            sourceBufferSink = null;\n        }\n    }\n\n    function appendInitSegmentFromCache(representationId) {\n        // If text data file already in cache then no need to append it again\n        return initCache.extract(streamInfo.id, representationId) !== null;\n    }\n\n    function _onInitFragmentLoaded(e) {\n        if (!e.chunk.bytes || isBufferingCompleted) return;\n\n        initCache.save(e.chunk);\n\n        sourceBufferSink.append(e.chunk);\n\n        setIsBufferingCompleted(true);\n    }\n\n    function getRangeAt() {\n        return null;\n    }\n\n    function hasBufferAtTime() {\n        return true;\n    }\n\n    function getAllRangesWithSafetyFactor() {\n        return [];\n    }\n\n    function getContinuousBufferTimeForTargetTime() {\n        return Number.POSITIVE_INFINITY;\n    }\n\n    function clearBuffers() {\n        return Promise.resolve();\n    }\n\n    function pruneBuffer() {\n        return;\n    }\n\n    function updateBufferTimestampOffset() {\n        return Promise.resolve();\n    }\n\n    function prepareForPlaybackSeek() {\n        return Promise.resolve();\n    }\n\n    function prepareForReplacementTrackSwitch() {\n        isBufferingCompleted = false;\n        return Promise.resolve();\n    }\n\n    function updateAppendWindow() {\n        return Promise.resolve();\n    }\n\n    function setSeekTarget() {\n\n    }\n\n    function segmentRequestingCompleted() {\n\n    }\n\n    function pruneAllSafely() {\n        return Promise.resolve();\n    }\n\n    function triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: streamInfo.id, mediaType: type });\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        getType,\n        getBufferControllerType,\n        createBufferSink,\n        dischargePreBuffer,\n        getBuffer,\n        getBufferLevel,\n        getRangeAt,\n        pruneBuffer,\n        hasBufferAtTime,\n        getAllRangesWithSafetyFactor,\n        getContinuousBufferTimeForTargetTime,\n        setMediaSource,\n        getMediaSource,\n        appendInitSegmentFromCache,\n        getIsBufferingCompleted,\n        setIsBufferingCompleted,\n        getIsPruningInProgress,\n        reset,\n        clearBuffers,\n        prepareForPlaybackSeek,\n        prepareForReplacementTrackSwitch,\n        setSeekTarget,\n        updateAppendWindow,\n        pruneAllSafely,\n        updateBufferTimestampOffset,\n        segmentRequestingCompleted\n    };\n\n    setup();\n\n    return instance;\n}\n\nNotFragmentedTextBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nexport default FactoryMaker.getClassFactory(NotFragmentedTextBufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FragmentModel from '../models/FragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\n\nfunction ScheduleController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const fragmentModel = config.fragmentModel;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const textController = config.textController;\n    const type = config.type;\n    const bufferController = config.bufferController;\n    const representationController = config.representationController\n    const settings = config.settings;\n\n    let instance,\n        streamInfo,\n        logger,\n        timeToLoadDelay,\n        scheduleTimeout,\n        hasVideoTrack,\n        lastFragmentRequest,\n        topQualityIndex,\n        lastInitializedQuality,\n        switchTrack,\n        initSegmentRequired,\n        checkPlaybackQuality;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        streamInfo = config.streamInfo;\n    }\n\n    function initialize(_hasVideoTrack) {\n        hasVideoTrack = _hasVideoTrack;\n\n        eventBus.on(Events.URL_RESOLUTION_FAILED, _onURLResolutionFailed, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function startScheduleTimer(value) {\n\n        //return if both buffering and playback have ended\n        if (bufferController.getIsBufferingCompleted()) {\n            return;\n        }\n\n        clearScheduleTimer();\n        const timeoutValue = !isNaN(value) ? value : 0;\n        scheduleTimeout = setTimeout(schedule, timeoutValue);\n    }\n\n    function clearScheduleTimer() {\n        if (scheduleTimeout) {\n            clearTimeout(scheduleTimeout);\n            scheduleTimeout = null;\n        }\n    }\n\n    function hasTopQualityChanged() {\n        const streamId = streamInfo.id;\n        const newTopQualityIndex = abrController.getMaxAllowedIndexFor(type, streamId);\n\n        if (isNaN(topQualityIndex) || topQualityIndex != newTopQualityIndex) {\n            logger.info('Top quality ' + type + ' index has changed from ' + topQualityIndex + ' to ' + newTopQualityIndex);\n            topQualityIndex = newTopQualityIndex;\n            return true;\n        }\n        return false;\n\n    }\n\n    /**\n     * Schedule the request for an init or a media segment\n     */\n    function schedule() {\n        try {\n            // Check if we are supposed to stop scheduling\n            if (_shouldClearScheduleTimer()) {\n                clearScheduleTimer();\n                return;\n            }\n\n            if (_shouldScheduleNextRequest()) {\n                let qualityChange = false;\n                if (checkPlaybackQuality) {\n                    // in case the playback quality is supposed to be changed, the corresponding StreamProcessor will update the currentRepresentation.\n                    // The StreamProcessor will also start the schedule timer again once the quality switch has beeen prepared. Consequently, we only call _getNextFragment if the quality is not changed.\n                    qualityChange = abrController.checkPlaybackQuality(type, streamInfo.id);\n                }\n                if (!qualityChange) {\n                    _getNextFragment();\n                }\n\n            } else {\n                startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n            }\n        } catch (e) {\n            startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n        }\n    }\n\n    /**\n     * Triggers the events to start requesting an init or a media segment. This will be picked up by the corresponding StreamProcessor.\n     * @private\n     */\n    function _getNextFragment() {\n        const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n\n        // A quality changed occured or we are switching the AdaptationSet. In that case we need to load a new init segment\n        if (initSegmentRequired || currentRepresentationInfo.quality !== lastInitializedQuality || switchTrack) {\n            if (switchTrack) {\n                logger.debug('Switch track for ' + type + ', representation id = ' + currentRepresentationInfo.id);\n                switchTrack = false;\n            } else {\n                logger.debug('Quality has changed, get init request for representationid = ' + currentRepresentationInfo.id);\n            }\n            eventBus.trigger(Events.INIT_FRAGMENT_NEEDED,\n                { representationId: currentRepresentationInfo.id, sender: instance },\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            checkPlaybackQuality = false;\n            initSegmentRequired = false;\n        }\n\n        // Request a media segment instead\n        else {\n            logger.debug(`Media segment needed for ${type} and stream id ${streamInfo.id}`);\n            eventBus.trigger(Events.MEDIA_FRAGMENT_NEEDED,\n                {},\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            checkPlaybackQuality = true;\n        }\n\n    }\n\n    /**\n     * Check if we need to stop scheduling for now.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldClearScheduleTimer() {\n        try {\n            return (((type === Constants.TEXT) && !textController.isTextEnabled()) ||\n                (playbackController.isPaused() && (!playbackController.getStreamController().getInitialPlayback() || !playbackController.getStreamController().getAutoPlay()) && !settings.get().streaming.scheduling.scheduleWhilePaused));\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Check if we can start scheduling the next request\n     * @return {boolean}\n     * @private\n     */\n    function _shouldScheduleNextRequest() {\n        try {\n            const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n            return currentRepresentationInfo && (isNaN(lastInitializedQuality) || switchTrack || hasTopQualityChanged() || _shouldBuffer());\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Check if the current buffer level is below our buffer target.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldBuffer() {\n        const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n        if (!type || !currentRepresentationInfo) {\n            return true;\n        }\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n        return bufferLevel < getBufferTarget();\n    }\n\n    /**\n     * Determine the buffer target depending on the type and whether we have audio and video AdaptationSets available\n     * @return {number}\n     */\n    function getBufferTarget() {\n        let bufferTarget = NaN;\n        const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n\n        if (!type || !currentRepresentationInfo) {\n            return bufferTarget;\n        }\n\n        if (type === Constants.TEXT) {\n            bufferTarget = _getBufferTargetForFragmentedText();\n        } else if (type === Constants.AUDIO && hasVideoTrack) {\n            bufferTarget = _getBufferTargetForAudio();\n        } else {\n            bufferTarget = _getGenericBufferTarget();\n        }\n\n        return bufferTarget;\n    }\n\n    /**\n     * Returns the buffer target for fragmented text tracks\n     * @return {number}\n     * @private\n     */\n    function _getBufferTargetForFragmentedText() {\n        try {\n            if (textController.isTextEnabled()) {\n                const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n                if (isNaN(currentRepresentationInfo.fragmentDuration)) { //fragmentDuration of currentRepresentationInfo is not defined,\n                    // call metrics function to have data in the latest scheduling info...\n                    // if no metric, returns 0. In this case, rule will return false.\n                    const schedulingInfo = dashMetrics.getCurrentSchedulingInfo(MetricsConstants.SCHEDULING_INFO);\n                    return schedulingInfo ? schedulingInfo.duration : 0;\n                } else {\n                    return currentRepresentationInfo.fragmentDuration;\n                }\n            } else { // text is disabled, rule will return false\n                return 0;\n            }\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * Returns the buffer target for audio tracks in case we have a video track available as well\n     * @return {number}\n     * @private\n     */\n    function _getBufferTargetForAudio() {\n        try {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(Constants.VIDEO);\n            const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n            // For multiperiod we need to consider that audio and video segments might have different durations.\n            // This can lead to scenarios in which we completely buffered the video segments and the video buffer level for the current period is not changing anymore. However we might still need a small audio segment to finish buffering audio as well.\n            // If we set the buffer time of audio equal to the video buffer time scheduling for the remaining audio segment will only be triggered when audio fragmentDuration > videoBufferLevel. That will delay preloading of the upcoming period.\n            // Should find a better solution than just adding 1\n            if (isNaN(currentRepresentationInfo.fragmentDuration)) {\n                return videoBufferLevel + 1;\n            } else {\n                return Math.max(videoBufferLevel + 1, currentRepresentationInfo.fragmentDuration);\n            }\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * Determines the generic buffer target, for instance for video tracks\n     * @return {number}\n     * @private\n     */\n    function _getGenericBufferTarget() {\n        try {\n            const currentRepresentationInfo = representationController.getCurrentRepresentationInfo();\n            const streamInfo = currentRepresentationInfo.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.buffer.longFormContentDurationThreshold;\n                return isLongFormContent ? settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm : settings.get().streaming.buffer.bufferTimeAtTopQuality;\n            } else {\n                return mediaPlayerModel.getStableBufferTime();\n            }\n        } catch (e) {\n            return mediaPlayerModel.getStableBufferTime();\n        }\n    }\n\n    function setSwitchTrack(value) {\n        switchTrack = value;\n    }\n\n    function getSwitchTrack() {\n        return switchTrack;\n    }\n\n    function _onPlaybackTimeUpdated() {\n        _completeQualityChange(true);\n    }\n\n    function _completeQualityChange(trigger) {\n        if (playbackController && fragmentModel) {\n            const item = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: playbackController.getTime(),\n                threshold: 0\n            })[0];\n\n            if (item && playbackController.getTime() >= item.startTime) {\n                if ((!lastFragmentRequest.mediaInfo || (item.mediaInfo.type === lastFragmentRequest.mediaInfo.type && item.mediaInfo.id !== lastFragmentRequest.mediaInfo.id)) && trigger) {\n                    eventBus.trigger(Events.TRACK_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldMediaInfo: lastFragmentRequest.mediaInfo,\n                        newMediaInfo: item.mediaInfo,\n                        streamId: streamInfo.id\n                    });\n                }\n                if ((item.quality !== lastFragmentRequest.quality || item.adaptationIndex !== lastFragmentRequest.adaptationIndex) && trigger) {\n                    logger.debug(`Quality change rendered for streamId ${streamInfo.id} and type ${type}`);\n                    eventBus.trigger(Events.QUALITY_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldQuality: lastFragmentRequest.quality,\n                        newQuality: item.quality,\n                        streamId: streamInfo.id\n                    });\n                }\n                lastFragmentRequest = {\n                    mediaInfo: item.mediaInfo,\n                    quality: item.quality,\n                    adaptationIndex: item.adaptationIndex\n                };\n            }\n        }\n    }\n\n\n\n    function _onURLResolutionFailed() {\n        fragmentModel.abortRequests();\n        clearScheduleTimer();\n    }\n\n    function _onPlaybackStarted() {\n        if (!settings.get().streaming.scheduling.scheduleWhilePaused) {\n            startScheduleTimer();\n        }\n    }\n\n    function _onPlaybackRateChanged(e) {\n        dashMetrics.updatePlayListTraceMetrics({ playbackspeed: e.playbackRate.toString() });\n    }\n\n    function setTimeToLoadDelay(value) {\n        timeToLoadDelay = value;\n    }\n\n    function getTimeToLoadDelay() {\n        return timeToLoadDelay;\n    }\n\n    function setCheckPlaybackQuality(value) {\n        checkPlaybackQuality = value;\n    }\n\n    function setInitSegmentRequired(value) {\n        initSegmentRequired = value;\n    }\n\n    function setLastInitializedQuality(value) {\n        lastInitializedQuality = value;\n    }\n\n    function resetInitialSettings() {\n        checkPlaybackQuality = true;\n        timeToLoadDelay = 0;\n        lastInitializedQuality = NaN;\n        lastFragmentRequest = {\n            mediaInfo: undefined,\n            quality: NaN,\n            adaptationIndex: NaN\n        };\n        topQualityIndex = NaN;\n        switchTrack = false;\n        initSegmentRequired = false;\n    }\n\n    function reset() {\n        eventBus.off(Events.URL_RESOLUTION_FAILED, _onURLResolutionFailed, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n\n        clearScheduleTimer();\n        _completeQualityChange(false);\n        resetInitialSettings();\n        streamInfo = null;\n    }\n\n    function getPlaybackController() {\n        return playbackController;\n    }\n\n    instance = {\n        initialize,\n        getType,\n        getStreamId,\n        setTimeToLoadDelay,\n        getTimeToLoadDelay,\n        setSwitchTrack,\n        getSwitchTrack,\n        startScheduleTimer,\n        clearScheduleTimer,\n        reset,\n        getBufferTarget,\n        getPlaybackController,\n        setCheckPlaybackQuality,\n        setInitSegmentRequired,\n        setLastInitializedQuality,\n    };\n\n    setup();\n\n    return instance;\n}\n\nScheduleController.__dashjs_factory_name = 'ScheduleController';\nexport default FactoryMaker.getClassFactory(ScheduleController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport {getTimeBasedSegment} from '../utils/SegmentsUtils';\n\nfunction RepresentationController(config) {\n\n    config = config || {};\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const abrController = config.abrController;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const timelineConverter = config.timelineConverter;\n    const type = config.type;\n    const streamInfo = config.streamInfo;\n    const dashConstants = config.dashConstants;\n    const segmentsController = config.segmentsController;\n    const isDynamic = config.isDynamic;\n    const adapter = config.adapter;\n\n    let instance,\n        realAdaptation,\n        updating,\n        voAvailableRepresentations,\n        currentRepresentationInfo,\n        currentVoRepresentation;\n\n    function setup() {\n        resetInitialSettings();\n\n        eventBus.on(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function checkConfig() {\n        if (!abrController || !dashMetrics || !playbackController || !timelineConverter) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getData() {\n        return realAdaptation;\n    }\n\n    function isUpdating() {\n        return updating;\n    }\n\n    function getCurrentRepresentation() {\n        return currentVoRepresentation;\n    }\n\n    function getCurrentRepresentationInfo() {\n        return currentRepresentationInfo\n    }\n\n    function resetInitialSettings() {\n        realAdaptation = null;\n        updating = true;\n        voAvailableRepresentations = [];\n        currentRepresentationInfo = null;\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n\n        resetInitialSettings();\n    }\n\n    function updateData(newRealAdaptation, availableRepresentations, type, isFragmented, quality) {\n        return new Promise((resolve, reject) => {\n            updating = true;\n            voAvailableRepresentations = availableRepresentations;\n            realAdaptation = newRealAdaptation;\n            const rep = getRepresentationForQuality(quality)\n            _setCurrentVoRepresentation(rep);\n\n            if (type !== Constants.VIDEO && type !== Constants.AUDIO && (type !== Constants.TEXT || !isFragmented)) {\n                endDataUpdate();\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\n                const currentRep = voAvailableRepresentations[i];\n                promises.push(_updateRepresentation(currentRep));\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    // Update the current representation again as we have now the reference to the segments\n                    const rep = getRepresentationForQuality(quality)\n                    _setCurrentVoRepresentation(rep);\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                })\n        })\n\n    }\n\n    function _updateRepresentation(currentRep) {\n        return new Promise((resolve, reject) => {\n            const hasInitialization = currentRep.hasInitialization();\n            const hasSegments = currentRep.hasSegments();\n\n            // If representation has initialization and segments information we are done\n            // otherwise, it means that a request has to be made to get initialization and/or segments information\n            const promises = [];\n\n            promises.push(segmentsController.updateInitData(currentRep, hasInitialization));\n            promises.push(segmentsController.updateSegmentData(currentRep, hasSegments));\n\n            Promise.all(promises)\n                .then((data) => {\n                    if (data[0] && !data[0].error) {\n                        currentRep = _onInitLoaded(currentRep, data[0]);\n                    }\n                    if (data[1] && !data[1].error) {\n                        currentRep = _onSegmentsLoaded(currentRep, data[1]);\n                    }\n                    _setMediaFinishedInformation(currentRep);\n                    _onRepresentationUpdated(currentRep);\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function _setMediaFinishedInformation(representation) {\n        representation.mediaFinishedInformation = segmentsController.getMediaFinishedInformation(representation);\n    }\n\n    function _onInitLoaded(representation, e) {\n        if (!e || e.error || !e.representation) {\n            return representation;\n        }\n        return e.representation;\n    }\n\n    function _onSegmentsLoaded(representation, e) {\n        if (!e || e.error) return;\n\n        const fragments = e.segments;\n        const segments = [];\n        let count = 0;\n\n        let i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = fragments ? fragments.length : 0; i < len; i++) {\n            s = fragments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            if (seg) {\n                segments.push(seg);\n                seg = null;\n                count++;\n            }\n        }\n\n        if (segments.length > 0) {\n            representation.segments = segments;\n        }\n\n        return representation;\n    }\n\n    function _addRepresentationSwitch() {\n        checkConfig();\n        const now = new Date();\n        const currentRepresentation = getCurrentRepresentation();\n        const currentVideoTimeMs = playbackController.getTime() * 1000;\n        if (currentRepresentation) {\n            dashMetrics.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\n        }\n\n        eventBus.trigger(MediaPlayerEvents.REPRESENTATION_SWITCH, {\n            mediaType: type,\n            streamId: streamInfo.id,\n            currentRepresentation,\n            numberOfRepresentations: voAvailableRepresentations.length\n        }, { streamId: streamInfo.id, mediaType: type })\n    }\n\n    function getRepresentationForQuality(quality) {\n        return quality === null || quality === undefined || quality >= voAvailableRepresentations.length ? null : voAvailableRepresentations[quality];\n    }\n\n    function getQualityForRepresentation(voRepresentation) {\n        return voAvailableRepresentations.indexOf(voRepresentation);\n    }\n\n    function isAllRepresentationsUpdated() {\n        for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\n            let segmentInfoType = voAvailableRepresentations[i].segmentInfoType;\n            if (!voAvailableRepresentations[i].hasInitialization() ||\n                ((segmentInfoType === dashConstants.SEGMENT_BASE || segmentInfoType === dashConstants.BASE_URL) && !voAvailableRepresentations[i].segments)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function endDataUpdate(error) {\n        updating = false;\n        eventBus.trigger(events.DATA_UPDATE_COMPLETED,\n            {\n                data: realAdaptation,\n                currentRepresentation: currentVoRepresentation,\n                error: error\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function _onRepresentationUpdated(r) {\n        if (!isUpdating()) return;\n\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate();\n        let alreadyAdded = false;\n        let repInfo,\n            repSwitch;\n\n\n        if (manifestUpdateInfo) {\n            for (let i = 0; i < manifestUpdateInfo.representationInfo.length; i++) {\n                repInfo = manifestUpdateInfo.representationInfo[i];\n                if (repInfo.index === r.index && repInfo.mediaType === getType()) {\n                    alreadyAdded = true;\n                    break;\n                }\n            }\n\n            if (!alreadyAdded) {\n                dashMetrics.addManifestUpdateRepresentationInfo(r, getType());\n            }\n        }\n\n        if (isAllRepresentationsUpdated()) {\n            abrController.setPlaybackQuality(type, streamInfo, getQualityForRepresentation(currentVoRepresentation));\n            const dvrInfo = dashMetrics.getCurrentDVRInfo(type);\n            if (dvrInfo) {\n                dashMetrics.updateManifestUpdateInfo({ latency: dvrInfo.range.end - playbackController.getTime() });\n            }\n\n            repSwitch = dashMetrics.getCurrentRepresentationSwitch(getCurrentRepresentation().adaptation.type);\n\n            if (!repSwitch) {\n                _addRepresentationSwitch();\n            }\n            endDataUpdate();\n        }\n    }\n\n    function prepareQualityChange(newQuality) {\n        const newRep = getRepresentationForQuality(newQuality)\n        _setCurrentVoRepresentation(newRep);\n        _addRepresentationSwitch();\n    }\n\n    function _setCurrentVoRepresentation(value) {\n        currentVoRepresentation = value;\n        currentRepresentationInfo = adapter.convertRepresentationToRepresentationInfo(currentVoRepresentation);\n    }\n\n    function onManifestValidityChanged(e) {\n        if (e.newDuration) {\n            const representation = getCurrentRepresentation();\n            if (representation && representation.adaptation.period) {\n                const period = representation.adaptation.period;\n                period.duration = e.newDuration;\n            }\n        }\n    }\n\n    instance = {\n        getStreamId,\n        getType,\n        getData,\n        isUpdating,\n        updateData,\n        getCurrentRepresentation,\n        getCurrentRepresentationInfo,\n        getRepresentationForQuality,\n        prepareQualityChange,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\nexport default FactoryMaker.getClassFactory(RepresentationController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a PlayList from ISO23009-1 Annex D, this Object holds reference to the playback session information\n * @ignore\n */\nclass PlayList {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Timestamp of the user action that starts the playback stream...\n         * @public\n         */\n        this.start = null;\n        /**\n         * Presentation time at which playout was requested by the user...\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * Type of user action which triggered playout\n         * - New playout request (e.g. initial playout or seeking)\n         * - Resume from pause\n         * - Other user request (e.g. user-requested quality change)\n         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)\n         * @public\n         */\n        this.starttype = null;\n\n        /**\n         * List of streams of continuous rendering of decoded samples.\n         * @public\n         */\n        this.trace = [];\n    }\n}\n\n/* Public Static Constants */\nPlayList.INITIAL_PLAYOUT_START_REASON = 'initial_playout';\nPlayList.SEEK_START_REASON = 'seek';\nPlayList.RESUME_FROM_PAUSE_START_REASON = 'resume';\nPlayList.METRICS_COLLECTION_START_REASON = 'metrics_collection_start';\n\n/**\n * @classdesc a PlayList.Trace from ISO23009-1 Annex D\n * @ignore\n */\nclass PlayListTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * The value of the Representation@id of the Representation from which the samples were taken.\n         * @type {string}\n         * @public\n         */\n        this.representationid = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, subreplevel indicates the greatest value of any\n         * Subrepresentation@level being rendered.\n         * @type {number}\n         * @public\n         */\n        this.subreplevel = null;\n        /**\n         * The time at which the first sample was rendered\n         * @type {number}\n         * @public\n         */\n        this.start = null;\n        /**\n         * The presentation time of the first sample rendered.\n         * @type {number}\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * The duration of the continuously presented samples (which is the same in real time and media time). \"Continuously presented\" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.\n         * @type {number}\n         * @public\n         */\n        this.duration = null;\n        /**\n         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).\n         * @type {number}\n         * @public\n         */\n        this.playbackspeed = null;\n        /**\n         * The reason why continuous presentation of this Representation was stopped.\n         * representation switch\n         * rebuffering\n         * user request\n         * end of Period\n         * end of Stream\n         * end of content\n         * end of a metrics collection period\n         *\n         * @type {string}\n         * @public\n         */\n        this.stopreason = null;\n    }\n}\n\nPlayListTrace.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch';\nPlayListTrace.REBUFFERING_REASON = 'rebuffering';\nPlayListTrace.USER_REQUEST_STOP_REASON = 'user_request';\nPlayListTrace.END_OF_PERIOD_STOP_REASON = 'end_of_period';\nPlayListTrace.END_OF_CONTENT_STOP_REASON = 'end_of_content';\nPlayListTrace.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end';\nPlayListTrace.FAILURE_STOP_REASON = 'failure';\n\nexport { PlayList, PlayListTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module TimeUtils\n * @ignore\n * @description Provides utility functions for time manipulation/conversion\n */\nfunction TimeUtils() {\n\n    let instance;\n\n    /**\n     * Convert NTP timestamp into an UTC timestamp\n     * @return {number}\n     * @param {number} ntpTimestamp\n     * @memberof module:TimeUtils\n     * @instance\n     */\n    function ntpToUTC(ntpTimeStamp) {\n        const start = new Date(Date.UTC(1900, 0, 1, 0, 0, 0));\n        return new Date(start.getTime() + ntpTimeStamp).getTime();\n    }    \n\n    instance = {\n        ntpToUTC\n    };\n\n    return instance;\n}\n\nTimeUtils.__dashjs_factory_name = 'TimeUtils';\nexport default FactoryMaker.getSingletonFactory(TimeUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport DashConstants from '../dash/constants/DashConstants';\nimport MetricsConstants from './constants/MetricsConstants';\nimport FragmentModel from './models/FragmentModel';\nimport BufferController from './controllers/BufferController';\nimport NotFragmentedTextBufferController from './text/NotFragmentedTextBufferController';\nimport ScheduleController from './controllers/ScheduleController';\nimport RepresentationController from '../dash/controllers/RepresentationController';\nimport FactoryMaker from '../core/FactoryMaker';\nimport {checkInteger} from './utils/SupervisorTools';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport MediaPlayerEvents from './MediaPlayerEvents';\nimport DashHandler from '../dash/DashHandler';\nimport Errors from '../core/errors/Errors';\nimport DashJSError from './vo/DashJSError';\nimport Debug from '../core/Debug';\nimport RequestModifier from './utils/RequestModifier';\nimport URLUtils from '../streaming/utils/URLUtils';\nimport {PlayListTrace} from './vo/metrics/PlayList';\nimport SegmentsController from '../dash/controllers/SegmentsController';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TimeUtils from './utils/TimeUtils';\n\n\nfunction StreamProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let streamInfo = config.streamInfo;\n    let type = config.type;\n    let errHandler = config.errHandler;\n    let mimeType = config.mimeType;\n    let timelineConverter = config.timelineConverter;\n    let adapter = config.adapter;\n    let manifestModel = config.manifestModel;\n    let mediaPlayerModel = config.mediaPlayerModel;\n    let fragmentModel = config.fragmentModel;\n    let abrController = config.abrController;\n    let playbackController = config.playbackController;\n    let mediaController = config.mediaController;\n    let textController = config.textController;\n    let dashMetrics = config.dashMetrics;\n    let settings = config.settings;\n    let boxParser = config.boxParser;\n    let segmentBlacklistController = config.segmentBlacklistController;\n\n    let instance,\n        logger,\n        isDynamic,\n        mediaInfo,\n        mediaInfoArr,\n        bufferController,\n        scheduleController,\n        representationController,\n        shouldUseExplicitTimeForRequest,\n        qualityChangeInProgress,\n        dashHandler,\n        segmentsController,\n        bufferingTime,\n        pendingSwitchToRepresentationInfo;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance, { priority: EventBus.EVENT_PRIORITY_HIGH }); // High priority to be notified before Stream\n        eventBus.on(Events.INIT_FRAGMENT_NEEDED, _onInitFragmentNeeded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_NEEDED, _onMediaFragmentNeeded, instance);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(Events.BUFFER_CLEARED, _onBufferCleared, instance);\n        eventBus.on(Events.SEEK_TARGET, _onSeekTarget, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, _onFragmentLoadingCompleted, instance);\n        eventBus.on(Events.QUOTA_EXCEEDED, _onQuotaExceeded, instance);\n        eventBus.on(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, _onSetFragmentedTextAfterDisabled, instance);\n        eventBus.on(Events.SET_NON_FRAGMENTED_TEXT, _onSetNonFragmentedText, instance);\n        eventBus.on(Events.SOURCE_BUFFER_ERROR, _onSourceBufferError, instance);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n    function initialize(mediaSource, hasVideoTrack, isFragmented) {\n\n        segmentsController = SegmentsController(context).create({\n            events: Events,\n            eventBus,\n            streamInfo,\n            timelineConverter,\n            dashConstants: DashConstants,\n            segmentBaseController: config.segmentBaseController,\n            type\n        });\n\n        dashHandler = DashHandler(context).create({\n            streamInfo,\n            type,\n            timelineConverter,\n            dashMetrics,\n            mediaPlayerModel,\n            baseURLController: config.baseURLController,\n            errHandler,\n            segmentsController,\n            settings,\n            boxParser,\n            events: Events,\n            eventBus,\n            errors: Errors,\n            debug: Debug(context).getInstance(),\n            requestModifier: RequestModifier(context).getInstance(),\n            dashConstants: DashConstants,\n            constants: Constants,\n            urlUtils: URLUtils(context).getInstance()\n        });\n\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n\n        // Create/initialize controllers\n        dashHandler.initialize(isDynamic);\n        abrController.registerStreamType(type, instance);\n\n        representationController = RepresentationController(context).create({\n            streamInfo,\n            type,\n            abrController,\n            dashMetrics,\n            playbackController,\n            timelineConverter,\n            dashConstants: DashConstants,\n            events: Events,\n            eventBus,\n            errors: Errors,\n            isDynamic,\n            adapter,\n            segmentsController\n        });\n\n        bufferController = _createBufferControllerForType(type, isFragmented);\n        if (bufferController) {\n            bufferController.initialize(mediaSource);\n        }\n\n        scheduleController = ScheduleController(context).create({\n            streamInfo,\n            type,\n            mimeType,\n            adapter,\n            dashMetrics,\n            mediaPlayerModel,\n            fragmentModel,\n            abrController,\n            playbackController,\n            textController,\n            mediaController,\n            bufferController,\n            representationController,\n            settings\n        });\n\n        scheduleController.initialize(hasVideoTrack);\n\n        bufferingTime = 0;\n        shouldUseExplicitTimeForRequest = false;\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getIsTextTrack() {\n        return adapter.getIsTextTrack(representationController.getData());\n    }\n\n    function resetInitialSettings() {\n        mediaInfoArr = [];\n        mediaInfo = null;\n        bufferingTime = 0;\n        shouldUseExplicitTimeForRequest = false;\n        qualityChangeInProgress = false;\n        pendingSwitchToRepresentationInfo = null;\n    }\n\n    function reset(errored, keepBuffers) {\n        if (dashHandler) {\n            dashHandler.reset();\n        }\n\n        if (bufferController) {\n            bufferController.reset(errored, keepBuffers);\n            bufferController = null;\n        }\n\n        if (scheduleController) {\n            scheduleController.reset();\n            scheduleController = null;\n        }\n\n        if (representationController) {\n            representationController.reset();\n            representationController = null;\n        }\n\n        if (segmentsController) {\n            segmentsController = null;\n        }\n\n        if (abrController) {\n            abrController.unRegisterStreamType(getStreamId(), type);\n        }\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance);\n        eventBus.off(Events.INIT_FRAGMENT_NEEDED, _onInitFragmentNeeded, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_NEEDED, _onMediaFragmentNeeded, instance);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(Events.BUFFER_CLEARED, _onBufferCleared, instance);\n        eventBus.off(Events.SEEK_TARGET, _onSeekTarget, instance);\n        eventBus.off(Events.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, _onFragmentLoadingCompleted, instance);\n        eventBus.off(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, _onSetFragmentedTextAfterDisabled, instance);\n        eventBus.off(Events.SET_NON_FRAGMENTED_TEXT, _onSetNonFragmentedText, instance);\n        eventBus.off(Events.QUOTA_EXCEEDED, _onQuotaExceeded, instance);\n        eventBus.off(Events.SOURCE_BUFFER_ERROR, _onSourceBufferError, instance);\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n\n\n        resetInitialSettings();\n        type = null;\n        streamInfo = null;\n    }\n\n    function isUpdating() {\n        return representationController ? representationController.isUpdating() : false;\n    }\n\n    /**\n     * When a seek within the corresponding period occurs this function initiates the clearing of the buffer and sets the correct buffering time.\n     * @param {object} e\n     * @returns {Promise<any>}\n     */\n    function prepareInnerPeriodPlaybackSeeking(e) {\n        return new Promise((resolve) => {\n\n            // If we seek to a buffered area we can keep requesting where we left before the seek\n            // If we seek back then forwards buffering will stop until we are below our buffer goal\n            // If we seek forwards then pruneBuffer() will make sure that the bufferToKeep setting is respected\n            const hasBufferAtTargetTime = bufferController.hasBufferAtTime(e.seekTime);\n            if (hasBufferAtTargetTime) {\n                bufferController.pruneBuffer();\n                const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(e.seekTime);\n                if (_shouldSetBufferingComplete(continuousBufferTime)) {\n                    bufferController.setIsBufferingCompleted(true);\n                }\n                resolve();\n                return;\n            }\n\n            // Stop segment requests until we have figured out for which time we need to request a segment. We don't want to replace existing segments.\n            scheduleController.clearScheduleTimer();\n            fragmentModel.abortRequests();\n\n            // Abort operations to the SourceBuffer Sink and reset the BufferControllers isBufferingCompleted state.\n            bufferController.prepareForPlaybackSeek()\n                .then(() => {\n                    // Clear the buffer. We need to prune everything which is not in the target interval.\n                    const clearRanges = bufferController.getAllRangesWithSafetyFactor(e.seekTime);\n                    // When everything has been pruned go on\n                    return bufferController.clearBuffers(clearRanges);\n                })\n                .then(() => {\n                    // Figure out the correct segment request time.\n                    const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(e.seekTime);\n\n                    // If the buffer is continuous and exceeds the duration of the period we are still done buffering. We need to trigger the buffering completed event in order to start prebuffering upcoming periods again\n                    if (_shouldSetBufferingComplete(continuousBufferTime)) {\n                        bufferController.setIsBufferingCompleted(true);\n                        resolve();\n                    } else {\n                        const targetTime = isNaN(continuousBufferTime) ? e.seekTime : continuousBufferTime;\n                        setExplicitBufferingTime(targetTime);\n                        bufferController.setSeekTarget(targetTime);\n\n                        const promises = [];\n\n                        // append window has been reset by abort() operation. Set the correct values again\n                        promises.push(bufferController.updateAppendWindow());\n\n                        // Timestamp offset couldve been changed by preloading period\n                        const representationInfo = getRepresentationInfo();\n                        promises.push(bufferController.updateBufferTimestampOffset(representationInfo));\n\n                        Promise.all(promises)\n                            .then(() => {\n                                // We might have aborted the append operation of an init segment. Append init segment again.\n                                scheduleController.setInitSegmentRequired(true);\n\n                                // Right after a seek we should not immediately check the playback quality\n                                scheduleController.setCheckPlaybackQuality(false);\n                                scheduleController.startScheduleTimer();\n                                resolve();\n                            });\n                    }\n                })\n                .catch((e) => {\n                    logger.error(e);\n                });\n\n        })\n    }\n\n    function _shouldSetBufferingComplete(continuousBufferTime) {\n        return !isNaN(continuousBufferTime) && !isNaN(streamInfo.duration) && isFinite(streamInfo.duration) && continuousBufferTime >= streamInfo.start + streamInfo.duration\n    }\n\n    /**\n     * Seek outside of the current period.\n     * @return {Promise<unknown>}\n     */\n    function prepareOuterPeriodPlaybackSeeking() {\n        return new Promise((resolve, reject) => {\n            try {\n                // Stop scheduling\n                scheduleController.clearScheduleTimer();\n\n                // Abort all ongoing requests\n                fragmentModel.abortRequests();\n\n                // buffering not complete anymore and abort current append operation to SourceBuffer\n                bufferController.prepareForPlaybackSeek()\n                    .then(() => {\n                        // Clear the buffers completely.\n                        return bufferController.pruneAllSafely();\n                    })\n                    .then(() => {\n                        resolve();\n                    });\n\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * ScheduleController indicates that an init segment needs to be fetched.\n     * @param {object} e\n     * @param {boolean} rescheduleIfNoRequest - Defines whether we reschedule in case no valid request could be generated\n     * @private\n     */\n    function _onInitFragmentNeeded(e, rescheduleIfNoRequest = true) {\n        // Event propagation may have been stopped (see MssHandler)\n        if (!e.sender) return;\n\n        if (playbackController.getIsManifestUpdateInProgress()) {\n            _noValidRequest();\n            return;\n        }\n\n        if (getIsTextTrack() && !textController.isTextEnabled()) return;\n\n        if (bufferController && e.representationId) {\n            if (!bufferController.appendInitSegmentFromCache(e.representationId)) {\n                const rep = representationController.getCurrentRepresentation();\n                // Dummy init segment (fragmented tracks without initialization segment)\n                if (rep.range === 0) {\n                    _onMediaFragmentNeeded();\n                    return;\n                }\n                // Init segment not in cache, send new request\n                const request = dashHandler ? dashHandler.getInitRequest(mediaInfo, rep) : null;\n                if (request) {\n                    fragmentModel.executeRequest(request);\n                } else if (rescheduleIfNoRequest) {\n                    scheduleController.setInitSegmentRequired(true);\n                    _noValidRequest();\n                }\n            }\n        }\n    }\n\n    /**\n     * ScheduleController indicates that a media segment is needed\n     * @param {object} e\n     * @param {boolean} rescheduleIfNoRequest -  Defines whether we reschedule in case no valid request could be generated\n     * @private\n     */\n    function _onMediaFragmentNeeded(e, rescheduleIfNoRequest = true) {\n        // Don't schedule next fragments while updating manifest or pruning to avoid buffer inconsistencies\n        if (playbackController.getIsManifestUpdateInProgress() || bufferController.getIsPruningInProgress()) {\n            _noValidRequest();\n            return;\n        }\n\n        let request = _getFragmentRequest();\n        if (request) {\n            shouldUseExplicitTimeForRequest = false;\n            _mediaRequestGenerated(request);\n        } else {\n            _noMediaRequestGenerated(rescheduleIfNoRequest);\n        }\n    }\n\n    /**\n     * If we generated a valid media request we can execute the request. In some cases the segment might be blacklisted.\n     * @param {object} request\n     * @private\n     */\n    function _mediaRequestGenerated(request) {\n        if (!isNaN(request.startTime + request.duration)) {\n            bufferingTime = request.startTime + request.duration;\n        }\n        request.delayLoadingTime = new Date().getTime() + scheduleController.getTimeToLoadDelay();\n        scheduleController.setTimeToLoadDelay(0);\n        if (!_shouldIgnoreRequest(request)) {\n            logger.debug(`Next fragment request url for stream id ${streamInfo.id} and media type ${type} is ${request.url}`);\n            fragmentModel.executeRequest(request);\n        } else {\n            logger.warn(`Fragment request url ${request.url} for stream id ${streamInfo.id} and media type ${type} is on the ignore list and will be skipped`);\n            _noValidRequest();\n        }\n    }\n\n    /**\n     * We could not generate a valid request. Check if the media is finished, we are stuck in a gap or simply need to wait for the next segment to be available.\n     * @param {boolean} rescheduleIfNoRequest\n     * @private\n     */\n    function _noMediaRequestGenerated(rescheduleIfNoRequest) {\n        const representation = representationController.getCurrentRepresentation();\n\n        // If  this statement is true we might be stuck. A static manifest does not change and we did not find a valid request for the target time\n        // There is no point in trying again. We need to adjust the time in order to find a valid request. This can happen if the user/app seeked into a gap.\n        // For dynamic manifests this can also happen especially if we jump over the gap in the previous period and are using SegmentTimeline and in case there is a positive eptDelta at the beginning of the period we are stuck.\n        if (settings.get().streaming.gaps.enableSeekFix && (shouldUseExplicitTimeForRequest || playbackController.getTime() === 0)) {\n            let adjustedTime;\n            if (!isDynamic) {\n                adjustedTime = dashHandler.getValidTimeAheadOfTargetTime(bufferingTime, mediaInfo, representation, settings.get().streaming.gaps.threshold);\n            } else if (isDynamic && representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                // If we find a valid request ahead of the current time then we are in a gap. Segments are only added at the end of the timeline\n                adjustedTime = dashHandler.getValidTimeAheadOfTargetTime(bufferingTime, mediaInfo, representation, settings.get().streaming.gaps.threshold,);\n            }\n            if (!isNaN(adjustedTime) && adjustedTime !== bufferingTime) {\n                if (playbackController.isSeeking() || playbackController.getTime() === 0) {\n                    // If we are seeking then playback is stalled. Do a seek to get out of this situation\n                    logger.warn(`Adjusting playback time ${adjustedTime} because of gap in the manifest. Seeking by ${adjustedTime - bufferingTime}`);\n                    playbackController.seek(adjustedTime, false, false);\n                } else {\n                    // If we are not seeking we should still be playing but we cant find anything to buffer. So we adjust the buffering time and leave the gap jump to the GapController\n                    logger.warn(`Adjusting buffering time ${adjustedTime} because of gap in the manifest. Adjusting time by ${adjustedTime - bufferingTime}`);\n                    setExplicitBufferingTime(adjustedTime)\n\n                    if (rescheduleIfNoRequest) {\n                        _noValidRequest();\n                    }\n                }\n                return;\n            }\n        }\n\n        // Check if the media is finished. If so, no need to schedule another request\n        const isLastSegmentRequested = dashHandler.isLastSegmentRequested(representation, bufferingTime);\n        if (isLastSegmentRequested) {\n            const segmentIndex = dashHandler.getCurrentIndex();\n            logger.debug(`Segment requesting for stream ${streamInfo.id} has finished`);\n            eventBus.trigger(Events.STREAM_REQUESTING_COMPLETED, { segmentIndex }, {\n                streamId: streamInfo.id,\n                mediaType: type\n            });\n            bufferController.segmentRequestingCompleted(segmentIndex);\n            scheduleController.clearScheduleTimer();\n            return;\n        }\n\n        if (rescheduleIfNoRequest) {\n            _noValidRequest();\n        }\n    }\n\n    /**\n     * In certain situations we need to ignore a request. For instance, if a segment is blacklisted because it caused an MSE error.\n     * @private\n     */\n    function _shouldIgnoreRequest(request) {\n        let blacklistUrl = request.url;\n\n        if (request.range) {\n            blacklistUrl = blacklistUrl.concat('_', request.range);\n        }\n\n        return segmentBlacklistController.contains(blacklistUrl)\n    }\n\n    /**\n     * Get the init or media segment request using the DashHandler.\n     * @return {null|FragmentRequest|null}\n     * @private\n     */\n    function _getFragmentRequest() {\n        const representationInfo = getRepresentationInfo();\n        let request;\n\n        if (isNaN(bufferingTime) || (getType() === Constants.TEXT && !textController.isTextEnabled())) {\n            return null;\n        }\n\n        if (dashHandler) {\n            const representation = representationController && representationInfo ? representationController.getRepresentationForQuality(representationInfo.quality) : null;\n\n            if (shouldUseExplicitTimeForRequest) {\n                request = dashHandler.getSegmentRequestForTime(mediaInfo, representation, bufferingTime);\n            } else {\n                request = dashHandler.getNextSegmentRequest(mediaInfo, representation);\n            }\n        }\n\n        return request;\n    }\n\n    /**\n     * Whenever we can not generate a valid request we restart scheduling according to the timeouts defined in the settings.\n     * @private\n     */\n    function _noValidRequest() {\n        scheduleController.startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n    }\n\n    function _onDataUpdateCompleted(e) {\n        if (!e.error) {\n            if (!bufferController.getIsBufferingCompleted()) {\n                bufferController.updateBufferTimestampOffset(e.currentRepresentation);\n            }\n        }\n    }\n\n    function _onBufferLevelStateChanged(e) {\n        dashMetrics.addBufferState(type, e.state, scheduleController.getBufferTarget());\n        if (e.state === MetricsConstants.BUFFER_EMPTY && !playbackController.isSeeking()) {\n            logger.info('Buffer is empty! Stalling!');\n            dashMetrics.pushPlayListTraceMetrics(new Date(), PlayListTrace.REBUFFERING_REASON);\n        }\n    }\n\n    function _onBufferCleared(e) {\n        // Remove executed requests not buffered anymore\n        fragmentModel.syncExecutedRequestsWithBufferedRange(\n            bufferController.getBuffer().getAllBufferRanges(),\n            streamInfo.duration);\n\n        // If buffer removed ahead current time (QuotaExceededError or automatic buffer pruning) then adjust current index handler time\n        if (e.quotaExceeded && e.from > playbackController.getTime()) {\n            setExplicitBufferingTime(e.from);\n        }\n\n        // (Re)start schedule once buffer has been pruned after a QuotaExceededError\n        if (e.hasEnoughSpaceToAppend && e.quotaExceeded) {\n            scheduleController.startScheduleTimer();\n        }\n    }\n\n    /**\n     * This function is called when the corresponding SourceBuffer encountered an error.\n     * We blacklist the last segment assuming it caused the error\n     * @param {object} e\n     * @private\n     */\n    function _onSourceBufferError(e) {\n        if (!e || !e.lastRequestAppended || !e.lastRequestAppended.url) {\n            return;\n        }\n\n        let blacklistUrl = e.lastRequestAppended.url;\n\n        if (e.lastRequestAppended.range) {\n            blacklistUrl = blacklistUrl.concat('_', e.lastRequestAppended.range);\n        }\n        logger.warn(`Blacklisting segment with url ${blacklistUrl}`);\n        segmentBlacklistController.add(blacklistUrl);\n    }\n\n    function _onBytesAppended(e) {\n        logger.debug(`Appended bytes for ${e.mediaType} and stream id ${e.streamId}`);\n\n        // we save the last initialized quality. That way we make sure that the media fragments we are about to append match the init segment\n        if (e.segmentType === HTTPRequest.INIT_SEGMENT_TYPE) {\n            const lastInitializedQuality = e.quality;\n            scheduleController.setLastInitializedQuality(lastInitializedQuality);\n            logger.info('[' + type + '] ' + 'lastInitializedRepresentationInfo changed to ' + e.quality);\n        }\n\n        if (pendingSwitchToRepresentationInfo) {\n            _prepareForDefaultQualitySwitch(pendingSwitchToRepresentationInfo)\n        } else {\n            scheduleController.startScheduleTimer(0);\n        }\n    }\n\n    /**\n     * The quality has changed which means we have switched to a different representation.\n     * If we want to aggressively replace existing parts in the buffer we need to make sure that the new quality is higher than the already buffered one.\n     * @param {object} e\n     */\n    function prepareQualityChange(e) {\n        if (pendingSwitchToRepresentationInfo) {\n            logger.warning(`Canceling queued representation switch to ${pendingSwitchToRepresentationInfo.quality} for ${type}`);\n        }\n        logger.debug(`Preparing quality switch for type ${type}`);\n        const newQuality = e.newQuality;\n\n        qualityChangeInProgress = true;\n\n        // Stop scheduling until we are done with preparing the quality switch\n        scheduleController.clearScheduleTimer();\n\n        representationController.prepareQualityChange(newQuality);\n\n        const representationInfo = getRepresentationInfo(newQuality);\n        // If the switch should occur immediately we need to replace existing stuff in the buffer\n        if (e.reason && e.reason.forceReplace) {\n            _prepareForForceReplacementQualitySwitch(representationInfo);\n        }\n\n        // If fast switch is enabled we check if we are supposed to replace existing stuff in the buffer\n        else if (settings.get().streaming.buffer.fastSwitchEnabled) {\n            _prepareForFastQualitySwitch(representationInfo);\n        }\n\n        // Default quality switch. We append the new quality to the already buffered stuff\n        else {\n            _prepareForDefaultQualitySwitch(representationInfo);\n        }\n\n        dashMetrics.pushPlayListTraceMetrics(new Date(), PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON);\n        dashMetrics.createPlaylistTraceMetrics(representationInfo.id, playbackController.getTime() * 1000, playbackController.getPlaybackRate());\n\n    }\n\n    function _prepareForForceReplacementQualitySwitch(representationInfo) {\n\n        // Abort the current request to avoid inconsistencies and in case a rule such as AbandonRequestRule has forced a quality switch. A quality switch can also be triggered manually by the application.\n        // If we update the buffer values now, or initialize a request to the new init segment, the currently downloading media segment might \"work\" with wrong values.\n        // Everything that is already in the buffer queue is ok and will be handled by the corresponding function below depending on the switch mode.\n        fragmentModel.abortRequests();\n\n        // Inform other classes like the GapController that we are replacing existing stuff\n        eventBus.trigger(Events.BUFFER_REPLACEMENT_STARTED, {\n            mediaType: type,\n            streamId: streamInfo.id\n        }, { mediaType: type, streamId: streamInfo.id });\n\n        // Abort appending segments to the buffer. Also adjust the appendWindow as we might have been in the progress of prebuffering stuff.\n        bufferController.prepareForForceReplacementQualitySwitch(representationInfo)\n            .then(() => {\n                _bufferClearedForReplacement();\n                qualityChangeInProgress = false;\n            })\n            .catch(() => {\n                _bufferClearedForReplacement();\n                qualityChangeInProgress = false;\n            });\n    }\n\n    function _prepareForFastQualitySwitch(representationInfo) {\n        // if we switch up in quality and need to replace existing parts in the buffer we need to adjust the buffer target\n        const time = playbackController.getTime();\n        let safeBufferLevel = 1.5 * (!isNaN(representationInfo.fragmentDuration) ? representationInfo.fragmentDuration : 1);\n        const request = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: time + safeBufferLevel,\n            threshold: 0\n        })[0];\n\n        if (request && !getIsTextTrack()) {\n            const bufferLevel = bufferController.getBufferLevel();\n            const abandonmentState = abrController.getAbandonmentStateFor(streamInfo.id, type);\n\n            // The quality we originally requested was lower than the new quality\n            if (request.quality < representationInfo.quality && bufferLevel >= safeBufferLevel && abandonmentState !== MetricsConstants.ABANDON_LOAD) {\n                bufferController.updateBufferTimestampOffset(representationInfo)\n                    .then(() => {\n                        // Abort the current request to avoid inconsistencies and in case a rule such as AbandonRequestRule has forced a quality switch. A quality switch can also be triggered manually by the application.\n                        // If we update the buffer values now, or initialize a request to the new init segment, the currently downloading media segment might \"work\" with wrong values.\n                        // Everything that is already in the buffer queue is ok\n                        fragmentModel.abortRequests();\n                        const targetTime = time + safeBufferLevel;\n                        setExplicitBufferingTime(targetTime);\n                        scheduleController.setCheckPlaybackQuality(false);\n                        scheduleController.startScheduleTimer();\n                        qualityChangeInProgress = false;\n                    })\n                    .catch(() => {\n                        qualityChangeInProgress = false;\n                    })\n            }\n\n            // If we have buffered a higher quality do not replace anything\n            else {\n                _prepareForDefaultQualitySwitch(representationInfo);\n            }\n        } else {\n            scheduleController.startScheduleTimer();\n            qualityChangeInProgress = false;\n        }\n    }\n\n    function _prepareForDefaultQualitySwitch(representationInfo) {\n        // We are not canceling the current request. Check if there is still an ongoing request.\n        // If so we wait for the request to be finished and the media to be appended\n        const ongoingRequests = fragmentModel.getRequests({ state: FragmentModel.FRAGMENT_MODEL_LOADING })\n        if (ongoingRequests && ongoingRequests.length > 0) {\n            logger.debug('Preparing for default quality switch: Waiting for ongoing segment request to be finished before applying switch.')\n            pendingSwitchToRepresentationInfo = representationInfo;\n            return;\n        }\n\n        bufferController.updateBufferTimestampOffset(representationInfo)\n            .then(() => {\n                if (mediaInfo.segmentAlignment || mediaInfo.subSegmentAlignment) {\n                    scheduleController.startScheduleTimer();\n                } else {\n                    _bufferClearedForNonReplacement()\n                }\n                pendingSwitchToRepresentationInfo = null;\n                qualityChangeInProgress = false;\n            })\n            .catch(() => {\n                pendingSwitchToRepresentationInfo = null;\n                qualityChangeInProgress = false;\n            })\n    }\n\n    /**\n     * We have canceled the download of a fragment and need to adjust the buffer time or reload an init segment\n     * @param {object} e\n     */\n    function _onFragmentLoadingAbandoned(e) {\n        logger.info('onFragmentLoadingAbandoned request: ' + e.request.url + ' has been aborted');\n\n        // we only need to handle this if we are not seeking, not switching the tracks and not switching the quality\n        if (!playbackController.isSeeking() && !scheduleController.getSwitchTrack() && !qualityChangeInProgress) {\n            logger.info('onFragmentLoadingAbandoned request: ' + e.request.url + ' has to be downloaded again, origin is not seeking process or switch track call');\n\n            // in case of an init segment we force the download of an init segment\n            if (e.request && e.request.isInitializationRequest()) {\n                scheduleController.setInitSegmentRequired(true);\n            }\n\n            // in case of a media segment we reset the buffering time\n            else {\n                setExplicitBufferingTime(e.request.startTime + (e.request.duration / 2));\n            }\n\n            // In case of a seek the schedule controller was stopped and will be started once the buffer has been pruned.\n            scheduleController.startScheduleTimer(0);\n        }\n    }\n\n    /**\n     * When a fragment has been loaded we need to start the schedule timer again in case of an error.\n     * @param {object} e\n     */\n    function _onFragmentLoadingCompleted(e) {\n        logger.info('OnFragmentLoadingCompleted for stream id ' + streamInfo.id + ' and media type ' + type + ' - Url:', e.request ? e.request.url : 'undefined', e.request.range ? ', Range:' + e.request.range : '');\n\n        if (getIsTextTrack()) {\n            scheduleController.startScheduleTimer(0);\n        }\n\n        if (e.error && e.request.serviceLocation) {\n            _handleFragmentLoadingError(e);\n        }\n    }\n\n    /**\n     * If we encountered an error when loading the fragment we need to handle it according to the segment type\n     * @private\n     */\n    function _handleFragmentLoadingError(e) {\n        logger.info(`Fragment loading completed with an error`);\n\n        if (!e || !e.request || !e.request.type) {\n            return;\n        }\n\n        // In case there are baseUrls that can still be tried a valid request can be generated. If no valid request can be generated we ran out of baseUrls.\n        // Consequently, we need to signal that we dont want to retry in case no valid request could be generated otherwise we keep trying with the same url infinitely.\n\n        // Init segment could not be loaded. If we have multiple baseUrls we still have a chance to get a valid segment.\n        if (e.request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n            _onInitFragmentNeeded({\n                representationId: e.request.representationId,\n                sender: {}\n            }, false)\n        }\n\n        // Media segment could not be loaded\n        else if (e.request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            setExplicitBufferingTime(e.request.startTime + (e.request.duration / 2));\n            _onMediaFragmentNeeded({}, false);\n        }\n    }\n\n    /**\n     * Callback function triggered by the TextController whenever a track is changed for fragmented text. Will only be triggered if textracks have previously been disabled.\n     * @private\n     */\n    function _onSetFragmentedTextAfterDisabled() {\n        setExplicitBufferingTime(playbackController.getTime());\n        getScheduleController().startScheduleTimer();\n    }\n\n    /**\n     * Callback function triggered by the TextController whenever a track is changed for non fragmented text\n     * @param {object} e\n     * @private\n     */\n    function _onSetNonFragmentedText(e) {\n        const currentTrackInfo = e.currentTrackInfo;\n\n        if (!currentTrackInfo) {\n            return;\n        }\n\n        const mInfo = mediaInfoArr.find((info) => {\n            return info.index === currentTrackInfo.index && info.lang === currentTrackInfo.lang;\n        });\n\n        if (mInfo) {\n            selectMediaInfo(mInfo)\n                .then(() => {\n                    bufferController.setIsBufferingCompleted(false);\n                    setExplicitBufferingTime(playbackController.getTime());\n                    scheduleController.setInitSegmentRequired(true);\n                    scheduleController.startScheduleTimer();\n                });\n        }\n    }\n\n    function _onQuotaExceeded(e) {\n        // Stop scheduler (will be restarted once buffer is pruned)\n        setExplicitBufferingTime(e.quotaExceededTime);\n        scheduleController.clearScheduleTimer();\n    }\n\n    function getRepresentationController() {\n        return representationController;\n    }\n\n    function getBuffer() {\n        return bufferController ? bufferController.getBuffer() : null;\n    }\n\n    function getBufferController() {\n        return bufferController;\n    }\n\n    function dischargePreBuffer() {\n        bufferController.dischargePreBuffer();\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function updateStreamInfo(newStreamInfo) {\n        streamInfo = newStreamInfo;\n        if (!isBufferingCompleted()) {\n            return bufferController.updateAppendWindow();\n        }\n        return Promise.resolve();\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    /**\n     * Called once the StreamProcessor is initialized and when the track is switched. We only have one StreamProcessor per media type. So we need to adjust the mediaInfo once we switch/select a track.\n     * @param {object} newMediaInfo\n     */\n    function selectMediaInfo(newMediaInfo) {\n        if (newMediaInfo !== mediaInfo && (!newMediaInfo || !mediaInfo || (newMediaInfo.type === mediaInfo.type))) {\n            mediaInfo = newMediaInfo;\n        }\n\n        const newRealAdaptation = adapter.getRealAdaptation(streamInfo, mediaInfo);\n        const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n\n        if (representationController) {\n            const realAdaptation = representationController.getData();\n            const maxQuality = abrController.getMaxAllowedIndexFor(type, streamInfo.id);\n            const minIdx = abrController.getMinAllowedIndexFor(type, streamInfo.id);\n\n            let quality,\n                averageThroughput;\n            let bitrate = null;\n\n            if ((realAdaptation === null || (realAdaptation.id !== newRealAdaptation.id)) && type !== Constants.TEXT) {\n                averageThroughput = abrController.getThroughputHistory().getAverageThroughput(type, isDynamic);\n                bitrate = averageThroughput || abrController.getInitialBitrateFor(type, streamInfo.id);\n                quality = abrController.getQualityForBitrate(mediaInfo, bitrate, streamInfo.id);\n            } else {\n                quality = abrController.getQualityFor(type, streamInfo.id);\n            }\n\n            if (minIdx !== undefined && quality < minIdx) {\n                quality = minIdx;\n            }\n            if (quality > maxQuality) {\n                quality = maxQuality;\n            }\n            return representationController.updateData(newRealAdaptation, voRepresentations, type, mediaInfo.isFragmented, quality);\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    function addMediaInfo(newMediaInfo) {\n        if (mediaInfoArr.indexOf(newMediaInfo) === -1) {\n            mediaInfoArr.push(newMediaInfo);\n        }\n    }\n\n    function clearMediaInfoArray() {\n        mediaInfoArr = [];\n    }\n\n    function getMediaInfo() {\n        return mediaInfo;\n    }\n\n    function getMediaSource() {\n        return bufferController.getMediaSource();\n    }\n\n    function setMediaSource(mediaSource) {\n        return bufferController.setMediaSource(mediaSource, mediaInfo);\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    /**\n     * Get a specific voRepresentation. If quality parameter is defined, this function will return the voRepresentation for this quality.\n     * Otherwise, this function will return the current voRepresentation used by the representationController.\n     * @param {number} quality - quality index of the voRepresentaion expected.\n     */\n    function getRepresentationInfo(quality) {\n        let voRepresentation;\n\n        if (quality !== undefined) {\n            checkInteger(quality);\n            voRepresentation = representationController ? representationController.getRepresentationForQuality(quality) : null;\n        } else {\n            voRepresentation = representationController ? representationController.getCurrentRepresentation() : null;\n        }\n\n        return adapter.convertRepresentationToRepresentationInfo(voRepresentation);\n    }\n\n    function isBufferingCompleted() {\n        return bufferController ? bufferController.getIsBufferingCompleted() : false;\n    }\n\n    function getBufferLevel() {\n        return bufferController ? bufferController.getBufferLevel() : 0;\n    }\n\n    /**\n     * Probe the next request. This is used in the CMCD model to get information about the upcoming request. Note: No actual request is performed here.\n     * @return {FragmentRequest|null}\n     */\n    function probeNextRequest() {\n        const representationInfo = getRepresentationInfo();\n\n        const representation = representationController && representationInfo ?\n            representationController.getRepresentationForQuality(representationInfo.quality) : null;\n\n        return dashHandler.getNextSegmentRequestIdempotent(\n            mediaInfo,\n            representation\n        );\n    }\n\n    function _onInitFragmentLoaded(e) {\n        if (!settings.get().streaming.enableManifestTimescaleMismatchFix) {\n            return;\n        }\n        const chunk = e.chunk;\n        const bytes = chunk.bytes;\n        const quality = chunk.quality;\n        const currentRepresentation = getRepresentationInfo(quality);\n        const voRepresentation = representationController && currentRepresentation ? representationController.getRepresentationForQuality(currentRepresentation.quality) : null;\n        if (currentRepresentation && voRepresentation) {\n            voRepresentation.timescale = boxParser.getMediaTimescaleFromMoov(bytes);\n        }\n    }\n\n    function _onMediaFragmentLoaded(e) {\n        const chunk = e.chunk;\n\n        const bytes = chunk.bytes;\n        const quality = chunk.quality;\n        const currentRepresentation = getRepresentationInfo(quality);\n        const voRepresentation = representationController && currentRepresentation ? representationController.getRepresentationForQuality(currentRepresentation.quality) : null;\n\n        // If we switch tracks this event might be fired after the representations in the RepresentationController have been updated according to the new MediaInfo.\n        // In this case there will be no currentRepresentation and voRepresentation matching the \"old\" quality\n        if (currentRepresentation && voRepresentation) {\n\n            let isoFile;\n\n            // Check for inband prft on media segment (if enabled)\n            if (settings.get().streaming.parseInbandPrft && e.request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                isoFile = isoFile ? isoFile : boxParser.parse(bytes);\n                const timescale = voRepresentation.timescale;\n                const prfts = _handleInbandPrfts(isoFile, timescale);\n                if (prfts && prfts.length) {\n                    eventBus.trigger(MediaPlayerEvents.INBAND_PRFT,\n                        { data: prfts },\n                        { streamId: streamInfo.id, mediaType: type }\n                    );\n                }\n            }\n\n            const eventStreamMedia = adapter.getEventsFor(currentRepresentation.mediaInfo, null, streamInfo);\n            const eventStreamTrack = adapter.getEventsFor(currentRepresentation, voRepresentation, streamInfo);\n\n            if (eventStreamMedia && eventStreamMedia.length > 0 || eventStreamTrack && eventStreamTrack.length > 0) {\n                const request = fragmentModel.getRequests({\n                    state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                    quality: quality,\n                    index: chunk.index\n                })[0];\n\n                isoFile = isoFile ? isoFile : boxParser.parse(bytes);\n                const events = _handleInbandEvents(isoFile, request, eventStreamMedia, eventStreamTrack);\n                eventBus.trigger(Events.INBAND_EVENTS,\n                    { events: events },\n                    { streamId: streamInfo.id }\n                );\n            }\n        }\n    }\n\n    function _handleInbandPrfts(isoFile, timescale) {\n        const prftBoxes = isoFile.getBoxes('prft');\n\n        const prfts = [];\n        prftBoxes.forEach(prft => {\n            prfts.push(_parsePrftBox(prft, timescale));\n        });\n\n        return prfts;\n    }\n\n    function _parsePrftBox(prft, timescale) {\n        // Get prft type according to box flags\n        let type = 'unknown';\n        switch (prft.flags) {\n            case 0:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.ENCODER;\n                break;\n            case 16:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.APPLICATION;\n                break;\n            case 24:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.CAPTURED;\n                break;\n            default:\n                break;\n        }\n\n        // Get NPT timestamp according to IETF RFC 5905, relative to 1/1/1900\n        let ntpTimestamp = (prft.ntp_timestamp_sec * 1000) + (prft.ntp_timestamp_frac / 2 ** 32 * 1000);\n        ntpTimestamp = TimeUtils(context).getInstance().ntpToUTC(ntpTimestamp);\n\n        const mediaTime = (prft.media_time / timescale);\n\n        return {\n            type,\n            ntpTimestamp,\n            mediaTime\n        }\n    }\n\n    function _handleInbandEvents(isoFile, request, mediaInbandEvents, trackInbandEvents) {\n        try {\n            const eventStreams = {};\n            const events = [];\n\n            /* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */\n            const inbandEvents = mediaInbandEvents.concat(trackInbandEvents);\n            for (let i = 0, ln = inbandEvents.length; i < ln; i++) {\n                eventStreams[inbandEvents[i].schemeIdUri + '/' + inbandEvents[i].value] = inbandEvents[i];\n            }\n\n            const eventBoxes = isoFile.getBoxes('emsg');\n\n            if (!eventBoxes || eventBoxes.length === 0) {\n                return events;\n            }\n\n            const sidx = isoFile.getBox('sidx');\n            const mediaAnchorTime = sidx && !isNaN(sidx.earliest_presentation_time) && !isNaN(sidx.timescale) ? sidx.earliest_presentation_time / sidx.timescale : request && !isNaN(request.mediaStartTime) ? request.mediaStartTime : 0;\n            const fragmentMediaStartTime = Math.max(mediaAnchorTime, 0);\n            const voRepresentation = representationController.getCurrentRepresentation();\n\n            for (let i = 0, ln = eventBoxes.length; i < ln; i++) {\n                const event = adapter.getEvent(eventBoxes[i], eventStreams, fragmentMediaStartTime, voRepresentation);\n\n                if (event) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        } catch (e) {\n            return [];\n        }\n    }\n\n    function createBufferSinks(previousBufferSinks) {\n        const buffer = getBuffer();\n\n        if (buffer) {\n            return Promise.resolve(buffer);\n        }\n\n        return bufferController ? bufferController.createBufferSink(mediaInfo, previousBufferSinks) : Promise.resolve(null);\n    }\n\n    function prepareTrackSwitch() {\n        return new Promise((resolve) => {\n            logger.debug(`Preparing track switch for type ${type}`);\n            const shouldReplace = type === Constants.TEXT || (settings.get().streaming.trackSwitchMode[type] === Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE && playbackController.getTimeToStreamEnd(streamInfo) > settings.get().streaming.buffer.stallThreshold);\n\n            // when buffering is completed and we are not supposed to replace anything do nothing.\n            // Still we need to trigger preloading again and call change type in case user seeks back before transitioning to next period\n            if (bufferController.getIsBufferingCompleted() && !shouldReplace) {\n                bufferController.prepareForNonReplacementTrackSwitch(mediaInfo.codec)\n                    .then(() => {\n                        eventBus.trigger(Events.BUFFERING_COMPLETED, {}, { streamId: streamInfo.id, mediaType: type })\n                    })\n                    .catch(() => {\n                        eventBus.trigger(Events.BUFFERING_COMPLETED, {}, { streamId: streamInfo.id, mediaType: type })\n                    })\n                resolve();\n                return;\n            }\n\n            // We stop the schedule controller and signal a track switch. That way we request a new init segment next\n            scheduleController.clearScheduleTimer();\n            scheduleController.setSwitchTrack(true);\n\n            // when we are supposed to replace it does not matter if buffering is already completed\n            if (shouldReplace) {\n                // Inform other classes like the GapController that we are replacing existing stuff\n                eventBus.trigger(Events.BUFFER_REPLACEMENT_STARTED, {\n                    mediaType: type,\n                    streamId: streamInfo.id\n                }, { mediaType: type, streamId: streamInfo.id });\n\n                // Abort the current request it will be removed from the buffer anyways\n                fragmentModel.abortRequests();\n\n                // Abort appending segments to the buffer. Also adjust the appendWindow as we might have been in the progress of prebuffering stuff.\n                bufferController.prepareForReplacementTrackSwitch(mediaInfo.codec)\n                    .then(() => {\n                        // Timestamp offset couldve been changed by preloading period\n                        const representationInfo = getRepresentationInfo();\n                        return bufferController.updateBufferTimestampOffset(representationInfo);\n                    })\n                    .then(() => {\n                        _bufferClearedForReplacement();\n                        resolve();\n                    })\n                    .catch(() => {\n                        _bufferClearedForReplacement();\n                        resolve();\n                    });\n            } else {\n                // We do not replace anything that is already in the buffer. Still we need to prepare the buffer for the track switch\n                bufferController.prepareForNonReplacementTrackSwitch(mediaInfo.codec)\n                    .then(() => {\n                        _bufferClearedForNonReplacement();\n                        resolve();\n                    })\n                    .catch(() => {\n                        _bufferClearedForNonReplacement();\n                        resolve();\n                    });\n            }\n        })\n    }\n\n    /**\n     * For an instant track switch we need to adjust the buffering time after the buffer has been pruned.\n     * @private\n     */\n    function _bufferClearedForReplacement() {\n        const targetTime = playbackController.getTime();\n\n        if (settings.get().streaming.buffer.flushBufferAtTrackSwitch) {\n            // For some devices (like chromecast) it is necessary to seek the video element to reset the internal decoding buffer,\n            // otherwise audio track switch will be effective only once after previous buffered track is consumed\n            playbackController.seek(targetTime + 0.001, false, true);\n        }\n\n        setExplicitBufferingTime(targetTime);\n        bufferController.setSeekTarget(targetTime);\n        scheduleController.startScheduleTimer();\n    }\n\n    function _bufferClearedForNonReplacement() {\n        const time = playbackController.getTime();\n        const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(time);\n        const targetTime = isNaN(continuousBufferTime) ? time : continuousBufferTime;\n\n        setExplicitBufferingTime(targetTime);\n        scheduleController.startScheduleTimer();\n    }\n\n    function _createBufferControllerForType(type, isFragmented) {\n        let controller = null;\n\n        if (!type) {\n            errHandler.error(new DashJSError(Errors.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, Errors.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + 'not properly defined'));\n            return null;\n        }\n\n        if (type === Constants.TEXT && !isFragmented) {\n            controller = NotFragmentedTextBufferController(context).create({\n                streamInfo,\n                type,\n                mimeType,\n                fragmentModel,\n                textController,\n                errHandler,\n                settings\n            });\n        } else {\n            controller = BufferController(context).create({\n                streamInfo,\n                type,\n                mediaPlayerModel,\n                manifestModel,\n                fragmentModel,\n                errHandler,\n                mediaController,\n                representationController,\n                adapter,\n                textController,\n                abrController,\n                playbackController,\n                settings\n            });\n        }\n\n        return controller;\n    }\n\n    function _onSeekTarget(e) {\n        if (e && !isNaN(e.time)) {\n            setExplicitBufferingTime(e.time);\n            bufferController.setSeekTarget(e.time);\n        }\n    }\n\n    function setExplicitBufferingTime(value) {\n        bufferingTime = value;\n        shouldUseExplicitTimeForRequest = true;\n    }\n\n    function finalisePlayList(time, reason) {\n        dashMetrics.pushPlayListTraceMetrics(time, reason);\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        getType,\n        isUpdating,\n        getBufferController,\n        dischargePreBuffer,\n        getFragmentModel,\n        getScheduleController,\n        getRepresentationController,\n        getRepresentationInfo,\n        getBufferLevel,\n        isBufferingCompleted,\n        createBufferSinks,\n        updateStreamInfo,\n        getStreamInfo,\n        selectMediaInfo,\n        clearMediaInfoArray,\n        addMediaInfo,\n        prepareTrackSwitch,\n        prepareQualityChange,\n        getMediaInfo,\n        getMediaSource,\n        setMediaSource,\n        getBuffer,\n        setExplicitBufferingTime,\n        finalisePlayList,\n        probeNextRequest,\n        prepareInnerPeriodPlaybackSeeking,\n        prepareOuterPeriodPlaybackSeeking,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\nexport default FactoryMaker.getClassFactory(StreamProcessor);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Settings from '../../core/Settings';\nimport Constants from '../constants/Constants';\nimport { modifyRequest } from '../utils/RequestModifier';\n\n/**\n * @module FetchLoader\n * @ignore\n * @description Manages download of resources via HTTP using fetch.\n * @param {Object} cfg - dependencies from parent\n */\nfunction FetchLoader(cfg) {\n\n    cfg = cfg || {};\n    const context = this.context;\n    const requestModifier = cfg.requestModifier;\n    const lowLatencyThroughputModel = cfg.lowLatencyThroughputModel;\n    const boxParser = cfg.boxParser;\n    const settings = Settings(context).getInstance();\n    let instance, dashMetrics;\n\n    function setup(cfg) {\n        dashMetrics = cfg.dashMetrics;\n    }\n\n    function load(httpRequest) {\n        if (requestModifier && requestModifier.modifyRequest) {\n            modifyRequest(httpRequest, requestModifier)\n                .then(() => request(httpRequest));\n        }\n        else {\n            request(httpRequest);\n        }\n    }\n\n    function request(httpRequest) {\n        // Variables will be used in the callback functions\n        const requestStartTime = new Date();\n        const request = httpRequest.request;\n\n        const headers = new Headers(); /*jshint ignore:line*/\n        if (request.range) {\n            headers.append('Range', 'bytes=' + request.range);\n        }\n\n        if (httpRequest.headers) {\n            for (let header in httpRequest.headers) {\n                let value = httpRequest.headers[header];\n                if (value) {\n                    headers.append(header, value);\n                }\n            }\n        }\n\n        if (!request.requestStartDate) {\n            request.requestStartDate = requestStartTime;\n        }\n\n        if (requestModifier && requestModifier.modifyRequestHeader) {\n            // modifyRequestHeader expects a XMLHttpRequest object so,\n            // to keep backward compatibility, we should expose a setRequestHeader method\n            // TODO: Remove RequestModifier dependency on XMLHttpRequest object and define\n            // a more generic way to intercept/modify requests\n            requestModifier.modifyRequestHeader({\n                setRequestHeader: function (header, value) {\n                    headers.append(header, value);\n                }\n            }, {\n                url: httpRequest.url\n            });\n        }\n\n        let abortController;\n        if (typeof window.AbortController === 'function') {\n            abortController = new AbortController(); /*jshint ignore:line*/\n            httpRequest.abortController = abortController;\n            abortController.signal.onabort = httpRequest.onabort;\n        }\n\n        const reqOptions = {\n            method: httpRequest.method,\n            headers: headers,\n            credentials: httpRequest.withCredentials ? 'include' : undefined,\n            signal: abortController ? abortController.signal : undefined\n        };\n\n        const calculationMode = settings.get().streaming.abr.fetchThroughputCalculationMode;\n        const requestTime = Date.now();\n        let throughputCapacityDelayMS = 0;\n\n        new Promise((resolve) => {\n            if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST && lowLatencyThroughputModel) {\n                throughputCapacityDelayMS = lowLatencyThroughputModel.getThroughputCapacityDelayMS(request, dashMetrics.getCurrentBufferLevel(request.mediaType) * 1000);\n                if (throughputCapacityDelayMS) {\n                    // safely delay the \"fetch\" call a bit to be able to meassure the throughput capacity of the line.\n                    // this will lead to first few chunks downloaded at max network speed\n                    return setTimeout(resolve, throughputCapacityDelayMS);\n                }\n            }\n            resolve();\n        })\n            .then(() => {\n                let markBeforeFetch = Date.now();\n\n                fetch(httpRequest.url, reqOptions).then(function (response) {\n                    if (!httpRequest.response) {\n                        httpRequest.response = {};\n                    }\n                    httpRequest.response.status = response.status;\n                    httpRequest.response.statusText = response.statusText;\n                    httpRequest.response.responseURL = response.url;\n\n                    if (!response.ok) {\n                        httpRequest.onerror();\n                    }\n\n                    let responseHeaders = '';\n                    for (const key of response.headers.keys()) {\n                        responseHeaders += key + ': ' + response.headers.get(key) + '\\r\\n';\n                    }\n                    httpRequest.response.responseHeaders = responseHeaders;\n\n                    if (!response.body) {\n                        // Fetch returning a ReadableStream response body is not currently supported by all browsers.\n                        // Browser compatibility: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n                        // If it is not supported, returning the whole segment when it's ready (as xhr)\n                        return response.arrayBuffer().then(function (buffer) {\n                            httpRequest.response.response = buffer;\n                            const event = {\n                                loaded: buffer.byteLength,\n                                total: buffer.byteLength,\n                                stream: false\n                            };\n                            httpRequest.progress(event);\n                            httpRequest.onload();\n                            httpRequest.onend();\n                            return;\n                        });\n                    }\n\n                    const totalBytes = parseInt(response.headers.get('Content-Length'), 10);\n                    let bytesReceived = 0;\n                    let signaledFirstByte = false;\n                    let remaining = new Uint8Array();\n                    let offset = 0;\n\n                    if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST && lowLatencyThroughputModel) {\n                        let markA = markBeforeFetch;\n                        let markB = 0;\n\n                        function fetchMeassurement(stream) {\n                            const reader = stream.getReader();\n                            const measurement = [];\n\n                            reader.read().then(function processFetch(args) {\n                                const value = args.value;\n                                const done = args.done;\n                                markB = Date.now();\n\n                                if (value && value.length) {\n                                    const chunkDownloadDurationMS = markB - markA;\n                                    const chunkBytes = value.length;\n                                    measurement.push({\n                                        chunkDownloadTimeRelativeMS: markB - markBeforeFetch,\n                                        chunkDownloadDurationMS,\n                                        chunkBytes,\n                                        kbps: Math.round(8 * chunkBytes / (chunkDownloadDurationMS / 1000)),\n                                        bufferLevel: dashMetrics.getCurrentBufferLevel(request.mediaType)\n                                    });\n                                }\n\n                                if (done) {\n\n                                    const fetchDuration = markB - markBeforeFetch;\n                                    const bytesAllChunks = measurement.reduce((prev, curr) => prev + curr.chunkBytes, 0);\n\n                                    lowLatencyThroughputModel.addMeasurement(request, fetchDuration, measurement, requestTime, throughputCapacityDelayMS, responseHeaders);\n\n                                    httpRequest.progress({\n                                        loaded: bytesAllChunks,\n                                        total: bytesAllChunks,\n                                        lengthComputable: true,\n                                        time: lowLatencyThroughputModel.getEstimatedDownloadDurationMS(request),\n                                        stream: true\n                                    });\n                                    return;\n                                }\n                                markA = Date.now();\n                                return reader.read().then(processFetch);\n                            });\n                        }\n                        // tee'ing streams is supported by all current major browsers\n                        // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n                        const [forMeasure, forConsumer] = response.body.tee();\n                        fetchMeassurement(forMeasure);\n                        httpRequest.reader = forConsumer.getReader();\n                    } else {\n                        httpRequest.reader = response.body.getReader();\n                    }\n\n                    let downloadedData = [];\n                    let startTimeData = [];\n                    let endTimeData = [];\n                    let lastChunkWasFinished = true;\n\n\n                    const processResult = function ({ value, done }) { // Bug fix Parse whenever data is coming [value] better than 1ms looking that increase CPU\n                        if (done) {\n                            if (remaining) {\n                                if (calculationMode !== Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST) {\n                                    // If there is pending data, call progress so network metrics\n                                    // are correctly generated\n                                    // Same structure as https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/\n                                    let calculatedThroughput = null;\n                                    let calculatedTime = null;\n                                    if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING) {\n                                        calculatedThroughput = calculateThroughputByChunkData(startTimeData, endTimeData);\n                                        if (calculatedThroughput) {\n                                            calculatedTime = bytesReceived * 8 / calculatedThroughput;\n                                        }\n                                    }\n                                    else if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA) {\n                                        calculatedTime = calculateDownloadedTime(downloadedData, bytesReceived);\n                                    }\n\n                                    httpRequest.progress({\n                                        loaded: bytesReceived,\n                                        total: isNaN(totalBytes) ? bytesReceived : totalBytes,\n                                        lengthComputable: true,\n                                        time: calculatedTime,\n                                        stream: true\n                                    });\n                                }\n\n                                httpRequest.response.response = remaining.buffer;\n                            }\n                            httpRequest.onload();\n                            httpRequest.onend();\n                            return;\n                        }\n\n                        if (value && value.length > 0) {\n                            remaining = concatTypedArray(remaining, value);\n                            bytesReceived += value.length;\n\n                            downloadedData.push({\n                                ts: Date.now(),\n                                bytes: value.length\n                            });\n\n                            if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING && lastChunkWasFinished) {\n                                // Parse the payload and capture the the 'moof' box\n                                const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moof'], remaining, offset);\n                                if (boxesInfo.found) {\n                                    // Store the beginning time of each chunk download in array StartTimeData\n                                    lastChunkWasFinished = false;\n                                    startTimeData.push({\n                                        ts: performance.now(), /* jshint ignore:line */\n                                        bytes: value.length\n                                    });\n                                }\n                            }\n\n                            const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moov', 'mdat'], remaining, offset);\n                            if (boxesInfo.found) {\n                                const end = boxesInfo.lastCompletedOffset + boxesInfo.size;\n\n                                // Store the end time of each chunk download  with its size in array EndTimeData\n                                if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING && !lastChunkWasFinished) {\n                                    lastChunkWasFinished = true;\n                                    endTimeData.push({\n                                        ts: performance.now(), /* jshint ignore:line */\n                                        bytes: remaining.length\n                                    });\n                                }\n\n                                // If we are going to pass full buffer, avoid copying it and pass\n                                // complete buffer. Otherwise clone the part of the buffer that is completed\n                                // and adjust remaining buffer. A clone is needed because ArrayBuffer of a typed-array\n                                // keeps a reference to the original data\n                                let data;\n                                if (end === remaining.length) {\n                                    data = remaining;\n                                    remaining = new Uint8Array();\n                                } else {\n                                    data = new Uint8Array(remaining.subarray(0, end));\n                                    remaining = remaining.subarray(end);\n                                }\n                                // Announce progress but don't track traces. Throughput measures are quite unstable\n                                // when they are based in small amount of data\n                                httpRequest.progress({\n                                    data: data.buffer,\n                                    lengthComputable: false,\n                                    noTrace: true\n                                });\n\n                                offset = 0;\n                            } else {\n                                offset = boxesInfo.lastCompletedOffset;\n                                // Call progress so it generates traces that will be later used to know when the first byte\n                                // were received\n                                if (!signaledFirstByte) {\n                                    httpRequest.progress({\n                                        lengthComputable: false,\n                                        noTrace: true\n                                    });\n                                    signaledFirstByte = true;\n                                }\n                            }\n                        }\n                        read(httpRequest, processResult);\n                    };\n                    read(httpRequest, processResult);\n                })\n                    .catch(function (e) {\n                        if (httpRequest.onerror) {\n                            httpRequest.onerror(e);\n                        }\n                    });\n            });\n    }\n\n    function read(httpRequest, processResult) {\n        httpRequest.reader.read()\n            .then(processResult)\n            .catch(function (e) {\n                if (httpRequest.onerror && httpRequest.response.status === 200) {\n                    // Error, but response code is 200, trigger error\n                    httpRequest.onerror(e);\n                }\n            });\n    }\n\n    function concatTypedArray(remaining, data) {\n        if (remaining.length === 0) {\n            return data;\n        }\n        const result = new Uint8Array(remaining.length + data.length);\n        result.set(remaining);\n        result.set(data, remaining.length);\n        return result;\n    }\n\n    function abort(request) {\n        if (request.abortController) {\n            // For firefox and edge\n            request.abortController.abort();\n        } else if (request.reader) {\n            // For Chrome\n            try {\n                request.reader.cancel();\n                request.onabort();\n            } catch (e) {\n                // throw exceptions (TypeError) when reader was previously closed,\n                // for example, because a network issue\n            }\n        }\n    }\n\n    function calculateDownloadedTime(downloadedData, bytesReceived) {\n        try {\n            downloadedData = downloadedData.filter(data => data.bytes > ((bytesReceived / 4) / downloadedData.length));\n            if (downloadedData.length > 1) {\n                let time = 0;\n                const avgTimeDistance = (downloadedData[downloadedData.length - 1].ts - downloadedData[0].ts) / downloadedData.length;\n                downloadedData.forEach((data, index) => {\n                    // To be counted the data has to be over a threshold\n                    const next = downloadedData[index + 1];\n                    if (next) {\n                        const distance = next.ts - data.ts;\n                        time += distance < avgTimeDistance ? distance : 0;\n                    }\n                });\n                return time;\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function calculateThroughputByChunkData(startTimeData, endTimeData) {\n        try {\n            let datum, datumE;\n            // Filter the last chunks in a segment in both arrays [StartTimeData and EndTimeData]\n            datum = startTimeData.filter((data, i) => i < startTimeData.length - 1);\n            datumE = endTimeData.filter((dataE, i) => i < endTimeData.length - 1);\n            let chunkThroughputs = [];\n            // Compute the average throughput of the filtered chunk data\n            if (datum.length > 1) {\n                let shortDurationBytesReceived = 0;\n                let shortDurationStartTime = 0;\n                for (let i = 0; i < datum.length; i++) {\n                    if (datum[i] && datumE[i]) {\n                        let chunkDownloadTime = datumE[i].ts - datum[i].ts;\n                        if (chunkDownloadTime > 1) {\n                            chunkThroughputs.push((8 * datumE[i].bytes) / chunkDownloadTime);\n                            shortDurationStartTime = 0;\n                        } else {\n                            if (shortDurationStartTime === 0) {\n                                shortDurationStartTime = datum[i].ts;\n                                shortDurationBytesReceived = 0;\n                            }\n                            let cumulatedChunkDownloadTime = datumE[i].ts - shortDurationStartTime;\n                            if (cumulatedChunkDownloadTime > 1) {\n                                shortDurationBytesReceived += datumE[i].bytes;\n                                chunkThroughputs.push((8 * shortDurationBytesReceived) / cumulatedChunkDownloadTime);\n                                shortDurationStartTime = 0;\n                            } else {\n                                // continue cumulating short duration data\n                                shortDurationBytesReceived += datumE[i].bytes;\n                            }\n                        }\n                    }\n                }\n\n                if (chunkThroughputs.length > 0) {\n                    const sumOfChunkThroughputs = chunkThroughputs.reduce((a, b) => a + b, 0);\n                    return sumOfChunkThroughputs / chunkThroughputs.length;\n                }\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    instance = {\n        load: load,\n        abort: abort,\n        calculateDownloadedTime: calculateDownloadedTime,\n        setup\n    };\n\n    return instance;\n}\n\nFetchLoader.__dashjs_factory_name = 'FetchLoader';\n\nconst factory = FactoryMaker.getClassFactory(FetchLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport DashConstants from '../constants/DashConstants';\n\nclass Representation {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.adaptation = null;\n        this.segmentInfoType = null;\n        this.initialization = null;\n        this.codecs = null;\n        this.mimeType = null;\n        this.codecPrivateData = null;\n        this.segmentDuration = NaN;\n        this.timescale = 1;\n        this.startNumber = 1;\n        this.indexRange = null;\n        this.range = null;\n        this.presentationTimeOffset = 0;\n        // Set the source buffer timeOffset to this\n        this.MSETimeOffset = NaN;\n        // The information we need in the DashHandler to determine whether the last segment has been loaded\n        this.mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN };\n        this.bandwidth = NaN;\n        this.width = NaN;\n        this.height = NaN;\n        this.scanType = null;\n        this.maxPlayoutRate = NaN;\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n        this.frameRate = null;\n    }\n\n    hasInitialization() {\n        return (this.initialization !== null || this.range !== null);\n    }\n\n    hasSegments() {\n        return this.segmentInfoType !== DashConstants.BASE_URL &&\n            this.segmentInfoType !== DashConstants.SEGMENT_BASE &&\n            !this.indexRange;\n    }\n}\n\nexport default Representation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass AdaptationSet {\n    constructor() {\n        this.period = null;\n        this.index = -1;\n        this.type = null;\n    }\n}\n\nexport default AdaptationSet;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Period {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.duration = NaN;\n        this.start = NaN;\n        this.mpd = null;\n        this.nextPeriodId = null;\n    }\n}\n\nPeriod.DEFAULT_ID = 'defaultId';\n\nexport default Period;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Mpd {\n    constructor() {\n        this.manifest = null;\n        this.suggestedPresentationDelay = 0;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\n        this.publishTime = null;\n        this.minimumUpdatePeriod = NaN;\n        this.mediaPresentationDuration = NaN;\n    }\n}\n\nexport default Mpd;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Event {\n    constructor() {\n        this.type = '';\n        this.duration = NaN;\n        this.presentationTime = NaN;\n        this.id = NaN;\n        this.messageData = '';\n        this.eventStream = null;\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\n    }\n}\n\nexport default Event;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nconst DEFAULT_DVB_PRIORITY = 1;\nconst DEFAULT_DVB_WEIGHT = 1;\n\nclass BaseURL {\n    constructor(url, serviceLocation, priority, weight) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || url || '';\n\n        // DVB extensions\n        this.dvb_priority = priority || DEFAULT_DVB_PRIORITY;\n        this.dvb_weight = weight || DEFAULT_DVB_WEIGHT;\n\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing BaseURLs with content steering\n\n        /* currently unused:\n         * byteRange,\n         */\n    }\n}\n\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\n\nexport default BaseURL;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventStream {\n    constructor() {\n        this.adaptionSet = null;\n        this.representation = null;\n        this.period = null;\n        this.timescale = 1;\n        this.value = '';\n        this.schemeIdUri = '';\n        this.presentationTimeOffset = 0;\n    }\n}\n\nexport default EventStream;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ProducerReferenceTime {\n    constructor() {\n        this.id = null;\n        this.inband = false;\n        this.type = 'encoder';\n        this.applicationScheme = null;\n        this.wallClockTime = null;\n        this.presentationTime = NaN;\n        this.UTCTiming = null;\n    }\n}\n\nexport default ProducerReferenceTime;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ContentSteering {\n    constructor() {\n        this.defaultServiceLocation = null;\n        this.defaultServiceLocationArray = [];\n        this.queryBeforeStart = false;\n        this.serverUrl = null;\n        this.clientRequirement = true;\n    }\n}\n\nexport default ContentSteering;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DescriptorType {\n    constructor() {\n        this.schemeIdUri = null;\n        this.value = null;\n        this.id = null;\n    }\n\n    init(data) {\n        if (data) {\n            this.schemeIdUri = data.schemeIdUri ? data.schemeIdUri : null;\n            this.value = data.value ? data.value : null;\n            this.id = data.id ? data.id : null;\n        }\n        return this;\n    }\n}\n\nexport default DescriptorType;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport deepEqual from 'fast-deep-equal';\n\n/**\n * @module ObjectUtils\n * @ignore\n * @description Provides utility functions for objects\n */\nfunction ObjectUtils() {\n\n    let instance;\n\n    /**\n     * Returns true if objects are equal\n     * @return {boolean}\n     * @param {object} obj1\n     * @param {object} obj2\n     * @memberof module:ObjectUtils\n     * @instance\n     */\n    function areEqual(obj1, obj2) {\n        return deepEqual(obj1, obj2);\n    }\n\n    instance = {\n        areEqual: areEqual\n    };\n\n    return instance;\n}\n\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MpdLocation {\n    constructor(url, serviceLocation) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || null;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\n    }\n}\n\nexport default MpdLocation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass PatchLocation {\n    constructor(url, serviceLocation, ttl) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || null;\n        this.ttl = ttl || NaN;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\n    }\n}\n\nexport default PatchLocation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ProducerReferenceTime from '../vo/ProducerReferenceTime';\nimport ContentSteering from '../vo/ContentSteering';\nimport DescriptorType from '../vo/DescriptorType';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../../streaming/thumbnail/ThumbnailTracks';\nimport MpdLocation from '../vo/MpdLocation';\nimport PatchLocation from '../vo/PatchLocation';\n\nfunction DashManifestModel() {\n    let instance,\n        logger,\n        errHandler,\n        BASE64;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        // Check for thumbnail images\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length) {\n            const essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\n                return (type === Constants.IMAGE);\n            }\n        }\n\n        // Check ContentComponent.contentType\n        if (adaptation.ContentComponent_asArray && adaptation.ContentComponent_asArray.length > 0) {\n            if (adaptation.ContentComponent_asArray.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (adaptation.ContentComponent_asArray[0].contentType === type) {\n                return true;\n            }\n        }\n\n        const mimeTypeRegEx = (type === Constants.TEXT) ? new RegExp('(ttml|vtt|wvtt|stpp)') : new RegExp(type);\n\n        // Check codecs\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length) {\n            const codecs = adaptation.Representation_asArray[0].codecs;\n            if (mimeTypeRegEx.test(codecs)) {\n                return true;\n            }\n        }\n\n        // Check Adaptation's mimeType\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            return mimeTypeRegEx.test(adaptation.mimeType);\n        }\n\n        // Check Representation's mimeType\n        if (adaptation.Representation_asArray) {\n            let representation;\n            for (let i = 0; i < adaptation.Representation_asArray.length; i++) {\n                representation = adaptation.Representation_asArray[i];\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    return mimeTypeRegEx.test(representation.mimeType);\n                }\n            }\n        }\n\n        return false;\n    }\n\n    function getIsFragmented(adaptation) {\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n        if (adaptation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n            return true;\n        }\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = adaptation.Representation_asArray[0];\n            if (representation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getProducerReferenceTimesForAdaptation(adaptation) {\n        const prtArray = adaptation && adaptation.hasOwnProperty(DashConstants.PRODUCERREFERENCETIME_ASARRAY) ? adaptation[DashConstants.PRODUCERREFERENCETIME_ASARRAY] : [];\n\n        // ProducerReferenceTime elements can also be contained in Representations\n        const representationsArray = adaptation && adaptation.hasOwnProperty(DashConstants.REPRESENTATION_ASARRAY) ? adaptation[DashConstants.REPRESENTATION_ASARRAY] : [];\n\n        representationsArray.forEach((rep) => {\n            if (rep.hasOwnProperty(DashConstants.PRODUCERREFERENCETIME_ASARRAY)) {\n                prtArray.push(...rep[DashConstants.PRODUCERREFERENCETIME_ASARRAY]);\n            }\n        });\n\n        const prtsForAdaptation = [];\n\n        // Unlikely to have multiple ProducerReferenceTimes.\n        prtArray.forEach((prt) => {\n            const entry = new ProducerReferenceTime();\n\n            if (prt.hasOwnProperty(DashConstants.ID)) {\n                entry[DashConstants.ID] = prt[DashConstants.ID];\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.WALL_CLOCK_TIME)) {\n                entry[DashConstants.WALL_CLOCK_TIME] = prt[DashConstants.WALL_CLOCK_TIME];\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                entry[DashConstants.PRESENTATION_TIME] = prt[DashConstants.PRESENTATION_TIME];\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.INBAND)) {\n                entry[DashConstants.INBAND] = prt[DashConstants.INBAND] !== 'false';\n            }\n\n            if (prt.hasOwnProperty(DashConstants.TYPE)) {\n                entry[DashConstants.TYPE] = prt[DashConstants.TYPE];\n            }\n\n            // Not interested in other attributes for now\n            // UTC element contained must be same as that in the MPD\n            prtsForAdaptation.push(entry);\n        })\n\n        return prtsForAdaptation;\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            lang = adaptation.lang;\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.VIEWPOINT_ASARRAY) || !adaptation[DashConstants.VIEWPOINT_ASARRAY].length) return [];\n        return adaptation[DashConstants.VIEWPOINT_ASARRAY].map( viewpoint => {\n            const vp = new DescriptorType();\n            return vp.init(viewpoint);\n        });\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) || !adaptation[DashConstants.ROLE_ASARRAY].length) return [];\n        return adaptation[DashConstants.ROLE_ASARRAY].map( role => {\n            const r = new DescriptorType();\n            return r.init(role);\n        });\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) || !adaptation[DashConstants.ACCESSIBILITY_ASARRAY].length) return [];\n        return adaptation[DashConstants.ACCESSIBILITY_ASARRAY].map( accessibility => {\n            const a = new DescriptorType();\n            return a.init(accessibility);\n        });\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) || !adaptation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].length) return [];\n        return adaptation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].map( audioChanCfg => {\n            const acc = new DescriptorType();\n            return acc.init(audioChanCfg);\n        });\n    }\n\n    function getAudioChannelConfigurationForRepresentation(representation) {\n        if (!representation || !representation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) || !representation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].length) return [];\n        return representation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].map( audioChanCfg => {\n            const acc = new DescriptorType();\n            return acc.init(audioChanCfg);\n        });\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && Array.isArray(realAdaptation.Representation_asArray)) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getRealAdaptations(manifest, periodIndex) {\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n    }\n\n    function getRealPeriods(manifest) {\n        return manifest && manifest.Period_asArray ? manifest.Period_asArray : [];\n    }\n\n    function getRealPeriodForIndex(index, manifest) {\n        const realPeriods = getRealPeriods(manifest);\n        if (realPeriods.length > 0 && isInteger(index)) {\n            return realPeriods[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        if (realAdaptations.length > 0 && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        if (!realAdaptation) {\n            return -1;\n        }\n\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n\n        for (let i = 0; i < realAdaptations.length; i++) {\n            let objectUtils = ObjectUtils(context).getInstance();\n            if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptations[i], type)) {\n                adaptations.push(processAdaptation(realAdaptations[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        let codec = null;\n\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            if (representation) {\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n                if (addResolutionInfo && representation.width !== undefined) {\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n                }\n            }\n        }\n\n        // If the codec contains a profiles parameter we remove it. Otherwise it will cause problems when checking for codec capabilities of the platform\n        if (codec) {\n            codec = codec.replace(/\\sprofiles=[^;]*/g, '');\n        }\n\n        return codec;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getSegmentAlignment(adaptation) {\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SEGMENT_ALIGNMENT)) {\n            return adaptation[DashConstants.SEGMENT_ALIGNMENT] === 'true'\n        }\n\n        return false\n    }\n\n    function getSubSegmentAlignment(adaptation) {\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUB_SEGMENT_ALIGNMENT)) {\n            return adaptation[DashConstants.SUB_SEGMENT_ALIGNMENT] === 'true'\n        }\n\n        return false\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getLabelsForAdaptation(adaptation) {\n        if (!adaptation || !Array.isArray(adaptation.Label_asArray)) {\n            return [];\n        }\n\n        const labelArray = [];\n\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\n            labelArray.push({\n                lang: adaptation.Label_asArray[i].lang,\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\n            });\n        }\n\n        return labelArray;\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function getId(manifest) {\n        return (manifest && manifest[DashConstants.ID]) || null;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else if (manifest && manifest.type == 'dynamic') {\n            mpdDuration = Number.POSITIVE_INFINITY;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getPublishTime(manifest) {\n        return manifest && manifest.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(manifest[DashConstants.PUBLISH_TIME]) : null;\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && Array.isArray(adaptation.Representation_asArray) ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation && Array.isArray(processedRealAdaptation.Representation_asArray) ? processedRealAdaptation.Representation_asArray : [];\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null,\n                id: realRepresentation.id || null\n            };\n        });\n    }\n\n    function getSelectionPriority(realAdaption) {\n        try {\n            const priority = realAdaption && typeof realAdaption.selectionPriority !== 'undefined' ? parseInt(realAdaption.selectionPriority) : 1;\n\n            return isNaN(priority) ? 1 : priority;\n        } catch (e) {\n            return 1;\n        }\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || !realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map((prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n        isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo,\n            baseUrl;\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n            // that we are processing. Making it works properly will require much further changes and given\n            // parsing base Urls parameters is needed for our ultra low latency examples, we will\n            // keep this \"tricky\" code until the real (and good) solution comes\n            if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n                const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n                if (baseUrls) {\n                    baseUrl = baseUrls[0];\n                }\n            }\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    voRepresentation.mimeType = realRepresentation[DashConstants.MIME_TYPE];\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        const initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        }\n\n                        if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (getIsText(processedRealAdaptation) &&\n                        getIsFragmented(processedRealAdaptation) &&\n                        processedRealAdaptation.mimeType &&\n                        processedRealAdaptation.mimeType.indexOf('application/mp4') === -1) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                        segmentInfo = realRepresentation.SegmentTemplate;\n\n                        if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                            voRepresentation.segmentDuration = calcSegmentDuration(segmentInfo.SegmentTimeline) / voRepresentation.timescale;\n                        }\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function calcSegmentDuration(segmentTimeline) {\n        if (!segmentTimeline || !segmentTimeline.S_asArray) {\n            return NaN;\n        }\n        let s0 = segmentTimeline.S_asArray[0];\n        let s1 = segmentTimeline.S_asArray[1];\n        return s0.hasOwnProperty('d') ? s0.d : (s1.t - s0.t);\n    }\n\n    function calcMSETimeOffset(representation) {\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\n        const presentationOffset = representation.presentationTimeOffset;\n        const periodStart = representation.adaptation.period.start;\n        return (periodStart - presentationOffset);\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    logger.warn('Unknown Adaptation stream type');\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period element contains a @duration attribute then this new Period is also a regular Period. The start time of the new Period PeriodStart is the sum of the start time of the previous Period PeriodStart and the value of the attribute @duration of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element is the first in the MPD, and (iii) the MPD@type is 'static', then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                if (voPreviousPeriod) {\n                    voPreviousPeriod.nextPeriodId = voPeriod.id;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                if (manifest.loadedTime) {\n                    mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n                }\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.PUBLISH_TIME)) {\n                mpd.publishTime = new Date(manifest.publishTime);\n            }\n        }\n\n        return mpd;\n    }\n\n    function checkConfig() {\n        if (!errHandler || !errHandler.hasOwnProperty('error')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        checkConfig();\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i][Constants.SCHEME_ID_URI];\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i][DashConstants.TIMESCALE];\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i][DashConstants.VALUE];\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                    eventStream.presentationTimeOffset = eventStreams[i][DashConstants.PRESENTATION_TIME_OFFSET];\n                }\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\n                    const currentMpdEvent = eventStreams[i].Event_asArray[j];\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = currentMpdEvent.presentationTime;\n                    }\n                    const presentationTimeOffset = eventStream.presentationTimeOffset ? eventStream.presentationTimeOffset / eventStream.timescale : 0;\n                    event.calculatedPresentationTime = event.presentationTime / eventStream.timescale + period.start - presentationTimeOffset;\n\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = currentMpdEvent.duration / eventStream.timescale;\n                    }\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.ID)) {\n                        event.id = currentMpdEvent.id;\n                    } else {\n                        event.id = null;\n                    }\n\n                    if (currentMpdEvent.Signal && currentMpdEvent.Signal.Binary) {\n                        // toString is used to manage both regular and namespaced tags\n                        event.messageData = BASE64.decodeArray(currentMpdEvent.Signal.Binary.toString());\n                    } else {\n                        // From Cor.1: 'NOTE: this attribute is an alternative\n                        // to specifying a complete XML element(s) in the Event.\n                        // It is useful when an event leans itself to a compact\n                        // string representation'.\n                        event.messageData =\n                            currentMpdEvent.messageData ||\n                            currentMpdEvent.__cdata ||\n                            currentMpdEvent.__text;\n                    }\n\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation, period) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n            eventStream.period = period;\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation, period) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null, period);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation, period) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation, period);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getContentSteering(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.CONTENT_STEERING_AS_ARRAY)) {\n            // Only one ContentSteering element is supported on MPD level\n            const element = manifest[DashConstants.CONTENT_STEERING_AS_ARRAY][0];\n            return _createContentSteeringInstance(element);\n        }\n\n        return undefined;\n    }\n\n    function _createContentSteeringInstance(element) {\n        const entry = new ContentSteering();\n\n        entry.serverUrl = element.__text;\n\n        if (element.hasOwnProperty(DashConstants.DEFAULT_SERVICE_LOCATION)) {\n            entry.defaultServiceLocation = element[DashConstants.DEFAULT_SERVICE_LOCATION];\n            entry.defaultServiceLocationArray = entry.defaultServiceLocation.split(' ');\n        }\n\n        if (element.hasOwnProperty(DashConstants.QUERY_BEFORE_START)) {\n            entry.queryBeforeStart = element[DashConstants.QUERY_BEFORE_START].toLowerCase() === 'true';\n        }\n\n        if (element.hasOwnProperty(DashConstants.CLIENT_REQUIREMENT)) {\n            entry.clientRequirement = element[DashConstants.CLIENT_REQUIREMENT].toLowerCase() !== 'false';\n        }\n\n        return entry;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.LOCATION_AS_ARRAY)) {\n            return manifest[DashConstants.LOCATION_AS_ARRAY].map((entry) => {\n                const text = entry.__text || entry;\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\n\n                return new MpdLocation(text, serviceLocation)\n            })\n        }\n\n        return [];\n    }\n\n    function getPatchLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.PATCH_LOCATION_AS_ARRAY)) {\n            return manifest[DashConstants.PATCH_LOCATION_AS_ARRAY].map((entry) => {\n                const text = entry.__text || entry;\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\n                let ttl = entry.hasOwnProperty(DashConstants.TTL) ? parseFloat(entry[DashConstants.TTL]) * 1000 : NaN;\n\n                return new PatchLocation(text, serviceLocation, ttl)\n            })\n        }\n\n        return [];\n    }\n\n    function getSuggestedPresentationDelay(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY) ? mpd.suggestedPresentationDelay : null;\n    }\n\n    function getAvailabilityStartTime(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) && mpd.availabilityStartTime !== null ? mpd.availabilityStartTime.getTime() : null;\n    }\n\n    function getServiceDescriptions(manifest) {\n        const serviceDescriptions = [];\n        if (manifest && manifest.hasOwnProperty(DashConstants.SERVICE_DESCRIPTION)) {\n            for (const sd of manifest.ServiceDescription_asArray) {\n                // Convert each of the properties defined in\n                let id = null,\n                    schemeIdUri = null,\n                    latency = null,\n                    playbackRate = null,\n                    operatingQuality = null,\n                    operatingBandwidth = null,\n                    contentSteering = null;\n\n                for (const prop in sd) {\n                    if (sd.hasOwnProperty(prop)) {\n                        if (prop === DashConstants.ID) {\n                            id = sd[prop];\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_SCOPE) {\n                            schemeIdUri = sd[prop].schemeIdUri;\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_LATENCY) {\n                            latency = {\n                                target: parseInt(sd[prop].target),\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                referenceId: parseInt(sd[prop].referenceId)\n                            };\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_PLAYBACK_RATE) {\n                            playbackRate = {\n                                max: parseFloat(sd[prop].max),\n                                min: parseFloat(sd[prop].min)\n                            };\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_QUALITY) {\n                            operatingQuality = {\n                                mediaType: sd[prop].mediaType,\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                target: parseInt(sd[prop].target),\n                                type: sd[prop].type,\n                                maxQualityDifference: parseInt(sd[prop].maxQualityDifference)\n                            }\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH) {\n                            operatingBandwidth = {\n                                mediaType: sd[prop].mediaType,\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                target: parseInt(sd[prop].target)\n                            }\n                        } else if (prop === DashConstants.CONTENT_STEERING) {\n                            contentSteering = _createContentSteeringInstance(sd[prop])\n                        }\n                    }\n                }\n\n                serviceDescriptions.push({\n                    id,\n                    schemeIdUri,\n                    latency,\n                    playbackRate,\n                    operatingQuality,\n                    operatingBandwidth,\n                    contentSteering\n                });\n            }\n        }\n\n        return serviceDescriptions;\n    }\n\n    function getSupplementalPropertiesForAdaptation(adaptation) {\n        const supplementalProperties = {};\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY)) {\n            for (const sp of adaptation.SupplementalProperty_asArray) {\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\n                }\n            }\n        }\n        return supplementalProperties;\n    }\n\n    function getSupplementalPropertiesAsArrayForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY) || !adaptation.SupplementalProperty_asArray.length) return [];\n        return adaptation.SupplementalProperty_asArray.map( supp => {\n            const s = new DescriptorType();\n            return s.init(supp);\n        });\n    }\n\n    function getSupplementalPropertiesForRepresentation(representation) {\n        const supplementalProperties = {};\n\n        if (representation && representation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY)) {\n            for (const sp of representation.SupplementalProperty_asArray) {\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\n                }\n            }\n        }\n        return supplementalProperties;\n    }\n\n    function getSupplementalPropertiesAsArrayForRepresentation(representation) {\n        if (!representation || !representation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY) || !representation.SupplementalProperty_asArray.length) return [];\n        return representation.SupplementalProperty_asArray.map( supp => {\n            const s = new DescriptorType();\n            return s.init(supp);\n        });\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n    }\n\n    instance = {\n        getIsTypeOf,\n        getIsText,\n        getIsFragmented,\n        getProducerReferenceTimesForAdaptation,\n        getLanguageForAdaptation,\n        getViewpointForAdaptation,\n        getRolesForAdaptation,\n        getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation,\n        getAudioChannelConfigurationForRepresentation,\n        getAdaptationForIndex,\n        getIndexForAdaptation,\n        getAdaptationForId,\n        getAdaptationsForType,\n        getRealPeriods,\n        getRealPeriodForIndex,\n        getCodec,\n        getSelectionPriority,\n        getMimeType,\n        getKID,\n        getLabelsForAdaptation,\n        getContentProtectionData,\n        getIsDynamic,\n        getId,\n        hasProfile,\n        getDuration,\n        getBandwidth,\n        getManifestUpdatePeriod,\n        getPublishTime,\n        getRepresentationCount,\n        getBitrateListForAdaptation,\n        getRepresentationFor,\n        getRepresentationsForAdaptation,\n        getAdaptationsForPeriod,\n        getRegularPeriods,\n        getMpd,\n        getEventsForPeriod,\n        getEssentialPropertiesForRepresentation,\n        getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation,\n        getUTCTimingSources,\n        getBaseURLsFromElement,\n        getRepresentationSortFunction,\n        getContentSteering,\n        getLocation,\n        getPatchLocation,\n        getSuggestedPresentationDelay,\n        getAvailabilityStartTime,\n        getServiceDescriptions,\n        getSegmentAlignment,\n        getSubSegmentAlignment,\n        getSupplementalPropertiesForAdaptation,\n        getSupplementalPropertiesAsArrayForAdaptation,\n        getSupplementalPropertiesForRepresentation,\n        getSupplementalPropertiesAsArrayForRepresentation,\n        setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport MetricsReportingEvents from '../metrics/MetricsReportingEvents';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Settings from '../../core/Settings';\nimport Constants from '../../streaming/constants/Constants';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport Utils from '../../core/Utils';\n\nconst CMCD_REQUEST_FIELD_NAME = 'CMCD';\nconst CMCD_VERSION = 1;\nconst OBJECT_TYPES = {\n    MANIFEST: 'm',\n    AUDIO: 'a',\n    VIDEO: 'v',\n    INIT: 'i',\n    CAPTION: 'c',\n    ISOBMFF_TEXT_TRACK: 'tt',\n    ENCRYPTION_KEY: 'k',\n    OTHER: 'o'\n};\nconst STREAMING_FORMATS = {\n    DASH: 'd',\n    MSS: 's'\n};\nconst STREAM_TYPES = {\n    VOD: 'v',\n    LIVE: 'l'\n};\nconst RTP_SAFETY_FACTOR = 5;\n\nfunction CmcdModel() {\n\n    let dashManifestModel,\n        instance,\n        internalData,\n        abrController,\n        dashMetrics,\n        playbackController,\n        streamProcessors,\n        _isStartup,\n        _bufferLevelStarved,\n        _initialMediaRequestsDone;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n\n        _resetInitialSettings();\n    }\n\n    function initialize() {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.on(MediaPlayerEvents.PERIOD_SWITCH_COMPLETED, _onPeriodSwitchComplete, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n    }\n\n    function _resetInitialSettings() {\n        internalData = {\n            pr: 1,\n            nor: null,\n            st: null,\n            sf: null,\n            sid: `${Utils.generateUuid()}`,\n            cid: null\n        };\n        _bufferLevelStarved = {};\n        _isStartup = {};\n        _initialMediaRequestsDone = {};\n        _updateStreamProcessors();\n    }\n\n    function _onPeriodSwitchComplete() {\n        _updateStreamProcessors();\n    }\n\n    function _updateStreamProcessors() {\n        if (!playbackController) return;\n        const streamController = playbackController.getStreamController();\n        if (!streamController) return;\n        if (typeof streamController.getActiveStream !== 'function') return;\n        const activeStream = streamController.getActiveStream();\n        if (!activeStream) return;\n        streamProcessors = activeStream.getProcessors();\n    }\n\n    function getQueryParameter(request) {\n        try {\n            if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n                const cmcdData = _getCmcdData(request);\n                const filteredCmcdData = _applyWhitelist(cmcdData);\n                const finalPayloadString = _buildFinalString(filteredCmcdData);\n\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\n                    url: request.url,\n                    mediaType: request.mediaType,\n                    cmcdData,\n                    cmcdString: finalPayloadString\n                });\n                return {\n                    key: CMCD_REQUEST_FIELD_NAME,\n                    value: finalPayloadString\n                };\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _applyWhitelist(cmcdData) {\n        try {\n            const enabledCMCDKeys = settings.get().streaming.cmcd.enabledKeys;\n\n            return Object.keys(cmcdData)\n                .filter(key => enabledCMCDKeys.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = cmcdData[key];\n\n                    return obj;\n                }, {});\n        } catch (e) {\n            return cmcdData;\n        }\n    }\n\n    function _copyParameters(data, parameterNames) {\n        const copiedData = {};\n        for (let name of parameterNames) {\n            if (data[name]) {\n                copiedData[name] = data[name];\n            }\n        }\n        return copiedData;\n    }\n\n    function getHeaderParameters(request) {\n        try {\n            if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n                const cmcdData = _getCmcdData(request);\n                const cmcdObjectHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['br', 'd', 'ot', 'tb']));\n                const cmcdRequestHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['bl', 'dl', 'mtp', 'nor', 'nrr', 'su']));\n                const cmcdStatusHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['bs', 'rtp']));\n                const cmcdSessionHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['cid', 'pr', 'sf', 'sid', 'st', 'v']));\n                const headers = {\n                    'CMCD-Object': _buildFinalString(cmcdObjectHeader),\n                    'CMCD-Request': _buildFinalString(cmcdRequestHeader),\n                    'CMCD-Status': _buildFinalString(cmcdStatusHeader),\n                    'CMCD-Session': _buildFinalString(cmcdSessionHeader)\n                };\n\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\n                    url: request.url,\n                    mediaType: request.mediaType,\n                    cmcdData,\n                    headers\n                });\n                return headers;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _applyWhitelistByKeys(keys) {\n        const enabledCMCDKeys = settings.get().streaming.cmcd.enabledKeys;\n\n        return keys.filter(key => enabledCMCDKeys.includes(key));\n    }\n\n    function _getCmcdData(request) {\n        try {\n            let cmcdData = null;\n\n            if (request.type === HTTPRequest.MPD_TYPE) {\n                return _getCmcdDataForMpd(request);\n            } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                _initForMediaType(request.mediaType);\n                return _getCmcdDataForMediaSegment(request);\n            } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                return _getCmcdDataForInitSegment(request);\n            } else if (request.type === HTTPRequest.OTHER_TYPE || request.type === HTTPRequest.XLINK_EXPANSION_TYPE) {\n                return _getCmcdDataForOther(request);\n            } else if (request.type === HTTPRequest.LICENSE) {\n                return _getCmcdDataForLicense(request);\n            }\n\n            return cmcdData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getCmcdDataForLicense(request) {\n        const data = _getGenericCmcdData(request);\n\n        data.ot = OBJECT_TYPES.ENCRYPTION_KEY;\n\n        return data;\n    }\n\n    function _getCmcdDataForMpd() {\n        const data = _getGenericCmcdData();\n\n        data.ot = OBJECT_TYPES.MANIFEST;\n\n        return data;\n    }\n\n    function _getCmcdDataForMediaSegment(request) {\n        const data = _getGenericCmcdData();\n        const encodedBitrate = _getBitrateByRequest(request);\n        const d = _getObjectDurationByRequest(request);\n        const mtp = _getMeasuredThroughputByType(request.mediaType);\n        const dl = _getDeadlineByType(request.mediaType);\n        const bl = _getBufferLevelByType(request.mediaType);\n        const tb = _getTopBitrateByType(request.mediaType);\n        const pr = internalData.pr;\n\n        const nextRequest = _probeNextRequest(request.mediaType);\n\n        let ot;\n        if (request.mediaType === Constants.VIDEO) ot = OBJECT_TYPES.VIDEO;\n        if (request.mediaType === Constants.AUDIO) ot = OBJECT_TYPES.AUDIO;\n        if (request.mediaType === Constants.TEXT) {\n            if (request.mediaInfo.mimeType === 'application/mp4') {\n                ot = OBJECT_TYPES.ISOBMFF_TEXT_TRACK;\n            } else {\n                ot = OBJECT_TYPES.CAPTION;\n            }\n        }\n\n        let rtp = settings.get().streaming.cmcd.rtp;\n        if (!rtp) {\n            rtp = _calculateRtp(request);\n        }\n        if (!isNaN(rtp)) {\n            data.rtp = rtp;\n        }\n\n        if (nextRequest) {\n            if (request.url !== nextRequest.url) {\n                data.nor = encodeURIComponent(Utils.getRelativeUrl(request.url, nextRequest.url));\n            } else if (nextRequest.range) {\n                data.nrr = nextRequest.range;\n            }\n        }\n\n        if (encodedBitrate) {\n            data.br = encodedBitrate;\n        }\n\n        if (ot) {\n            data.ot = ot;\n        }\n\n        if (!isNaN(d)) {\n            data.d = d;\n        }\n\n        if (!isNaN(mtp)) {\n            data.mtp = mtp;\n        }\n\n        if (!isNaN(dl)) {\n            data.dl = dl;\n        }\n\n        if (!isNaN(bl)) {\n            data.bl = bl;\n        }\n\n        if (!isNaN(tb)) {\n            data.tb = tb;\n        }\n\n        if (!isNaN(pr) && pr !== 1) {\n            data.pr = pr;\n        }\n\n        if (_bufferLevelStarved[request.mediaType]) {\n            data.bs = true;\n            _bufferLevelStarved[request.mediaType] = false;\n        }\n\n        if (_isStartup[request.mediaType] || !_initialMediaRequestsDone[request.mediaType]) {\n            data.su = true;\n            _isStartup[request.mediaType] = false;\n            _initialMediaRequestsDone[request.mediaType] = true;\n        }\n\n        return data;\n    }\n\n    function _initForMediaType(mediaType) {\n\n        if (!_initialMediaRequestsDone.hasOwnProperty(mediaType)) {\n            _initialMediaRequestsDone[mediaType] = false;\n        }\n\n        if (!_isStartup.hasOwnProperty(mediaType)) {\n            _isStartup[mediaType] = false;\n        }\n\n        if (!_bufferLevelStarved.hasOwnProperty(mediaType)) {\n            _bufferLevelStarved[mediaType] = false;\n        }\n    }\n\n    function _getCmcdDataForInitSegment() {\n        const data = _getGenericCmcdData();\n\n        data.ot = OBJECT_TYPES.INIT;\n        data.su = true;\n\n        return data;\n    }\n\n    function _getCmcdDataForOther() {\n        const data = _getGenericCmcdData();\n\n        data.ot = OBJECT_TYPES.OTHER;\n\n        return data;\n    }\n\n\n    function _getGenericCmcdData() {\n        const data = {};\n\n        let cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\n\n        data.v = CMCD_VERSION;\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\n\n        data.sid = `${data.sid}`;\n\n        if (cid) {\n            data.cid = `${cid}`;\n        }\n\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\n            data.pr = internalData.pr;\n        }\n\n        if (internalData.st) {\n            data.st = internalData.st;\n        }\n\n        if (internalData.sf) {\n            data.sf = internalData.sf;\n        }\n\n        return data;\n    }\n\n    function _getBitrateByRequest(request) {\n        try {\n            const quality = request.quality;\n            const bitrateList = request.mediaInfo.bitrateList;\n\n            return parseInt(bitrateList[quality].bandwidth / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getTopBitrateByType(mediaType) {\n        try {\n            const info = abrController.getTopBitrateInfoFor(mediaType);\n            return Math.round(info.bitrate / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getObjectDurationByRequest(request) {\n        try {\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : NaN;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getMeasuredThroughputByType(mediaType) {\n        try {\n            return parseInt(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType) / 100) * 100;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getDeadlineByType(mediaType) {\n        try {\n            const playbackRate = internalData.pr;\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\n                return parseInt((bufferLevel / playbackRate) * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getBufferLevelByType(mediaType) {\n        try {\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(bufferLevel)) {\n                return parseInt(bufferLevel * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _onPlaybackRateChanged(data) {\n        try {\n            internalData.pr = data.playbackRate;\n        } catch (e) {\n\n        }\n    }\n\n    function _onManifestLoaded(data) {\n        try {\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\n            const st = isDynamic ? STREAM_TYPES.LIVE : STREAM_TYPES.VOD;\n            const sf = data.protocol && data.protocol === 'MSS' ? STREAMING_FORMATS.MSS : STREAMING_FORMATS.DASH;\n\n            internalData.st = `${st}`;\n            internalData.sf = `${sf}`;\n        } catch (e) {\n        }\n    }\n\n    function _onBufferLevelStateChanged(data) {\n        try {\n            if (data.state && data.mediaType) {\n                if (data.state === MediaPlayerEvents.BUFFER_EMPTY) {\n\n                    if (!_bufferLevelStarved[data.mediaType]) {\n                        _bufferLevelStarved[data.mediaType] = true;\n                    }\n                    if (!_isStartup[data.mediaType]) {\n                        _isStartup[data.mediaType] = true;\n                    }\n                }\n            }\n        } catch (e) {\n\n        }\n    }\n\n    function _onPlaybackSeeked() {\n        for (let key in _bufferLevelStarved) {\n            if (_bufferLevelStarved.hasOwnProperty(key)) {\n                _bufferLevelStarved[key] = true;\n            }\n        }\n\n        for (let key in _isStartup) {\n            if (_isStartup.hasOwnProperty(key)) {\n                _isStartup[key] = true;\n            }\n        }\n    }\n\n    function _buildFinalString(cmcdData) {\n        try {\n            if (!cmcdData) {\n                return null;\n            }\n            const keys = Object.keys(cmcdData).sort((a, b) => a.localeCompare(b));\n            const length = keys.length;\n\n            let cmcdString = keys.reduce((acc, key, index) => {\n                if (key === 'v' && cmcdData[key] === 1) return acc; // Version key should only be reported if it is != 1\n                if (typeof cmcdData[key] === 'string' && key !== 'ot' && key !== 'sf' && key !== 'st') {\n                    acc += `${key}=${JSON.stringify(cmcdData[key])}`;\n                } else {\n                    acc += `${key}=${cmcdData[key]}`;\n                }\n                if (index < length - 1) {\n                    acc += ',';\n                }\n\n                return acc;\n            }, '');\n\n            cmcdString = cmcdString.replace(/=true/g, '');\n\n            // Remove last comma at the end\n            cmcdString = cmcdString.replace(/,\\s*$/, '');\n\n            return cmcdString;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _probeNextRequest(mediaType) {\n        if (!streamProcessors || streamProcessors.length === 0) return;\n        for (let streamProcessor of streamProcessors) {\n            if (streamProcessor.getType() === mediaType) {\n                return streamProcessor.probeNextRequest();\n            }\n        }\n    }\n\n    function _calculateRtp(request) {\n        try {\n            // Get the values we need\n            let playbackRate = playbackController.getPlaybackRate();\n            if (!playbackRate) playbackRate = 1;\n            let { quality, mediaType, mediaInfo, duration } = request;\n\n            if (!mediaInfo) {\n                return NaN;\n            }\n            let currentBufferLevel = _getBufferLevelByType(mediaType);\n            if (currentBufferLevel === 0) currentBufferLevel = 500;\n            let bitrate = mediaInfo.bitrateList[quality].bandwidth;\n\n            // Calculate RTP\n            let segmentSize = (bitrate * duration) / 1000; // Calculate file size in kilobits\n            let timeToLoad = (currentBufferLevel / playbackRate) / 1000; // Calculate time available to load file in seconds\n            let minBandwidth = segmentSize / timeToLoad; // Calculate the exact bandwidth required\n            let rtpSafetyFactor = settings.get().streaming.cmcd.rtpSafetyFactor && !isNaN(settings.get().streaming.cmcd.rtpSafetyFactor) ? settings.get().streaming.cmcd.rtpSafetyFactor : RTP_SAFETY_FACTOR;\n            let maxBandwidth = minBandwidth * rtpSafetyFactor; // Include a safety buffer\n\n\n            // Round to the next multiple of 100\n            return (parseInt(maxBandwidth / 100) + 1) * 100;\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getQueryParameter,\n        getHeaderParameters,\n        setConfig,\n        reset,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2022, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport Debug from '../../core/Debug';\n\n// Note: in modern browsers, the header names are returned in all lower case\nconst CMSD_STATIC = 'static';\nconst CMSD_DYNAMIC = 'dynamic';\nconst CMSD_RESPONSE_FIELD_BASENAME = 'cmsd-';\nconst CMSD_STATIC_RESPONSE_FIELD_NAME = CMSD_RESPONSE_FIELD_BASENAME + CMSD_STATIC;\nconst CMSD_DYNAMIC_RESPONSE_FIELD_NAME = CMSD_RESPONSE_FIELD_BASENAME + CMSD_DYNAMIC;\nconst CMSD_KEYS = {\n    AVAILABILITY_TIME: 'at',\n    DURESS: 'du',\n    ENCODED_BITRATE: 'br',\n    ESTIMATED_THROUGHPUT: 'etp',\n    HELD_TIME: 'ht',\n    INTERMEDIARY_IDENTIFIER: 'n',\n    MAX_SUGGESTED_BITRATE: 'mb',\n    NEXT_OBJECT_RESPONSE: 'nor',\n    NEXT_RANGE_RESPONSE: 'nrr',\n    OBJECT_DURATION: 'd',\n    OBJECT_TYPE: 'ot',\n    RESPONSE_DELAY: 'rd',\n    ROUND_TRIP_TIME: 'rtt',\n    STARTUP: 'su',\n    STREAM_TYPE: 'st',\n    STREAMING_FORMAT: 'sf',\n    VERSION: 'v'\n}\nconst OBJECT_TYPES = {\n    MANIFEST: 'm',\n    AUDIO: 'a',\n    VIDEO: 'v',\n    INIT: 'i',\n    CAPTION: 'c',\n    ISOBMFF_TEXT_TRACK: 'tt',\n    ENCRYPTION_KEY: 'k',\n    OTHER: 'o',\n    STREAM: 'stream' // Specific value for parameters without object type, which apply for all media/objects\n};\n\nconst PERSISTENT_PARAMS = [\n    CMSD_KEYS.MAX_SUGGESTED_BITRATE,\n    CMSD_KEYS.STREAM_TYPE,\n    CMSD_KEYS.STREAMING_FORMAT,\n    CMSD_KEYS.VERSION\n];\n\nconst MEDIATYPE_TO_OBJECTTYPE = {\n    'video': OBJECT_TYPES.VIDEO,\n    'audio': OBJECT_TYPES.AUDIO,\n    'text': OBJECT_TYPES.ISOBMFF_TEXT_TRACK,\n    'stream': OBJECT_TYPES.STREAM\n}\n\nconst integerRegex = /^[-0-9]/\n\nfunction CmsdModel() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        _staticParamsDict,\n        _dynamicParamsDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function initialize() {}\n\n    function setConfig(/*config*/) {}\n\n    function _resetInitialSettings() {\n        _staticParamsDict = {};\n        _dynamicParamsDict = {};\n    }\n\n    function _clearParams(params) {\n        if (!params) {\n            return;\n        }\n        Object.keys(params).forEach(key => {\n            if (!PERSISTENT_PARAMS.includes(key)) {\n                delete params[key];\n            }\n        })\n    }\n\n    function _parseParameterValue(value) {\n        // If the value type is BOOLEAN and the value is TRUE, then the equals sign and the value are omitted\n        if (!value) {\n            return true;\n        }\n        // Check if boolean 'false'\n        if (value.toLowerCase() === 'false') {\n            return false;\n        }\n        // Check if a number\n        if (integerRegex.test(value)) {\n            return parseInt(value, 10);\n        }\n        // Value is a string, remove double quotes from string value\n        return value.replace(/[\"]+/g, '');   \n    }\n\n    function _parseCMSDStatic(value) {\n        try {\n            const params = {};\n            const items = value.split(',');\n            for (let i = 0; i < items.length; i++) {\n                // <key>=<value>\n                const substrs = items[i].split('=');\n                const key = substrs[0];\n                const v = _parseParameterValue(substrs[1]);\n                params[key] = v;\n            }\n            return params;\n        } catch (e) {\n            logger.error('Failed to parse CMSD-Static response header value:', e);\n        }\n    }\n\n    function _parseCMSDDynamic(value) {\n        try {\n            const params = {};\n            const entries = value.split(',');\n            // Consider only last CMSD-Dynamic entry\n            const entry = entries[entries.length - 1];\n            const items = entry.split(';');\n            // Server identifier as 1st item\n            for (let i = 1; i < items.length; i++) {\n                // <key>=<value>\n                const substrs = items[i].split('=');\n                const key = substrs[0];\n                const v = _parseParameterValue(substrs[1]);\n                params[key] = v;\n            }\n            return params;\n        } catch (e) {\n            logger.error('Failed to parse CMSD-Dynamic response header value:', e);\n            return [];\n        }\n    }\n\n    function _mediaTypetoObjectType(mediaType) {\n        return MEDIATYPE_TO_OBJECTTYPE[mediaType] || OBJECT_TYPES.OTHER;\n    }\n\n    function _getParamValueForObjectType(paramsType, ot, key) {\n        const params = paramsType === CMSD_STATIC ? _staticParamsDict : _dynamicParamsDict;\n        const otParams = params[ot] || {};\n        const streamParams = params[OBJECT_TYPES.STREAM] || {};\n        const value = otParams[key] || streamParams[key];\n        return value;\n    }\n\n    function parseResponseHeaders(responseHeaders, mediaType) {\n        let staticParams = null;\n        let dynamicParams = null;\n        const headers = responseHeaders.split('\\r\\n');\n        // Ge in reverse order in order to consider only last CMSD-Dynamic header\n        for (let i = headers.length - 1; i >= 0; i--) {\n            const header = headers[i];\n            let m = header.match(/^(?<key>[^:]*):\\s*(?<value>.*)$/);\n            if (m && m.groups) {\n                // Note: in modern browsers, the header names are returned in all lower case\n                let key = m.groups.key.toLowerCase(),\n                    value = m.groups.value;\n                switch (key) {\n                    case CMSD_STATIC_RESPONSE_FIELD_NAME:\n                        staticParams = _parseCMSDStatic(value);\n                        eventBus.trigger(Events.CMSD_STATIC_HEADER, staticParams);\n                        break;\n                    case CMSD_DYNAMIC_RESPONSE_FIELD_NAME:\n                        if (!dynamicParams) {\n                            dynamicParams = _parseCMSDDynamic(value);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        // Get object type\n        let ot = OBJECT_TYPES.STREAM;\n        if (staticParams && staticParams[CMSD_KEYS.OBJECT_TYPE]) {\n            ot = staticParams[CMSD_KEYS.OBJECT_TYPE];\n        } else if (mediaType) {\n            ot = _mediaTypetoObjectType(mediaType)\n        }\n\n        // Clear previously received params except persistent ones \n        _clearParams(_staticParamsDict[ot]);\n        _clearParams(_dynamicParamsDict[ot]);\n\n        // Merge params with previously received params \n        if (staticParams) {\n            _staticParamsDict[ot] = Object.assign(_staticParamsDict[ot] || {}, staticParams);\n        }\n        if (dynamicParams) {\n            _dynamicParamsDict[ot] = Object.assign(_dynamicParamsDict[ot] || {}, dynamicParams);\n        }\n\n        return {\n            static: staticParams,\n            dynamic: dynamicParams\n        }\n    }\n\n    function getMaxBitrate(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let mb = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.MAX_SUGGESTED_BITRATE);\n        return mb ? mb : -1\n    }\n\n    function getEstimatedThroughput(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let etp = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ESTIMATED_THROUGHPUT);\n        return etp ? etp : null\n    }\n\n    function getResponseDelay(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.RESPONSE_DELAY);\n        return rd ? rd : null\n    }\n\n    function getRoundTripTime(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ROUND_TRIP_TIME);\n        return rd ? rd : null\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        reset,\n        parseResponseHeaders,\n        getMaxBitrate,\n        getEstimatedThroughput,\n        getResponseDelay,\n        getRoundTripTime,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmsdModel.__dashjs_factory_name = 'CmsdModel';\nexport default FactoryMaker.getSingletonFactory(CmsdModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../../core/Debug';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction LowLatencyThroughputModel() {\n\n    const LLTM_MAX_MEASUREMENTS = 10;\n    // factor (<1) is used to reduce the real needed download time when at very bleeding live edge\n    const LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR = 0.8;\n    const LLTM_OPTIMISTIC_ESTIMATE_FACTOR = 0.6;\n\n    const LLTM_SLOW_SEGMENT_DOWNLOAD_TOLERANCE = 1.05;\n    const LLTM_MAX_DELAY_MS = 250;\n\n    const context = this.context;\n    let instance;\n    let logger;\n    let measurements = {};\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    /**\n     * Linear regression with least squares method to get a trend function for buffer lavel at chunk receive timestamps\n     * @param {*} chunkMeasurements\n     * @returns linear trend function\n     */\n    function createBufferLevelTrendFunction(chunkMeasurements) {\n        const result = {};\n\n        let sumX = 0\n        let sumY = 0\n        let sumXY = 0\n        let sumXSq = 0\n        const N = chunkMeasurements.length\n\n\n        for (var i = 0; i < N; ++i) {\n            sumX += chunkMeasurements[i].chunkDownloadTimeRelativeMS;\n            sumY += chunkMeasurements[i].bufferLevel;\n            sumXY += chunkMeasurements[i].chunkDownloadTimeRelativeMS * chunkMeasurements[i].bufferLevel;\n            sumXSq += chunkMeasurements[i].chunkDownloadTimeRelativeMS * chunkMeasurements[i].chunkDownloadTimeRelativeMS\n        }\n\n        result.m = ((sumXY - sumX * sumY / N)) / (sumXSq - sumX * sumX / N)\n        result.b = sumY / N - result.m * sumX / N\n\n        return function (x) {\n            return result.m * x + result.b\n        }\n    }\n\n    function isBufferSafeAndStable(lastMeasurements) {\n        let isBufferSafeAndStable = true;\n        let lastBitrate;\n        const aveBufferLevelLastSegements = lastMeasurements.reduce((prev, curr) => prev + curr.bufferLevelAtSegmentEnd, 0) / lastMeasurements.length;\n        lastMeasurements.forEach(m => {\n            // inner segment buffer stability\n            if (Math.abs(m.bufferLevelAtSegmentEnd / m.bufferLevelAtSegmentStart) < 0.95) {\n                isBufferSafeAndStable = false;\n            }\n\n            // inter segment buffer stability\n            if (m.bufferLevelAtSegmentEnd / aveBufferLevelLastSegements < 0.8) {\n                isBufferSafeAndStable = false;\n            }\n\n            // representation bitrate remained at least constant\n            if (!lastBitrate) {\n                lastBitrate = m.bitrate;\n            } else if (lastBitrate > m.bitrate) {\n                isBufferSafeAndStable = false;\n            }\n        });\n        return isBufferSafeAndStable;\n    }\n\n    /**\n     * Based on the MPD, timing and buffer information of the last recent segments and their chunks\n     * the most stable download time (in milliseconds) is calculated.\n     * @param {*} request HTTPLoader request object\n     * @returns download time in milliseconds of last fetched segment\n     */\n    function getEstimatedDownloadDurationMS(request) {\n        const lastMeasurement = measurements[request.mediaType].slice(-1).pop();\n        const lastThreeMeasurements = measurements[request.mediaType].slice(-3)\n\n        // calculate and remember the buffer level trend during the last fetched segment\n        const lastChunkRelativeTimeMS = lastMeasurement.chunkMeasurements.slice(-1).pop().chunkDownloadTimeRelativeMS;\n        lastMeasurement.bufferLevelAtSegmentStart = lastMeasurement.getEstimatedBufferLevel(lastChunkRelativeTimeMS / 2);\n        lastMeasurement.bufferLevelAtSegmentEnd = lastMeasurement.getEstimatedBufferLevel(lastChunkRelativeTimeMS);\n\n        const isBufferStable = isBufferSafeAndStable(lastThreeMeasurements);\n\n        const selectedOptimisticFactor = isBufferStable ? LLTM_OPTIMISTIC_ESTIMATE_FACTOR : LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\n\n        // fetch duration was longer than segment duration, but buffer was stable\n        if (lastMeasurement.isBufferStable && lastMeasurement.segDurationMS * LLTM_SLOW_SEGMENT_DOWNLOAD_TOLERANCE < lastMeasurement.fetchDownloadDurationMS) {\n            return lastMeasurement.fetchDownloadDurationMS;\n        }\n        // buffer is drying or fetch took too long\n        if (!isBufferStable || lastMeasurement.segDurationMS < lastMeasurement.fetchDownloadDurationMS) {\n            return lastMeasurement.fetchDownloadDurationMS * LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\n        }\n\n        // did we requested a fully available segment? -> most accurate throughput calculation\n        // we use adjusted availability start time to decide\n        // Note: this \"download mode\" usually happens at startup and if requests are delayed artificially\n        if (lastMeasurement.adjustedAvailabilityStartTimeMS <= (lastMeasurement.requestTimeMS + lastMeasurement.throughputCapacityDelayMS) - lastMeasurement.segDurationMS) {\n            return lastMeasurement.fetchDownloadDurationMS * LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\n        }\n\n        // get all chunks that have been downloaded before fetch reached bleeding live edge\n        // the remaining chunks loaded at production rate we will approximated\n        const chunkAvailablePeriod = (lastMeasurement.requestTimeMS + lastMeasurement.throughputCapacityDelayMS) - lastMeasurement.adjustedAvailabilityStartTimeMS;\n        let chunkBytesBBLE = 0; // BBLE -> Before bleeding live edge\n        let chunkDownloadtimeMSBBLE = 0;\n        let chunkCount = 0;\n        for (let index = 0; index < lastMeasurement.chunkMeasurements.length; index++) {\n            const chunk = lastMeasurement.chunkMeasurements[index];\n            if (chunkAvailablePeriod < chunkDownloadtimeMSBBLE + chunk.chunkDownloadDurationMS) {\n                break;\n            }\n            chunkDownloadtimeMSBBLE += chunk.chunkDownloadDurationMS;\n            chunkBytesBBLE += chunk.chunkBytes;\n            chunkCount++;\n        }\n\n        if (chunkAvailablePeriod < 0) {\n            logger.warn('request time was before adjusted availibitly start time');\n        }\n\n        // there have to be some chunks available (20% of max count)\n        // otherwise we are at bleeding live edge and the few chunks are insufficient to estimate correctly\n        if (chunkBytesBBLE && chunkDownloadtimeMSBBLE && chunkCount > lastMeasurement.chunkMeasurements.length * 0.2) {\n            const downloadThroughput = chunkBytesBBLE / chunkDownloadtimeMSBBLE; // bytes per millesecond\n            const estimatedDownloadtimeMS = lastMeasurement.segmentBytes / downloadThroughput;\n            // if real download was shorter then report this incl. semi optimistical estimate factor\n            if (lastMeasurement.fetchDownloadDurationMS < estimatedDownloadtimeMS) {\n                return lastMeasurement.fetchDownloadDurationMS * selectedOptimisticFactor;\n            }\n            return estimatedDownloadtimeMS * selectedOptimisticFactor;\n        }\n\n        // when we are to tight at live edge and it's stable then\n        // we start to optimistically estimate download time\n        // in such a way that a switch to next rep will be possible\n        // optimistical estimate: assume download was fast enough for next higher rendition\n        let nextHigherBitrate = lastMeasurement.bitrate;\n        lastMeasurement.bitrateList.some(b => {\n            if (b.bandwidth > lastMeasurement.bitrate) {\n                nextHigherBitrate = b.bandwidth;\n                return true;\n            }\n        });\n        // already highest bitrate?\n\n        if (nextHigherBitrate === lastMeasurement.bitrate) {\n            return lastMeasurement.fetchDownloadDurationMS * selectedOptimisticFactor;\n        }\n        return selectedOptimisticFactor * lastMeasurement.segmentBytes * 8 * 1000 / nextHigherBitrate;\n    }\n\n    /**\n     * Get calculated value for a safe artificial delay of the next request to allow to accumulate some chunks.\n     * This allows better line throughput measurement.\n     * @param {*} request\n     * @param {*} currentBufferLevel current buffer level in milliseconds\n     * @returns delay in milliseconds\n     */\n    function getThroughputCapacityDelayMS(request, currentBufferLevelMS) {\n        const lastThreeMeasurements = measurements[request.mediaType] && measurements[request.mediaType].slice(-3);\n\n        if (!lastThreeMeasurements || lastThreeMeasurements.length < 3) {\n            return 0;\n        }\n\n\n\n        // in case not stable buffer, no artificially delay for the next request\n        if (!isBufferSafeAndStable(lastThreeMeasurements)) {\n            return 0;\n        }\n\n        // allowed artificial delay is the min of quater of buffer level in milliseconds and LLTM_MAX_DELAY_MS\n        return currentBufferLevelMS / 4 > LLTM_MAX_DELAY_MS ? LLTM_MAX_DELAY_MS : currentBufferLevelMS / 4;\n    }\n\n    /**\n     * Add some measurement data for bookkeeping and being able to derive decisions on estimated throughput.\n     * @param {*} request HTTPLoader object to get MPD and media info from\n     * @param {*} fetchDownloadDurationMS Duration how long the fetch actually took\n     * @param {*} chunkMeasurements Array containing chunk timings and buffer levels\n     * @param {*} requestTimeMS Timestamp at which the fetch was initiated\n     * @param {*} throughputCapacityDelayMS An artificial delay that was used for this request\n     */\n    function addMeasurement(request, fetchDownloadDurationMS, chunkMeasurements, requestTimeMS, throughputCapacityDelayMS) {\n        if (request && request.mediaType && !measurements[request.mediaType]) {\n            measurements[request.mediaType] = [];\n        }\n        const bitrateEntry = request.mediaInfo.bitrateList.find(item => item.id === request.representationId);\n        measurements[request.mediaType].push({\n            index: request.index,\n            repId: request.representationId,\n            mediaType: request.mediaType,\n            requestTimeMS,\n            adjustedAvailabilityStartTimeMS: request.availabilityStartTime.getTime(),\n            segDurationMS: request.duration * 1000,\n            chunksDurationMS: chunkMeasurements.reduce((prev, curr) => prev + curr.chunkDownloadDurationMS, 0),\n            segmentBytes: chunkMeasurements.reduce((prev, curr) => prev + curr.chunkBytes, 0),\n            bitrate: bitrateEntry && bitrateEntry.bandwidth,\n            bitrateList: request.mediaInfo.bitrateList,\n            chunkMeasurements,\n            fetchDownloadDurationMS,\n            throughputCapacityDelayMS,\n            getEstimatedBufferLevel: createBufferLevelTrendFunction(chunkMeasurements.slice(1)) // don't use first chunk's buffer level\n        });\n        // maintain only a maximum amount of most recent measurements\n        if (measurements[request.mediaType].length > LLTM_MAX_MEASUREMENTS) {\n            measurements[request.mediaType].shift();\n        }\n    }\n\n    instance = {\n        setup,\n        addMeasurement,\n        getThroughputCapacityDelayMS,\n        getEstimatedDownloadDurationMS\n    };\n\n    setup()\n\n    return instance;\n}\n\nLowLatencyThroughputModel.__dashjs_factory_name = 'LowLatencyThroughputModel';\nexport default FactoryMaker.getSingletonFactory(LowLatencyThroughputModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XHRLoader from './XHRLoader';\nimport FetchLoader from './FetchLoader';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport DashJSError from '../vo/DashJSError';\nimport CmcdModel from '../models/CmcdModel';\nimport CmsdModel from '../models/CmsdModel';\nimport Utils from '../../core/Utils';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport Settings from '../../core/Settings';\nimport Constants from '../constants/Constants';\nimport LowLatencyThroughputModel from '../models/LowLatencyThroughputModel';\nimport CustomParametersModel from '../models/CustomParametersModel';\n\n/**\n * @module HTTPLoader\n * @ignore\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependencies from parent\n */\nfunction HTTPLoader(cfg) {\n\n    cfg = cfg || {};\n\n    const context = this.context;\n    const errHandler = cfg.errHandler;\n    const dashMetrics = cfg.dashMetrics;\n    const mediaPlayerModel = cfg.mediaPlayerModel;\n    const requestModifier = cfg.requestModifier;\n    const boxParser = cfg.boxParser;\n    const errors = cfg.errors;\n    const requestTimeout = cfg.requestTimeout || 0;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        requests,\n        delayedRequests,\n        retryRequests,\n        downloadErrorToRequestTypeMap,\n        cmcdModel,\n        cmsdModel,\n        customParametersModel,\n        lowLatencyThroughputModel,\n        logger;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        requests = [];\n        delayedRequests = [];\n        retryRequests = [];\n        cmcdModel = CmcdModel(context).getInstance();\n        cmsdModel = CmsdModel(context).getInstance();\n        lowLatencyThroughputModel = LowLatencyThroughputModel(context).getInstance();\n        customParametersModel = CustomParametersModel(context).getInstance();\n\n        downloadErrorToRequestTypeMap = {\n            [HTTPRequest.MPD_TYPE]: errors.DOWNLOAD_ERROR_ID_MANIFEST_CODE,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: errors.DOWNLOAD_ERROR_ID_XLINK_CODE,\n            [HTTPRequest.INIT_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.OTHER_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE\n        };\n    }\n\n    function internalLoad(config, remainingAttempts) {\n        const request = config.request;\n        const traces = [];\n        let firstProgress = true;\n        let needFailureReport = true;\n        let requestStartTime = new Date();\n        let lastTraceTime = requestStartTime;\n        let lastTraceReceivedCount = 0;\n        let progressTimeout = null;\n        let fileLoaderType = null;\n        let httpRequest;\n\n        if (!requestModifier || !dashMetrics || !errHandler) {\n            throw new Error('config object is not correct or missing');\n        }\n\n        const addHttpRequestMetric = function(success) {\n            request.requestStartDate = requestStartTime;\n            request.requestEndDate = new Date();\n            request.firstByteDate = request.firstByteDate || requestStartTime;\n            request.fileLoaderType = fileLoaderType;\n\n            const responseUrl = httpRequest.response ? httpRequest.response.responseURL : null;\n            const responseStatus = httpRequest.response ? httpRequest.response.status : null;\n            const responseHeaders = httpRequest.response && httpRequest.response.getAllResponseHeaders ? httpRequest.response.getAllResponseHeaders() :\n                httpRequest.response ? httpRequest.response.responseHeaders : null;\n    \n            const cmsd = responseHeaders && settings.get().streaming.cmsd && settings.get().streaming.cmsd.enabled ? cmsdModel.parseResponseHeaders(responseHeaders, request.mediaType) : null;\n    \n            dashMetrics.addHttpRequest(request, responseUrl, responseStatus, responseHeaders, success ? traces : null, cmsd);\n        }\n    \n        const handleLoaded = function (success) {\n            needFailureReport = false;\n\n            addHttpRequestMetric(success);\n\n            if (request.type === HTTPRequest.MPD_TYPE) {\n                dashMetrics.addManifestUpdate(request);\n                eventBus.trigger(Events.MANIFEST_LOADING_FINISHED, { request });\n            }\n        };\n\n        const onloadend = function () {\n            if (progressTimeout) {\n                clearTimeout(progressTimeout);\n                progressTimeout = null;\n            }\n            if (requests.indexOf(httpRequest) === -1) {\n                return;\n            } else {\n                requests.splice(requests.indexOf(httpRequest), 1);\n            }\n\n            if (needFailureReport) {\n                handleLoaded(false);\n\n                if (remainingAttempts > 0) {\n\n                    // If we get a 404 to a media segment we should check the client clock again and perform a UTC sync in the background.\n                    try {\n                        if (settings.get().streaming.utcSynchronization.enableBackgroundSyncAfterSegmentDownloadError && request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                            // Only trigger a sync if the loading failed for the first time\n                            const initialNumberOfAttempts = mediaPlayerModel.getRetryAttemptsForType(HTTPRequest.MEDIA_SEGMENT_TYPE);\n                            if (initialNumberOfAttempts === remainingAttempts) {\n                                eventBus.trigger(Events.ATTEMPT_BACKGROUND_SYNC);\n                            }\n                        }\n                    } catch (e) {\n\n                    }\n\n                    remainingAttempts--;\n                    let retryRequest = { config: config };\n                    retryRequests.push(retryRequest);\n                    retryRequest.timeout = setTimeout(function () {\n                        if (retryRequests.indexOf(retryRequest) === -1) {\n                            return;\n                        } else {\n                            retryRequests.splice(retryRequests.indexOf(retryRequest), 1);\n                        }\n                        internalLoad(config, remainingAttempts);\n                    }, mediaPlayerModel.getRetryIntervalsForType(request.type));\n                } else {\n                    if (request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n                        return;\n                    }\n\n                    errHandler.error(new DashJSError(downloadErrorToRequestTypeMap[request.type], request.url + ' is not available', {\n                        request: request,\n                        response: httpRequest.response\n                    }));\n\n                    if (config.error) {\n                        config.error(request, 'error', httpRequest.response.statusText, httpRequest.response);\n                    }\n\n                    if (config.complete) {\n                        config.complete(request, httpRequest.response.statusText);\n                    }\n                }\n            }\n        };\n\n        const progress = function (event) {\n            const currentTime = new Date();\n\n            if (firstProgress) {\n                firstProgress = false;\n                if (!event.lengthComputable ||\n                    (event.lengthComputable && event.total !== event.loaded)) {\n                    request.firstByteDate = currentTime;\n                }\n            }\n\n            if (event.lengthComputable) {\n                request.bytesLoaded = event.loaded;\n                request.bytesTotal = event.total;\n            }\n\n            if (!event.noTrace) {\n                traces.push({\n                    s: lastTraceTime,\n                    d: event.time ? event.time : currentTime.getTime() - lastTraceTime.getTime(),\n                    b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\n                });\n\n                lastTraceTime = currentTime;\n                lastTraceReceivedCount = event.loaded;\n            }\n\n            if (progressTimeout) {\n                clearTimeout(progressTimeout);\n                progressTimeout = null;\n            }\n\n            if (settings.get().streaming.fragmentRequestProgressTimeout > 0) {\n                progressTimeout = setTimeout(function () {\n                    // No more progress => abort request and treat as an error\n                    logger.warn('Abort request ' + httpRequest.url + ' due to progress timeout');\n                    httpRequest.response.onabort = null;\n                    httpRequest.loader.abort(httpRequest);\n                    onloadend();\n                }, settings.get().streaming.fragmentRequestProgressTimeout);\n            }\n\n            if (config.progress && event) {\n                config.progress(event);\n            }\n        };\n\n        const onload = function () {\n            if (httpRequest.response.status >= 200 && httpRequest.response.status <= 299) {\n                handleLoaded(true);\n\n                if (config.success) {\n                    config.success(httpRequest.response.response, httpRequest.response.statusText, httpRequest.response.responseURL);\n                }\n\n                if (config.complete) {\n                    config.complete(request, httpRequest.response.statusText);\n                }\n            }\n        };\n\n        const onabort = function () {\n            addHttpRequestMetric(true);\n\n            if (progressTimeout) {\n                clearTimeout(progressTimeout);\n                progressTimeout = null;\n            }\n            if (config.abort) {\n                config.abort(request);\n            }\n        };\n\n        const ontimeout = function (event) {\n            let timeoutMessage;\n            if (event.lengthComputable) {\n                let percentageComplete = (event.loaded / event.total) * 100;\n                timeoutMessage = 'Request timeout: loaded: ' + event.loaded + ', out of: ' + event.total + ' : ' + percentageComplete.toFixed(3) + '% Completed';\n            } else {\n                timeoutMessage = 'Request timeout: non-computable download size';\n            }\n            logger.warn(timeoutMessage);\n        };\n\n\n        let loader;\n        if (request.hasOwnProperty('availabilityTimeComplete') && request.availabilityTimeComplete === false && window.fetch && request.responseType === 'arraybuffer' && request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            loader = FetchLoader(context).create({\n                requestModifier: requestModifier,\n                lowLatencyThroughputModel,\n                boxParser: boxParser\n            });\n            loader.setup({\n                dashMetrics\n            });\n            fileLoaderType = Constants.FILE_LOADER_TYPES.FETCH;\n        } else {\n            loader = XHRLoader(context).create({\n                requestModifier: requestModifier\n            });\n            fileLoaderType = Constants.FILE_LOADER_TYPES.XHR;\n        }\n\n        let headers = null;\n        let modifiedUrl = requestModifier.modifyRequestURL ? requestModifier.modifyRequestURL(request.url) : request.url;\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\n                const additionalQueryParameter = _getAdditionalQueryParameter(request);\n                modifiedUrl = Utils.addAditionalQueryParameterToUrl(modifiedUrl, additionalQueryParameter);\n            } else if (cmcdMode === Constants.CMCD_MODE_HEADER) {\n                headers = cmcdModel.getHeaderParameters(request);\n            }\n        }\n\n        const withCredentials = customParametersModel.getXHRWithCredentialsForType(request.type);\n\n        // Add queryParams that came from pathway cloning\n        if (request.queryParams) {\n            const queryParams = Object.keys(request.queryParams).map((key) => {\n                return {\n                    key,\n                    value: request.queryParams[key]\n                }\n            })\n            modifiedUrl = Utils.addAditionalQueryParameterToUrl(modifiedUrl, queryParams);\n        }\n\n        request.url = modifiedUrl;\n\n        httpRequest = {\n            url: modifiedUrl,\n            method: HTTPRequest.GET,\n            withCredentials: withCredentials,\n            request: request,\n            onload: onload,\n            onend: onloadend,\n            onerror: onloadend,\n            progress: progress,\n            onabort: onabort,\n            ontimeout: ontimeout,\n            loader: loader,\n            timeout: requestTimeout,\n            headers: headers\n        };\n\n        // Adds the ability to delay single fragment loading time to control buffer.\n        let now = new Date().getTime();\n        if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\n            // no delay - just send\n            requests.push(httpRequest);\n            loader.load(httpRequest);\n        } else {\n            // delay\n            let delayedRequest = { httpRequest: httpRequest };\n            delayedRequests.push(delayedRequest);\n            delayedRequest.delayTimeout = setTimeout(function () {\n                if (delayedRequests.indexOf(delayedRequest) === -1) {\n                    return;\n                } else {\n                    delayedRequests.splice(delayedRequests.indexOf(delayedRequest), 1);\n                }\n                try {\n                    requestStartTime = new Date();\n                    lastTraceTime = requestStartTime;\n                    requests.push(delayedRequest.httpRequest);\n                    loader.load(delayedRequest.httpRequest);\n                } catch (e) {\n                    delayedRequest.httpRequest.onerror();\n                }\n            }, (request.delayLoadingTime - now));\n        }\n    }\n\n    function _getAdditionalQueryParameter(request) {\n        try {\n            const additionalQueryParameter = [];\n            const cmcdQueryParameter = cmcdModel.getQueryParameter(request);\n\n            if (cmcdQueryParameter) {\n                additionalQueryParameter.push(cmcdQueryParameter);\n            }\n\n            return additionalQueryParameter;\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Initiates a download of the resource described by config.request\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            internalLoad(\n                config,\n                mediaPlayerModel.getRetryAttemptsForType(\n                    config.request.type\n                )\n            );\n        } else {\n            if (config.error) {\n                config.error(config.request, 'error');\n            }\n        }\n    }\n\n    /**\n     * Aborts any inflight downloads\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function abort() {\n        retryRequests.forEach(t => {\n            clearTimeout(t.timeout);\n            // abort request in order to trigger LOADING_ABANDONED event\n            if (t.config.request && t.config.abort) {\n                t.config.abort(t.config.request);\n            }\n        });\n        retryRequests = [];\n\n        delayedRequests.forEach(x => clearTimeout(x.delayTimeout));\n        delayedRequests = [];\n\n        requests.forEach(x => {\n            // MSS patch: ignore FragmentInfo requests\n            if (x.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n                return;\n            }\n\n            // abort will trigger onloadend which we don't want\n            // when deliberately aborting inflight requests -\n            // set them to undefined so they are not called\n            x.onloadend = x.onerror = x.onprogress = undefined;\n            x.loader.abort(x);\n        });\n        requests = [];\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    setup();\n\n    return instance;\n}\n\nHTTPLoader.__dashjs_factory_name = 'HTTPLoader';\n\nconst factory = FactoryMaker.getClassFactory(HTTPLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport HTTPLoader from '../../streaming/net/HTTPLoader';\n\n/**\n * @module\n * @description Choose right url loader for scheme\n * @ignore\n */\nfunction SchemeLoaderFactory() {\n\n    let instance;\n\n    let schemeLoaderMap;\n\n    function registerLoader(scheme, loader) {\n        schemeLoaderMap[scheme] = loader;\n    }\n\n    function unregisterLoader(scheme) {\n        if (schemeLoaderMap[scheme]) {\n            delete schemeLoaderMap[scheme];\n        }\n    }\n\n    function unregisterAllLoader() {\n        schemeLoaderMap = {};\n    }\n\n    function getLoader(url) {\n\n        // iterates through schemeLoaderMap to find a loader for the scheme\n        for (var scheme in schemeLoaderMap) {\n            if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\n                return schemeLoaderMap[scheme];\n            }\n        }\n\n        return HTTPLoader;\n    }\n\n    function reset() {\n        unregisterAllLoader();\n    }\n\n    function setup() {\n        reset();\n    }\n\n    setup();\n\n    instance = {\n        getLoader: getLoader,\n        registerLoader: registerLoader,\n        unregisterLoader: unregisterLoader,\n        unregisterAllLoader: unregisterAllLoader,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\nconst factory = FactoryMaker.getSingletonFactory(SchemeLoaderFactory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport SchemeLoaderFactory from '../../streaming/net/SchemeLoaderFactory';\n\n/**\n * @class URLLoader\n * @description  Call Offline Loader or Online Loader depending on URL\n * @param {Object} cfg - dependencies\n * @ignore\n*/\nfunction URLLoader(cfg) {\n\n    cfg = cfg || {};\n    const context = this.context;\n\n    let instance,\n        schemeLoaderFactory,\n        loader;\n\n    schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\n\n    function load(config) {\n        if (!loader) {\n            let loaderFactory = schemeLoaderFactory.getLoader(config && config.request ? config.request.url : null);\n            loader = loaderFactory(context).create({\n                errHandler: cfg.errHandler,\n                mediaPlayerModel: cfg.mediaPlayerModel,\n                requestModifier: cfg.requestModifier,\n                dashMetrics: cfg.dashMetrics,\n                boxParser: cfg.boxParser ? cfg.boxParser : null,\n                constants: cfg.constants ? cfg.constants : null,\n                dashConstants: cfg.dashConstants ? cfg.dashConstants : null,\n                urlUtils: cfg.urlUtils ? cfg.urlUtils : null,\n                requestTimeout: !isNaN(cfg.requestTimeout) ? cfg.requestTimeout : 0,\n                errors: cfg.errors\n            });\n        }\n        loader.load(config);\n    }\n\n    function abort() {\n        if (loader) {\n            loader.abort();\n        }\n    }\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    return instance;\n\n}\nURLLoader.__dashjs_factory_name = 'URLLoader';\n\nconst factory = FactoryMaker.getClassFactory(URLLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport FragmentRequest from './FragmentRequest';\n\nclass HeadRequest extends FragmentRequest {\n    constructor(url) {\n        super(url);\n        this.checkForExistenceOnly = true;\n    }\n}\n\nexport default HeadRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport URLLoader from './net/URLLoader';\nimport HeadRequest from './vo/HeadRequest';\nimport DashJSError from './vo/DashJSError';\nimport FactoryMaker from '../core/FactoryMaker';\n\nfunction FragmentLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const urlUtils = config.urlUtils;\n    const errors = config.errors;\n    const streamId = config.streamId;\n\n    let instance,\n        urlLoader;\n\n    function setup() {\n        urlLoader = URLLoader(context).create({\n            errHandler: config.errHandler,\n            errors: errors,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            urlUtils: urlUtils,\n            constants: Constants,\n            boxParser: config.boxParser,\n            dashConstants: config.dashConstants,\n            requestTimeout: config.settings.get().streaming.fragmentRequestTimeout\n        });\n    }\n\n    function checkForExistence(request) {\n        const report = function (success) {\n            eventBus.trigger(events.CHECK_FOR_EXISTENCE_COMPLETED, { request: request, exists: success }\n            );\n        };\n\n        if (request) {\n            let headRequest = new HeadRequest(request.url);\n            urlLoader.load({\n                request: headRequest,\n                success: function () {\n                    report(true);\n                },\n                error: function () {\n                    report(false);\n                }\n            });\n        } else {\n            report(false);\n        }\n    }\n\n    function load(request) {\n        const report = function (data, error) {\n            eventBus.trigger(events.LOADING_COMPLETED, {\n                request: request,\n                response: data || null,\n                error: error || null,\n                sender: instance\n            });\n        };\n\n        if (request) {\n            urlLoader.load({\n                request: request,\n                progress: function (event) {\n                    eventBus.trigger(events.LOADING_PROGRESS, {\n                        request: request,\n                        stream: event.stream,\n                        streamId\n                    });\n                    if (event.data) {\n                        eventBus.trigger(events.LOADING_DATA_PROGRESS, {\n                            request: request,\n                            response: event.data || null,\n                            error: null,\n                            sender: instance\n                        });\n                    }\n                },\n                success: function (data) {\n                    report(data);\n                },\n                error: function (request, statusText, errorText) {\n                    report(\n                        undefined,\n                        new DashJSError(\n                            errors.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE,\n                            errorText,\n                            statusText\n                        )\n                    );\n                },\n                abort: function (request) {\n                    if (request) {\n                        eventBus.trigger(events.LOADING_ABANDONED, {\n                            mediaType: request.mediaType,\n                            request: request,\n                            sender: instance\n                        });\n                    }\n                }\n            });\n        } else {\n            report(\n                undefined,\n                new DashJSError(\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE,\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE\n                )\n            );\n        }\n    }\n\n    function abort() {\n        if (urlLoader) {\n            urlLoader.abort();\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        checkForExistence: checkForExistence,\n        load: load,\n        abort: abort,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\nexport default FactoryMaker.getClassFactory(FragmentLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction SegmentResponseModifier() {\n\n    let instance;\n\n    function modifyResponseAsync(chunk) {\n        return Promise.resolve(chunk);\n    }\n\n    instance = {\n        modifyResponseAsync\n    };\n\n    return instance;\n}\n\nSegmentResponseModifier.__dashjs_factory_name = 'SegmentResponseModifier';\nexport default FactoryMaker.getSingletonFactory(SegmentResponseModifier);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport DataChunk from '../vo/DataChunk';\nimport FragmentModel from '../models/FragmentModel';\nimport FragmentLoader from '../FragmentLoader';\nimport RequestModifier from '../utils/RequestModifier';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport Errors from '../../core/errors/Errors';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport SegmentResponseModifier from '../utils/SegmentResponseModifier';\n\nfunction FragmentController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const errHandler = config.errHandler;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const debug = Debug(context).getInstance();\n    const segmentResponseModifier = SegmentResponseModifier(context).getInstance();\n    const streamInfo = config.streamInfo;\n\n    let instance,\n        logger,\n        fragmentModels;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getModel(type) {\n        let model = fragmentModels[type];\n        if (!model) {\n            model = FragmentModel(context).create({\n                streamInfo: streamInfo,\n                type: type,\n                dashMetrics: dashMetrics,\n                fragmentLoader: FragmentLoader(context).create({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    errHandler: errHandler,\n                    requestModifier: RequestModifier(context).getInstance(),\n                    settings: config.settings,\n                    boxParser: config.boxParser,\n                    eventBus: eventBus,\n                    events: Events,\n                    errors: Errors,\n                    dashConstants: config.dashConstants,\n                    urlUtils: config.urlUtils,\n                    streamId: getStreamId()\n                }),\n                debug: debug,\n                eventBus: eventBus,\n                events: Events\n            });\n\n            fragmentModels[type] = model;\n        }\n\n        return model;\n    }\n\n    function resetInitialSettings() {\n        for (let model in fragmentModels) {\n            fragmentModels[model].reset();\n        }\n        fragmentModels = {};\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, this);\n        resetInitialSettings();\n    }\n\n    function createDataChunk(bytes, request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.bytes = bytes;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        // Event propagation may have been stopped (see MssHandler)\n        if (!e.sender) return;\n\n        const request = e.request;\n        const bytes = e.response;\n        const isInit = request.isInitializationRequest();\n        const strInfo = request.mediaInfo.streamInfo;\n\n        if (e.error) {\n            if (request.mediaType === Constants.AUDIO || request.mediaType === Constants.VIDEO || (request.mediaType === Constants.TEXT && request.mediaInfo.isFragmented)) {\n                // add service location to blacklist controller - only for audio or video. text should not set errors\n                eventBus.trigger(Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD, { entry: e.request.serviceLocation });\n            }\n        }\n\n        if (!bytes || !strInfo) {\n            logger.warn('No ' + request.mediaType + ' bytes to push or stream is inactive.');\n            return;\n        }\n        const chunk = createDataChunk(bytes, request, streamInfo.id, e.type !== Events.FRAGMENT_LOADING_PROGRESS);\n        segmentResponseModifier.modifyResponseAsync(chunk)\n            .then((modifiedChunk) => {\n                eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED,\n                    {\n                        chunk: modifiedChunk,\n                        request: request\n                    },\n                    { streamId: strInfo.id, mediaType: request.mediaType }\n                );\n            })\n            .catch((e) => {\n                logger.error(e);\n                eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED,\n                    {\n                        chunk: chunk,\n                        request: request\n                    },\n                    { streamId: strInfo.id, mediaType: request.mediaType }\n                );\n            })\n    }\n\n    instance = {\n        getStreamId,\n        getModel,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentController.__dashjs_factory_name = 'FragmentController';\nexport default FactoryMaker.getClassFactory(FragmentController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Thumbnail {\n    constructor() {\n        this.url = null;\n        this.width = null;\n        this.height = null;\n        this.x = null;\n        this.y = null;\n    }\n}\n\nexport default Thumbnail;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass BitrateInfo {\n    constructor() {\n        this.mediaType = null;\n        this.bitrate = null;\n        this.width = null;\n        this.height = null;\n        this.scanType = null;\n        this.qualityIndex = NaN;\n    }\n}\n\nexport default BitrateInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\nimport Thumbnail from '../vo/Thumbnail';\nimport ThumbnailTracks from './ThumbnailTracks';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport {replaceTokenForTemplate, unescapeDollarsInTemplate} from '../../dash/utils/SegmentsUtils';\n\nfunction ThumbnailController(config) {\n\n    const context = this.context;\n    const streamInfo = config.streamInfo;\n\n    let instance,\n        thumbnailTracks;\n\n    function setup() {\n        reset();\n        thumbnailTracks = ThumbnailTracks(context).create({\n            streamInfo: streamInfo,\n            adapter: config.adapter,\n            baseURLController: config.baseURLController,\n            timelineConverter: config.timelineConverter,\n            debug: config.debug,\n            eventBus: config.eventBus,\n            events: config.events,\n            dashConstants: config.dashConstants,\n            dashMetrics: config.dashMetrics,\n            segmentBaseController: config.segmentBaseController\n        });\n    }\n\n    function initialize() {\n        thumbnailTracks.addTracks();\n        const tracks = thumbnailTracks.getTracks();\n\n        if (tracks && tracks.length > 0) {\n            setTrackByIndex(0);\n        }\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function provide(time, callback) {\n\n        if (typeof callback !== 'function') {\n            return;\n        }\n        const track = thumbnailTracks.getCurrentTrack();\n        let offset,\n            request;\n        if (!track || track.segmentDuration <= 0 || time === undefined || time === null) {\n            callback(null);\n            return;\n        }\n\n        request = thumbnailTracks.getThumbnailRequestForTime(time);\n        if (request) {\n            track.segmentDuration = request.duration;\n        }\n\n        offset = time % track.segmentDuration;\n\n        const thumbIndex = Math.floor((offset * track.tilesHor * track.tilesVert) / track.segmentDuration);\n        // Create and return the thumbnail\n        const thumbnail = new Thumbnail();\n\n        thumbnail.width = Math.floor(track.widthPerTile);\n        thumbnail.height = Math.floor(track.heightPerTile);\n        thumbnail.x = Math.floor(thumbIndex % track.tilesHor) * track.widthPerTile;\n        thumbnail.y = Math.floor(thumbIndex / track.tilesHor) * track.heightPerTile;\n\n        if ('readThumbnail' in track) {\n            return track.readThumbnail(time, (url) => {\n                thumbnail.url = url;\n                callback(thumbnail);\n            });\n        } else {\n            if (!request) {\n                const seq = Math.floor(time / track.segmentDuration);\n                thumbnail.url = _buildUrlFromTemplate(track, seq);\n            } else {\n                thumbnail.url = request.url;\n                track.segmentDuration = NaN;\n            }\n            callback(thumbnail);\n        }\n    }\n\n    function _buildUrlFromTemplate(track, seq) {\n        const seqIdx = seq + track.startNumber;\n        let url = replaceTokenForTemplate(track.templateUrl, 'Number', seqIdx);\n        url = replaceTokenForTemplate(url, 'Time', (seqIdx - 1) * track.segmentDuration * track.timescale);\n        url = replaceTokenForTemplate(url, 'Bandwidth', track.bandwidth);\n        return unescapeDollarsInTemplate(url);\n    }\n\n    function setTrackByIndex(index) {\n        thumbnailTracks.setTrackByIndex(index);\n    }\n\n    function getCurrentTrackIndex() {\n        return thumbnailTracks.getCurrentTrackIndex();\n    }\n\n    function getBitrateList() {\n        const tracks = thumbnailTracks.getTracks();\n        let i = 0;\n\n        return tracks.map((t) => {\n            const bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = Constants.IMAGE;\n            bitrateInfo.qualityIndex = i++;\n            bitrateInfo.bitrate = t.bitrate;\n            bitrateInfo.width = t.width;\n            bitrateInfo.height = t.height;\n            return bitrateInfo;\n        });\n    }\n\n    function reset() {\n        if (thumbnailTracks) {\n            thumbnailTracks.reset();\n        }\n    }\n\n    instance = {\n        getStreamId,\n        initialize,\n        provide,\n        setTrackByIndex,\n        getCurrentTrackIndex,\n        getBitrateList,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailController.__dashjs_factory_name = 'ThumbnailController';\nexport default FactoryMaker.getClassFactory(ThumbnailController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    config = config || {};\n    let instance;\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const addBlacklistEventName = config.addBlacklistEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(updateEventName, { entry: entry });\n    }\n\n    function onAddBlackList(e) {\n        add(e.entry);\n    }\n\n    function setup() {\n        if (addBlacklistEventName) {\n            eventBus.on(addBlacklistEventName, onAddBlackList, instance);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    instance = {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport DashConstants from '../dash/constants/DashConstants';\nimport StreamProcessor from './StreamProcessor';\nimport FragmentController from './controllers/FragmentController';\nimport ThumbnailController from './thumbnail/ThumbnailController';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport Debug from '../core/Debug';\nimport Errors from '../core/errors/Errors';\nimport FactoryMaker from '../core/FactoryMaker';\nimport DashJSError from './vo/DashJSError';\nimport BoxParser from './utils/BoxParser';\nimport URLUtils from './utils/URLUtils';\nimport BlacklistController from './controllers/BlacklistController';\n\n\nconst MEDIA_TYPES = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT, Constants.MUXED, Constants.IMAGE];\n\n\nfunction Stream(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    const manifestModel = config.manifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const manifestUpdater = config.manifestUpdater;\n    const adapter = config.adapter;\n    const timelineConverter = config.timelineConverter;\n    const capabilities = config.capabilities;\n    const errHandler = config.errHandler;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const eventController = config.eventController;\n    const mediaController = config.mediaController;\n    const protectionController = config.protectionController;\n    const textController = config.textController;\n    const videoModel = config.videoModel;\n    let streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n\n    let instance,\n        logger,\n        streamProcessors,\n        isInitialized,\n        isActive,\n        hasFinishedBuffering,\n        hasVideoTrack,\n        hasAudioTrack,\n        updateError,\n        isUpdating,\n        fragmentController,\n        thumbnailController,\n        segmentBlacklistController,\n        preloaded,\n        boxParser,\n        debug,\n        isEndedEventSignaled,\n        trackChangedEvents;\n\n    /**\n     * Setup the stream\n     */\n    function setup() {\n        try {\n            debug = Debug(context).getInstance();\n            logger = debug.getLogger(instance);\n            resetInitialSettings();\n\n            boxParser = BoxParser(context).getInstance();\n\n            segmentBlacklistController = BlacklistController(context).create({\n                updateEventName: Events.SEGMENT_LOCATION_BLACKLIST_CHANGED,\n                addBlacklistEventName: Events.SEGMENT_LOCATION_BLACKLIST_ADD\n            });\n\n            fragmentController = FragmentController(context).create({\n                streamInfo: streamInfo,\n                mediaPlayerModel: mediaPlayerModel,\n                dashMetrics: dashMetrics,\n                errHandler: errHandler,\n                settings: settings,\n                boxParser: boxParser,\n                dashConstants: DashConstants,\n                urlUtils: urlUtils\n            });\n\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Initialize the events\n     */\n    function initialize() {\n        registerEvents();\n        registerProtectionEvents();\n        textController.initializeForStream(streamInfo);\n        eventBus.trigger(Events.STREAM_UPDATED, { streamInfo: streamInfo });\n    }\n\n    /**\n     * Register the streaming events\n     */\n    function registerEvents() {\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.on(Events.INBAND_EVENTS, onInbandEvents, instance);\n    }\n\n    /**\n     * Unregister the streaming events\n     */\n    function unRegisterEvents() {\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.off(Events.INBAND_EVENTS, onInbandEvents, instance);\n    }\n\n    /**\n     * Register the protection events\n     */\n    function registerProtectionEvents() {\n        if (protectionController) {\n            eventBus.on(Events.KEY_ERROR, onProtectionError, instance);\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n            eventBus.on(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n            eventBus.on(Events.KEY_STATUSES_CHANGED, onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Unregister the protection events\n     */\n    function unRegisterProtectionEvents() {\n        if (protectionController) {\n            eventBus.off(Events.KEY_ERROR, onProtectionError, instance);\n            eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n            eventBus.off(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n            eventBus.off(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n            eventBus.off(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n            eventBus.off(Events.KEY_STATUSES_CHANGED, onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Returns the stream id\n     * @return {*|null}\n     */\n    function getStreamId() {\n        return streamInfo ? streamInfo.id : null;\n    }\n\n    /**\n     * Activates Stream by re-initializing some of its components\n     * @param {MediaSource} mediaSource\n     * @param {array} previousBufferSinks\n     * @memberof Stream#\n     */\n    function activate(mediaSource, previousBufferSinks) {\n        return new Promise((resolve, reject) => {\n            if (isActive) {\n                resolve(previousBufferSinks);\n                return;\n            }\n\n            if (getPreloaded()) {\n                isActive = true;\n                eventBus.trigger(Events.STREAM_ACTIVATED, {\n                    streamInfo\n                });\n                resolve(previousBufferSinks);\n                return;\n            }\n\n\n            _initializeMedia(mediaSource, previousBufferSinks)\n                .then((bufferSinks) => {\n                    isActive = true;\n                    eventBus.trigger(Events.STREAM_ACTIVATED, {\n                        streamInfo\n                    });\n                    resolve(bufferSinks);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function startPreloading(mediaSource, previousBuffers) {\n        return new Promise((resolve, reject) => {\n\n            if (getPreloaded()) {\n                reject();\n                return;\n            }\n\n            logger.info(`[startPreloading] Preloading next stream with id ${getId()}`);\n            setPreloaded(true);\n\n            _commonMediaInitialization(mediaSource, previousBuffers)\n                .then(() => {\n                    for (let i = 0; i < streamProcessors.length && streamProcessors[i]; i++) {\n                        streamProcessors[i].setExplicitBufferingTime(getStartTime());\n                        streamProcessors[i].getScheduleController().startScheduleTimer();\n                    }\n                    resolve();\n                })\n                .catch(() => {\n                    setPreloaded(false);\n                    reject();\n                });\n        });\n    }\n\n    /**\n     *\n     * @param {object} mediaSource\n     * @param {array} previousBufferSinks\n     * @return {Promise<Array>}\n     * @private\n     */\n    function _initializeMedia(mediaSource, previousBufferSinks) {\n        return _commonMediaInitialization(mediaSource, previousBufferSinks);\n    }\n\n    /**\n     *\n     * @param {object} mediaSource\n     * @param {array} previousBufferSinks\n     * @return {Promise<array>}\n     * @private\n     */\n    function _commonMediaInitialization(mediaSource, previousBufferSinks) {\n        return new Promise((resolve, reject) => {\n            checkConfig();\n\n            isUpdating = true;\n            _addInlineEvents();\n\n\n            let element = videoModel.getElement();\n            const promises = [];\n            MEDIA_TYPES.forEach((mediaType) => {\n                // If we are preloading without a video element we can not start texttrack handling.\n                if (!(mediaType === Constants.TEXT && !mediaSource) && (mediaType !== Constants.VIDEO || (!element || (element && (/^VIDEO$/i).test(element.nodeName))))) {\n                    promises.push(_initializeMediaForType(mediaType, mediaSource));\n                }\n            });\n\n            Promise.all(promises)\n                .then(() => {\n                    return _createBufferSinks(previousBufferSinks)\n                })\n                .then((bufferSinks) => {\n                    isUpdating = false;\n\n                    if (streamProcessors.length === 0) {\n                        const msg = 'No streams to play.';\n                        errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, msg, manifestModel.getValue()));\n                        logger.fatal(msg);\n                    } else {\n                        _checkIfInitializationCompleted();\n                    }\n\n                    if (mediaSource) {\n                        // All mediaInfos for texttracks are added to the TextSourceBuffer by now. We can start creating the tracks\n                        textController.createTracks(streamInfo);\n                    }\n\n                    resolve(bufferSinks);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    /**\n     * We call this function if segments have been preloaded without a video element. Once the video element is attached MSE is available\n     * @param mediaSource\n     * @returns {Promise<unknown>}\n     */\n    function initializeForTextWithMediaSource(mediaSource) {\n        return new Promise((resolve, reject) => {\n            _initializeMediaForType(Constants.TEXT, mediaSource)\n                .then(() => {\n                    return createBufferSinkForText()\n                })\n                .then(() => {\n                    textController.createTracks(streamInfo);\n                    resolve()\n                })\n                .catch((e) => {\n                    reject(e);\n                })\n        })\n    }\n\n    /**\n     * Initialize for a given media type. Creates a corresponding StreamProcessor\n     * @param {string} type\n     * @param {object} mediaSource\n     * @private\n     */\n    function _initializeMediaForType(type, mediaSource) {\n        let allMediaForType = adapter.getAllMediaInfoForType(streamInfo, type);\n        let embeddedMediaInfos = [];\n\n        let mediaInfo = null;\n        let initialMediaInfo;\n\n        if (!allMediaForType || allMediaForType.length === 0) {\n            logger.info('No ' + type + ' data.');\n            return Promise.resolve();\n        }\n\n        if (type === Constants.VIDEO) {\n            hasVideoTrack = true;\n        }\n\n        if (type === Constants.AUDIO) {\n            hasAudioTrack = true;\n        }\n\n        for (let i = 0, ln = allMediaForType.length; i < ln; i++) {\n            mediaInfo = allMediaForType[i];\n\n            if (type === Constants.TEXT && !!mediaInfo.isEmbedded) {\n                textController.addEmbeddedTrack(streamInfo, mediaInfo);\n                embeddedMediaInfos.push(mediaInfo);\n            }\n            if (_isMediaSupported(mediaInfo)) {\n                mediaController.addTrack(mediaInfo);\n            }\n        }\n\n        if (embeddedMediaInfos.length > 0) {\n            mediaController.setInitialMediaSettingsForType(type, streamInfo);\n            textController.addMediaInfosToBuffer(streamInfo, type, embeddedMediaInfos);\n        }\n\n        // Filter out embedded text track before creating StreamProcessor\n        allMediaForType = allMediaForType.filter(mediaInfo => {\n            return !mediaInfo.isEmbedded;\n        });\n        if (allMediaForType.length === 0) {\n            return Promise.resolve();\n        }\n\n        if (type === Constants.IMAGE) {\n            thumbnailController = ThumbnailController(context).create({\n                streamInfo: streamInfo,\n                adapter: adapter,\n                baseURLController: config.baseURLController,\n                timelineConverter: config.timelineConverter,\n                debug: debug,\n                eventBus: eventBus,\n                events: Events,\n                dashConstants: DashConstants,\n                dashMetrics: config.dashMetrics,\n                segmentBaseController: config.segmentBaseController\n            });\n            thumbnailController.initialize();\n            return Promise.resolve();\n        }\n\n        eventBus.trigger(Events.STREAM_INITIALIZING, {\n            streamInfo: streamInfo,\n            mediaInfo: mediaInfo\n        });\n\n        mediaController.setInitialMediaSettingsForType(type, streamInfo);\n\n        let streamProcessor = _createStreamProcessor(allMediaForType, mediaSource);\n\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo.id);\n\n        if (initialMediaInfo) {\n            abrController.updateTopQualityIndex(initialMediaInfo);\n            // In case of mixed fragmented and embedded text tracks, check if initial selected text track is not an embedded track\n            return streamProcessor.selectMediaInfo((type !== Constants.TEXT || !initialMediaInfo.isEmbedded) ? initialMediaInfo : allMediaForType[0]);\n        }\n\n        return Promise.resolve();\n    }\n\n    function _isMediaSupported(mediaInfo) {\n        const type = mediaInfo ? mediaInfo.type : null;\n        let msg;\n\n        if (type === Constants.MUXED) {\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\n            logger.fatal(msg);\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_MULTIPLEXED_CODE, msg, manifestModel.getValue()));\n            return false;\n        }\n\n        if (type === Constants.TEXT || type === Constants.IMAGE) {\n            return true;\n        }\n\n        if (!!mediaInfo.contentProtection && !capabilities.supportsEncryptedMedia()) {\n            errHandler.error(new DashJSError(Errors.CAPABILITY_MEDIAKEYS_ERROR_CODE, Errors.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE));\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Creates the StreamProcessor for a given media type.\n     * @param {array} allMediaForType\n     * @param {object} mediaSource\n     * @private\n     */\n    function _createStreamProcessor(allMediaForType, mediaSource) {\n\n        const mediaInfo = (allMediaForType && allMediaForType.length > 0) ? allMediaForType[0] : null;\n        let fragmentModel = fragmentController.getModel(mediaInfo ? mediaInfo.type : null);\n        const type = mediaInfo ? mediaInfo.type : null;\n        const mimeType = mediaInfo ? mediaInfo.mimeType : null;\n        const isFragmented = mediaInfo ? mediaInfo.isFragmented : null;\n\n        let streamProcessor = StreamProcessor(context).create({\n            streamInfo,\n            type,\n            mimeType,\n            timelineConverter,\n            adapter,\n            manifestModel,\n            mediaPlayerModel,\n            fragmentModel,\n            dashMetrics: config.dashMetrics,\n            baseURLController: config.baseURLController,\n            segmentBaseController: config.segmentBaseController,\n            abrController,\n            playbackController,\n            mediaController,\n            textController,\n            errHandler,\n            settings,\n            boxParser,\n            segmentBlacklistController\n        });\n\n        streamProcessor.initialize(mediaSource, hasVideoTrack, isFragmented);\n        streamProcessors.push(streamProcessor);\n\n        for (let i = 0; i < allMediaForType.length; i++) {\n            streamProcessor.addMediaInfo(allMediaForType[i]);\n        }\n\n        if (type === Constants.TEXT) {\n            textController.addMediaInfosToBuffer(streamInfo, type, allMediaForType, fragmentModel);\n        }\n\n        return streamProcessor;\n    }\n\n    /**\n     * Creates the SourceBufferSink objects for all StreamProcessors\n     * @param {array} previousBuffersSinks\n     * @return {Promise<object>}\n     * @private\n     */\n    function _createBufferSinks(previousBuffersSinks) {\n        return new Promise((resolve) => {\n            const buffers = {};\n            const promises = streamProcessors.map((sp) => {\n                return sp.createBufferSinks(previousBuffersSinks);\n            });\n\n            Promise.all(promises)\n                .then((bufferSinks) => {\n                    bufferSinks.forEach((sink) => {\n                        if (sink) {\n                            buffers[sink.getType()] = sink;\n                        }\n                    });\n                    resolve(buffers);\n                })\n                .catch(() => {\n                    resolve(buffers);\n                });\n        });\n    }\n\n    function createBufferSinkForText() {\n        const sp = _getProcessorByType(Constants.TEXT);\n        if (sp) {\n            return sp.createBufferSinks()\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Partially resets some of the Stream elements. This function is called when preloading of streams is canceled or a stream switch occurs.\n     * @memberof Stream#\n     * @param {boolean} keepBuffers\n     */\n    function deactivate(keepBuffers) {\n        let ln = streamProcessors ? streamProcessors.length : 0;\n        const errored = false;\n        for (let i = 0; i < ln; i++) {\n            let fragmentModel = streamProcessors[i].getFragmentModel();\n            fragmentModel.abortRequests();\n            fragmentModel.resetInitialSettings();\n            streamProcessors[i].reset(errored, keepBuffers);\n        }\n        if (textController) {\n            textController.deactivateStream(streamInfo);\n        }\n        streamProcessors = [];\n        isActive = false;\n        hasFinishedBuffering = false;\n        setPreloaded(false);\n        setIsEndedEventSignaled(false);\n        eventBus.trigger(Events.STREAM_DEACTIVATED, { streamInfo });\n    }\n\n    function getIsActive() {\n        return isActive;\n    }\n\n    function setMediaSource(mediaSource) {\n        return new Promise((resolve, reject) => {\n            const promises = [];\n            for (let i = 0; i < streamProcessors.length;) {\n                if (_isMediaSupported(streamProcessors[i].getMediaInfo())) {\n                    promises.push(streamProcessors[i].setMediaSource(mediaSource));\n                    i++;\n                } else {\n                    streamProcessors[i].reset();\n                    streamProcessors.splice(i, 1);\n                }\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    for (let i = 0; i < streamProcessors.length; i++) {\n                        //Adding of new tracks to a stream processor isn't guaranteed by the spec after the METADATA_LOADED state\n                        //so do this after the buffers are created above.\n                        streamProcessors[i].dischargePreBuffer();\n                    }\n\n                    if (streamProcessors.length === 0) {\n                        const msg = 'No streams to play.';\n                        errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, msg + 'nostreams', manifestModel.getValue()));\n                        logger.fatal(msg);\n                    }\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    reject(e);\n                })\n        })\n    }\n\n    function resetInitialSettings(keepBuffers) {\n        deactivate(keepBuffers);\n        isInitialized = false;\n        hasVideoTrack = false;\n        hasAudioTrack = false;\n        updateError = {};\n        isUpdating = false;\n        isEndedEventSignaled = false;\n        trackChangedEvents = [];\n    }\n\n    function reset(keepBuffers) {\n\n        if (fragmentController) {\n            fragmentController.reset();\n            fragmentController = null;\n        }\n\n        if (abrController && streamInfo) {\n            abrController.clearDataForStream(streamInfo.id);\n        }\n\n        if (segmentBlacklistController) {\n            segmentBlacklistController.reset();\n            segmentBlacklistController = null;\n        }\n\n        resetInitialSettings(keepBuffers);\n\n        streamInfo = null;\n\n        unRegisterEvents();\n\n        unRegisterProtectionEvents();\n\n    }\n\n    function getDuration() {\n        return streamInfo ? streamInfo.duration : NaN;\n    }\n\n    function getIsEndedEventSignaled() {\n        return isEndedEventSignaled;\n    }\n\n    function setIsEndedEventSignaled(value) {\n        isEndedEventSignaled = value;\n    }\n\n    function getStartTime() {\n        return streamInfo ? streamInfo.start : NaN;\n    }\n\n    function getId() {\n        return streamInfo ? streamInfo.id : null;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function getHasAudioTrack() {\n        return hasAudioTrack;\n    }\n\n    function getHasVideoTrack() {\n        return hasVideoTrack;\n    }\n\n    function getThumbnailController() {\n        return thumbnailController;\n    }\n\n    function checkConfig() {\n        if (!videoModel || !abrController) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getBitrateListFor(type) {\n        checkConfig();\n        if (type === Constants.IMAGE) {\n            if (!thumbnailController) {\n                return [];\n            }\n            return thumbnailController.getBitrateList();\n        }\n        const mediaInfo = getMediaInfo(type);\n        return abrController.getBitrateList(mediaInfo);\n    }\n\n    function onProtectionError(event) {\n        if (event.error) {\n            errHandler.error(event.error);\n            logger.fatal(event.error.message);\n        }\n    }\n\n    function prepareTrackChange(e) {\n        if (!isActive || !streamInfo) {\n            return;\n        }\n\n        hasFinishedBuffering = false;\n\n        let mediaInfo = e.newMediaInfo;\n        let manifest = manifestModel.getValue();\n\n        adapter.setCurrentMediaInfo(streamInfo.id, mediaInfo.type, mediaInfo);\n\n        let processor = getProcessorForMediaInfo(mediaInfo);\n        if (!processor) return;\n\n        let currentTime = playbackController.getTime();\n        logger.info('Stream -  Process track changed at current time ' + currentTime);\n\n        // Applies only for MSS streams\n        if (manifest.refreshManifestOnSwitchTrack) {\n            trackChangedEvents.push(e);\n            if (!manifestUpdater.getIsUpdating()) {\n                logger.debug('Stream -  Refreshing manifest for switch track');\n                manifestUpdater.refreshManifest();\n            }\n        } else {\n            processor.selectMediaInfo(mediaInfo)\n                .then(() => {\n                    if (mediaInfo.type === Constants.VIDEO || mediaInfo.type === Constants.AUDIO) {\n                        abrController.updateTopQualityIndex(mediaInfo);\n                    }\n                    processor.prepareTrackSwitch();\n                });\n        }\n    }\n\n    function prepareQualityChange(e) {\n        const processor = _getProcessorByType(e.mediaType);\n\n        if (processor) {\n            processor.prepareQualityChange(e);\n        }\n    }\n\n    function _addInlineEvents() {\n        if (eventController) {\n            const events = adapter.getEventsFor(streamInfo);\n            if (events && events.length > 0) {\n                eventController.addInlineEvents(events, streamInfo.id);\n            }\n        }\n    }\n\n    function _checkIfInitializationCompleted() {\n        const ln = streamProcessors.length;\n        const hasError = !!updateError.audio || !!updateError.video;\n        let error = hasError ? new DashJSError(Errors.DATA_UPDATE_FAILED_ERROR_CODE, Errors.DATA_UPDATE_FAILED_ERROR_MESSAGE) : null;\n\n        for (let i = 0; i < ln; i++) {\n            if (streamProcessors[i].isUpdating() || isUpdating) {\n                return;\n            }\n        }\n\n        if (protectionController) {\n            // Need to check if streamProcessors exists because streamProcessors\n            // could be cleared in case an error is detected while initializing DRM keysystem\n            protectionController.clearMediaInfoArray();\n            for (let i = 0; i < ln && streamProcessors[i]; i++) {\n                const type = streamProcessors[i].getType();\n                const mediaInfo = streamProcessors[i].getMediaInfo();\n                if (type === Constants.AUDIO ||\n                    type === Constants.VIDEO ||\n                    (type === Constants.TEXT && mediaInfo.isFragmented)) {\n                    let mediaInfo = streamProcessors[i].getMediaInfo();\n                    if (mediaInfo) {\n                        protectionController.initializeForMedia(mediaInfo);\n                    }\n                }\n            }\n            protectionController.handleKeySystemFromManifest();\n        }\n\n        if (error) {\n            errHandler.error(error);\n        } else if (!isInitialized) {\n            isInitialized = true;\n            videoModel.waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, () => {\n                eventBus.trigger(Events.STREAM_INITIALIZED, {\n                    streamInfo: streamInfo\n                });\n            })\n        }\n\n    }\n\n    function getMediaInfo(type) {\n        let streamProcessor = null;\n\n        for (let i = 0; i < streamProcessors.length; i++) {\n            streamProcessor = streamProcessors[i];\n\n            if (streamProcessor.getType() === type) {\n                return streamProcessor.getMediaInfo();\n            }\n        }\n\n        return null;\n    }\n\n    function onBufferingCompleted() {\n        let processors = getProcessors();\n        const ln = processors.length;\n\n        if (ln === 0) {\n            logger.warn('onBufferingCompleted - can\\'t trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined');\n            return;\n        }\n\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\n        for (let i = 0; i < ln; i++) {\n            //if audio or video buffer is not buffering completed state, do not send STREAM_BUFFERING_COMPLETED\n            if (!processors[i].isBufferingCompleted() && (processors[i].getType() === Constants.AUDIO || processors[i].getType() === Constants.VIDEO)) {\n                logger.debug('onBufferingCompleted - One streamProcessor has finished but', processors[i].getType(), 'one is not buffering completed');\n                return;\n            }\n        }\n\n        logger.debug('onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED');\n        hasFinishedBuffering = true;\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, { streamInfo: streamInfo }, { streamInfo });\n    }\n\n    function onDataUpdateCompleted(e) {\n        updateError[e.mediaType] = e.error;\n        _checkIfInitializationCompleted();\n    }\n\n    function onInbandEvents(e) {\n        if (eventController) {\n            eventController.addInbandEvents(e.events, streamInfo.id);\n        }\n    }\n\n    function getProcessorForMediaInfo(mediaInfo) {\n        if (!mediaInfo || !mediaInfo.type) {\n            return null;\n        }\n\n        return _getProcessorByType(mediaInfo.type);\n    }\n\n    function _getProcessorByType(type) {\n        if (!type) {\n            return null;\n        }\n\n        let processors = getProcessors();\n\n        return processors.filter(function (processor) {\n            return (processor.getType() === type);\n        })[0];\n    }\n\n    function getProcessors() {\n        let arr = [];\n\n        let type,\n            streamProcessor;\n\n        for (let i = 0; i < streamProcessors.length; i++) {\n            streamProcessor = streamProcessors[i];\n            type = streamProcessor.getType();\n\n            if (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.TEXT) {\n                arr.push(streamProcessor);\n            }\n        }\n\n        return arr;\n    }\n\n    function startScheduleControllers() {\n        const ln = streamProcessors.length;\n        for (let i = 0; i < ln && streamProcessors[i]; i++) {\n            streamProcessors[i].getScheduleController().startScheduleTimer();\n        }\n    }\n\n    function updateData(updatedStreamInfo) {\n        return new Promise((resolve) => {\n            isUpdating = true;\n            streamInfo = updatedStreamInfo;\n\n            if (eventController) {\n                _addInlineEvents();\n            }\n\n            let promises = [];\n            for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n                let streamProcessor = streamProcessors[i];\n                const currentMediaInfo = streamProcessor.getMediaInfo();\n                promises.push(streamProcessor.updateStreamInfo(streamInfo));\n                let allMediaForType = adapter.getAllMediaInfoForType(streamInfo, streamProcessor.getType());\n\n                // Filter out embedded text track before updating media info in  StreamProcessor\n                allMediaForType = allMediaForType.filter(mediaInfo => {\n                    return !mediaInfo.isEmbedded;\n                });\n\n                // Check if AdaptationSet has not been removed in MPD update\n                if (allMediaForType) {\n                    // Remove the current mediaInfo objects before adding the updated ones\n                    streamProcessor.clearMediaInfoArray();\n                    for (let j = 0; j < allMediaForType.length; j++) {\n                        const mInfo = allMediaForType[j];\n                        streamProcessor.addMediaInfo(allMediaForType[j]);\n                        if (adapter.areMediaInfosEqual(currentMediaInfo, mInfo)) {\n                            abrController.updateTopQualityIndex(mInfo);\n                            promises.push(streamProcessor.selectMediaInfo(mInfo))\n                        }\n                    }\n                }\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    promises = [];\n\n                    while (trackChangedEvents.length > 0) {\n                        let trackChangedEvent = trackChangedEvents.pop();\n                        let mediaInfo = trackChangedEvent.newMediaInfo;\n                        let processor = getProcessorForMediaInfo(trackChangedEvent.oldMediaInfo);\n                        if (!processor) return;\n                        promises.push(processor.prepareTrackSwitch());\n                        promises.push(processor.selectMediaInfo(mediaInfo));\n                    }\n\n                    return Promise.all(promises)\n                })\n                .then(() => {\n                    isUpdating = false;\n                    _checkIfInitializationCompleted();\n                    eventBus.trigger(Events.STREAM_UPDATED, { streamInfo: streamInfo });\n                    resolve();\n                })\n\n        })\n    }\n\n    function isMediaCodecCompatible(newStream, previousStream = null) {\n        return compareCodecs(newStream, Constants.VIDEO, previousStream) && compareCodecs(newStream, Constants.AUDIO, previousStream);\n    }\n\n    function isProtectionCompatible(newStream) {\n        if (!newStream) {\n            return true;\n        }\n        return _compareProtectionConfig(Constants.VIDEO, newStream) && _compareProtectionConfig(Constants.AUDIO, newStream);\n    }\n\n    function _compareProtectionConfig(type, newStream) {\n        const currentStreamInfo = getStreamInfo();\n        const newStreamInfo = newStream.getStreamInfo();\n\n        if (!newStreamInfo || !currentStreamInfo) {\n            return true;\n        }\n\n        const newAdaptation = adapter.getAdaptationForType(newStreamInfo.index, type, newStreamInfo);\n        const currentAdaptation = adapter.getAdaptationForType(currentStreamInfo.index, type, currentStreamInfo);\n\n        if (!newAdaptation || !currentAdaptation) {\n            // If there is no adaptation for neither the old or the new stream they're compatible\n            return !newAdaptation && !currentAdaptation;\n        }\n\n        // If the current period is unencrypted and the upcoming one is encrypted we need to reset sourcebuffers.\n        return !(!_isAdaptationDrmProtected(currentAdaptation) && _isAdaptationDrmProtected(newAdaptation));\n    }\n\n    function _isAdaptationDrmProtected(adaptation) {\n\n        if (!adaptation) {\n            // If there is no adaptation for neither the old or the new stream they're compatible\n            return false;\n        }\n\n        // If the current period is unencrypted and the upcoming one is encrypted we need to reset sourcebuffers.\n        return !!(adaptation.ContentProtection || (adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 && adaptation.Representation_asArray[0].ContentProtection));\n    }\n\n    function compareCodecs(newStream, type, previousStream = null) {\n        if (!newStream || !newStream.hasOwnProperty('getStreamInfo')) {\n            return false;\n        }\n        const newStreamInfo = newStream.getStreamInfo();\n        const currentStreamInfo = previousStream ? previousStream.getStreamInfo() : getStreamInfo();\n\n        if (!newStreamInfo || !currentStreamInfo) {\n            return false;\n        }\n\n        const newAdaptation = adapter.getAdaptationForType(newStreamInfo.index, type, newStreamInfo);\n        const currentAdaptation = adapter.getAdaptationForType(currentStreamInfo.index, type, currentStreamInfo);\n\n        if (!newAdaptation || !currentAdaptation) {\n            // If there is no adaptation for neither the old or the new stream they're compatible\n            return !newAdaptation && !currentAdaptation;\n        }\n\n        const sameMimeType = newAdaptation && currentAdaptation && newAdaptation.mimeType === currentAdaptation.mimeType;\n        const oldCodecs = currentAdaptation.Representation_asArray.map((representation) => {\n            return representation.codecs;\n        });\n\n        const newCodecs = newAdaptation.Representation_asArray.map((representation) => {\n            return representation.codecs;\n        });\n\n        const codecMatch = newCodecs.some((newCodec) => {\n            return oldCodecs.indexOf(newCodec) > -1;\n        });\n\n        const partialCodecMatch = newCodecs.some((newCodec) => oldCodecs.some((oldCodec) => capabilities.codecRootCompatibleWithCodec(oldCodec, newCodec)));\n        return codecMatch || (partialCodecMatch && sameMimeType);\n    }\n\n    function setPreloaded(value) {\n        preloaded = value;\n    }\n\n    function getPreloaded() {\n        return preloaded;\n    }\n\n    function getHasFinishedBuffering() {\n        return hasFinishedBuffering;\n    }\n\n    function getAdapter() {\n        return adapter;\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        activate,\n        deactivate,\n        getIsActive,\n        getDuration,\n        getStartTime,\n        getId,\n        getStreamInfo,\n        getHasAudioTrack,\n        getHasVideoTrack,\n        startPreloading,\n        initializeForTextWithMediaSource,\n        getThumbnailController,\n        getBitrateListFor,\n        updateData,\n        reset,\n        getProcessors,\n        setMediaSource,\n        isMediaCodecCompatible,\n        isProtectionCompatible,\n        getPreloaded,\n        getIsEndedEventSignaled,\n        setIsEndedEventSignaled,\n        getAdapter,\n        getHasFinishedBuffering,\n        setPreloaded,\n        startScheduleControllers,\n        prepareTrackChange,\n        prepareQualityChange\n    };\n\n    setup();\n    return instance;\n}\n\nStream.__dashjs_factory_name = 'Stream';\nexport default FactoryMaker.getClassFactory(Stream);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport {HTTPRequest} from '../../streaming/vo/metrics/HTTPRequest';\n\nclass ContentSteeringRequest {\n    constructor(url) {\n        this.url = url || null;\n        this.type = HTTPRequest.CONTENT_STEERING_TYPE;\n        this.responseType = 'json';\n    }\n}\n\nexport default ContentSteeringRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ContentSteeringResponse {\n    constructor() {\n        this.version = null;\n        this.ttl = 300;\n        this.reloadUri = null;\n        this.pathwayPriority = [];\n        this.pathwayClones = [];\n    }\n}\n\nexport default ContentSteeringResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport URLLoader from '../../streaming/net/URLLoader';\nimport Errors from '../../core/errors/Errors';\nimport ContentSteeringRequest from '../vo/ContentSteeringRequest';\nimport ContentSteeringResponse from '../vo/ContentSteeringResponse';\nimport DashConstants from '../constants/DashConstants';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport BaseURL from '../vo/BaseURL';\nimport MpdLocation from '../vo/MpdLocation';\nimport Utils from '../../core/Utils.js';\n\nconst QUERY_PARAMETER_KEYS = {\n    THROUGHPUT: '_DASH_throughput',\n    PATHWAY: '_DASH_pathway',\n    URL: 'url'\n};\n\nconst THROUGHPUT_SAMPLES = 4;\n\nfunction ContentSteeringController() {\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        currentSteeringResponseData,\n        serviceLocationList,\n        throughputList,\n        nextRequestTimer,\n        urlLoader,\n        errHandler,\n        dashMetrics,\n        mediaPlayerModel,\n        manifestModel,\n        requestModifier,\n        serviceDescriptionController,\n        eventBus,\n        adapter;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.requestModifier) {\n            requestModifier = config.requestModifier;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.eventBus) {\n            eventBus = config.eventBus;\n        }\n    }\n\n    /**\n     * Initialize the steering controller by instantiating classes and registering observer callback\n     */\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler,\n            dashMetrics,\n            mediaPlayerModel,\n            requestModifier,\n            errors: Errors\n        });\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_STARTED, _onFragmentLoadingStarted, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADING_STARTED, _onManifestLoadingStarted, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADING_FINISHED, _onManifestLoadingFinished, instance);\n        eventBus.on(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, _onThroughputMeasurementStored, instance);\n\n    }\n\n    /**\n     * When loading of a fragment starts we store its serviceLocation in our list\n     * @param {object} e\n     * @private\n     */\n    function _onFragmentLoadingStarted(e) {\n        _addToServiceLocationList(e, 'baseUrl');\n    }\n\n    /**\n     * When loading of a manifest starts we store its serviceLocation in our list\n     * @param {object} e\n     * @private\n     */\n    function _onManifestLoadingStarted(e) {\n        _addToServiceLocationList(e, 'location')\n    }\n\n    /**\n     * Basic throughput calculation for manifest requests\n     * @param {object} e\n     * @private\n     */\n    function _onManifestLoadingFinished(e) {\n        if (!e || !e.request || !e.request.serviceLocation || !e.request.requestStartDate || !e.request.requestEndDate || isNaN(e.request.bytesTotal)) {\n            return;\n        }\n\n        const serviceLocation = e.request.serviceLocation;\n        const elapsedTime = e.request.requestEndDate.getTime() - e.request.requestStartDate.getTime();\n        const throughput = parseInt((((e.request.bytesTotal * 8) / elapsedTime) * 1000)) // bit/s\n\n        _storeThroughputForServiceLocation(serviceLocation, throughput);\n    }\n\n    /**\n     * When a throughput measurement for fragments was stored in ThroughputHistory we save it as well\n     * @param {object} e\n     * @private\n     */\n    function _onThroughputMeasurementStored(e) {\n        if (!e || !e.httpRequest || !e.httpRequest._serviceLocation || isNaN(e.throughput)) {\n            return;\n        }\n        const serviceLocation = e.httpRequest._serviceLocation;\n        const throughput = e.throughput * 1000;\n\n        _storeThroughputForServiceLocation(serviceLocation, throughput);\n    }\n\n    /**\n     * Helper function to store a throughput value from the corresponding serviceLocation\n     * @param {string} serviceLocation\n     * @param {number} throughput\n     * @private\n     */\n    function _storeThroughputForServiceLocation(serviceLocation, throughput) {\n        if (!throughputList[serviceLocation]) {\n            throughputList[serviceLocation] = [];\n        }\n        throughputList[serviceLocation].push(throughput)\n        if (throughputList[serviceLocation].length > THROUGHPUT_SAMPLES) {\n            throughputList[serviceLocation].shift();\n        }\n    }\n\n    /**\n     * Adds a new service location entry to our list\n     * @param {object} e\n     * @param {string} type\n     * @private\n     */\n    function _addToServiceLocationList(e, type) {\n        if (e && e.request && e.request.serviceLocation) {\n            const serviceLocation = e.request.serviceLocation;\n            if (serviceLocationList[type].all.indexOf(serviceLocation) === -1) {\n                serviceLocationList[type].all.push(serviceLocation)\n            }\n            serviceLocationList[type].current = serviceLocation;\n        }\n    }\n\n    /**\n     * Query DashAdapter and Service Description Controller to get the steering information defined in the manifest\n     * @returns {object}\n     */\n    function getSteeringDataFromManifest() {\n        const manifest = manifestModel.getValue()\n        let contentSteeringData = adapter.getContentSteering(manifest);\n\n        if (!contentSteeringData) {\n            contentSteeringData = serviceDescriptionController.getServiceDescriptionSettings().contentSteering;\n        }\n\n        return contentSteeringData;\n    }\n\n    /**\n     * Should query steering server prior to playback start\n     * @returns {boolean}\n     */\n    function shouldQueryBeforeStart() {\n        const steeringDataFromManifest = getSteeringDataFromManifest();\n        return !!steeringDataFromManifest && steeringDataFromManifest.queryBeforeStart;\n    }\n\n    /**\n     * Load the steering data from the steering server\n     * @returns {Promise}\n     */\n    function loadSteeringData() {\n        return new Promise((resolve) => {\n            try {\n                const steeringDataFromManifest = getSteeringDataFromManifest();\n                if (!steeringDataFromManifest || !steeringDataFromManifest.serverUrl) {\n                    resolve();\n                    return;\n                }\n\n                const url = _getSteeringServerUrl(steeringDataFromManifest);\n                const request = new ContentSteeringRequest(url);\n                urlLoader.load({\n                    request: request,\n                    success: (data) => {\n                        _handleSteeringResponse(data);\n                        eventBus.trigger(MediaPlayerEvents.CONTENT_STEERING_REQUEST_COMPLETED, {\n                            currentSteeringResponseData,\n                            url\n                        });\n                        resolve();\n                    },\n                    error: (e, error, statusText, response) => {\n                        _handleSteeringResponseError(e, response);\n                        resolve(e);\n                    },\n                    complete: () => {\n                        // Clear everything except for the current entry\n                        serviceLocationList.baseUrl.all = _getClearedServiceLocationListAfterSteeringRequest(serviceLocationList.baseUrl);\n                        serviceLocationList.location.all = _getClearedServiceLocationListAfterSteeringRequest(serviceLocationList.location);\n                    }\n                });\n            } catch (e) {\n                resolve(e);\n            }\n        })\n    }\n\n    /**\n     * Return the cleared data of our serviceLocationList after the steering request was completed\n     * @param {object} data\n     * @returns {Object[]}\n     * @private\n     */\n    function _getClearedServiceLocationListAfterSteeringRequest(data) {\n        if (!data.all || data.all.length === 0 || !data.current) {\n            return [];\n        }\n        return data.all.filter((entry) => {\n            return entry === data.current;\n        })\n    }\n\n    /**\n     * Returns the adjusted steering server url enhanced by pathway and throughput parameter\n     * @param {object} steeringDataFromManifest\n     * @returns {string}\n     * @private\n     */\n    function _getSteeringServerUrl(steeringDataFromManifest) {\n        let url = steeringDataFromManifest.serverUrl;\n        if (currentSteeringResponseData && currentSteeringResponseData.reloadUri) {\n            if (urlUtils.isRelative(currentSteeringResponseData.reloadUri)) {\n                url = urlUtils.resolve(currentSteeringResponseData.reloadUri, steeringDataFromManifest.serverUrl);\n            } else {\n                url = currentSteeringResponseData.reloadUri;\n            }\n        }\n\n        const additionalQueryParameter = [];\n\n\n        const serviceLocations = serviceLocationList.baseUrl.all.concat(serviceLocationList.location.all);\n        if (serviceLocations.length > 0) {\n\n            // Derive throughput for each service Location\n            const data = serviceLocations.map((serviceLocation) => {\n                const throughput = _calculateThroughputForServiceLocation(serviceLocation);\n                return {\n                    serviceLocation,\n                    throughput\n                }\n            })\n\n            // Sort in descending order to put all elements without throughput (-1) in the end\n            data.sort((a, b) => {\n                return b.throughput - a.throughput\n            })\n\n            let pathwayString = '';\n            let throughputString = '';\n\n            data.forEach((entry, index) => {\n                if (index !== 0) {\n                    pathwayString = `${pathwayString},`;\n                    if (entry.throughput > -1) {\n                        throughputString = `${throughputString},`;\n                    }\n                }\n                pathwayString = `${pathwayString}${entry.serviceLocation}`;\n                if (entry.throughput > -1) {\n                    throughputString = `${throughputString}${entry.throughput}`;\n                }\n            })\n\n            additionalQueryParameter.push({\n                key: QUERY_PARAMETER_KEYS.PATHWAY,\n                value: `\"${pathwayString}\"`\n            });\n            additionalQueryParameter.push({\n                key: QUERY_PARAMETER_KEYS.THROUGHPUT,\n                value: throughputString\n            });\n        }\n\n        url = Utils.addAditionalQueryParameterToUrl(url, additionalQueryParameter);\n        return url;\n    }\n\n    /**\n     * Calculate the arithmetic mean of the last throughput samples\n     * @param {string} serviceLocation\n     * @returns {number}\n     * @private\n     */\n    function _calculateThroughputForServiceLocation(serviceLocation) {\n        if (!serviceLocation || !throughputList[serviceLocation] || throughputList[serviceLocation].length === 0) {\n            return -1;\n        }\n\n        const throughput = throughputList[serviceLocation].reduce((acc, curr) => {\n            return acc + curr;\n        }) / throughputList[serviceLocation].length;\n\n        return parseInt(throughput);\n    }\n\n\n    /**\n     * Parse the steering response and create instance of model ContentSteeringResponse\n     * @param {object} data\n     * @private\n     */\n    function _handleSteeringResponse(data) {\n        if (!data || !data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION] || parseInt(data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION]) !== 1) {\n            return;\n        }\n\n        // Update the data for other classes to use\n        currentSteeringResponseData = new ContentSteeringResponse();\n        currentSteeringResponseData.version = data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION];\n\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.TTL] && !isNaN(data[DashConstants.CONTENT_STEERING_RESPONSE.TTL])) {\n            currentSteeringResponseData.ttl = data[DashConstants.CONTENT_STEERING_RESPONSE.TTL];\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.RELOAD_URI]) {\n            currentSteeringResponseData.reloadUri = data[DashConstants.CONTENT_STEERING_RESPONSE.RELOAD_URI]\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY]) {\n            currentSteeringResponseData.pathwayPriority = data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY]\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES]) {\n            currentSteeringResponseData.pathwayClones = data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES]\n            currentSteeringResponseData.pathwayClones = currentSteeringResponseData.pathwayClones.filter((pathwayClone) => {\n                return _isValidPathwayClone(pathwayClone);\n            })\n        }\n\n        _startSteeringRequestTimer();\n    }\n\n    /**\n     * Checks if object is a valid PathwayClone\n     * @param {object} pathwayClone\n     * @returns {boolean}\n     * @private\n     */\n    function _isValidPathwayClone(pathwayClone) {\n        return pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.BASE_ID]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.ID]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.HOST]\n    }\n\n    /**\n     * Returns synthesized BaseURL elements based on Pathway Cloning\n     * @param {BaseURL[]}referenceElements\n     * @returns {BaseURL[]}\n     */\n    function getSynthesizedBaseUrlElements(referenceElements) {\n        try {\n            const synthesizedElements = _getSynthesizedElements(referenceElements);\n\n            return synthesizedElements.map((element) => {\n                const synthesizedBaseUrl = new BaseURL(element.synthesizedUrl, element.serviceLocation)\n                synthesizedBaseUrl.queryParams = element.queryParams;\n                synthesizedBaseUrl.dvb_priority = element.reference.dvb_priority;\n                synthesizedBaseUrl.dvb_weight = element.reference.dvb_weight;\n                synthesizedBaseUrl.availabilityTimeOffset = element.reference.availabilityTimeOffset;\n                synthesizedBaseUrl.availabilityTimeComplete = element.reference.availabilityTimeComplete;\n\n                return synthesizedBaseUrl;\n            })\n\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Returns synthesized Location elements based on Pathway Cloning\n     * @param {MpdLocation[]} referenceElements\n     * @returns {MpdLocation[]}\n     */\n    function getSynthesizedLocationElements(referenceElements) {\n        try {\n            const synthesizedElements = _getSynthesizedElements(referenceElements);\n\n            return synthesizedElements.map((element) => {\n                const synthesizedLocation = new MpdLocation(element.synthesizedUrl, element.serviceLocation)\n                synthesizedLocation.queryParams = element.queryParams;\n\n                return synthesizedLocation;\n            })\n\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Helper function to synthesize elements\n     * @param {array} referenceElements\n     * @returns {array}\n     * @private\n     */\n    function _getSynthesizedElements(referenceElements) {\n        try {\n            const synthesizedElements = [];\n\n            if (!referenceElements || referenceElements.length === 0 || !currentSteeringResponseData || !currentSteeringResponseData.pathwayClones || currentSteeringResponseData.pathwayClones.length === 0) {\n                return synthesizedElements;\n            }\n\n            currentSteeringResponseData.pathwayClones.forEach((pathwayClone) => {\n                let baseElements = referenceElements.filter((source) => {\n                    return pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.BASE_ID] === source.serviceLocation;\n                })\n                let reference = null;\n                if (baseElements && baseElements.length > 0) {\n                    reference = baseElements[0];\n                }\n                if (reference) {\n                    const referenceUrl = new URL(reference.url);\n                    let host = pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.HOST];\n                    host = Utils.stringHasProtocol(host) ? host : `${referenceUrl.protocol}//${host}`;\n                    const synthesizedElement =\n                        {\n                            synthesizedUrl: `${host}${referenceUrl.pathname}`,\n                            serviceLocation: pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.ID],\n                            queryParams: pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.PARAMS],\n                            reference\n                        };\n\n                    synthesizedElements.push(synthesizedElement);\n                }\n            });\n\n            return synthesizedElements;\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Start timeout for next steering request\n     * @private\n     */\n    function _startSteeringRequestTimer() {\n        // Start timer for next request\n        if (currentSteeringResponseData && currentSteeringResponseData.ttl && !isNaN(currentSteeringResponseData.ttl)) {\n            if (nextRequestTimer) {\n                clearTimeout(nextRequestTimer);\n            }\n            nextRequestTimer = setTimeout(() => {\n                loadSteeringData();\n            }, currentSteeringResponseData.ttl * 1000);\n        }\n    }\n\n    /**\n     * Stop timeout for next steering request\n     */\n    function stopSteeringRequestTimer() {\n        if (nextRequestTimer) {\n            clearTimeout(nextRequestTimer);\n        }\n        nextRequestTimer = null;\n    }\n\n    /**\n     * Handle errors that occured when querying the steering server\n     * @param {object} e\n     * @param {object} response\n     * @private\n     */\n    function _handleSteeringResponseError(e, response) {\n        try {\n            logger.warn(`Error fetching data from content steering server`, e);\n            const statusCode = response.status;\n\n            switch (statusCode) {\n                // 410 response code. Stop steering\n                case 410:\n                    break;\n                // 429 Too Many Requests. Replace existing TTL value with Retry-After header if present\n                case 429:\n                    const retryAfter = response && response.getResponseHeader ? response.getResponseHeader('retry-after') : null;\n                    if (retryAfter !== null) {\n                        if (!currentSteeringResponseData) {\n                            currentSteeringResponseData = {};\n                        }\n                        currentSteeringResponseData.ttl = parseInt(retryAfter);\n                    }\n                    _startSteeringRequestTimer();\n                    break;\n                default:\n                    _startSteeringRequestTimer();\n                    break;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Returns the currentSteeringResponseData\n     * @returns {ContentSteeringResponse}\n     */\n    function getCurrentSteeringResponseData() {\n        return currentSteeringResponseData;\n    }\n\n    function reset() {\n        _resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_STARTED, _onFragmentLoadingStarted, instance);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADING_STARTED, _onManifestLoadingStarted, instance);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADING_FINISHED, _onManifestLoadingFinished, instance);\n        eventBus.off(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, _onThroughputMeasurementStored, instance);\n    }\n\n    function _resetInitialSettings() {\n        currentSteeringResponseData = null;\n        throughputList = {};\n        serviceLocationList = {\n            baseUrl: {\n                current: null,\n                all: []\n            },\n            location: {\n                current: null,\n                all: []\n            }\n        };\n        stopSteeringRequestTimer()\n    }\n\n\n    instance = {\n        reset,\n        setConfig,\n        loadSteeringData,\n        getCurrentSteeringResponseData,\n        shouldQueryBeforeStart,\n        getSteeringDataFromManifest,\n        stopSteeringRequestTimer,\n        getSynthesizedBaseUrlElements,\n        getSynthesizedLocationElements,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nContentSteeringController.__dashjs_factory_name = 'ContentSteeringController';\nexport default FactoryMaker.getSingletonFactory(ContentSteeringController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nimport Events from '../../core/events/Events';\nimport BlacklistController from '../controllers/BlacklistController';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Settings from '../../core/Settings';\nimport ContentSteeringController from '../../dash/controllers/ContentSteeringController';\n\nfunction LocationSelector() {\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        blacklistController,\n        contentSteeringController;\n\n    function setup() {\n        blacklistController = BlacklistController(context).create({\n            updateEventName: Events.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED,\n            addBlacklistEventName: Events.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD\n        });\n        contentSteeringController = ContentSteeringController(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.blacklistController) {\n            blacklistController = config.blacklistController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n    }\n\n    /**\n     *\n     * @param {MpdLocation[]} mpdLocations\n     * @returns {*}\n     */\n    function select(mpdLocations) {\n        if (!mpdLocations || mpdLocations.length === 0) {\n            return null;\n        }\n\n        let mpdLocation = null;\n        if (settings.get().streaming.applyContentSteering) {\n            mpdLocation = _selectByContentSteering(mpdLocations)\n        }\n\n        if (!mpdLocation) {\n            mpdLocation = _selectByDefault(mpdLocations);\n        }\n\n        return mpdLocation;\n    }\n\n    function _selectByContentSteering(mpdLocations) {\n        // Search in the response data of the steering server\n        const currentSteeringResponseData = contentSteeringController.getCurrentSteeringResponseData();\n        if (currentSteeringResponseData && currentSteeringResponseData.pathwayPriority && currentSteeringResponseData.pathwayPriority.length > 0) {\n            return _findMpdLocation(currentSteeringResponseData.pathwayPriority, mpdLocations);\n        }\n\n        return null;\n    }\n\n    function _findMpdLocation(pathwayPriority = [], mpdLocations = []) {\n        let i = 0;\n        let target = null;\n        while (i < pathwayPriority.length) {\n            const curr = pathwayPriority[i];\n            const idx = mpdLocations.findIndex((elem) => {\n                return elem.serviceLocation && elem.serviceLocation === curr;\n            })\n            if (idx !== -1 && !blacklistController.contains(mpdLocations[idx].serviceLocation)) {\n                target = mpdLocations[idx]\n                break;\n            }\n            i += 1;\n        }\n        return target;\n    }\n\n    function _selectByDefault(mpdLocations) {\n        return mpdLocations[0];\n    }\n\n    function reset() {\n        blacklistController.reset();\n    }\n\n    instance = {\n        select,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nLocationSelector.__dashjs_factory_name = 'LocationSelector';\nexport default FactoryMaker.getClassFactory(LocationSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport Errors from '../core/errors/Errors';\nimport DashConstants from '../dash/constants/DashConstants';\nimport URLUtils from './utils/URLUtils';\nimport LocationSelector from './utils/LocationSelector';\n\nfunction ManifestUpdater() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        refreshDelay,\n        refreshTimer,\n        isPaused,\n        isStopped,\n        isUpdating,\n        manifestLoader,\n        manifestModel,\n        locationSelector,\n        adapter,\n        errHandler,\n        contentSteeringController,\n        settings;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        locationSelector = LocationSelector(context).create();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.locationSelector) {\n            locationSelector = config.locationSelector;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n    }\n\n    function initialize() {\n        resetInitialSettings();\n\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n    }\n\n    function setManifest(manifest) {\n        update(manifest);\n    }\n\n    function resetInitialSettings() {\n        refreshDelay = NaN;\n        isUpdating = false;\n        isPaused = true;\n        isStopped = false;\n        stopManifestRefreshTimer();\n    }\n\n    function reset() {\n\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n\n        resetInitialSettings();\n    }\n\n    function stopManifestRefreshTimer() {\n        if (refreshTimer !== null) {\n            clearTimeout(refreshTimer);\n            refreshTimer = null;\n        }\n    }\n\n    function startManifestRefreshTimer(delay) {\n        stopManifestRefreshTimer();\n\n        if (isStopped) {\n            return;\n        }\n\n        if (isNaN(delay) && !isNaN(refreshDelay)) {\n            delay = refreshDelay * 1000;\n        }\n\n        if (!isNaN(delay)) {\n            logger.debug('Refresh manifest in ' + delay + ' milliseconds.');\n            refreshTimer = setTimeout(onRefreshTimer, delay);\n        }\n    }\n\n    function refreshManifest(ignorePatch = false) {\n        isUpdating = true;\n        const manifest = manifestModel.getValue();\n\n        // default to the original url in the manifest\n        let url = manifest.url;\n\n        // Check for PatchLocation and Location alternatives\n        let serviceLocation = null;\n        const availablePatchLocations = adapter.getPatchLocation(manifest);\n        const patchLocation = locationSelector.select(availablePatchLocations);\n        let queryParams = null;\n        if (patchLocation && !ignorePatch) {\n            url = patchLocation.url;\n            serviceLocation = patchLocation.serviceLocation;\n            queryParams = patchLocation.queryParams;\n        } else {\n            const availableMpdLocations = _getAvailableMpdLocations(manifest);\n            const mpdLocation = locationSelector.select(availableMpdLocations);\n            if (mpdLocation) {\n                url = mpdLocation.url;\n                serviceLocation = mpdLocation.serviceLocation;\n                queryParams = mpdLocation.queryParams;\n            }\n        }\n\n        // if one of the alternatives was relative, convert to absolute\n        if (urlUtils.isRelative(url)) {\n            url = urlUtils.resolve(url, manifest.url);\n        }\n\n        manifestLoader.load(url, serviceLocation, queryParams);\n    }\n\n    function _getAvailableMpdLocations(manifest) {\n        const manifestLocations = adapter.getLocation(manifest);\n        const synthesizedElements = contentSteeringController.getSynthesizedLocationElements(manifestLocations);\n\n        return manifestLocations.concat(synthesizedElements);\n    }\n\n    function update(manifest) {\n        if (!manifest) {\n            // successful update with no content implies existing manifest remains valid\n            manifest = manifestModel.getValue();\n\n            // override load time to avoid invalid latency tracking and ensure update cadence\n            manifest.loadedTime = new Date();\n        } else if (adapter.getIsPatch(manifest)) {\n            // with patches the in-memory manifest is our base\n            let patch = manifest;\n            manifest = manifestModel.getValue();\n\n            // check for patch validity\n            let isPatchValid = adapter.isPatchValid(manifest, patch);\n            let patchSuccessful = isPatchValid;\n\n            if (isPatchValid) {\n                // grab publish time before update\n                let publishTime = adapter.getPublishTime(manifest);\n\n                // apply validated patch to manifest\n                patchSuccessful = adapter.applyPatchToManifest(manifest, patch);\n\n                // get the updated publish time\n                let updatedPublishTime = adapter.getPublishTime(manifest);\n\n                // ensure the patch properly updated the in-memory publish time\n                patchSuccessful = publishTime.getTime() != updatedPublishTime.getTime();\n            }\n\n            // if the patch failed to apply, force a full manifest refresh\n            if (!patchSuccessful) {\n                logger.debug('Patch provided is invalid, performing full manifest refresh');\n                refreshManifest(true);\n                return;\n            }\n\n            // override load time to avoid invalid latency tracking and ensure update cadence\n            manifest.loadedTime = new Date();\n        }\n\n        // See DASH-IF IOP v4.3 section 4.6.4 \"Transition Phase between Live and On-Demand\"\n        // Stop manifest update, ignore static manifest and signal end of dynamic stream to detect end of stream\n        if (manifestModel.getValue() && manifestModel.getValue().type === DashConstants.DYNAMIC && manifest.type === DashConstants.STATIC) {\n            eventBus.trigger(Events.DYNAMIC_TO_STATIC);\n            isUpdating = false;\n            isStopped = true;\n            return;\n        }\n\n        manifestModel.setValue(manifest);\n\n        const date = new Date();\n        const latencyOfLastUpdate = (date.getTime() - manifest.loadedTime.getTime()) / 1000;\n        refreshDelay = adapter.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n        // setTimeout uses a 32 bit number to store the delay. Any number greater than it\n        // will cause event associated with setTimeout to trigger immediately\n        if (refreshDelay * 1000 > 0x7FFFFFFF) {\n            refreshDelay = 0x7FFFFFFF / 1000;\n        }\n        eventBus.trigger(Events.MANIFEST_UPDATED, { manifest: manifest });\n        logger.info('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\n\n        if (!isPaused) {\n            startManifestRefreshTimer();\n        }\n    }\n\n    function onRefreshTimer() {\n        if (isPaused) {\n            return;\n        }\n        if (isUpdating) {\n            startManifestRefreshTimer(settings.get().streaming.manifestUpdateRetryInterval);\n            return;\n        }\n        refreshManifest();\n    }\n\n    function onManifestLoaded(e) {\n        if (!e.error) {\n            update(e.manifest);\n        } else if (e.error.code === Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE) {\n            errHandler.error(e.error);\n        }\n    }\n\n    function onPlaybackStarted(/*e*/) {\n        isPaused = false;\n        startManifestRefreshTimer();\n    }\n\n    function onPlaybackPaused(/*e*/) {\n        isPaused = !settings.get().streaming.scheduling.scheduleWhilePaused;\n\n        if (isPaused) {\n            stopManifestRefreshTimer();\n        }\n    }\n\n    function onStreamsComposed(/*e*/) {\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\n        isUpdating = false;\n    }\n\n    function getIsUpdating() {\n        return isUpdating;\n    }\n\n    instance = {\n        initialize: initialize,\n        setManifest: setManifest,\n        refreshManifest: refreshManifest,\n        getIsUpdating: getIsUpdating,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\nexport default FactoryMaker.getClassFactory(ManifestUpdater);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './../vo/DashJSError';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport EventBus from './../../core/EventBus';\nimport Events from './../../core/events/Events';\nimport Errors from './../../core/errors/Errors';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport URLUtils from '../utils/URLUtils';\n\nconst HTTP_TIMEOUT_MS = 5000;\nconst DEFAULT_MAXIMUM_ALLOWED_DRIFT = 100;\nconst DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS_ADJUSTMENT_FACTOR = 2;\nconst DEFAULT_BACKGROUND_ATTEMPTS = 2;\nconst DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS = 30;\nconst DEFAULT_MINIMUM_TIME_BETWEEN_BACKGROUND_SYNC_ATTEMPTS = 30;\nconst DEFAULT_MAXIMUM_TIME_BETWEEN_SYNC = 600;\nconst DEFAULT_MINIMUM_TIME_BETWEEN_SYNC = 2;\n\nfunction TimeSyncController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        isSynchronizing,\n        isBackgroundSynchronizing,\n        settings,\n        handlers,\n        dashMetrics,\n        backgroundSyncTimeOffsets,\n        timingSources,\n        timeOfLastSync,\n        timeOfLastBackgroundSync,\n        lastOffset,\n        lastTimingSource,\n        internalTimeBetweenSyncAttempts,\n        errHandler,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        eventBus.on(Events.ATTEMPT_BACKGROUND_SYNC, _onAttemptBackgroundSync, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    function _resetInitialSettings() {\n        backgroundSyncTimeOffsets = [];\n        timingSources = [];\n        timeOfLastSync = null;\n        timeOfLastBackgroundSync = null;\n        lastTimingSource = null;\n        lastOffset = NaN;\n        isSynchronizing = false;\n        isBackgroundSynchronizing = false;\n        internalTimeBetweenSyncAttempts = settings.get().streaming.utcSynchronization.timeBetweenSyncAttempts;\n    }\n\n    /**\n     * Register the timing handler depending on the schemeIdUris. This method is called once when the StreamController is initialized\n     */\n    function initialize() {\n        _resetInitialSettings();\n\n        // a list of known schemeIdUris and a method to call with @value\n        handlers = {\n            'urn:mpeg:dash:utc:http-head:2014': _httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2014': _httpHandler.bind(null, _xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2014': _httpHandler.bind(null, _iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2014': _directHandler,\n\n            // some specs referencing early ISO23009-1 drafts incorrectly use\n            // 2012 in the URI, rather than 2014. support these for now.\n            'urn:mpeg:dash:utc:http-head:2012': _httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2012': _httpHandler.bind(null, _xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2012': _httpHandler.bind(null, _iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2012': _directHandler,\n\n            // it isn't clear how the data returned would be formatted, and\n            // no public examples available so http-ntp not supported for now.\n            // presumably you would do an arraybuffer type xhr and decode the\n            // binary data returned but I would want to see a sample first.\n            'urn:mpeg:dash:utc:http-ntp:2014': _notSupportedHandler,\n\n            // not clear how this would be supported in javascript (in browser)\n            'urn:mpeg:dash:utc:ntp:2014': _notSupportedHandler,\n            'urn:mpeg:dash:utc:sntp:2014': _notSupportedHandler\n        };\n\n    }\n\n    /**\n     * Sync against a timing source. T\n     * @param {array} tSources\n     * @param {boolean} isDynamic\n     */\n    function attemptSync(tSources, isDynamic) {\n\n        timingSources = tSources;\n\n        // Stop if we are already synchronizing\n        if (isSynchronizing) {\n            return;\n        }\n\n        // No synchronization required we can signal the completion immediately\n        if (!_shouldPerformSynchronization(isDynamic)) {\n            eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED);\n            return;\n        }\n\n        isSynchronizing = true;\n        _attemptRecursiveSync();\n    }\n\n    /**\n     * Does a synchronization in the background in case the last offset should be verified or a 404 occurs\n     */\n    function _onAttemptBackgroundSync() {\n        if (!settings.get().streaming.utcSynchronization.enabled || isSynchronizing || isBackgroundSynchronizing || !lastTimingSource || !lastTimingSource.value || !lastTimingSource.schemeIdUri || isNaN(lastOffset) || isNaN(settings.get().streaming.utcSynchronization.backgroundAttempts)) {\n            return;\n        }\n\n        if (timeOfLastBackgroundSync && ((Date.now() - timeOfLastBackgroundSync) / 1000) < DEFAULT_MINIMUM_TIME_BETWEEN_BACKGROUND_SYNC_ATTEMPTS) {\n            return;\n        }\n\n        backgroundSyncTimeOffsets = [];\n        isBackgroundSynchronizing = true;\n        const backgroundAttempts = !isNaN(settings.get().streaming.utcSynchronization.backgroundAttempts) ? settings.get().streaming.utcSynchronization.backgroundAttempts : DEFAULT_BACKGROUND_ATTEMPTS;\n        _attemptBackgroundSync(backgroundAttempts);\n    }\n\n    /**\n     * Perform a defined number of background attempts\n     * @param {number} attempts\n     * @private\n     */\n    function _attemptBackgroundSync(attempts) {\n        try {\n            if (attempts <= 0) {\n                _completeBackgroundTimeSyncSequence();\n                return;\n            }\n\n            const deviceTimeBeforeSync = Date.now();\n            handlers[lastTimingSource.schemeIdUri](\n                lastTimingSource.value,\n                function (serverTime) {\n                    // the timing source returned something useful\n                    const deviceTimeAfterSync = Date.now();\n                    const offset = _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime);\n\n                    backgroundSyncTimeOffsets.push(offset);\n                    _attemptBackgroundSync(attempts - 1);\n                },\n                function () {\n                    _completeBackgroundTimeSyncSequence();\n                }\n            );\n        } catch (e) {\n            _completeBackgroundTimeSyncSequence();\n        }\n    }\n\n    /**\n     * Sync against a timing source. This method is called recursively if the time sync for the first entry in timingSources fails.\n     * @param {number} sourceIndex\n     */\n    function _attemptRecursiveSync(sourceIndex = null) {\n        // if called with no sourceIndex, use zero (highest priority)\n        let index = sourceIndex || 0;\n\n        // the sources should be ordered in priority from the manifest.\n        // try each in turn, from the top, until either something\n        // sensible happens, or we run out of sources to try.\n        if (!timingSources || timingSources.length === 0 || index >= timingSources.length) {\n            _onComplete();\n            return;\n        }\n        let source = timingSources[index];\n\n        if (source) {\n            // check if there is a handler for this @schemeIdUri\n            if (handlers.hasOwnProperty(source.schemeIdUri)) {\n                // if so, call it with its @value\n                const deviceTimeBeforeSync = new Date().getTime();\n                handlers[source.schemeIdUri](\n                    source.value,\n                    function (serverTime) {\n                        // the timing source returned something useful\n                        const deviceTimeAfterSync = new Date().getTime();\n                        const offset = _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime);\n                        lastTimingSource = source;\n\n                        _onComplete(offset);\n                    },\n                    function () {\n                        // the timing source was probably uncontactable\n                        // or returned something we can't use - try again\n                        // with the remaining sources\n                        _attemptRecursiveSync(index + 1);\n                    }\n                );\n            } else {\n                // an unknown schemeIdUri must have been found\n                // try again with the remaining sources\n                _attemptRecursiveSync(index + 1);\n            }\n        } else {\n            // no valid time source could be found, just use device time\n            _onComplete();\n        }\n\n    }\n\n    /**\n     * Calculate the offset between client and server. Account for the roundtrip time\n     * @param {number} deviceTimeBeforeSync\n     * @param {number} deviceTimeAfterSync\n     * @param {number} serverTime\n     * @return {number}\n     * @private\n     */\n    function _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime) {\n        const deviceReferenceTime = deviceTimeAfterSync - ((deviceTimeAfterSync - deviceTimeBeforeSync) / 2);\n\n        return serverTime - deviceReferenceTime;\n    }\n\n    /**\n     * Checks if a synchronization is required\n     * @param {boolean} isDynamic\n     * @return {boolean}\n     * @private\n     */\n    function _shouldPerformSynchronization(isDynamic) {\n        try {\n            if (!isDynamic || !settings.get().streaming.utcSynchronization.enabled) {\n                return false;\n            }\n            const timeBetweenSyncAttempts = !isNaN(internalTimeBetweenSyncAttempts) ? internalTimeBetweenSyncAttempts : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS;\n\n            if (!timeOfLastSync || !timeBetweenSyncAttempts || isNaN(timeBetweenSyncAttempts)) {\n                return true;\n            }\n\n            return ((Date.now() - timeOfLastSync) / 1000) >= timeBetweenSyncAttempts;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Callback after sync has been completed\n     * @param {number} offset\n     * @private\n     */\n    function _onComplete(offset = NaN) {\n        let failed = isNaN(offset);\n        if (failed && settings.get().streaming.utcSynchronization.useManifestDateHeaderTimeSource) {\n            //Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.\n            _checkForDateHeader();\n        } else {\n            _completeTimeSyncSequence(failed, offset);\n        }\n    }\n\n    /**\n     * Takes xsdatetime and returns milliseconds since UNIX epoch. May not be necessary as xsdatetime is very similar to ISO 8601 which is natively understood by javascript Date parser\n     * @param {string} xsdatetimeStr\n     * @return {number}\n     * @private\n     */\n    function _alternateXsdatetimeDecoder(xsdatetimeStr) {\n        // taken from DashParser - should probably refactor both uses\n        const SECONDS_IN_MIN = 60;\n        const MINUTES_IN_HOUR = 60;\n        const MILLISECONDS_IN_SECONDS = 1000;\n        let datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+\\-])([0-9]{2})([0-9]{2}))?/;\n\n        let utcDate,\n            timezoneOffset;\n\n        let match = datetimeRegex.exec(xsdatetimeStr);\n\n        // If the string does not contain a timezone offset different browsers can interpret it either\n        // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n        // all browsers\n        utcDate = Date.UTC(\n            parseInt(match[1], 10),\n            parseInt(match[2], 10) - 1, // months start from zero\n            parseInt(match[3], 10),\n            parseInt(match[4], 10),\n            parseInt(match[5], 10),\n            (match[6] && (parseInt(match[6], 10) || 0)),\n            (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0\n        );\n        // If the date has timezone offset take it into account as well\n        if (match[9] && match[10]) {\n            timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n            utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n        }\n\n        return new Date(utcDate).getTime();\n    }\n\n\n    /**\n     * Try to use the built in parser, since xsdate is a constrained ISO8601 which is supported natively by Date.parse. if that fails, try a regex-based version used elsewhere in this application.\n     * @param {string} xsdatetimeStr\n     * @return {number}\n     */\n    function _xsdatetimeDecoder(xsdatetimeStr) {\n        let parsedDate = Date.parse(xsdatetimeStr);\n\n        if (isNaN(parsedDate)) {\n            parsedDate = _alternateXsdatetimeDecoder(xsdatetimeStr);\n        }\n\n        return parsedDate;\n    }\n\n    /**\n     * Takes ISO 8601 timestamp and returns milliseconds since UNIX epoch\n     * @param {string} isoStr\n     * @return {number}\n     */\n    function _iso8601Decoder(isoStr) {\n        return Date.parse(isoStr);\n    }\n\n    /**\n     * Takes RFC 1123 timestamp (which is same as ISO8601) and returns milliseconds since UNIX epoch\n     * @param {string} dateStr\n     * @return {number}\n     */\n    function _rfc1123Decoder(dateStr) {\n        return Date.parse(dateStr);\n    }\n\n    /**\n     * Handler for unsupported scheme ids.\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @private\n     */\n    function _notSupportedHandler(url, onSuccessCB, onFailureCB) {\n        onFailureCB();\n    }\n\n    /**\n     * Direct handler\n     * @param {string} xsdatetimeStr\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     */\n    function _directHandler(xsdatetimeStr, onSuccessCB, onFailureCB) {\n        let time = _xsdatetimeDecoder(xsdatetimeStr);\n\n        if (!isNaN(time)) {\n            onSuccessCB(time);\n            return;\n        }\n\n        onFailureCB();\n    }\n\n    /**\n     * Generic http handler\n     * @param {function} decoder\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @param {boolean} isHeadRequest\n     * @private\n     */\n    function _httpHandler(decoder, url, onSuccessCB, onFailureCB, isHeadRequest) {\n        let oncomplete,\n            onload;\n        let complete = false;\n        let req = new XMLHttpRequest();\n\n        let verb = isHeadRequest ? HTTPRequest.HEAD : HTTPRequest.GET;\n        let urls = url.match(/\\S+/g);\n\n        // according to ISO 23009-1, url could be a white-space\n        // separated list of URLs. just handle one at a time.\n        url = urls.shift();\n\n        oncomplete = function () {\n            if (complete) {\n                return;\n            }\n\n            // we only want to pass through here once per xhr,\n            // regardless of whether the load was successful.\n            complete = true;\n\n            // if there are more urls to try, call self.\n            if (urls.length) {\n                _httpHandler(decoder, urls.join(' '), onSuccessCB, onFailureCB, isHeadRequest);\n            } else {\n                onFailureCB();\n            }\n        };\n\n        onload = function () {\n            let time,\n                result;\n\n            if (req.status === 200) {\n                time = isHeadRequest ?\n                    req.getResponseHeader('Date') :\n                    req.response;\n\n                result = decoder(time);\n\n                // decoder returns NaN if non-standard input\n                if (!isNaN(result)) {\n                    onSuccessCB(result);\n                    complete = true;\n                }\n            }\n        };\n\n        if (urlUtils.isRelative(url)) {\n            // passing no path to resolve will return just MPD BaseURL/baseUri\n            const baseUrl = baseURLController.resolve();\n            if (baseUrl) {\n                url = urlUtils.resolve(url, baseUrl.url);\n            }\n        }\n\n        req.open(verb, url);\n        req.timeout = HTTP_TIMEOUT_MS || 0;\n        req.onload = onload;\n        req.onloadend = oncomplete;\n        req.send();\n    }\n\n    /**\n     * Handler for http-head schemeIdUri\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @private\n     */\n    function _httpHeadHandler(url, onSuccessCB, onFailureCB) {\n        _httpHandler(_rfc1123Decoder, url, onSuccessCB, onFailureCB, true);\n    }\n\n    /**\n     * Checks if a date header is present in the MPD response and calculates the offset based on the header\n     * @private\n     */\n    function _checkForDateHeader() {\n        let dateHeaderValue = dashMetrics.getLatestMPDRequestHeaderValueByID('Date');\n        let dateHeaderTime = dateHeaderValue !== null ? new Date(dateHeaderValue).getTime() : Number.NaN;\n\n        if (!isNaN(dateHeaderTime)) {\n            const offsetToDeviceTimeMs = dateHeaderTime - Date.now();\n            _completeTimeSyncSequence(false, offsetToDeviceTimeMs);\n        } else {\n            _completeTimeSyncSequence(true);\n        }\n    }\n\n    /**\n     * Triggers the event to signal that the time synchronization was completed\n     * @param {boolean} failed\n     * @param {number} offset\n     * @private\n     */\n    function _completeTimeSyncSequence(failed, offset) {\n\n        // Adjust the time of the next sync based on the drift between current offset and last offset\n        if (!isNaN(lastOffset) && !isNaN(offset) && !failed) {\n            _adjustTimeBetweenSyncAttempts(offset);\n        }\n\n        // Update the internal data\n        if (!failed && !isNaN(offset)) {\n            timeOfLastSync = Date.now();\n            isSynchronizing = false;\n\n            // if this is the first sync we are doing perform background syncs as well to confirm current offset\n            const shouldAttemptBackgroundSync = isNaN(lastOffset);\n            lastOffset = offset;\n            if (shouldAttemptBackgroundSync) {\n                _onAttemptBackgroundSync();\n            }\n            logger.debug(`Completed UTC sync. Setting client - server offset to ${offset}`);\n        }\n\n        if (failed) {\n            lastTimingSource = null;\n            isSynchronizing = false;\n            errHandler.error(new DashJSError(Errors.TIME_SYNC_FAILED_ERROR_CODE, Errors.TIME_SYNC_FAILED_ERROR_MESSAGE));\n        }\n\n        // Notify other classes\n        eventBus.trigger(Events.UPDATE_TIME_SYNC_OFFSET, {\n            offset: offset,\n        });\n        eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED);\n    }\n\n    function _adjustTimeBetweenSyncAttempts(offset) {\n        try {\n            const isOffsetDriftWithinThreshold = _isOffsetDriftWithinThreshold(offset);\n            const timeBetweenSyncAttempts = !isNaN(internalTimeBetweenSyncAttempts) ? internalTimeBetweenSyncAttempts : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS;\n            const timeBetweenSyncAttemptsAdjustmentFactor = !isNaN(settings.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor) ? settings.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS_ADJUSTMENT_FACTOR;\n            const maximumTimeBetweenSyncAttempts = !isNaN(settings.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts) ? settings.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts : DEFAULT_MAXIMUM_TIME_BETWEEN_SYNC;\n            const minimumTimeBetweenSyncAttempts = !isNaN(settings.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts) ? settings.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts : DEFAULT_MINIMUM_TIME_BETWEEN_SYNC;\n            let adjustedTimeBetweenSyncAttempts;\n\n            if (isOffsetDriftWithinThreshold) {\n                // The drift between the current offset and the last offset is within the allowed threshold. Increase sync time\n                adjustedTimeBetweenSyncAttempts = Math.min(timeBetweenSyncAttempts * timeBetweenSyncAttemptsAdjustmentFactor, maximumTimeBetweenSyncAttempts);\n                logger.debug(`Increasing timeBetweenSyncAttempts to ${adjustedTimeBetweenSyncAttempts}`);\n            } else {\n                // Drift between the current offset and the last offset is not within the allowed threshold. Decrease sync time\n                adjustedTimeBetweenSyncAttempts = Math.max(timeBetweenSyncAttempts / timeBetweenSyncAttemptsAdjustmentFactor, minimumTimeBetweenSyncAttempts);\n                logger.debug(`Decreasing timeBetweenSyncAttempts to ${adjustedTimeBetweenSyncAttempts}`);\n            }\n\n            internalTimeBetweenSyncAttempts = adjustedTimeBetweenSyncAttempts;\n        } catch (e) {\n\n        }\n    }\n\n    /**\n     * Callback after all background syncs have been completed.\n     * @private\n     */\n    function _completeBackgroundTimeSyncSequence() {\n        if (!backgroundSyncTimeOffsets || backgroundSyncTimeOffsets.length === 0) {\n            return;\n        }\n\n        const averageOffset = backgroundSyncTimeOffsets.reduce((acc, curr) => {\n            return acc + curr;\n        }, 0) / backgroundSyncTimeOffsets.length;\n\n        if (!_isOffsetDriftWithinThreshold(averageOffset)) {\n            logger.debug(`Completed background UTC sync. Setting client - server offset to ${averageOffset}`);\n            lastOffset = averageOffset;\n            eventBus.trigger(Events.UPDATE_TIME_SYNC_OFFSET, {\n                offset: lastOffset\n            });\n        } else {\n            logger.debug(`Completed background UTC sync. Offset is within allowed threshold and is not adjusted.`);\n        }\n\n        isBackgroundSynchronizing = false;\n        timeOfLastBackgroundSync = Date.now();\n    }\n\n    function _isOffsetDriftWithinThreshold(offset) {\n        try {\n            if (isNaN(lastOffset)) {\n                return true;\n            }\n\n            const maxAllowedDrift = settings.get().streaming.utcSynchronization.maximumAllowedDrift && !isNaN(settings.get().streaming.utcSynchronization.maximumAllowedDrift) ? settings.get().streaming.utcSynchronization.maximumAllowedDrift : DEFAULT_MAXIMUM_ALLOWED_DRIFT;\n            const lowerBound = lastOffset - maxAllowedDrift;\n            const upperBound = lastOffset + maxAllowedDrift;\n\n            return offset >= lowerBound && offset <= upperBound;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n\n        eventBus.off(Events.ATTEMPT_BACKGROUND_SYNC, _onAttemptBackgroundSync, instance);\n    }\n\n    instance = {\n        initialize,\n        attemptSync,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTimeSyncController.__dashjs_factory_name = 'TimeSyncController';\nconst factory = FactoryMaker.getSingletonFactory(TimeSyncController);\nfactory.HTTP_TIMEOUT_MS = HTTP_TIMEOUT_MS;\nFactoryMaker.updateSingletonFactory(TimeSyncController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction MediaSourceController() {\n\n    let instance,\n        mediaSource,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            mediaSource = new MediaSource();\n        } else if (hasWebKit) {\n            mediaSource = new WebKitMediaSource();\n        }\n\n        return mediaSource;\n    }\n\n    function attachMediaSource(videoModel) {\n\n        let objectURL = window.URL.createObjectURL(mediaSource);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(value) {\n        if (!mediaSource || mediaSource.readyState !== 'open') return;\n        if (value === null && isNaN(value)) return;\n        if (mediaSource.duration === value) return;\n\n        if (!isBufferUpdating(mediaSource)) {\n            logger.info('Set MediaSource duration:' + value);\n            mediaSource.duration = value;\n        } else {\n            setTimeout(setDuration.bind(null, value), 50);\n        }\n    }\n\n    function setSeekable(start, end) {\n        if (mediaSource && typeof mediaSource.setLiveSeekableRange === 'function' && typeof mediaSource.clearLiveSeekableRange === 'function' &&\n            mediaSource.readyState === 'open' && start >= 0 && start < end) {\n            mediaSource.clearLiveSeekableRange();\n            mediaSource.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n        if (!source || source.readyState !== 'open') {\n            return;\n        }\n\n        let buffers = source.sourceBuffers;\n\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n        logger.info('call to mediaSource endOfStream');\n        source.endOfStream();\n    }\n\n    function isBufferUpdating(source) {\n        let buffers = source.sourceBuffers;\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    instance = {\n        createMediaSource,\n        attachMediaSource,\n        detachMediaSource,\n        setDuration,\n        setSeekable,\n        signalEndOfStream\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport XHRLoader from '../net/XHRLoader';\n\nfunction EventController() {\n\n    const MPD_RELOAD_SCHEME = 'urn:mpeg:dash:event:2012';\n    const MPD_RELOAD_VALUE = 1;\n\n    const MPD_CALLBACK_SCHEME = 'urn:mpeg:dash:event:callback:2015';\n    const MPD_CALLBACK_VALUE = 1;\n\n    const REMAINING_EVENTS_THRESHOLD = 300;\n\n    const EVENT_HANDLED_STATES = {\n        DISCARDED: 'discarded',\n        UPDATED: 'updated',\n        ADDED: 'added'\n    };\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        inlineEvents, // Holds all Inline Events not triggered yet\n        inbandEvents, // Holds all Inband Events not triggered yet\n        eventInterval, // variable holding the setInterval\n        lastEventTimerCall,\n        manifestUpdater,\n        playbackController,\n        settings,\n        eventHandlingInProgress,\n        isStarted;\n\n    /**\n     * Internal setup when class is instanced\n     */\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    /**\n     * Checks if the provded configuration is valid\n     */\n    function checkConfig() {\n        if (!manifestUpdater || !playbackController) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    /**\n     * Reset to initial settings\n     */\n    function _resetInitialSettings() {\n        isStarted = false;\n        inlineEvents = {}; // Format inlineEvents[periodID][schemeIdUri]\n        inbandEvents = {}; // Format inbandEvents[periodID][schemeIdUri]\n        eventInterval = null;\n        eventHandlingInProgress = false;\n        lastEventTimerCall = Date.now() / 1000;\n    }\n\n    /**\n     * Stops the EventController by clearing the event interval\n     */\n    function _stop() {\n        try {\n            if (eventInterval !== null && isStarted) {\n                clearInterval(eventInterval);\n                eventInterval = null;\n                isStarted = false;\n                _onStopEventController();\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Starts the interval function of the EventController\n     */\n    function start() {\n        try {\n            checkConfig();\n            logger.debug('Start Event Controller');\n            const refreshDelay = settings.get().streaming.eventControllerRefreshDelay;\n            if (!isStarted && !isNaN(refreshDelay)) {\n                isStarted = true;\n                eventInterval = setInterval(_onEventTimer, refreshDelay);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Iterate through the eventList and trigger the events\n     */\n    function _onEventTimer() {\n        try {\n            if (!eventHandlingInProgress) {\n                eventHandlingInProgress = true;\n                const currentVideoTime = playbackController.getTime();\n                let presentationTimeThreshold = (currentVideoTime - lastEventTimerCall);\n\n                // For dynamic streams lastEventTimeCall will be large in the first iteration. Avoid firing all events at once.\n                presentationTimeThreshold = lastEventTimerCall > 0 ? Math.max(0, presentationTimeThreshold) : 0;\n\n                _triggerEvents(inbandEvents, presentationTimeThreshold, currentVideoTime);\n                _triggerEvents(inlineEvents, presentationTimeThreshold, currentVideoTime);\n                _removeOutdatedEventObjects(inbandEvents);\n                _removeOutdatedEventObjects(inlineEvents);\n\n                lastEventTimerCall = currentVideoTime;\n                eventHandlingInProgress = false;\n            }\n        } catch (e) {\n            eventHandlingInProgress = false;\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterate over a list of events and trigger the ones for which the presentation time is within the current timing interval\n     * @param {object} events\n     * @param {number} presentationTimeThreshold\n     * @param {number} currentVideoTime\n     * @private\n     */\n    function _triggerEvents(events, presentationTimeThreshold, currentVideoTime) {\n        try {\n            const callback = function (event) {\n                if (event !== undefined) {\n                    const duration = !isNaN(event.duration) ? event.duration : 0;\n                    // The event is either about to start or has already been started and we are within its duration\n                    if ((event.calculatedPresentationTime <= currentVideoTime && event.calculatedPresentationTime + presentationTimeThreshold + duration >= currentVideoTime)) {\n                        _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_START);\n                    } else if (_eventHasExpired(currentVideoTime, duration + presentationTimeThreshold, event.calculatedPresentationTime) || _eventIsInvalid(event)) {\n                        logger.debug(`Removing event ${event.id} from period ${event.eventStream.period.id} as it is expired or invalid`);\n                        _removeEvent(events, event);\n                    }\n                }\n            };\n\n            _iterateAndTriggerCallback(events, callback);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterates over the entries of the events object and deletes the entries for which no events are present\n     * @param {object} events\n     * @private\n     */\n    function _removeOutdatedEventObjects(events) {\n        try {\n            for (const key in events) {\n                if (events.hasOwnProperty(key)) {\n                    if (Object.keys(events[key]).length === 0)\n                        delete events[key];\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Add MPD events to the list of events.\n     * Events that are not in the MPD anymore but not triggered yet will still be deleted.\n     * Existing events might get updated.\n     * @param {Array.<Object>} values\n     * @param {string} periodId\n     */\n    function addInlineEvents(values, periodId) {\n        try {\n            checkConfig();\n\n            if (!inlineEvents[periodId]) {\n                inlineEvents[periodId] = {};\n            }\n\n            if (values) {\n                for (let i = 0; i < values.length; i++) {\n                    let event = values[i];\n                    const currentTime = playbackController.getTime();\n                    const duration = !isNaN(event.duration) ? event.duration : 0;\n                    if (!_eventHasExpired(currentTime, duration, event.calculatedPresentationTime)) {\n                        let result = _addOrUpdateEvent(event, inlineEvents[periodId], true);\n\n                        if (result === EVENT_HANDLED_STATES.ADDED) {\n                            logger.debug(`Added inline event with id ${event.id} from period ${periodId}`);\n                            // If we see the event for the first time we trigger it in onReceive mode\n                            _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_RECEIVE);\n                        } else if (result === EVENT_HANDLED_STATES.UPDATED) {\n                            logger.debug(`Updated inline event with id ${event.id} from period ${periodId}`);\n                        }\n                    }\n                }\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Add EMSG events to the list of events\n     * Messages with the same id within the scope of the same scheme_id_uri and value pair are equivalent , i.e. processing of any one event message box with the same id is sufficient.\n     * @param {Array.<Object>} values\n     * @param {string} periodId\n     */\n    function addInbandEvents(values, periodId) {\n        try {\n            checkConfig();\n\n            if (!inbandEvents[periodId]) {\n                inbandEvents[periodId] = {};\n            }\n\n            for (let i = 0; i < values.length; i++) {\n                let event = values[i];\n                const currentTime = playbackController.getTime();\n                const duration = !isNaN(event.duration) ? event.duration : 0;\n                if (!_eventHasExpired(currentTime, duration, event.calculatedPresentationTime)) {\n                    let result = _addOrUpdateEvent(event, inbandEvents[periodId], false);\n\n                    if (result === EVENT_HANDLED_STATES.ADDED) {\n                        if (event.eventStream.schemeIdUri === MPD_RELOAD_SCHEME) {\n                            _handleManifestReloadEvent(event);\n                        }\n                        logger.debug(`Added inband event with id ${event.id} from period ${periodId}`);\n                        _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_RECEIVE);\n                    } else {\n                        logger.debug(`Inband event with scheme_id_uri ${event.eventStream.schemeIdUri}, value ${event.eventStream.value}, period id ${periodId} and event id ${event.id} was ignored because it has been added before.`);\n                    }\n                }\n            }\n            _onEventTimer();\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Adds or updates an event to/in the list of events\n     * @param {object} event\n     * @param {object} events\n     * @param {boolean} shouldOverwriteExistingEvents\n     * @return {string}\n     * @private\n     */\n    function _addOrUpdateEvent(event, events, shouldOverwriteExistingEvents = false) {\n        const schemeIdUri = event.eventStream.schemeIdUri;\n        const value = event.eventStream.value;\n        const id = event.id;\n        let eventState = EVENT_HANDLED_STATES.DISCARDED;\n\n        if (!events[schemeIdUri]) {\n            events[schemeIdUri] = [];\n        }\n\n        const indexOfExistingEvent = events[schemeIdUri].findIndex((e) => {\n            return ((!value || (e.eventStream.value && e.eventStream.value === value)) && (e.id === id));\n        });\n\n        // New event, we add it to our list of events\n        if (indexOfExistingEvent === -1) {\n            events[schemeIdUri].push(event);\n            event.triggeredReceivedEvent = false;\n            event.triggeredStartEvent = false;\n            eventState = EVENT_HANDLED_STATES.ADDED;\n        }\n\n        // We have a similar event for this period with the same schemeIdUri, value and id. Overwrite it or ignore it\n        else if (shouldOverwriteExistingEvents) {\n            const oldEvent = events[schemeIdUri][indexOfExistingEvent];\n            event.triggeredReceivedEvent = oldEvent.triggeredReceivedEvent;\n            event.triggeredStartEvent = oldEvent.triggeredStartEvent;\n            events[schemeIdUri][indexOfExistingEvent] = event;\n            eventState = EVENT_HANDLED_STATES.UPDATED;\n        }\n\n        return eventState;\n    }\n\n    /**\n     * Triggers an MPD reload\n     * @param {object} event\n     * @private\n     */\n    function _handleManifestReloadEvent(event) {\n        try {\n            if (event.eventStream.value == MPD_RELOAD_VALUE) {\n                const validUntil = event.calculatedPresentationTime;\n                let newDuration;\n                if (event.calculatedPresentationTime == 0xFFFFFFFF) {//0xFF... means remaining duration unknown\n                    newDuration = NaN;\n                } else {\n                    newDuration = event.calculatedPresentationTime + event.duration;\n                }\n                //logger.info('Manifest validity changed: Valid until: ' + validUntil + '; remaining duration: ' + newDuration);\n                eventBus.trigger(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, {\n                    id: event.id,\n                    validUntil: validUntil,\n                    newDuration: newDuration,\n                    newManifestValidAfter: NaN //event.message_data - this is an arraybuffer with a timestring in it, but not used yet\n                }, {\n                    mode: MediaPlayerEvents.EVENT_MODE_ON_START\n                });\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * When the EventController is stopped this callback is triggered. Starts the remaining events.\n     * @private\n     */\n    function _onStopEventController() {\n        try {\n            // EventController might be stopped before the period is over. Before we stop the event controller we check for events that needs to be triggered at the period boundary.\n            _triggerRemainingEvents(inbandEvents);\n            _triggerRemainingEvents(inlineEvents);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Triggers the remaining events after the EventController has been stopped\n     * @param {object} events\n     * @private\n     */\n    function _triggerRemainingEvents(events) {\n        try {\n            const currentTime = playbackController.getTime();\n            const callback = function (event) {\n                const periodDuration = event.eventStream && event.eventStream.period && !isNaN(event.eventStream.period.duration) ? event.eventStream.period.duration : NaN;\n                const periodStart = event.eventStream && event.eventStream.period && !isNaN(event.eventStream.period.start) ? event.eventStream.period.start : NaN;\n\n                if (isNaN(periodDuration) || isNaN(periodStart)) {\n                    return;\n                }\n\n                const calculatedPresentationTimeInSeconds = event.calculatedPresentationTime;\n\n                if (Math.abs(calculatedPresentationTimeInSeconds - currentTime) < REMAINING_EVENTS_THRESHOLD) {\n                    _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_START);\n                }\n\n            };\n\n            _iterateAndTriggerCallback(events, callback);\n\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterates over the inline/inband event object and triggers a callback for each event\n     * @param {object} events\n     * @param {function} callback\n     * @private\n     */\n    function _iterateAndTriggerCallback(events, callback) {\n        try {\n            if (events) {\n                const periodIds = Object.keys(events);\n                for (let i = 0; i < periodIds.length; i++) {\n                    const currentPeriod = events[periodIds[i]];\n                    const schemeIdUris = Object.keys(currentPeriod);\n                    for (let j = 0; j < schemeIdUris.length; j++) {\n                        const schemeIdEvents = currentPeriod[schemeIdUris[j]];\n                        schemeIdEvents.forEach((event) => {\n                            if (event !== undefined) {\n                                callback(event);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Checks if an event is expired. For instance if the presentationTime + the duration of an event are smaller than the current video time.\n     * @param {number} currentVideoTime\n     * @param {number} threshold\n     * @param {number} calculatedPresentationTimeInSeconds\n     * @return {boolean}\n     * @private\n     */\n    function _eventHasExpired(currentVideoTime, threshold, calculatedPresentationTimeInSeconds) {\n        try {\n            return currentVideoTime - threshold > calculatedPresentationTimeInSeconds;\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    /**\n     * Checks if an event is invalid. This is the case if the end time of the parent period is smaller than the presentation time of the event.\n     * @param {object} event\n     * @return {boolean}\n     * @private\n     */\n    function _eventIsInvalid(event) {\n        try {\n            const periodEndTime = event.eventStream.period.start + event.eventStream.period.duration;\n\n            return event.calculatedPresentationTime > periodEndTime;\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    /**\n     * Starts an event. Depending on the schemeIdUri we distinguish between\n     * - MPD Reload events\n     * - MPD Callback events\n     * - Events to be dispatched to the application\n     * @param {object} event\n     * @param {String} mode\n     * @private\n     */\n    function _startEvent(event, mode) {\n        try {\n            const currentVideoTime = playbackController.getTime();\n            const eventId = event.id;\n\n            if (mode === MediaPlayerEvents.EVENT_MODE_ON_RECEIVE && !event.triggeredReceivedEvent) {\n                logger.debug(`Received event ${eventId}`);\n                event.triggeredReceivedEvent = true;\n                eventBus.trigger(event.eventStream.schemeIdUri, { event: event }, { mode });\n                return;\n            }\n\n            if (!event.triggeredStartEvent) {\n                if (event.eventStream.schemeIdUri === MPD_RELOAD_SCHEME && event.eventStream.value == MPD_RELOAD_VALUE) {\n                    //If both are set to zero, it indicates the media is over at this point. Don't reload the manifest.\n                    if (event.duration !== 0 || event.presentationTimeDelta !== 0) {\n                        logger.debug(`Starting manifest refresh event ${eventId} at ${currentVideoTime}`);\n                        _refreshManifest();\n                    }\n                } else if (event.eventStream.schemeIdUri === MPD_CALLBACK_SCHEME && event.eventStream.value == MPD_CALLBACK_VALUE) {\n                    logger.debug(`Starting callback event ${eventId} at ${currentVideoTime}`);\n                    _sendCallbackRequest(event.messageData);\n                } else {\n                    logger.debug(`Starting event ${eventId} from period ${event.eventStream.period.id} at ${currentVideoTime}`);\n                    eventBus.trigger(event.eventStream.schemeIdUri, { event: event }, { mode });\n                }\n                event.triggeredStartEvent = true;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Removes an event from the list. If this is the last event of type \"schemeIdUri\"  the corresponding schemeIdUri Object in the list of events is deleted.\n     * @param {object} events\n     * @param {object} event\n     * @private\n     */\n    function _removeEvent(events, event) {\n        try {\n            const schemeIdUri = event.eventStream.schemeIdUri;\n            const periodId = event.eventStream.period.id;\n            const value = event.eventStream.value;\n            const id = event.id;\n\n            events[periodId][schemeIdUri] = events[periodId][schemeIdUri].filter((e) => {\n                return (value && e.eventStream.value && e.eventStream.value !== value) || e.id !== id;\n            });\n\n            if (events[periodId][schemeIdUri].length === 0) {\n                delete events[periodId][schemeIdUri];\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Refresh the manifest\n     * @private\n     */\n    function _refreshManifest() {\n        try {\n            checkConfig();\n            manifestUpdater.refreshManifest();\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Send a callback request\n     * @param {String} url\n     * @private\n     */\n    function _sendCallbackRequest(url) {\n        try {\n            let loader = XHRLoader(context).create({});\n            loader.load({\n                method: 'get',\n                url: url,\n                request: {\n                    responseType: 'arraybuffer'\n                }\n            });\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Set the config of the EventController\n     * @param {object} config\n     */\n    function setConfig(config) {\n        try {\n            if (!config) {\n                return;\n            }\n            if (config.manifestUpdater) {\n                manifestUpdater = config.manifestUpdater;\n            }\n            if (config.playbackController) {\n                playbackController = config.playbackController;\n            }\n            if (config.settings) {\n                settings = config.settings;\n            }\n\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Returns all inline events that have not been triggered yet\n     * @return {object}\n     */\n    function getInlineEvents() {\n        return inlineEvents;\n    }\n\n    /**\n     * Returns all inband events that have not been triggered yet\n     * @return {object}\n     */\n    function getInbandEvents() {\n        return inbandEvents;\n    }\n\n    /**\n     * Stop the EventController and reset all initial settings\n     */\n    function reset() {\n        _stop();\n        _resetInitialSettings();\n    }\n\n    instance = {\n        addInlineEvents,\n        addInbandEvents,\n        getInbandEvents,\n        getInlineEvents,\n        start,\n        setConfig,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nEventController.__dashjs_factory_name = 'EventController';\nexport default FactoryMaker.getSingletonFactory(EventController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport default {\n    LEVELS: {\n        SUGGESTION: 'Suggestion',\n        WARNING: 'Warning',\n        ERROR: 'Error'\n    },\n    EVENTS: {\n        NO_UTC_TIMING_ELEMENT: {\n            key: 'NO_UTC_TIMING_ELEMENT',\n            message: 'No UTCTiming element is present in the manifest. You may experience playback failures. For a detailed validation use https://conformance.dashif.org/'\n        },\n        NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE: {\n            key: 'NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE',\n            message: 'SMPTE 2052-1:2013 defines the attribute name as \"imageType\" and does not define \"imagetype\"'\n        },\n        INVALID_DVR_WINDOW: {\n            key: 'INVALID_DVR_WINDOW',\n            message: 'No valid segment found when applying a specification compliant DVR window calculation. Using SegmentTimeline entries as a fallback.'\n        }\n    }\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport Stream from '../Stream';\nimport ManifestUpdater from '../ManifestUpdater';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {\n    PlayList, PlayListTrace\n} from '../vo/metrics/PlayList';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport TimeSyncController from './TimeSyncController';\nimport MediaSourceController from './MediaSourceController';\nimport DashJSError from '../vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport EventController from './EventController';\nimport ConformanceViolationConstants from '../constants/ConformanceViolationConstants';\n\nconst PLAYBACK_ENDED_TIMER_INTERVAL = 200;\nconst DVR_WAITING_OFFSET = 2;\n\nfunction StreamController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance, logger, capabilities, capabilitiesFilter, manifestUpdater, manifestLoader, manifestModel, adapter,\n        dashMetrics, mediaSourceController, timeSyncController, contentSteeringController, baseURLController,\n        segmentBaseController, uriFragmentModel, abrController, mediaController, eventController, initCache,\n        errHandler, timelineConverter, streams, activeStream, protectionController, textController, protectionData,\n        autoPlay, isStreamSwitchingInProgress, hasMediaError, hasInitialisationError, mediaSource, videoModel,\n        playbackController, serviceDescriptionController, mediaPlayerModel, customParametersModel, isPaused,\n        initialPlayback, initialSteeringRequest, playbackEndedTimerInterval, bufferSinks, preloadingStreams,\n        supportsChangeType, settings,\n        firstLicenseIsFetched, waitForPlaybackStartTimeout, providedStartTime, errorInformation;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        timeSyncController = TimeSyncController(context).getInstance();\n        mediaSourceController = MediaSourceController(context).getInstance();\n        initCache = InitCache(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function initialize(autoPl, protData) {\n        _checkConfig();\n\n        autoPlay = autoPl;\n        protectionData = protData;\n        timelineConverter.initialize();\n\n        manifestUpdater = ManifestUpdater(context).create();\n        manifestUpdater.setConfig({\n            manifestModel,\n            adapter,\n            manifestLoader,\n            errHandler,\n            settings,\n            contentSteeringController\n        });\n        manifestUpdater.initialize();\n\n        eventController = EventController(context).getInstance();\n        eventController.setConfig({\n            manifestUpdater: manifestUpdater, playbackController: playbackController, settings\n        });\n        eventController.start();\n\n\n        timeSyncController.setConfig({\n            dashMetrics, baseURLController, errHandler, settings\n        });\n        timeSyncController.initialize();\n\n        if (protectionController) {\n            eventBus.trigger(Events.PROTECTION_CREATED, {\n                controller: protectionController\n            });\n            protectionController.setMediaElement(videoModel.getElement());\n            if (protectionData) {\n                protectionController.setProtectionData(protectionData);\n            }\n        }\n\n        registerEvents();\n    }\n\n    function registerEvents() {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ERROR, _onPlaybackError, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PAUSED, _onPlaybackPaused, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, _onManifestValidityChanged, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChanged, instance);\n\n        if (Events.KEY_SESSION_UPDATED) {\n            eventBus.on(Events.KEY_SESSION_UPDATED, _onKeySessionUpdated, instance);\n        }\n\n        eventBus.on(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.on(Events.STREAM_BUFFERING_COMPLETED, _onStreamBufferingCompleted, instance);\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, _onTimeSyncCompleted, instance);\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, _onCurrentTrackChanged, instance);\n        eventBus.on(Events.SETTING_UPDATED_LIVE_DELAY, _onLiveDelaySettingUpdated, instance);\n        eventBus.on(Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, _onLiveDelaySettingUpdated, instance);\n    }\n\n    function unRegisterEvents() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ERROR, _onPlaybackError, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PAUSED, _onPlaybackPaused, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.off(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, _onManifestValidityChanged, instance);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChanged, instance);\n\n        if (Events.KEY_SESSION_UPDATED) {\n            eventBus.off(Events.KEY_SESSION_UPDATED, _onKeySessionUpdated, instance);\n        }\n\n        eventBus.off(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.off(Events.STREAM_BUFFERING_COMPLETED, _onStreamBufferingCompleted, instance);\n        eventBus.off(Events.TIME_SYNCHRONIZATION_COMPLETED, _onTimeSyncCompleted, instance);\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, _onCurrentTrackChanged, instance);\n        eventBus.off(Events.SETTING_UPDATED_LIVE_DELAY, _onLiveDelaySettingUpdated, instance);\n        eventBus.off(Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, _onLiveDelaySettingUpdated, instance);\n    }\n\n    function _checkConfig() {\n        if (!manifestLoader || !manifestLoader.hasOwnProperty('load') || !timelineConverter || !timelineConverter.hasOwnProperty('initialize') || !timelineConverter.hasOwnProperty('reset') || !timelineConverter.hasOwnProperty('getClientTimeOffset') || !manifestModel || !errHandler || !dashMetrics || !playbackController) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function _checkInitialize() {\n        if (!manifestUpdater || !manifestUpdater.hasOwnProperty('setManifest')) {\n            throw new Error('initialize function has to be called previously');\n        }\n    }\n\n    /**\n     * Start the streaming session by loading the target manifest\n     * @param {string} url\n     * @param {number} startTime\n     */\n    function load(url, startTime = NaN) {\n        _checkConfig();\n        providedStartTime = startTime;\n        manifestLoader.load(url);\n    }\n\n    /**\n     * Start the streaming session by using the provided manifest object\n     * @param {object} manifest\n     * @param {number} startTime\n     */\n    function loadWithManifest(manifest, startTime = NaN) {\n        _checkInitialize();\n        providedStartTime = startTime;\n        manifestUpdater.setManifest(manifest);\n    }\n\n    /**\n     * When the UTC snychronization is completed we can compose the streams\n     * @private\n     */\n    function _onTimeSyncCompleted( /*e*/) {\n        _composeStreams();\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _onKeySessionUpdated() {\n        firstLicenseIsFetched = true;\n    }\n\n    /**\n     * Setup the stream objects after the stream start and each MPD reload. This function is called after the UTC sync has been done (TIME_SYNCHRONIZATION_COMPLETED)\n     * @private\n     */\n    function _composeStreams() {\n        try {\n            const streamsInfo = adapter.getStreamsInfo();\n\n            if (!activeStream && streamsInfo.length === 0) {\n                throw new Error('There are no periods in the MPD');\n            }\n\n            if (activeStream && streamsInfo.length > 0) {\n                dashMetrics.updateManifestUpdateInfo({\n                    currentTime: playbackController.getTime(),\n                    buffered: videoModel.getBufferRange(),\n                    presentationStartTime: streamsInfo[0].start,\n                    clientTimeOffset: timelineConverter.getClientTimeOffset()\n                });\n            }\n\n            // Filter streams that are outdated and not included in the MPD anymore\n            if (streams.length > 0) {\n                _filterOutdatedStreams(streamsInfo);\n            }\n\n            const promises = [];\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\n                const streamInfo = streamsInfo[i];\n                promises.push(_initializeOrUpdateStream(streamInfo));\n                dashMetrics.addManifestUpdateStreamInfo(streamInfo);\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    return new Promise((resolve, reject) => {\n                        if (!activeStream) {\n                            _initializeForFirstStream(streamsInfo, resolve, reject);\n                        } else {\n                            resolve();\n                        }\n                    });\n                })\n                .then(() => {\n                    eventBus.trigger(Events.STREAMS_COMPOSED);\n                    // Additional periods might have been added after an MPD update. Check again if we can start prebuffering.\n                    _checkIfPrebufferingCanStart();\n                })\n                .catch((e) => {\n                    throw e;\n                })\n\n        } catch (e) {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, e.message + ' nostreamscomposed', manifestModel.getValue()));\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    /**\n     * Called for each stream when composition is performed. Either a new instance of Stream is created or the existing one is updated.\n     * @param {object} streamInfo\n     * @private\n     */\n    function _initializeOrUpdateStream(streamInfo) {\n        let stream = getStreamById(streamInfo.id);\n\n        // If the Stream object does not exist we probably loaded the manifest the first time or it was\n        // introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations\n        if (!stream) {\n            stream = Stream(context).create({\n                manifestModel,\n                mediaPlayerModel,\n                dashMetrics,\n                manifestUpdater,\n                adapter,\n                timelineConverter,\n                capabilities,\n                capabilitiesFilter,\n                errHandler,\n                baseURLController,\n                segmentBaseController,\n                textController,\n                abrController,\n                playbackController,\n                eventController,\n                mediaController,\n                protectionController,\n                videoModel,\n                streamInfo,\n                settings\n            });\n            streams.push(stream);\n            stream.initialize();\n            return Promise.resolve();\n        } else {\n            return stream.updateData(streamInfo);\n        }\n    }\n\n    /**\n     * Initialize playback for the first period.\n     * @param {array} streamsInfo\n     * @private\n     */\n    function _initializeForFirstStream(streamsInfo, resolve, reject) {\n        try {\n\n            // Add the DVR window so we can calculate the right starting point\n            addDVRMetric();\n\n            // If the start is in the future we need to wait\n            const dvrRange = dashMetrics.getCurrentDVRInfo().range;\n            if (dvrRange.end < dvrRange.start) {\n                if (waitForPlaybackStartTimeout) {\n                    clearTimeout(waitForPlaybackStartTimeout);\n                }\n                const waitingTime = Math.min((((dvrRange.end - dvrRange.start) * -1) + DVR_WAITING_OFFSET) * 1000, 2147483647);\n                logger.debug(`Waiting for ${waitingTime} ms before playback can start`);\n                eventBus.trigger(Events.AST_IN_FUTURE, { delay: waitingTime });\n                waitForPlaybackStartTimeout = setTimeout(() => {\n                    _initializeForFirstStream(streamsInfo, resolve, reject);\n                }, waitingTime);\n                return;\n            }\n\n\n            // Calculate the producer reference time offsets if given\n            if (settings.get().streaming.applyProducerReferenceTime) {\n                serviceDescriptionController.calculateProducerReferenceTimeOffsets(streamsInfo);\n            }\n\n            // Apply Service description parameters.\n            const manifestInfo = streamsInfo[0].manifestInfo;\n            if (settings.get().streaming.applyServiceDescription) {\n                serviceDescriptionController.applyServiceDescription(manifestInfo);\n            }\n\n            // Compute and set the live delay\n            if (adapter.getIsDynamic()) {\n                const fragmentDuration = _getFragmentDurationForLiveDelayCalculation(streamsInfo, manifestInfo);\n                playbackController.computeAndSetLiveDelay(fragmentDuration, manifestInfo);\n            }\n\n            // Apply content steering\n            _applyContentSteeringBeforeStart()\n                .then(() => {\n                    const manifest = manifestModel.getValue();\n                    if (manifest) {\n                        baseURLController.update(manifest)\n                    }\n                    _calculateStartTimeAndSwitchStream()\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    _calculateStartTimeAndSwitchStream();\n                    resolve();\n                })\n        } catch (e) {\n            reject(e);\n        }\n    }\n\n    function _applyContentSteeringBeforeStart() {\n        if (settings.get().streaming.applyContentSteering && contentSteeringController.shouldQueryBeforeStart()) {\n            return contentSteeringController.loadSteeringData();\n        }\n        return Promise.resolve();\n    }\n\n    function _calculateStartTimeAndSwitchStream() {\n        // Figure out the correct start time and the correct start period\n        const startTime = _getInitialStartTime();\n        let initialStream = getStreamForTime(startTime);\n        const startStream = initialStream !== null ? initialStream : streams[0];\n        eventBus.trigger(Events.INITIAL_STREAM_SWITCH, { startTime });\n        _switchStream(startStream, null, startTime);\n        _startPlaybackEndedTimerInterval();\n    }\n\n    /**\n     * Switch from the current stream (period) to the next stream (period).\n     * @param {object} stream\n     * @param {object} previousStream\n     * @param {number} seekTime\n     * @private\n     */\n    function _switchStream(stream, previousStream, seekTime) {\n        try {\n            if (isStreamSwitchingInProgress || !stream || (previousStream === stream && stream.getIsActive())) {\n                return;\n            }\n\n            isStreamSwitchingInProgress = true;\n            eventBus.trigger(Events.PERIOD_SWITCH_STARTED, {\n                fromStreamInfo: previousStream ? previousStream.getStreamInfo() : null,\n                toStreamInfo: stream.getStreamInfo()\n            });\n\n            let keepBuffers = false;\n            activeStream = stream;\n\n            if (previousStream) {\n                keepBuffers = _canSourceBuffersBeReused(stream, previousStream);\n                previousStream.deactivate(keepBuffers);\n            }\n\n            // Determine seek time when switching to new period\n            // - seek at given seek time\n            // - or seek at period start if upcoming period is not prebuffered\n            seekTime = !isNaN(seekTime) ? seekTime : (!keepBuffers && previousStream ? stream.getStreamInfo().start : NaN);\n            logger.info(`Switch to stream ${stream.getId()}. Seektime is ${seekTime}, current playback time is ${playbackController.getTime()}. Seamless period switch is set to ${keepBuffers}`);\n\n            preloadingStreams = preloadingStreams.filter((s) => {\n                return s.getId() !== activeStream.getId();\n            });\n            playbackController.initialize(getActiveStreamInfo(), !!previousStream);\n\n            // If we have a video element we are not preloading into a virtual buffer\n            if (videoModel.getElement()) {\n                _openMediaSource(seekTime, keepBuffers, false);\n            } else {\n                _activateStream(seekTime, keepBuffers);\n            }\n        } catch (e) {\n            isStreamSwitchingInProgress = false;\n        }\n    }\n\n    /**\n     * Setup the Media Source. Open MSE and attach event listeners\n     * @param {number} seekTime\n     * @param {boolean} keepBuffers\n     * @param {boolean} streamActivated\n     * @private\n     */\n    function _openMediaSource(seekTime, keepBuffers, streamActivated = false) {\n        let sourceUrl;\n\n        function _onMediaSourceOpen() {\n            // Manage situations in which a call to reset happens while MediaSource is being opened\n            if (!mediaSource || mediaSource.readyState !== 'open') return;\n\n            logger.debug('MediaSource is open!');\n            window.URL.revokeObjectURL(sourceUrl);\n            mediaSource.removeEventListener('sourceopen', _onMediaSourceOpen);\n            mediaSource.removeEventListener('webkitsourceopen', _onMediaSourceOpen);\n\n            _setMediaDuration();\n            const dvrInfo = dashMetrics.getCurrentDVRInfo();\n            mediaSourceController.setSeekable(dvrInfo.range.start, dvrInfo.range.end);\n            if (streamActivated) {\n                if (!isNaN(seekTime)) {\n                    playbackController.seek(seekTime, true, true);\n                }\n                // Set the media source for all StreamProcessors\n                activeStream.setMediaSource(mediaSource)\n                    .then(() => {\n                        // Start text processing now that we have a video element\n                        activeStream.initializeForTextWithMediaSource(mediaSource);\n                    })\n            } else {\n                _activateStream(seekTime, keepBuffers);\n            }\n        }\n\n        function _open() {\n            mediaSource.addEventListener('sourceopen', _onMediaSourceOpen, false);\n            mediaSource.addEventListener('webkitsourceopen', _onMediaSourceOpen, false);\n            sourceUrl = mediaSourceController.attachMediaSource(videoModel);\n            logger.debug('MediaSource attached to element.  Waiting on open...');\n        }\n\n        if (!mediaSource) {\n            mediaSource = mediaSourceController.createMediaSource();\n            _open();\n        } else {\n            if (keepBuffers) {\n                _activateStream(seekTime, keepBuffers);\n            } else {\n                mediaSourceController.detachMediaSource(videoModel);\n                _open();\n            }\n        }\n    }\n\n    /**\n     * Activates a new stream.\n     * @param {number} seekTime\n     * @param {boolean} keepBuffers\n     */\n    function _activateStream(seekTime, keepBuffers) {\n        activeStream.activate(mediaSource, keepBuffers ? bufferSinks : undefined, seekTime)\n            .then((sinks) => {\n                // check if change type is supported by the browser\n                if (sinks) {\n                    const keys = Object.keys(sinks);\n                    if (keys.length > 0 && sinks[keys[0]].getBuffer().changeType) {\n                        supportsChangeType = true;\n                    }\n                    bufferSinks = sinks;\n                }\n\n                // Set the initial time for this stream in the StreamProcessor\n                if (!isNaN(seekTime)) {\n                    eventBus.trigger(Events.SEEK_TARGET, { time: seekTime }, { streamId: activeStream.getId() });\n                    playbackController.seek(seekTime, false, true);\n                    activeStream.startScheduleControllers();\n                }\n\n                isStreamSwitchingInProgress = false;\n                eventBus.trigger(Events.PERIOD_SWITCH_COMPLETED, { toStreamInfo: getActiveStreamInfo() });\n            });\n    }\n\n    /**\n     * A playback seeking event was triggered. We need to disable the preloading streams and call the respective seeking handler.\n     * We distinguish between inner period seeks and outer period seeks\n     * @param {object} e\n     * @private\n     */\n    function _onPlaybackSeeking(e) {\n        const newTime = e.seekTime;\n        const seekToStream = getStreamForTime(newTime);\n\n        if (!seekToStream || seekToStream === activeStream) {\n            _cancelPreloading();\n            _handleInnerPeriodSeek(e);\n        } else if (seekToStream && seekToStream !== activeStream) {\n            _cancelPreloading(seekToStream);\n            _handleOuterPeriodSeek(e, seekToStream);\n        }\n\n        _createPlaylistMetrics(PlayList.SEEK_START_REASON);\n    }\n\n    /**\n     * Cancels the preloading of certain streams based on the position we are seeking to.\n     * @param {object} seekToStream\n     * @private\n     */\n    function _cancelPreloading(seekToStream = null) {\n        // Inner period seek\n        if (!seekToStream) {\n            _deactivateAllPreloadingStreams();\n        }\n\n        // Outer period seek: Deactivate everything for now\n        else {\n            _deactivateAllPreloadingStreams();\n        }\n\n    }\n\n    /**\n     * Deactivates all preloading streams\n     * @private\n     */\n    function _deactivateAllPreloadingStreams() {\n        if (preloadingStreams && preloadingStreams.length > 0) {\n            preloadingStreams.forEach((s) => {\n                s.deactivate(true);\n            });\n            preloadingStreams = [];\n        }\n    }\n\n    /**\n     * Handle an inner period seek. Prepare all StreamProcessors for the seek.\n     * @param {object} e\n     * @param {number} oldTime\n     * @private\n     */\n    function _handleInnerPeriodSeek(e) {\n        const streamProcessors = activeStream.getProcessors();\n\n        streamProcessors.forEach((sp) => {\n            return sp.prepareInnerPeriodPlaybackSeeking(e);\n        });\n\n        _flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n    }\n\n    /**\n     * Handle an outer period seek. Dispatch the corresponding event to be handled in the BufferControllers and the ScheduleControllers\n     * @param {object} e\n     * @param {object} seekToStream\n     * @private\n     */\n    function _handleOuterPeriodSeek(e, seekToStream) {\n        // Stop segment requests\n        const seekTime = e && !isNaN(e.seekTime) ? e.seekTime : NaN;\n        const streamProcessors = activeStream.getProcessors();\n\n        const promises = streamProcessors.map((sp) => {\n            // Cancel everything in case the active stream is still buffering\n            return sp.prepareOuterPeriodPlaybackSeeking(e);\n        });\n\n        Promise.all(promises)\n            .then(() => {\n                _switchStream(seekToStream, activeStream, seekTime);\n            })\n            .catch((e) => {\n                errHandler.error(e);\n            });\n    }\n\n    /**\n     * A track change occured. We deactivate the preloading streams\n     * @param {object} e\n     * @private\n     */\n    function _onCurrentTrackChanged(e) {\n        // Track was changed in non active stream. No need to do anything, this only happens when a stream starts preloading\n        if (e.newMediaInfo.streamInfo.id !== activeStream.getId()) {\n            return;\n        }\n\n        // If the track was changed in the active stream we need to stop preloading and remove the already prebuffered stuff. Since we do not support preloading specific handling of specific AdaptationSets yet.\n        _deactivateAllPreloadingStreams();\n\n        activeStream.prepareTrackChange(e);\n    }\n\n    /**\n     * If the source buffer can be reused we can potentially start buffering the next period\n     * @param {object} nextStream\n     * @param {object} previousStream\n     * @return {boolean}\n     * @private\n     */\n    function _canSourceBuffersBeReused(nextStream, previousStream) {\n        try {\n            // Seamless period switch allowed only if:\n            // - none of the periods uses contentProtection.\n            // - AND changeType method implemented by browser or periods use the same codec.\n            return (settings.get().streaming.buffer.reuseExistingSourceBuffers && (previousStream.isProtectionCompatible(nextStream) || firstLicenseIsFetched) && (supportsChangeType && settings.get().streaming.buffer.useChangeTypeForTrackSwitch || previousStream.isMediaCodecCompatible(nextStream, previousStream)));\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Initiate the preloading of the next stream\n     * @param {object} nextStream\n     * @param {object} previousStream\n     * @private\n     */\n    function _onStreamCanLoadNext(nextStream, previousStream = null) {\n\n        if (mediaSource && !nextStream.getPreloaded()) {\n            let seamlessPeriodSwitch = _canSourceBuffersBeReused(nextStream, previousStream);\n\n            if (seamlessPeriodSwitch) {\n                nextStream.startPreloading(mediaSource, bufferSinks)\n                    .then(() => {\n                        preloadingStreams.push(nextStream);\n                    });\n            }\n        }\n    }\n\n    /**\n     * Returns the corresponding stream object for a specific presentation time.\n     * @param {number} time\n     * @return {null|object}\n     */\n    function getStreamForTime(time) {\n\n        if (isNaN(time)) {\n            return null;\n        }\n\n        const ln = streams.length;\n\n        for (let i = 0; i < ln; i++) {\n            const stream = streams[i];\n            const streamEnd = parseFloat((stream.getStartTime() + stream.getDuration()).toFixed(5));\n\n            if (time < streamEnd) {\n                return stream;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Add the DVR window to the metric list. We need the DVR window to restrict the seeking and calculate the right start time.\n     */\n    function addDVRMetric() {\n        try {\n            const isDynamic = adapter.getIsDynamic();\n            const streamsInfo = adapter.getStreamsInfo();\n            const manifestInfo = streamsInfo[0].manifestInfo;\n            const time = playbackController.getTime();\n            const range = timelineConverter.calcTimeShiftBufferWindow(streams, isDynamic);\n            const activeStreamProcessors = getActiveStreamProcessors();\n\n            if (typeof range.start === 'undefined' || typeof range.end === 'undefined') {\n                return;\n            }\n\n            if (!activeStreamProcessors || activeStreamProcessors.length === 0) {\n                dashMetrics.addDVRInfo(Constants.VIDEO, time, manifestInfo, range);\n            } else {\n                activeStreamProcessors.forEach((sp) => {\n                    dashMetrics.addDVRInfo(sp.getType(), time, manifestInfo, range);\n                });\n            }\n        } catch (e) {\n        }\n    }\n\n    /**\n     * The buffer level for a certain media type has been updated. If this is the initial playback and we want to autoplay the content we check if we can start playback now.\n     * For livestreams we might have a drift of the target live delay compared to the current live delay because reaching the initial buffer level took time.\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelUpdated(e) {\n\n        // check if this is the initial playback and we reached the buffer target. If autoplay is true we start playback\n        if (initialPlayback && autoPlay) {\n            const initialBufferLevel = mediaPlayerModel.getInitialBufferLevel();\n            const excludedStreamProcessors = [Constants.TEXT];\n            if (isNaN(initialBufferLevel) || initialBufferLevel <= playbackController.getBufferLevel(excludedStreamProcessors) || (adapter.getIsDynamic() && initialBufferLevel > playbackController.getLiveDelay())) {\n                initialPlayback = false;\n                _createPlaylistMetrics(PlayList.INITIAL_PLAYOUT_START_REASON);\n                playbackController.play();\n            }\n        }\n\n        if (e && e.mediaType) {\n            dashMetrics.addBufferLevel(e.mediaType, new Date(), e.bufferLevel * 1000);\n        }\n    }\n\n    /**\n     * When the quality is changed in the currently active stream and we do an aggressive replacement we must stop prebuffering. This is similar to a replacing track switch\n     * Otherwise preloading can go on.\n     * @param e\n     * @private\n     */\n    function _onQualityChanged(e) {\n        if (e.streamInfo.id === activeStream.getId() && e.reason && e.reason.forceReplace) {\n            _deactivateAllPreloadingStreams();\n        }\n\n        const stream = getStreamById(e.streamInfo.id);\n\n        stream.prepareQualityChange(e);\n    }\n\n    /**\n     * A setting related to the live delay was updated. Check if one of the latency values changed. If so, recalculate the live delay.\n     * @private\n     */\n    function _onLiveDelaySettingUpdated() {\n        if (adapter.getIsDynamic() && playbackController.getOriginalLiveDelay() !== 0 && activeStream) {\n            const streamsInfo = adapter.getStreamsInfo()\n            if (streamsInfo.length > 0) {\n                const manifestInfo = streamsInfo[0].manifestInfo;\n                const fragmentDuration = _getFragmentDurationForLiveDelayCalculation(streamsInfo, manifestInfo);\n\n                playbackController.computeAndSetLiveDelay(fragmentDuration, manifestInfo);\n            }\n        }\n    }\n\n    /**\n     * When the playback time is updated we add the droppedFrames metric to the dash metric object\n     * @private\n     */\n    function _onPlaybackTimeUpdated(/*e*/) {\n        if (hasVideoTrack()) {\n            const playbackQuality = videoModel.getPlaybackQuality();\n            if (playbackQuality) {\n                dashMetrics.addDroppedFrames(playbackQuality);\n            }\n        }\n    }\n\n    /**\n     * Once playback starts add playlist metrics depending on whether this was the first playback or playback resumed after pause\n     * @private\n     */\n    function _onPlaybackStarted( /*e*/) {\n        logger.debug('[onPlaybackStarted]');\n        if (!initialPlayback && isPaused) {\n            _createPlaylistMetrics(PlayList.RESUME_FROM_PAUSE_START_REASON);\n        }\n        if (initialPlayback) {\n            initialPlayback = false;\n        }\n        if (initialSteeringRequest) {\n            initialSteeringRequest = false;\n            // If this is the initial playback attempt and we have not yet triggered content steering now is the time\n            if (settings.get().streaming.applyContentSteering && !contentSteeringController.shouldQueryBeforeStart()) {\n                contentSteeringController.loadSteeringData();\n            }\n\n        }\n        isPaused = false;\n    }\n\n    /**\n     * Once playback is paused flush metrics\n     * @param {object} e\n     * @private\n     */\n    function _onPlaybackPaused(e) {\n        logger.debug('[onPlaybackPaused]');\n        if (!e.ended) {\n            isPaused = true;\n            _flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n        }\n    }\n\n    /**\n     * Callback once a stream/period is completely buffered. We can either signal the end of the stream or start prebuffering the next period.\n     * @param {object} e\n     * @private\n     */\n    function _onStreamBufferingCompleted(e) {\n        logger.debug(`Stream with id ${e.streamInfo.id} finished buffering`);\n        const isLast = e.streamInfo.isLast;\n        if (mediaSource && isLast) {\n            logger.info('[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController.');\n            mediaSourceController.signalEndOfStream(mediaSource);\n        } else {\n            _checkIfPrebufferingCanStart();\n        }\n    }\n\n    /**\n     * Check if we can start prebuffering the next period.\n     * @private\n     */\n    function _checkIfPrebufferingCanStart() {\n        // In multiperiod situations, we can start buffering the next stream\n        if (!activeStream || !activeStream.getHasFinishedBuffering()) {\n            return;\n        }\n        const upcomingStreams = _getNextStreams(activeStream);\n        let i = 0;\n\n        while (i < upcomingStreams.length) {\n            const stream = upcomingStreams[i];\n            const previousStream = i === 0 ? activeStream : upcomingStreams[i - 1];\n\n            // If the preloading for the current stream is not scheduled, but its predecessor has finished buffering we can start prebuffering this stream\n            if (!stream.getPreloaded() && previousStream.getHasFinishedBuffering()) {\n                if (mediaSource) {\n                    _onStreamCanLoadNext(stream, previousStream);\n                }\n            }\n            i += 1;\n        }\n    }\n\n    /**\n     * In some cases we need to fire the playback ended event manually\n     * @private\n     */\n    function _startPlaybackEndedTimerInterval() {\n        if (!playbackEndedTimerInterval) {\n            playbackEndedTimerInterval = setInterval(function () {\n                if (!isStreamSwitchingInProgress && playbackController.getTimeToStreamEnd() <= 0 && !playbackController.isSeeking()) {\n                    eventBus.trigger(Events.PLAYBACK_ENDED, { 'isLast': getActiveStreamInfo().isLast });\n                }\n            }, PLAYBACK_ENDED_TIMER_INTERVAL);\n        }\n    }\n\n    /**\n     * Stop the check if the playback has ended\n     * @private\n     */\n    function _stopPlaybackEndedTimerInterval() {\n        if (playbackEndedTimerInterval) {\n            clearInterval(playbackEndedTimerInterval);\n            playbackEndedTimerInterval = null;\n        }\n    }\n\n    /**\n     * Returns a playhead time, in seconds, converted to be relative\n     * to the start of an identified stream/period or null if no such stream\n     * @param {number} time\n     * @param {string} id\n     * @returns {number|null}\n     */\n    function getTimeRelativeToStreamId(time, id) {\n        let stream = null;\n        let baseStart = 0;\n        let streamStart = 0;\n        let streamDur = null;\n\n        for (let i = 0; i < streams.length; i++) {\n            stream = streams[i];\n            streamStart = stream.getStartTime();\n            streamDur = stream.getDuration();\n\n            // use start time, if not undefined or NaN or similar\n            if (Number.isFinite(streamStart)) {\n                baseStart = streamStart;\n            }\n\n            if (stream.getId() === id) {\n                return time - baseStart;\n            } else {\n                // use duration if not undefined or NaN or similar\n                if (Number.isFinite(streamDur)) {\n                    baseStart += streamDur;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns the streamProcessors of the active stream.\n     * @return {array}\n     */\n    function getActiveStreamProcessors() {\n        return activeStream ? activeStream.getProcessors() : [];\n    }\n\n    /**\n     * Once playback has ended we switch to the next stream\n     * @param {object} e\n     */\n    function _onPlaybackEnded(e) {\n        if (activeStream && !activeStream.getIsEndedEventSignaled()) {\n            activeStream.setIsEndedEventSignaled(true);\n            const nextStream = _getNextStream();\n            if (nextStream) {\n                logger.debug(`StreamController onEnded, found next stream with id ${nextStream.getStreamInfo().id}. Switching from ${activeStream.getStreamInfo().id} to ${nextStream.getStreamInfo().id}`);\n                _switchStream(nextStream, activeStream, NaN);\n            } else {\n                logger.debug('StreamController no next stream found');\n                activeStream.setIsEndedEventSignaled(false);\n            }\n            _flushPlaylistMetrics(nextStream ? PlayListTrace.END_OF_PERIOD_STOP_REASON : PlayListTrace.END_OF_CONTENT_STOP_REASON);\n        }\n        if (e && e.isLast) {\n            _stopPlaybackEndedTimerInterval();\n            contentSteeringController.stopSteeringRequestTimer();\n        }\n    }\n\n    /**\n     * Returns the next stream to be played relative to the stream provided. If no stream is provided we use the active stream.\n     * In order to avoid rounding issues we should not use the duration of the periods. Instead find the stream with starttime closest to startTime of the previous stream.\n     * @param {object} stream\n     * @return {null|object}\n     */\n    function _getNextStream(stream = null) {\n        const refStream = stream ? stream : activeStream ? activeStream : null;\n\n        if (!refStream) {\n            return null;\n        }\n\n        const refStreamInfo = refStream.getStreamInfo();\n        const start = refStreamInfo.start;\n        let i = 0;\n        let targetIndex = -1;\n        let lastDiff = NaN;\n\n        while (i < streams.length) {\n            const s = streams[i];\n            const sInfo = s.getStreamInfo();\n            const diff = sInfo.start - start;\n\n            if (diff > 0 && (isNaN(lastDiff) || diff < lastDiff) && refStreamInfo.id !== sInfo.id) {\n                lastDiff = diff;\n                targetIndex = i;\n            }\n\n            i += 1;\n        }\n\n        if (targetIndex >= 0) {\n            return streams[targetIndex];\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns all upcoming streams relative to the provided stream. If no stream is provided we use the active stream.\n     * @param {object} stream\n     * @return {array}\n     */\n    function _getNextStreams(stream = null) {\n        try {\n            const refStream = stream ? stream : activeStream ? activeStream : null;\n\n            if (refStream) {\n                const refStreamInfo = refStream.getStreamInfo();\n\n                return streams.filter(function (stream) {\n                    const sInfo = stream.getStreamInfo();\n                    return sInfo.start > refStreamInfo.start && refStreamInfo.id !== sInfo.id;\n                });\n            }\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Sets the duration attribute of the MediaSource using the MediaSourceController.\n     * @param {number} duration\n     * @private\n     */\n    function _setMediaDuration(duration) {\n        const manifestDuration = duration ? duration : getActiveStreamInfo().manifestInfo.duration;\n        mediaSourceController.setDuration(manifestDuration);\n    }\n\n    /**\n     * Returns the active stream\n     * @return {object}\n     */\n    function getActiveStream() {\n        return activeStream;\n    }\n\n    /**\n     * Initial playback indicates if we have called play() for the first time yet.\n     * @return {*}\n     */\n    function getInitialPlayback() {\n        return initialPlayback;\n    }\n\n    /**\n     * Auto Play indicates if the stream starts automatically as soon as it is initialized.\n     * @return {boolean}\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * Called once the first stream has been initialized. We only use this function to seek to the right start time.\n     * @return {number}\n     * @private\n     */\n    function _getInitialStartTime() {\n        // Seek new stream in priority order:\n        // - at start time provided via the application\n        // - at start time provided in URI parameters\n        // - at stream/period start time (for static streams) or live start time (for dynamic streams)\n        let startTime;\n        const isDynamic = adapter.getIsDynamic();\n        if (isDynamic) {\n            // For dynamic stream, start by default at (live edge - live delay)\n            const dvrInfo = dashMetrics.getCurrentDVRInfo();\n            const liveEdge = dvrInfo && dvrInfo.range ? dvrInfo.range.end : 0;\n            // we are already in the right start period. so time should not be smaller than period@start and should not be larger than period@end\n            startTime = liveEdge - playbackController.getOriginalLiveDelay();\n            // If start time in URI, take min value between live edge time and time from URI (capped by DVR window range)\n            const dvrWindow = dvrInfo ? dvrInfo.range : null;\n            if (dvrWindow) {\n                // If start time was provided by the application as part of the call to initialize() or attachSource() use this value\n                if (!isNaN(providedStartTime) || providedStartTime.toString().indexOf('posix:') !== -1) {\n                    logger.info(`Start time provided by the app: ${providedStartTime}`);\n                    const providedStartTimeAsPresentationTime = _getStartTimeFromProvidedData(true, providedStartTime)\n                    if (!isNaN(providedStartTimeAsPresentationTime)) {\n                        // Do not move closer to the live edge as defined by live delay\n                        startTime = Math.min(startTime, providedStartTimeAsPresentationTime);\n                    }\n                } else {\n                    // #t shall be relative to period start\n                    const startTimeFromUri = _getStartTimeFromUriParameters(true);\n                    if (!isNaN(startTimeFromUri)) {\n                        logger.info(`Start time from URI parameters: ${startTimeFromUri}`);\n                        // Do not move closer to the live edge as defined by live delay\n                        startTime = Math.min(startTime, startTimeFromUri);\n                    }\n                }\n                // If calcFromSegmentTimeline is enabled we saw problems caused by the MSE.seekableRange when starting at dvrWindow.start. Apply a small offset to avoid this problem.\n                const offset = settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline ? 0.1 : 0;\n                startTime = Math.max(startTime, dvrWindow.start + offset);\n            }\n        } else {\n            // For static stream, start by default at period start\n            const streams = getStreams();\n            const streamInfo = streams[0].getStreamInfo();\n            startTime = streamInfo.start;\n\n            // If start time was provided by the application as part of the call to initialize() or attachSource() use this value\n            if (!isNaN(providedStartTime)) {\n                logger.info(`Start time provided by the app: ${providedStartTime}`);\n                const providedStartTimeAsPresentationTime = _getStartTimeFromProvidedData(false, providedStartTime)\n                if (!isNaN(providedStartTimeAsPresentationTime)) {\n                    // Do not play earlier than the start of the first period\n                    startTime = Math.max(startTime, providedStartTimeAsPresentationTime);\n                }\n            } else {\n                // If start time in URI, take max value between period start and time from URI (if in period range)\n                const startTimeFromUri = _getStartTimeFromUriParameters(false);\n                if (!isNaN(startTimeFromUri)) {\n                    logger.info(`Start time from URI parameters: ${startTimeFromUri}`);\n                    // Do not play earlier than the start of the first period\n                    startTime = Math.max(startTime, startTimeFromUri);\n                }\n            }\n        }\n\n        return startTime;\n    }\n\n    /**\n     * 23009-1 Annex C.4 defines MPD anchors to use URI fragment syntax to start a presentation at a given time and a given state\n     * @param {boolean} isDynamic\n     * @return {number}\n     * @private\n     */\n    function _getStartTimeFromUriParameters(isDynamic) {\n        const fragData = uriFragmentModel.getURIFragmentData();\n        if (!fragData || !fragData.t) {\n            return NaN;\n        }\n        const refStream = getStreams()[0];\n        const referenceTime = refStream.getStreamInfo().start;\n        fragData.t = fragData.t.split(',')[0];\n\n        return _getStartTimeFromString(isDynamic, fragData.t, referenceTime);\n    }\n\n    /**\n     * Calculate start time using the value that was provided via the application as part of attachSource() or initialize()\n     * @param {boolean} isDynamic\n     * @param {number | string} providedStartTime\n     * @return {number}\n     * @private\n     */\n    function _getStartTimeFromProvidedData(isDynamic, providedStartTime) {\n        let referenceTime = 0;\n\n        if (!isDynamic) {\n            const refStream = getStreams()[0];\n            referenceTime = refStream.getStreamInfo().start;\n        }\n\n        return _getStartTimeFromString(isDynamic, providedStartTime, referenceTime);\n    }\n\n\n    function _getStartTimeFromString(isDynamic, targetValue, referenceTime) {\n        // Consider only start time of MediaRange\n        // TODO: consider end time of MediaRange to stop playback at provided end time\n        // \"t=<time>\" : time is relative to 1st period start\n        // \"t=posix:<time>\" : time is absolute start time as number of seconds since 01-01-1970\n        const period = adapter.getRegularPeriods()[0];\n        const targetString = targetValue.toString();\n        const posix = targetString.indexOf('posix:') !== -1 ? targetString.substring(6) === 'now' ? Date.now() / 1000 : parseFloat(targetString.substring(6)) : NaN;\n        let startTime = (isDynamic && !isNaN(posix)) ? timelineConverter.calcPresentationTimeFromWallTime(new Date(posix * 1000), period) : parseFloat(targetString) + referenceTime;\n\n        return startTime;\n    }\n\n    /**\n     * Streams that are no longer in the manifest can be filtered\n     * @param {object} streamsInfo\n     * @private\n     */\n    function _filterOutdatedStreams(streamsInfo) {\n        if (streamsInfo.length === 0) {\n            logger.warn(`No periods included in the current manifest. Skipping the filtering of outdated stream objects.`);\n            return;\n        }\n\n        streams = streams.filter((stream) => {\n            const isStillIncluded = streamsInfo.filter((sInfo) => {\n                return sInfo.id === stream.getId();\n            }).length > 0;\n\n            const shouldKeepStream = isStillIncluded || stream.getId() === activeStream.getId();\n\n            if (!shouldKeepStream) {\n                logger.debug(`Removing stream ${stream.getId()}`);\n                stream.reset(true);\n            }\n\n            return shouldKeepStream;\n        });\n    }\n\n    /**\n     * In order to calculate the initial live delay we might required the duration of the segments.\n     * @param {array} streamInfos\n     * @param {object} manifestInfo\n     * @return {number}\n     * @private\n     */\n    function _getFragmentDurationForLiveDelayCalculation(streamInfos, manifestInfo) {\n        try {\n            let fragmentDuration = NaN;\n\n            //  We use the maxFragmentDuration attribute if present\n            if (manifestInfo && !isNaN(manifestInfo.maxFragmentDuration) && isFinite(manifestInfo.maxFragmentDuration)) {\n                return manifestInfo.maxFragmentDuration;\n            }\n\n            // For single period manifests we can iterate over all AS and use the maximum segment length\n            if (streamInfos && streamInfos.length === 1) {\n                const streamInfo = streamInfos[0];\n                const mediaTypes = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT];\n\n\n                const fragmentDurations = mediaTypes\n                    .reduce((acc, mediaType) => {\n                        const mediaInfo = adapter.getMediaInfoForType(streamInfo, mediaType);\n\n                        if (mediaInfo && mediaInfo.isFragmented !== false) {\n                            acc.push(mediaInfo);\n                        }\n\n                        return acc;\n                    }, [])\n                    .reduce((acc, mediaInfo) => {\n                        const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n\n                        if (voRepresentations && voRepresentations.length > 0) {\n                            voRepresentations.forEach((voRepresentation) => {\n                                if (voRepresentation) {\n                                    acc.push(voRepresentation);\n                                }\n                            });\n                        }\n\n                        return acc;\n                    }, [])\n                    .reduce((acc, voRepresentation) => {\n                        const representation = adapter.convertRepresentationToRepresentationInfo(voRepresentation);\n\n                        if (representation && representation.fragmentDuration && !isNaN(representation.fragmentDuration)) {\n                            acc.push(representation.fragmentDuration);\n                        }\n\n                        return acc;\n                    }, []);\n\n                fragmentDuration = Math.max(...fragmentDurations);\n            }\n\n            return isFinite(fragmentDuration) ? fragmentDuration : NaN;\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    /**\n     * Callback handler after the manifest has been updated. Trigger an update in the adapter and filter unsupported stuff.\n     * Finally attempt UTC sync\n     * @param {object} e\n     * @private\n     */\n    function _onManifestUpdated(e) {\n        if (!e.error) {\n            logger.info('Manifest updated... updating data system wide.');\n            //Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream\n            //is SegmentTimeline to avoid using time source\n            const manifest = e.manifest;\n            adapter.updatePeriods(manifest);\n\n            let manifestUTCTimingSources = adapter.getUTCTimingSources();\n\n            if (adapter.getIsDynamic() && (!manifestUTCTimingSources || manifestUTCTimingSources.length === 0)) {\n                eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                    level: ConformanceViolationConstants.LEVELS.WARNING,\n                    event: ConformanceViolationConstants.EVENTS.NO_UTC_TIMING_ELEMENT\n                });\n            }\n\n            let allUTCTimingSources = (!adapter.getIsDynamic()) ? manifestUTCTimingSources : manifestUTCTimingSources.concat(customParametersModel.getUTCTimingSources());\n\n            // It is important to filter before initializing the baseUrlController. Otherwise we might end up with wrong references in case we remove AdaptationSets.\n            capabilitiesFilter.filterUnsupportedFeatures(manifest)\n                .then(() => {\n                    baseURLController.initialize(manifest);\n                    timeSyncController.attemptSync(allUTCTimingSources, adapter.getIsDynamic());\n                });\n        } else {\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    /**\n     * Check if the stream has a video track\n     * @return {boolean}\n     */\n    function hasVideoTrack() {\n        return activeStream ? activeStream.getHasVideoTrack() : false;\n    }\n\n    /**\n     * Check if the stream has an audio track\n     * @return {boolean}\n     */\n    function hasAudioTrack() {\n        return activeStream ? activeStream.getHasAudioTrack() : false;\n    }\n\n\n    function switchToVideoElement(seekTime) {\n        if (activeStream) {\n            playbackController.initialize(getActiveStreamInfo());\n            _openMediaSource(seekTime, false, true);\n        }\n    }\n\n    function _flushPlaylistMetrics(reason, time) {\n        time = time || new Date();\n\n        getActiveStreamProcessors().forEach(p => {\n            p.finalisePlayList(time, reason);\n        });\n        dashMetrics.addPlayList();\n    }\n\n    function _createPlaylistMetrics(startReason) {\n        dashMetrics.createPlaylistMetrics(playbackController.getTime() * 1000, startReason);\n    }\n\n    function _onPlaybackError(e) {\n        if (!e.error) return;\n\n        let msg = '';\n\n        switch (e.error.code) {\n            case 1:\n                msg = 'MEDIA_ERR_ABORTED';\n                break;\n            case 2:\n                msg = 'MEDIA_ERR_NETWORK';\n                break;\n            case 3:\n                msg = 'MEDIA_ERR_DECODE';\n                errorInformation.counts.mediaErrorDecode += 1;\n                break;\n            case 4:\n                msg = 'MEDIA_ERR_SRC_NOT_SUPPORTED';\n                break;\n            case 5:\n                msg = 'MEDIA_ERR_ENCRYPTED';\n                break;\n            default:\n                msg = 'UNKNOWN';\n                break;\n        }\n\n\n        if (msg === 'MEDIA_ERR_DECODE' && settings.get().errors.recoverAttempts.mediaErrorDecode >= errorInformation.counts.mediaErrorDecode) {\n            _handleMediaErrorDecode();\n            return;\n        }\n\n        hasMediaError = true;\n\n        if (e.error.message) {\n            msg += ' (' + e.error.message + ')';\n        }\n\n        if (e.error.msExtendedCode) {\n            msg += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')';\n        }\n\n        logger.fatal('Video Element Error: ' + msg);\n        if (e.error) {\n            logger.fatal(e.error);\n        }\n        errHandler.error(new DashJSError(e.error.code, msg));\n        reset();\n    }\n\n    /**\n     * Handles mediaError\n     * @private\n     */\n    function _handleMediaErrorDecode() {\n        logger.warn('A MEDIA_ERR_DECODE occured: Resetting the MediaSource');\n        const time = playbackController.getTime();\n        // Deactivate the current stream.\n        activeStream.deactivate(false);\n\n        // Reset MSE\n        logger.warn(`MediaSource has been resetted. Resuming playback from time ${time}`);\n        _openMediaSource(time, false, false);\n    }\n\n    function getActiveStreamInfo() {\n        return activeStream ? activeStream.getStreamInfo() : null;\n    }\n\n    function getIsStreamSwitchInProgress() {\n        return isStreamSwitchingInProgress;\n    }\n\n    function getHasMediaOrInitialisationError() {\n        return hasMediaError || hasInitialisationError;\n    }\n\n    function getStreamById(id) {\n        for (let i = 0, ln = streams.length; i < ln; i++) {\n            if (streams[i].getId() === id) {\n                return streams[i];\n            }\n        }\n        return null;\n    }\n\n    function _onManifestValidityChanged(e) {\n        if (!isNaN(e.newDuration)) {\n            _setMediaDuration(e.newDuration);\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.capabilitiesFilter) {\n            capabilitiesFilter = config.capabilitiesFilter;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n        if (config.textController) {\n            textController = config.textController;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n        if (config.uriFragmentModel) {\n            uriFragmentModel = config.uriFragmentModel;\n        }\n        if (config.segmentBaseController) {\n            segmentBaseController = config.segmentBaseController;\n        }\n    }\n\n    function setProtectionData(protData) {\n        protectionData = protData;\n        if (protectionController) {\n            protectionController.setProtectionData(protectionData);\n        }\n    }\n\n    function resetInitialSettings() {\n        streams = [];\n        providedStartTime = NaN;\n        protectionController = null;\n        isStreamSwitchingInProgress = false;\n        activeStream = null;\n        hasMediaError = false;\n        hasInitialisationError = false;\n        initialPlayback = true;\n        initialSteeringRequest = true;\n        isPaused = false;\n        autoPlay = true;\n        playbackEndedTimerInterval = null;\n        firstLicenseIsFetched = false;\n        supportsChangeType = false;\n        preloadingStreams = [];\n        waitForPlaybackStartTimeout = null;\n        errorInformation = {\n            counts: {\n                mediaErrorDecode: 0\n            }\n        }\n    }\n\n    function reset() {\n        _checkConfig();\n\n        timeSyncController.reset();\n\n        _flushPlaylistMetrics(hasMediaError || hasInitialisationError ? PlayListTrace.FAILURE_STOP_REASON : PlayListTrace.USER_REQUEST_STOP_REASON);\n\n        for (let i = 0, ln = streams ? streams.length : 0; i < ln; i++) {\n            const stream = streams[i];\n            stream.reset(hasMediaError);\n        }\n\n        unRegisterEvents();\n\n        baseURLController.reset();\n        manifestUpdater.reset();\n        eventController.reset();\n        dashMetrics.clearAllCurrentMetrics();\n        manifestModel.setValue(null);\n        manifestLoader.reset();\n        timelineConverter.reset();\n        initCache.reset();\n\n        if (mediaSource) {\n            mediaSourceController.detachMediaSource(videoModel);\n            mediaSource = null;\n        }\n        videoModel = null;\n        if (protectionController) {\n            protectionController = null;\n            protectionData = null;\n            if (manifestModel.getValue()) {\n                eventBus.trigger(Events.PROTECTION_DESTROYED, { data: manifestModel.getValue().url });\n            }\n        }\n\n        _stopPlaybackEndedTimerInterval();\n        eventBus.trigger(Events.STREAM_TEARDOWN_COMPLETE);\n        resetInitialSettings();\n    }\n\n    function _onMetricAdded(e) {\n        if (e.metric === MetricsConstants.DVR_INFO) {\n            //Match media type? How can DVR window be different for media types?\n            //Should we normalize and union the two?\n            const targetMediaType = hasAudioTrack() ? Constants.AUDIO : Constants.VIDEO;\n            if (e.mediaType === targetMediaType) {\n                mediaSourceController.setSeekable(e.value.range.start, e.value.range.end);\n            }\n        }\n    }\n\n    function getStreams() {\n        return streams;\n    }\n\n    instance = {\n        initialize,\n        getActiveStreamInfo,\n        addDVRMetric,\n        hasVideoTrack,\n        hasAudioTrack,\n        getStreamById,\n        getStreamForTime,\n        getTimeRelativeToStreamId,\n        load,\n        loadWithManifest,\n        getActiveStreamProcessors,\n        setConfig,\n        setProtectionData,\n        getIsStreamSwitchInProgress,\n        switchToVideoElement,\n        getHasMediaOrInitialisationError,\n        getStreams,\n        getActiveStream,\n        getInitialPlayback,\n        getAutoPlay,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamController.__dashjs_factory_name = 'StreamController';\nexport default FactoryMaker.getSingletonFactory(StreamController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Events from '../../core/events/Events';\nimport EventBus from '../../core/EventBus';\nimport Constants from '../constants/Constants';\n\nconst GAP_HANDLER_INTERVAL = 100;\nconst THRESHOLD_TO_STALLS = 10;\nconst GAP_JUMP_WAITING_TIME_OFFSET = 0.1;\n\nfunction GapController() {\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        lastPlaybackTime,\n        settings,\n        wallclockTicked,\n        gapHandlerInterval,\n        lastGapJumpPosition,\n        playbackController,\n        streamController,\n        videoModel,\n        jumpTimeoutHandler,\n        trackSwitchByMediaType,\n        logger;\n\n    function initialize() {\n        _registerEvents();\n    }\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        reset();\n    }\n\n    function reset() {\n        _stopGapHandler();\n        _unregisterEvents();\n        resetInitialSettings();\n    }\n\n    function resetInitialSettings() {\n        gapHandlerInterval = null;\n        lastGapJumpPosition = NaN;\n        wallclockTicked = 0;\n        jumpTimeoutHandler = null;\n        trackSwitchByMediaType = {};\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function _registerEvents() {\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n        eventBus.on(Events.INITIAL_STREAM_SWITCH, _onInitialStreamSwitch, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, this);\n        eventBus.on(Events.BUFFER_REPLACEMENT_STARTED, _onBufferReplacementStarted, instance);\n        eventBus.on(Events.TRACK_CHANGE_RENDERED, _onBufferReplacementEnded, instance);\n    }\n\n    function _unregisterEvents() {\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n        eventBus.off(Events.INITIAL_STREAM_SWITCH, _onInitialStreamSwitch, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, this);\n        eventBus.off(Events.BUFFER_REPLACEMENT_STARTED, _onBufferReplacementStarted, instance);\n        eventBus.off(Events.TRACK_CHANGE_RENDERED, _onBufferReplacementEnded, instance);\n    }\n\n    /**\n     * Clear scheduled gap jump when seeking\n     * @private\n     */\n    function _onPlaybackSeeking() {\n        if (jumpTimeoutHandler) {\n            clearTimeout(jumpTimeoutHandler);\n            jumpTimeoutHandler = null;\n        }\n    }\n\n    /**\n     *  If the track was changed in the current active period and the player might aggressively replace segments the buffer will be empty for a short period of time. Avoid gap jumping at that time.\n     *  We wait until the next media fragment of the target type has been appended before activating again\n     * @param {object} e\n     * @private\n     */\n    function _onBufferReplacementStarted(e) {\n        try {\n            if (e.streamId !== streamController.getActiveStreamInfo().id || (e.mediaType !== Constants.VIDEO && e.mediaType !== Constants.AUDIO)) {\n                return;\n            }\n\n            if (e.streamId === streamController.getActiveStreamInfo().id) {\n                trackSwitchByMediaType[e.mediaType] = true;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Activate gap jumping again once segment of target type has been appended\n     * @param {object} e\n     * @private\n     */\n    function _onBufferReplacementEnded(e) {\n        if (!e || !e.mediaType) {\n            return;\n        }\n\n        trackSwitchByMediaType[e.mediaType] = false;\n    }\n\n    /**\n     * Activate the gap handler after the first stream switch\n     * @private\n     */\n    function _onInitialStreamSwitch() {\n        if (!gapHandlerInterval) {\n            _startGapHandler();\n        }\n    }\n\n    /**\n     * Callback handler for when the wallclock time has been updated\n     * @private\n     */\n    function _onWallclockTimeUpdated(/*e*/) {\n        if (!_shouldCheckForGaps(settings.get().streaming.gaps.enableSeekFix)) {\n            return;\n        }\n\n        wallclockTicked++;\n        if (wallclockTicked >= THRESHOLD_TO_STALLS) {\n            const currentTime = playbackController.getTime();\n            if (lastPlaybackTime === currentTime) {\n                _jumpGap(currentTime, true);\n            } else {\n                lastPlaybackTime = currentTime;\n                lastGapJumpPosition = NaN;\n            }\n            wallclockTicked = 0;\n        }\n    }\n\n    /**\n     * Returns if we are supposed to check for gaps\n     * @param {boolean} checkSeekingState - Usually we are not checking for gaps in the videolement is in seeking state. If this flag is set to true we check for a potential exceptions of this rule.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldCheckForGaps(checkSeekingState = false) {\n        if (!streamController.getActiveStream()) {\n            return false;\n        }\n        const trackSwitchInProgress = Object.keys(trackSwitchByMediaType).some((key) => {\n            return trackSwitchByMediaType[key];\n        });\n        const shouldIgnoreSeekingState = checkSeekingState ? _shouldIgnoreSeekingState() : false;\n\n        return !trackSwitchInProgress && settings.get().streaming.gaps.jumpGaps && streamController.getActiveStreamProcessors().length > 0 && (!playbackController.isSeeking() || shouldIgnoreSeekingState) && !playbackController.isPaused() && !streamController.getIsStreamSwitchInProgress() &&\n            !streamController.getHasMediaOrInitialisationError();\n    }\n\n    /**\n     * There are cases in which we never transition out of the seeking state and still need to jump a gap. For instance if the user seeks right before a gap and video element will not transition out of the seeking state.\n     * For now limit this to period boundaries. In this case the current period is completely buffered and we are right before the end of the period.\n     * @private\n     */\n    function _shouldIgnoreSeekingState() {\n        const activeStream = streamController.getActiveStream();\n        const streamEnd = parseFloat((activeStream.getStartTime() + activeStream.getDuration()).toFixed(5))\n\n        return playbackController.getTime() + settings.get().streaming.gaps.threshold >= streamEnd;\n    }\n\n    /**\n     * Returns the index of the range object that comes after the current time\n     * @param {object} ranges\n     * @param {number} currentTime\n     * @private\n     * @return {null|number}\n     */\n    function _getNextRangeIndex(ranges, currentTime) {\n        try {\n\n            if (!ranges || (ranges.length <= 1 && currentTime > 0)) {\n                return NaN;\n            }\n            let nextRangeIndex = NaN;\n            let j = 0;\n\n            while (isNaN(nextRangeIndex) && j < ranges.length) {\n                const rangeEnd = j > 0 ? ranges.end(j - 1) : 0;\n                if (currentTime < ranges.start(j) && rangeEnd - currentTime < settings.get().streaming.gaps.threshold) {\n                    nextRangeIndex = j;\n                }\n                j += 1;\n            }\n            return nextRangeIndex;\n\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Check if the currentTime exist within the buffered range\n     * @param {object} ranges\n     * @param {number} currentTime\n     * @private\n     * @return {boolean}\n     */\n    function _isTimeBuffered(ranges, currentTime) {\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (currentTime >= ranges.start(i) && currentTime <= ranges.end(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Starts the interval that checks for gaps\n     * @private\n     */\n    function _startGapHandler() {\n        try {\n            if (!gapHandlerInterval) {\n                logger.debug('Starting the gap controller');\n                gapHandlerInterval = setInterval(() => {\n                    if (!_shouldCheckForGaps()) {\n                        return;\n                    }\n                    const currentTime = playbackController.getTime();\n                    _jumpGap(currentTime);\n\n                }, GAP_HANDLER_INTERVAL);\n            }\n        } catch (e) {\n        }\n    }\n\n    /**\n     * Clears the gap interval handler\n     * @private\n     */\n    function _stopGapHandler() {\n        logger.debug('Stopping the gap controller');\n        if (gapHandlerInterval) {\n            clearInterval(gapHandlerInterval);\n            gapHandlerInterval = null;\n        }\n    }\n\n    /**\n     * Jump a gap\n     * @param {number} currentTime\n     * @param {boolean} playbackStalled\n     * @private\n     */\n    function _jumpGap(currentTime, playbackStalled = false) {\n        const enableStallFix = settings.get().streaming.gaps.enableStallFix;\n        const stallSeek = settings.get().streaming.gaps.stallSeek;\n        const smallGapLimit = settings.get().streaming.gaps.smallGapLimit;\n        const jumpLargeGaps = settings.get().streaming.gaps.jumpLargeGaps;\n        const ranges = videoModel.getBufferRange();\n        let nextRangeIndex;\n        let seekToPosition = NaN;\n        let jumpToStreamEnd = false;\n\n\n        // Get the range just after current time position\n        nextRangeIndex = _getNextRangeIndex(ranges, currentTime);\n\n        if (!isNaN(nextRangeIndex)) {\n            const start = ranges.start(nextRangeIndex);\n            const gap = start - currentTime;\n            if (gap > 0 && (gap <= smallGapLimit || jumpLargeGaps)) {\n                seekToPosition = start;\n            }\n        }\n\n        // Playback has stalled before period end. We seek to the end of the period\n        const timeToStreamEnd = playbackController.getTimeToStreamEnd();\n        if (isNaN(seekToPosition) && playbackStalled && isFinite(timeToStreamEnd) && !isNaN(timeToStreamEnd) && timeToStreamEnd < smallGapLimit) {\n            seekToPosition = parseFloat(playbackController.getStreamEndTime().toFixed(5));\n            jumpToStreamEnd = true;\n        }\n\n        if (enableStallFix && isNaN(seekToPosition) && playbackStalled && isNaN(nextRangeIndex) && _isTimeBuffered(ranges, currentTime)) {\n            if (stallSeek === 0) {\n                logger.warn(`Toggle play pause to break stall`);\n                videoModel.pause();\n                videoModel.play();\n            } else {\n                logger.warn(`Jumping ${stallSeek}s to break stall`);\n                seekToPosition = currentTime + stallSeek;\n            }\n        }\n\n        if (seekToPosition > 0 && lastGapJumpPosition !== seekToPosition && seekToPosition > currentTime && !jumpTimeoutHandler) {\n            const timeUntilGapEnd = seekToPosition - currentTime;\n\n            if (jumpToStreamEnd) {\n                const nextStream = streamController.getStreamForTime(seekToPosition);\n                const internalSeek = nextStream && !!nextStream.getPreloaded();\n\n                logger.warn(`Jumping to end of stream because of gap from ${currentTime} to ${seekToPosition}. Gap duration: ${timeUntilGapEnd}`);\n                playbackController.seek(seekToPosition, true, internalSeek);\n            } else {\n                const isDynamic = playbackController.getIsDynamic();\n                const start = nextRangeIndex > 0 ? ranges.end(nextRangeIndex - 1) : currentTime;\n                const timeToWait = !isDynamic ? 0 : Math.max(0, timeUntilGapEnd - GAP_JUMP_WAITING_TIME_OFFSET) * 1000;\n\n                jumpTimeoutHandler = window.setTimeout(() => {\n                    playbackController.seek(seekToPosition, true, true);\n                    logger.warn(`Jumping gap occuring in period ${streamController.getActiveStream().getStreamId()} starting at ${start} and ending at ${seekToPosition}. Jumping by: ${seekToPosition - start}`);\n                    jumpTimeoutHandler = null;\n                }, timeToWait);\n            }\n            lastGapJumpPosition = seekToPosition;\n        }\n    }\n\n    instance = {\n        reset,\n        setConfig,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nGapController.__dashjs_factory_name = 'GapController';\nexport default FactoryMaker.getSingletonFactory(GapController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport Constants from '../constants/Constants';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport Events from '../../core/events/Events';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport Utils from '../../core/Utils';\n\nfunction CatchupController() {\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        isCatchupSeekInProgress,\n        isSafari,\n        videoModel,\n        settings,\n        streamController,\n        playbackController,\n        mediaPlayerModel,\n        playbackStalled,\n        logger;\n\n    function initialize() {\n        _registerEvents();\n        _checkPlaybackRates();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n    }\n\n    function _registerEvents() {\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.on(Events.SETTING_UPDATED_CATCHUP_ENABLED, _onCatchupSettingUpdated, instance);\n        eventBus.on(Events.SETTING_UPDATED_PLAYBACK_RATE_MIN, _checkPlaybackRates, instance);\n        eventBus.on(Events.SETTING_UPDATED_PLAYBACK_RATE_MAX, _checkPlaybackRates, instance);\n        eventBus.on(MediaPlayerEvents.STREAM_INITIALIZED, _checkPlaybackRates, instance);\n    }\n\n    function _unregisterEvents() {\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.off(Events.SETTING_UPDATED_CATCHUP_ENABLED, _onCatchupSettingUpdated, instance);\n        eventBus.off(Events.SETTING_UPDATED_PLAYBACK_RATE_MIN, _checkPlaybackRates, instance);\n        eventBus.off(Events.SETTING_UPDATED_PLAYBACK_RATE_MAX, _checkPlaybackRates, instance);\n        eventBus.off(MediaPlayerEvents.STREAM_INITIALIZED, _checkPlaybackRates, instance);\n    }\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        _resetInitialSettings();\n    }\n\n    function reset() {\n        _unregisterEvents();\n        _resetInitialSettings();\n        videoModel.setPlaybackRate(1.0, true);\n    }\n\n    function _resetInitialSettings() {\n        isCatchupSeekInProgress = false;\n        const ua = Utils.parseUserAgent();\n        isSafari = ua && ua.browser && ua.browser.name && ua.browser.name.toLowerCase() === 'safari';\n    }\n\n\n    function _onPlaybackSeeked() {\n        isCatchupSeekInProgress = false;\n    }\n\n    /**\n     * When the buffer level updated we check if we can remove the stalled state\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelUpdated(e) {\n        // do not stop when getting an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id || !playbackStalled) {\n            return;\n        }\n\n        // we remove the stalled state once we reach a certain buffer level\n        const liveDelay = playbackController.getLiveDelay();\n        const bufferLevel = playbackController.getBufferLevel();\n        if (bufferLevel > liveDelay / 2) {\n            playbackStalled = false;\n        }\n    }\n\n    /**\n     * When the buffer state changed to BUFFER_EMPTY we update the stalled state\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelStateChanged(e) {\n        // do not stop when getting an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id) {\n            return;\n        }\n\n        playbackStalled = e.state === MetricsConstants.BUFFER_EMPTY;\n    }\n\n    /**\n     * If the catchup mode is disabled in the settings we reset playback rate to 1.0\n     * @private\n     */\n    function _onCatchupSettingUpdated() {\n        if (!mediaPlayerModel.getCatchupModeEnabled()) {\n            videoModel.setPlaybackRate(1.0);\n        }\n    }\n\n    /**\n     * While playback is progressing we check if we need to start or stop the catchup mechanism to reach the target latency\n     * @private\n     */\n    function _onPlaybackProgression() {\n        if (\n            playbackController.getIsDynamic() &&\n            mediaPlayerModel.getCatchupModeEnabled() &&\n            ((mediaPlayerModel.getCatchupPlaybackRates().max > 0) || (mediaPlayerModel.getCatchupPlaybackRates().min < 0)) &&\n            !playbackController.isPaused() &&\n            !playbackController.isSeeking() && _shouldStartCatchUp()\n        ) {\n            _startPlaybackCatchUp();\n        }\n    }\n\n    /**\n     * Apply catchup mode. We either seek back to the target live edge or increase the playback rate.\n     */\n    function _startPlaybackCatchUp() {\n\n        // we are seeking dont do anything for now\n        if (isCatchupSeekInProgress) {\n            return;\n        }\n\n        if (videoModel) {\n            let newRate;\n            const currentPlaybackRate = videoModel.getPlaybackRate();\n            const liveCatchupPlaybackRates = mediaPlayerModel.getCatchupPlaybackRates();\n            const bufferLevel = playbackController.getBufferLevel();\n            const deltaLatency = _getLatencyDrift();\n\n            // we reached the maxDrift. Do a seek\n            const maxDrift = mediaPlayerModel.getCatchupMaxDrift();\n            if (!isNaN(maxDrift) && maxDrift > 0 &&\n                deltaLatency > maxDrift) {\n                logger.info('[CatchupController]: Low Latency catchup mechanism. Latency too high, doing a seek to live point');\n                isCatchupSeekInProgress = true;\n                playbackController.seekToCurrentLive(true, false);\n            }\n\n            // try to reach the target latency by adjusting the playback rate\n            else {\n                const currentLiveLatency = playbackController.getCurrentLiveLatency();\n                const targetLiveDelay = playbackController.getLiveDelay();\n\n                if (_getCatchupMode() === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                    // Custom playback control: Based on buffer level\n                    const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n                    newRate = _calculateNewPlaybackRateLolP(liveCatchupPlaybackRates, currentLiveLatency, targetLiveDelay, playbackBufferMin, bufferLevel);\n                } else {\n                    // Default playback control: Based on target and current latency\n                    newRate = _calculateNewPlaybackRateDefault(liveCatchupPlaybackRates, currentLiveLatency, targetLiveDelay, bufferLevel);\n                }\n\n                // We adjust the min change linear, depending on the maximum catchup rate. Default is 0.02 for rate 0.5.\n                // For Safari we stick to a fixed value because of  https://bugs.webkit.org/show_bug.cgi?id=208142\n                const minPlaybackRateChange = isSafari ? 0.25 : 0.02 / (0.5 / liveCatchupPlaybackRates.max);\n\n                // Obtain newRate and apply to video model.  Don't change playbackrate for small variations (don't overload element with playbackrate changes)\n                if (newRate && Math.abs(currentPlaybackRate - newRate) >= minPlaybackRateChange) { // non-null\n                    logger.debug(`[CatchupController]: Setting playback rate to ${newRate}`);\n                    videoModel.setPlaybackRate(newRate);\n                }\n            }\n        }\n    }\n\n    /**\n     * Calculates the drift between the current latency and the target latency\n     * @return {number}\n     * @private\n     */\n    function _getLatencyDrift() {\n        const currentLiveLatency = playbackController.getCurrentLiveLatency();\n        const targetLiveDelay = playbackController.getLiveDelay();\n\n        return currentLiveLatency - targetLiveDelay;\n    }\n\n    /**\n     * Checks whether the catchup mechanism should be enabled. We use different subfunctions here depending on the catchup mode.\n     * @return {boolean}\n     */\n    function _shouldStartCatchUp() {\n        try {\n            if (!playbackController.getTime() > 0 || isCatchupSeekInProgress) {\n                return false;\n            }\n\n            const catchupMode = _getCatchupMode();\n\n            if (catchupMode === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                const currentBuffer = playbackController.getBufferLevel();\n                const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n                return _lolpNeedToCatchUpCustom(currentBuffer, playbackBufferMin);\n            } else {\n                return _defaultNeedToCatchUp();\n            }\n\n        } catch (e) {\n            return false;\n        }\n    }\n\n\n    /**\n     * Returns the mode for live playback catchup.\n     * @return {String}\n     * @private\n     */\n    function _getCatchupMode() {\n        const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n        return settings.get().streaming.liveCatchup.mode === Constants.LIVE_CATCHUP_MODE_LOLP && playbackBufferMin !== null && !isNaN(playbackBufferMin) ? Constants.LIVE_CATCHUP_MODE_LOLP : Constants.LIVE_CATCHUP_MODE_DEFAULT;\n    }\n\n    /**\n     * Default algorithm to determine if catchup mode should be enabled\n     * @return {boolean}\n     * @private\n     */\n    function _defaultNeedToCatchUp() {\n        try {\n            const latencyDrift = Math.abs(_getLatencyDrift());\n\n            return latencyDrift > 0;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * LoL+ logic to determine if catchup mode should be enabled\n     * @param {number} currentBuffer\n     * @param {number} playbackBufferMin\n     * @return {boolean}\n     * @private\n     */\n    function _lolpNeedToCatchUpCustom(currentBuffer, playbackBufferMin) {\n        try {\n            const latencyDrift = Math.abs(_getLatencyDrift());\n\n            return latencyDrift > 0 || currentBuffer < playbackBufferMin;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Default algorithm to calculate the new playback rate\n     * @param {object} liveCatchUpPlaybackRates\n     * @param {number} liveCatchUpPlaybackRates.min - minimum playback rate decrease limit\n     * @param {number} liveCatchUpPlaybackRates.max - maximum playback rate increase limit\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {number}\n     * @private\n     */\n    function _calculateNewPlaybackRateDefault(liveCatchUpPlaybackRates, currentLiveLatency, liveDelay, bufferLevel) {\n        // if we recently ran into an empty buffer we wait for the buffer to recover before applying a new rate\n        if (playbackStalled) {\n            return 1.0;\n        }\n\n        const deltaLatency = currentLiveLatency - liveDelay;\n        const cpr = (deltaLatency < 0) ? Math.abs(liveCatchUpPlaybackRates.min) : liveCatchUpPlaybackRates.max;\n        const d = deltaLatency * 5;\n\n        // Playback rate must be between (1 - cpr) - (1 + cpr)\n        // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n        const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n        let newRate = (1 - cpr) + s;\n        // take into account situations in which there are buffer stalls,\n        // in which increasing playbackRate to reach target latency will\n        // just cause more and more stall situations\n        if (playbackController.getPlaybackStalled()) {\n            if (bufferLevel <= liveDelay / 2 && deltaLatency > 0) {\n                newRate = 1.0;\n            }\n        }\n\n        return newRate;\n    }\n\n    /**\n     * Lol+ algorithm to calculate the new playback rate\n     * @param {object} liveCatchUpPlaybackRates\n     * @param {number} liveCatchUpPlaybackRates.min - minimum playback rate decrease limit\n     * @param {number} liveCatchUpPlaybackRates.max - maximum playback rate increase limit\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} playbackBufferMin\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {number}\n     * @private\n     */\n    function _calculateNewPlaybackRateLolP(liveCatchUpPlaybackRates, currentLiveLatency, liveDelay, playbackBufferMin, bufferLevel) {\n        let newRate;\n\n        // Hybrid: Buffer-based\n        if (bufferLevel < playbackBufferMin) {\n            // Buffer in danger, slow down\n            const cpr = Math.abs(liveCatchUpPlaybackRates.min); // Absolute value as negative delta value will be used.\n            const deltaBuffer = bufferLevel - playbackBufferMin; // -ve value\n            const d = deltaBuffer * 5;\n\n            // Playback rate must be between (1 - cpr) - (1 + cpr)\n            // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n            const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n            newRate = (1 - cpr) + s;\n\n            logger.debug('[LoL+ playback control_buffer-based] bufferLevel: ' + bufferLevel + ', newRate: ' + newRate);\n        } else {\n            // Hybrid: Latency-based\n            // Buffer is safe, vary playback rate based on latency\n            const cpr = liveCatchUpPlaybackRates.max;\n            // Check if latency is within range of target latency\n            const minDifference = 0.02;\n            if (Math.abs(currentLiveLatency - liveDelay) <= (minDifference * liveDelay)) {\n                newRate = 1;\n            } else {\n                const deltaLatency = currentLiveLatency - liveDelay;\n                const d = deltaLatency * 5;\n\n                // Playback rate must be between (1 - cpr) - (1 + cpr)\n                // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n                const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n                newRate = (1 - cpr) + s;\n            }\n\n            logger.debug('[LoL+ playback control_latency-based] latency: ' + currentLiveLatency + ', newRate: ' + newRate);\n        }\n\n        return newRate\n    }\n\n    function _checkPlaybackRates() {\n        mediaPlayerModel.getCatchupPlaybackRates(true);\n    }\n\n    instance = {\n        reset,\n        setConfig,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nCatchupController.__dashjs_factory_name = 'CatchupController';\nexport default FactoryMaker.getSingletonFactory(CatchupController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\n\nconst SUPPORTED_SCHEMES = [Constants.SERVICE_DESCRIPTION_DVB_LL_SCHEME];\nconst MEDIA_TYPES = {\n    VIDEO: 'video',\n    AUDIO: 'audio',\n    ANY: 'any',\n    ALL: 'all'\n}\n\nfunction ServiceDescriptionController() {\n    const context = this.context;\n\n    let instance,\n        serviceDescriptionSettings,\n        prftOffsets,\n        logger,\n        adapter;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        serviceDescriptionSettings = {\n            liveDelay: NaN,\n            liveCatchup: {\n                maxDrift: NaN,\n                playbackRate: {\n                    min: NaN,\n                    max: NaN\n                },\n            },\n            minBitrate: {},\n            maxBitrate: {},\n            initialBitrate: {},\n            contentSteering: null\n        };\n        prftOffsets = [];\n    }\n\n    /**\n     * Returns the service description settings for latency, catchup and bandwidth\n     */\n    function getServiceDescriptionSettings() {\n        return serviceDescriptionSettings\n    }\n\n    /**\n     * Check for potential ServiceDescriptor elements in the MPD and update the settings accordingly\n     * @param {object} manifestInfo\n     * @private\n     */\n    function applyServiceDescription(manifestInfo) {\n        if (!manifestInfo || !manifestInfo.serviceDescriptions) {\n            return;\n        }\n\n        const supportedServiceDescriptions = manifestInfo.serviceDescriptions.filter(sd => SUPPORTED_SCHEMES.includes(sd.schemeIdUri));\n        const allClientsServiceDescriptions = manifestInfo.serviceDescriptions.filter(sd => sd.schemeIdUri == null);\n        let sd = (supportedServiceDescriptions.length > 0)\n            ? supportedServiceDescriptions[supportedServiceDescriptions.length - 1]\n            : allClientsServiceDescriptions[allClientsServiceDescriptions.length - 1];\n        if (!sd) return;\n\n        if (sd.latency && sd.latency.target > 0) {\n            _applyServiceDescriptionLatency(sd);\n        }\n\n        if (sd.playbackRate) {\n            _applyServiceDescriptionPlaybackRate(sd);\n        }\n\n        if (sd.operatingQuality) {\n            _applyServiceDescriptionOperatingQuality(sd);\n        }\n\n        if (sd.operatingBandwidth) {\n            _applyServiceDescriptionOperatingBandwidth(sd);\n        }\n\n        if (sd.contentSteering) {\n            _applyServiceDescriptionContentSteering(sd);\n        }\n    }\n\n    /**\n     * Adjust the latency targets for the service.\n     * @param {object} sd - service description element\n     * @private\n     */\n    function _applyServiceDescriptionLatency(sd) {\n        let params;\n\n        if (sd.schemeIdUri === Constants.SERVICE_DESCRIPTION_DVB_LL_SCHEME) {\n            params = _getDvbServiceDescriptionLatencyParameters(sd);\n        } else {\n            params = _getStandardServiceDescriptionLatencyParameters(sd);\n        }\n\n        if (prftOffsets.length > 0) {\n            let { to, id } = _calculateTimeOffset(params);\n\n            // TS 103 285 Clause 10.20.4. 3) Subtract calculated offset from Latency@target converted from milliseconds\n            // liveLatency does not consider ST@availabilityTimeOffset so leave out that step\n            // Since maxDrift is a difference rather than absolute it does not need offset applied\n            serviceDescriptionSettings.liveDelay = params.liveDelay - to;\n            serviceDescriptionSettings.liveCatchup.maxDrift = params.maxDrift;\n\n            logger.debug(`\n                Found latency properties coming from service description. Applied time offset of ${to} from ProducerReferenceTime element with id ${id}.\n                Live Delay: ${params.liveDelay - to}, Live catchup max drift: ${params.maxDrift}\n            `);\n        } else {\n            serviceDescriptionSettings.liveDelay = params.liveDelay;\n            serviceDescriptionSettings.liveCatchup.maxDrift = params.maxDrift;\n\n            logger.debug(`Found latency properties coming from service description: Live Delay: ${params.liveDelay}, Live catchup max drift: ${params.maxDrift}`);\n        }\n    }\n\n    /**\n     * Get default parameters for liveDelay,maxDrift\n     * @param {object} sd\n     * @return {{maxDrift: (number|undefined), liveDelay: number, referenceId: (number|undefined)}}\n     * @private\n     */\n    function _getStandardServiceDescriptionLatencyParameters(sd) {\n        const liveDelay = sd.latency.target / 1000;\n        let maxDrift = !isNaN(sd.latency.max) && sd.latency.max > sd.latency.target ? (sd.latency.max - sd.latency.target + 500) / 1000 : NaN;\n        const referenceId = sd.latency.referenceId || NaN;\n\n        return {\n            liveDelay,\n            maxDrift,\n            referenceId\n        }\n    }\n\n    /**\n     * Get DVB DASH parameters for liveDelay,maxDrift\n     * @param sd\n     * @return {{maxDrift: (number|undefined), liveDelay: number, referenceId: (number|undefined)}}\n     * @private\n     */\n    function _getDvbServiceDescriptionLatencyParameters(sd) {\n        const liveDelay = sd.latency.target / 1000;\n        let maxDrift = !isNaN(sd.latency.max) && sd.latency.max > sd.latency.target ? (sd.latency.max - sd.latency.target + 500) / 1000 : NaN;\n        const referenceId = sd.latency.referenceId || NaN;\n\n        return {\n            liveDelay,\n            maxDrift,\n            referenceId\n        }\n    }\n\n    /**\n     * Adjust the playback rate targets for the service\n     * @param {object} sd\n     * @private\n     */\n    function _applyServiceDescriptionPlaybackRate(sd) {\n        // Convert each playback rate into a difference from 1. i.e 0.8 becomes -0.2.\n        const min = sd.playbackRate.min ? (Math.round((sd.playbackRate.min - 1.0) * 1000) / 1000) : NaN;\n        const max = sd.playbackRate.max ? (Math.round((sd.playbackRate.max - 1.0) * 1000) / 1000) : NaN;\n        serviceDescriptionSettings.liveCatchup.playbackRate.min = min;\n        serviceDescriptionSettings.liveCatchup.playbackRate.max = max;\n\n        logger.debug(`Found latency properties coming from service description: Live catchup min playback rate: ${min}`);\n        logger.debug(`Found latency properties coming from service description: Live catchup max playback rate: ${max}`);\n    }\n\n    /**\n     * Used to specify a quality ranking. We do not support this yet.\n     * @private\n     */\n    function _applyServiceDescriptionOperatingQuality() {\n        return;\n    }\n\n    /**\n     * Adjust the operating quality targets for the service\n     * @param {object} sd\n     * @private\n     */\n    function _applyServiceDescriptionOperatingBandwidth(sd) {\n\n        // Aggregation of media types is not supported yet\n        if (!sd || !sd.operatingBandwidth || !sd.operatingBandwidth.mediaType || sd.operatingBandwidth.mediaType === MEDIA_TYPES.ALL) {\n            return;\n        }\n\n        const params = {};\n\n        params.minBandwidth = sd.operatingBandwidth.min;\n        params.maxBandwidth = sd.operatingBandwidth.max;\n        params.targetBandwidth = sd.operatingBandwidth.target;\n\n        const mediaTypesToApply = [];\n\n        if (sd.operatingBandwidth.mediaType === MEDIA_TYPES.VIDEO || sd.operatingBandwidth.mediaType === MEDIA_TYPES.AUDIO) {\n            mediaTypesToApply.push(sd.operatingBandwidth.mediaType);\n        } else if (sd.operatingBandwidth.mediaType === MEDIA_TYPES.ANY) {\n            mediaTypesToApply.push(MEDIA_TYPES.AUDIO);\n            mediaTypesToApply.push(MEDIA_TYPES.VIDEO);\n        }\n\n        mediaTypesToApply.forEach((mediaType) => {\n\n            if (!isNaN(params.minBandwidth)) {\n                _updateBandwidthSetting('minBitrate', mediaType, params.minBandwidth);\n            }\n\n            if (!isNaN(params.maxBandwidth)) {\n                _updateBandwidthSetting('maxBitrate', mediaType, params.maxBandwidth);\n            }\n\n            if (!isNaN(params.targetBandwidth)) {\n                _updateBandwidthSetting('initialBitrate', mediaType, params.targetBandwidth);\n            }\n        })\n    }\n\n    /**\n     * Update the bandwidth settings vor a specific field and media type\n     * @param {string} field\n     * @param {string} mediaType\n     * @param {number} value\n     * @private\n     */\n    function _updateBandwidthSetting(field, mediaType, value) {\n        try {\n            // Service description values are specified in bps. Settings expect the value in kbps\n            serviceDescriptionSettings[field][mediaType] = value / 1000;\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Add information about content steering element. Handling is up to the ContentSteeringController\n     *  @param {object} sd\n     *  @private\n     */\n    function _applyServiceDescriptionContentSteering(sd) {\n        serviceDescriptionSettings.contentSteering = sd.contentSteering;\n    }\n\n    /**\n     * Returns the current calculated time offsets based on ProducerReferenceTime elements\n     * @returns {array}\n     */\n    function getProducerReferenceTimeOffsets() {\n        return prftOffsets;\n    }\n\n    /**\n     * Calculates an array of time offsets each with matching ProducerReferenceTime id.\n     * Call before applyServiceDescription if producer reference time elements should be considered.\n     * @param {array} streamInfos\n     * @returns {array}\n     * @private\n     */\n    function calculateProducerReferenceTimeOffsets(streamInfos) {\n        try {\n            let timeOffsets = [];\n            if (streamInfos && streamInfos.length > 0) {\n                const mediaTypes = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT];\n                const astInSeconds = adapter.getAvailabilityStartTime() / 1000;\n\n                streamInfos.forEach((streamInfo) => {\n                    const offsets = mediaTypes\n                        .reduce((acc, mediaType) => {\n                            acc = acc.concat(adapter.getAllMediaInfoForType(streamInfo, mediaType));\n                            return acc;\n                        }, [])\n                        .reduce((acc, mediaInfo) => {\n                            const prts = adapter.getProducerReferenceTimes(streamInfo, mediaInfo);\n                            prts.forEach((prt) => {\n                                const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n                                if (voRepresentations && voRepresentations.length > 0 && voRepresentations[0].adaptation && voRepresentations[0].segmentInfoType === DashConstants.SEGMENT_TEMPLATE) {\n                                    const voRep = voRepresentations[0];\n                                    const d = new Date(prt[DashConstants.WALL_CLOCK_TIME]);\n                                    const wallClockTime = d.getTime() / 1000;\n                                    // TS 103 285 Clause 10.20.4\n                                    // 1) Calculate PRT0\n                                    // i) take the PRT@presentationTime and subtract any ST@presentationTimeOffset\n                                    // ii) convert this time to seconds by dividing by ST@timescale\n                                    // iii) Add this to start time of period that contains PRT.\n                                    // N.B presentationTimeOffset is already divided by timescale at this point\n                                    const prt0 = wallClockTime - (((prt[DashConstants.PRESENTATION_TIME] / voRep[DashConstants.TIMESCALE]) - voRep[DashConstants.PRESENTATION_TIME_OFFSET]) + streamInfo.start);\n                                    // 2) Calculate TO between PRT at the start of MPD timeline and the AST\n                                    const to = astInSeconds - prt0;\n                                    // 3) Not applicable as liveLatency does not consider ST@availabilityTimeOffset\n                                    acc.push({ id: prt[DashConstants.ID], to });\n                                }\n                            });\n                            return acc;\n                        }, [])\n\n                    timeOffsets = timeOffsets.concat(offsets);\n                })\n            }\n            prftOffsets = timeOffsets;\n        } catch (e) {\n            logger.error(e);\n            prftOffsets = [];\n        }\n    };\n\n    /**\n     * Calculates offset to apply to live delay as described in TS 103 285 Clause 10.20.4\n     * @param {object} sdLatency - service description latency element\n     * @returns {number}\n     * @private\n     */\n    function _calculateTimeOffset(sdLatency) {\n        let to = 0, id;\n        let offset = prftOffsets.filter(prt => {\n            return prt.id === sdLatency.referenceId;\n        });\n\n        // If only one ProducerReferenceTime to generate one TO, then use that regardless of matching ids\n        if (offset.length === 0) {\n            to = (prftOffsets.length > 0) ? prftOffsets[0].to : 0;\n            id = prftOffsets[0].id || NaN;\n        } else {\n            // If multiple id matches, use the first but this should be invalid\n            to = offset[0].to || 0;\n            id = offset[0].id || NaN;\n        }\n\n        return { to, id }\n    }\n\n    instance = {\n        getServiceDescriptionSettings,\n        getProducerReferenceTimeOffsets,\n        calculateProducerReferenceTimeOffsets,\n        applyServiceDescription,\n        reset,\n        setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nServiceDescriptionController.__dashjs_factory_name = 'ServiceDescriptionController';\nexport default FactoryMaker.getSingletonFactory(ServiceDescriptionController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport Events from '../../core/events/Events';\nimport EventBus from '../../core/EventBus';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport bcp47Normalize from 'bcp-47-normalize';\nimport {extendedFilter} from 'bcp-47-match';\n\nfunction MediaController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        tracks,\n        settings,\n        initialSettings,\n        lastSelectedTracks,\n        customParametersModel,\n        domStorage;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @memberof MediaController#\n     */\n    function setInitialMediaSettingsForType(type, streamInfo) {\n        let settings = lastSelectedTracks[type] || getInitialSettings(type);\n        const tracksForType = getTracksFor(type, streamInfo.id);\n        let tracks = [];\n\n        if (!settings) {\n            settings = domStorage.getSavedMediaSettings(type);\n            setInitialSettings(type, settings);\n        }\n\n        if (!tracksForType || (tracksForType.length === 0)) return;\n\n        if (settings) {\n            tracks = Array.from(tracksForType);\n\n            tracks = filterTracksBySettings(tracks, matchSettingsLang, settings);\n            tracks = filterTracksBySettings(tracks, matchSettingsIndex, settings);\n            tracks = filterTracksBySettings(tracks, matchSettingsViewPoint, settings);\n            if (!(type === Constants.AUDIO && !!lastSelectedTracks[type])) {\n                tracks = filterTracksBySettings(tracks, matchSettingsRole, settings);\n            }\n            tracks = filterTracksBySettings(tracks, matchSettingsAccessibility, settings);\n            tracks = filterTracksBySettings(tracks, matchSettingsAudioChannelConfig, settings);\n        }\n\n        if (tracks.length === 0) {\n            setTrack(selectInitialTrack(type, tracksForType), true);\n        } else {\n            if (tracks.length > 1) {\n                setTrack(selectInitialTrack(type, tracks, !!lastSelectedTracks[type]));\n            } else {\n                setTrack(tracks[0]);\n            }\n        }\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @memberof MediaController#\n     */\n    function addTrack(track) {\n        if (!track) return;\n\n        const mediaType = track.type;\n        if (!_isMultiTrackSupportedByType(mediaType)) return;\n\n        let streamId = track.streamInfo.id;\n        if (!tracks[streamId]) {\n            tracks[streamId] = createTrackInfo();\n        }\n\n        const mediaTracks = tracks[streamId][mediaType].list;\n        for (let i = 0, len = mediaTracks.length; i < len; ++i) {\n            //track is already set.\n            if (isTracksEqual(mediaTracks[i], track)) {\n                return;\n            }\n        }\n\n        mediaTracks.push(track);\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} streamId\n     * @returns {Array}\n     * @memberof MediaController#\n     */\n    function getTracksFor(type, streamId) {\n        if (!type) return [];\n\n        if (!tracks[streamId] || !tracks[streamId][type]) return [];\n\n        return tracks[streamId][type].list;\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} streamId\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getCurrentTrackFor(type, streamId) {\n        if (!type || !tracks[streamId] || !tracks[streamId][type]) return null;\n        return tracks[streamId][type].current;\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isCurrentTrack(track) {\n        if (!track) {\n            return false;\n        }\n        const type = track.type;\n        const id = track.streamInfo.id;\n\n        return (tracks[id] && tracks[id][type] && isTracksEqual(tracks[id][type].current, track));\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @param {boolean} noSettingsSave specify if settings must be not be saved\n     * @memberof MediaController#\n     */\n    function setTrack(track, noSettingsSave = false) {\n        if (!track || !track.streamInfo) return;\n\n        const type = track.type;\n        const streamInfo = track.streamInfo;\n        const id = streamInfo.id;\n        const current = getCurrentTrackFor(type, id);\n\n        if (!tracks[id] || !tracks[id][type]) return;\n\n        tracks[id][type].current = track;\n\n        if (tracks[id][type].current && ((type !== Constants.TEXT && !isTracksEqual(track, current)) || (type === Constants.TEXT && track.isFragmented))) {\n            eventBus.trigger(Events.CURRENT_TRACK_CHANGED, {\n                oldMediaInfo: current,\n                newMediaInfo: track,\n                switchMode: settings.get().streaming.trackSwitchMode[type]\n            }, { streamId: id });\n        }\n\n        if (!noSettingsSave) {\n\n            let settings = extractSettings(track);\n\n            if (!settings || !tracks[id][type].storeLastSettings) return;\n\n            if (settings.roles) {\n                settings.role = settings.roles[0];\n                delete settings.roles;\n            }\n\n            if (settings.accessibility) {\n                settings.accessibility = settings.accessibility[0];\n            }\n\n            if (settings.audioChannelConfiguration) {\n                settings.audioChannelConfiguration = settings.audioChannelConfiguration[0];\n            }\n\n            lastSelectedTracks[type] = settings;\n            domStorage.setSavedMediaSettings(type, settings);\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @param {Object} value\n     * @memberof MediaController#\n     */\n    function setInitialSettings(type, value) {\n        if (!type || !value) return;\n\n        initialSettings[type] = value;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getInitialSettings(type) {\n        if (!type) return null;\n\n        return initialSettings[type];\n    }\n\n    /**\n     * @memberof MediaController#\n     */\n    function saveTextSettingsDisabled() {\n        domStorage.setSavedMediaSettings(Constants.TEXT, null);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function _isMultiTrackSupportedByType(type) {\n        return (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.TEXT || type === Constants.IMAGE);\n    }\n\n    /**\n     * @param {MediaInfo} t1 - first track to compare\n     * @param {MediaInfo} t2 - second track to compare\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isTracksEqual(t1, t2) {\n        if (!t1 && !t2) {\n            return true;\n        }\n\n        if (!t1 || !t2) {\n            return false;\n        }\n\n        const sameId = t1.id === t2.id;\n        const sameViewpoint = t1.viewpoint === t2.viewpoint;\n        const sameViewpointDescriptors = JSON.stringify(t1.viewpointsWithSchemeIdUri) === JSON.stringify(t2.viewpointsWithSchemeIdUri);\n        const sameLang = t1.lang === t2.lang;\n        const sameCodec = t1.codec === t2.codec;\n        const sameRoles = t1.roles.toString() === t2.roles.toString();\n        const sameRoleDescriptors = JSON.stringify(t1.rolesWithSchemeIdUri) === JSON.stringify(t2.rolesWithSchemeIdUri);\n        const sameAccessibility = t1.accessibility.toString() === t2.accessibility.toString();\n        const sameAccessibilityDescriptors = JSON.stringify(t1.accessibilitiesWithSchemeIdUri) === JSON.stringify(t2.accessibilitiesWithSchemeIdUri);\n        const sameAudioChannelConfiguration = t1.audioChannelConfiguration.toString() === t2.audioChannelConfiguration.toString();\n        const sameAudioChannelConfigurationDescriptors = JSON.stringify(t1.audioChannelConfigurationsWithSchemeIdUri) === JSON.stringify(t2.audioChannelConfigurationsWithSchemeIdUri);\n\n        return (sameId && sameCodec && sameViewpoint && sameViewpointDescriptors && sameLang && sameRoles && sameRoleDescriptors && sameAccessibility && sameAccessibilityDescriptors && sameAudioChannelConfiguration && sameAudioChannelConfigurationDescriptors);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n    }\n\n\n    /**\n     * @memberof MediaController#\n     */\n    function reset() {\n        tracks = {};\n        lastSelectedTracks = {};\n        resetInitialSettings();\n    }\n\n    function extractSettings(mediaInfo) {\n        const settings = {\n            lang: mediaInfo.lang,\n            viewpoint: mediaInfo.viewpoint,\n            roles: mediaInfo.roles,\n            accessibility: mediaInfo.accessibility,\n            audioChannelConfiguration: mediaInfo.audioChannelConfiguration\n        };\n        let notEmpty = settings.lang || settings.viewpoint || (settings.role && settings.role.length > 0) ||\n            (settings.accessibility && settings.accessibility.length > 0) || (settings.audioChannelConfiguration && settings.audioChannelConfiguration.length > 0);\n\n        return notEmpty ? settings : null;\n    }\n\n    function filterTracksBySettings(tracks, filterFn, settings) {\n        let tracksAfterMatcher = [];\n        tracks.forEach(function (track) {\n            if (filterFn(settings, track)) {\n                tracksAfterMatcher.push(track);\n            }\n        });\n        if (tracksAfterMatcher.length !== 0) {\n            return tracksAfterMatcher;\n        }\n        return tracks;\n    }\n\n    function matchSettingsLang(settings, track) {\n        return !settings.lang ||\n        (settings.lang instanceof RegExp) ?\n            (track.lang.match(settings.lang)) : track.lang !== '' ?\n                (extendedFilter(track.lang, bcp47Normalize(settings.lang)).length > 0) : false;\n    }\n\n    function matchSettingsIndex(settings, track) {\n        return (settings.index === undefined) || (settings.index === null) || (track.index === settings.index);\n    }\n\n    function matchSettingsViewPoint(settings, track) {\n        return !settings.viewpoint || (settings.viewpoint === track.viewpoint);\n    }\n\n    function matchSettingsRole(settings, track, isTrackActive = false) {\n        const matchRole = !settings.role || !!track.roles.filter(function (item) {\n            return item === settings.role;\n        })[0];\n        return (matchRole || (track.type === Constants.AUDIO && isTrackActive));\n    }\n\n    function matchSettingsAccessibility(settings, track) {\n        let matchAccessibility;\n\n        if (!settings.accessibility) {\n            // if no accessibility is requested (or request is empty string),\n            // match only those tracks having no accessibility element present\n            matchAccessibility = !track.accessibility.length;\n        } else {\n            matchAccessibility = !!track.accessibility.filter(function (item) {\n                return item === settings.accessibility;\n            })[0];\n        }\n\n        return matchAccessibility;\n    }\n\n    function matchSettingsAudioChannelConfig(settings, track) {\n        let matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n            return item === settings.audioChannelConfiguration;\n        })[0];\n\n        return matchAudioChannelConfiguration;\n    }\n\n    function matchSettings(settings, track, isTrackActive = false) {\n        try {\n            let matchLang = false;\n\n            // If there is no language defined in the target settings we got a match\n            if (!settings.lang) {\n                matchLang = true;\n            }\n\n            // If the target language is provided as a RegExp apply match function\n            else if (settings.lang instanceof RegExp) {\n                matchLang = track.lang.match(settings.lang);\n            }\n\n            // If the track has a language and we can normalize the target language check if we got a match\n            else if (track.lang !== '') {\n                const normalizedSettingsLang = bcp47Normalize(settings.lang);\n                if (normalizedSettingsLang) {\n                    matchLang = extendedFilter(track.lang, normalizedSettingsLang).length > 0\n                }\n            }\n\n            const matchIndex = (settings.index === undefined) || (settings.index === null) || (track.index === settings.index);\n            const matchViewPoint = !settings.viewpoint || (settings.viewpoint === track.viewpoint);\n            const matchRole = !settings.role || !!track.roles.filter(function (item) {\n                return item === settings.role;\n            })[0];\n            let matchAccessibility = !settings.accessibility || !!track.accessibility.filter(function (item) {\n                return item === settings.accessibility;\n            })[0];\n            let matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n                return item === settings.audioChannelConfiguration;\n            })[0];\n\n\n            return (matchLang && matchIndex && matchViewPoint && (matchRole || (track.type === Constants.AUDIO && isTrackActive)) && matchAccessibility && matchAudioChannelConfiguration);\n        } catch (e) {\n            return false;\n            logger.error(e);\n        }\n    }\n\n    function resetInitialSettings() {\n        initialSettings = {\n            audio: null,\n            video: null,\n            text: null\n        };\n    }\n\n    function getTracksWithHighestSelectionPriority(trackArr) {\n        let max = 0;\n        let result = [];\n\n        trackArr.forEach((track) => {\n            if (!isNaN(track.selectionPriority)) {\n                // Higher max value. Reset list and add new entry\n                if (track.selectionPriority > max) {\n                    max = track.selectionPriority;\n                    result = [track];\n                }\n                // Same max value add to list\n                else if (track.selectionPriority === max) {\n                    result.push(track);\n                }\n\n            }\n        })\n\n        return result;\n    }\n\n    function getTracksWithHighestBitrate(trackArr) {\n        let max = 0;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            tmp = Math.max.apply(Math, track.bitrateList.map(function (obj) {\n                return obj.bandwidth;\n            }));\n\n            if (tmp > max) {\n                max = tmp;\n                result = [track];\n            } else if (tmp === max) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function getTracksWithHighestEfficiency(trackArr) {\n        let min = Infinity;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            const sum = track.bitrateList.reduce(function (acc, obj) {\n                const resolution = Math.max(1, obj.width * obj.height);\n                const efficiency = obj.bandwidth / resolution;\n                return acc + efficiency;\n            }, 0);\n            tmp = sum / track.bitrateList.length;\n\n            if (tmp < min) {\n                min = tmp;\n                result = [track];\n            } else if (tmp === min) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function getTracksWithWidestRange(trackArr) {\n        let max = 0;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            tmp = track.representationCount;\n\n            if (tmp > max) {\n                max = tmp;\n                result = [track];\n            } else if (tmp === max) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function selectInitialTrack(type, tracks) {\n        if (type === Constants.TEXT) return tracks[0];\n\n        let mode = settings.get().streaming.selectionModeForInitialTrack;\n        let tmpArr;\n        const customInitialTrackSelectionFunction = customParametersModel.getCustomInitialTrackSelectionFunction();\n\n        if (customInitialTrackSelectionFunction && typeof customInitialTrackSelectionFunction === 'function') {\n            tmpArr = customInitialTrackSelectionFunction(tracks);\n        } else {\n            switch (mode) {\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY:\n                    tmpArr = _trackSelectionModeHighestSelectionPriority(tracks);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE:\n                    tmpArr = _trackSelectionModeHighestBitrate(tracks);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_FIRST_TRACK:\n                    tmpArr = _trackSelectionModeFirstTrack(tracks);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY:\n                    tmpArr = _trackSelectionModeHighestEfficiency(tracks);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_WIDEST_RANGE:\n                    tmpArr = _trackSelectionModeWidestRange(tracks);\n                    break;\n                default:\n                    logger.warn(`Track selection mode ${mode} is not supported. Falling back to TRACK_SELECTION_MODE_FIRST_TRACK`);\n                    tmpArr = _trackSelectionModeFirstTrack(tracks);\n                    break;\n            }\n        }\n\n        return tmpArr.length > 0 ? tmpArr[0] : tracks[0];\n    }\n\n\n    function _trackSelectionModeHighestSelectionPriority(tracks) {\n        let tmpArr = getTracksWithHighestSelectionPriority(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tmpArr);\n        }\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithWidestRange(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeHighestBitrate(tracks) {\n        let tmpArr = getTracksWithHighestBitrate(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithWidestRange(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeFirstTrack(tracks) {\n        return tracks[0];\n    }\n\n    function _trackSelectionModeHighestEfficiency(tracks) {\n        let tmpArr = getTracksWithHighestEfficiency(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeWidestRange(tracks) {\n        let tmpArr = getTracksWithWidestRange(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tracks);\n        }\n\n        return tmpArr;\n    }\n\n\n    function createTrackInfo() {\n        return {\n            audio: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            video: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            text: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            image: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            }\n        };\n    }\n\n    instance = {\n        setInitialMediaSettingsForType,\n        addTrack,\n        getTracksFor,\n        getCurrentTrackFor,\n        isCurrentTrack,\n        setTrack,\n        selectInitialTrack,\n        setInitialSettings,\n        getInitialSettings,\n        getTracksWithHighestBitrate,\n        getTracksWithHighestEfficiency,\n        getTracksWithWidestRange,\n        isTracksEqual,\n        matchSettings,\n        matchSettingsLang,\n        matchSettingsIndex,\n        matchSettingsViewPoint,\n        matchSettingsRole,\n        matchSettingsAccessibility,\n        matchSettingsAudioChannelConfig,\n        saveTextSettingsDisabled,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaController.__dashjs_factory_name = 'MediaController';\nconst factory = FactoryMaker.getSingletonFactory(MediaController);\nFactoryMaker.updateSingletonFactory(MediaController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n    let instance,\n        root,\n        adapter,\n        contentSteeringController;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController\n        }\n    }\n\n    function checkConfig() {\n        if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        const baseUrls = _getAvailableBaseUrls(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        checkConfig();\n\n        const baseUrls = _getAvailableBaseUrls(manifest)\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest && manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                adapter.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function _getAvailableBaseUrls(root) {\n        let targetBaseUrls = adapter.getBaseURLsFromElement(root);\n        const synthesizedBaseUrls = contentSteeringController.getSynthesizedBaseUrlElements(targetBaseUrls);\n\n        if (synthesizedBaseUrls && synthesizedBaseUrls.length > 0) {\n            targetBaseUrls = targetBaseUrls.concat(synthesizedBaseUrls)\n        }\n\n        return targetBaseUrls;\n    }\n\n    function getBaseUrls(manifest) {\n        return _getAvailableBaseUrls(manifest);\n    }\n\n    function walk(callback, node) {\n        const target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        const nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset,\n        update,\n        getForPath,\n        invalidateSelectedIndexes,\n        setConfig,\n        getBaseUrls\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction DVBSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function getNonBlacklistedBaseUrls(urls) {\n        let removedPriorities = [];\n\n        const samePrioritiesFilter = function (el) {\n            if (removedPriorities.length) {\n                if ((el.dvb_priority) &&\n                        (removedPriorities.indexOf(el.dvb_priority) !== -1)) {\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n        const serviceLocationFilter = function (baseUrl) {\n            if (blacklistController.contains(baseUrl.serviceLocation)) {\n                // whenever a BaseURL is removed from the available list of\n                // BaseURLs, any other BaseURL with the same @priority\n                // value as the BaseURL being removed shall also be removed\n                if (baseUrl.dvb_priority) {\n                    removedPriorities.push(baseUrl.dvb_priority);\n                }\n\n                // all URLs in the list which have a @serviceLocation\n                // attribute matching an entry in the blacklist shall be\n                // removed from the available list of BaseURLs\n                return false;\n            }\n\n            return true;\n        };\n\n        return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);\n    }\n\n    function selectByWeight(availableUrls) {\n        const prioritySorter = function (a, b) {\n            let diff = a.dvb_priority - b.dvb_priority;\n            return isNaN(diff) ? 0 : diff;\n        };\n\n        const topPriorityFilter = function (baseUrl, idx, arr) {\n            return !idx || (\n                (arr[0].dvb_priority && baseUrl.dvb_priority) &&\n                (arr[0].dvb_priority === baseUrl.dvb_priority)\n            );\n        };\n\n        let totalWeight = 0;\n        let cumulWeights = [];\n        let idx = 0;\n        let rn,\n            urls;\n\n        // It shall begin by taking the set of resolved BaseURLs present or inherited at the current\n        // position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest\n        // @priority attribute value.\n        urls = availableUrls.sort(prioritySorter).filter(topPriorityFilter);\n\n        if (urls.length) {\n            if (urls.length > 1) {\n                // If there is more than one BaseURL with this lowest @priority attribute value then the Player\n                // shall select one of them at random such that the probability of each BaseURL being chosen\n                // is proportional to the value of its @weight attribute. The method described in RFC 2782\n                // [26] or picking from a number of weighted entries is suitable for this, but there may be other\n                // algorithms which achieve the same effect.\n\n                // add all the weights together, storing the accumulated weight per entry\n                urls.forEach(baseUrl => {\n                    totalWeight += baseUrl.dvb_weight;\n                    cumulWeights.push(totalWeight);\n                });\n\n                // pick a random number between zero and totalWeight\n                rn = Math.floor(Math.random() * (totalWeight - 1));\n\n                // select the index for the range rn falls within\n                cumulWeights.every((limit, index) => {\n                    idx = index;\n\n                    if (rn < limit) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            }\n\n            return urls[idx];\n        }\n    }\n\n    function select(baseUrls) {\n        return baseUrls && selectByWeight(\n            getNonBlacklistedBaseUrls(\n                baseUrls\n            )\n        );\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nDVBSelector.__dashjs_factory_name = 'DVBSelector';\nexport default FactoryMaker.getClassFactory(DVBSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BasicSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function select(baseUrls) {\n        let index = 0;\n        let selectedBaseUrl;\n\n        if (baseUrls && baseUrls.some((baseUrl, idx) => {\n            index = idx;\n\n            return (!blacklistController.contains(baseUrl.serviceLocation));\n        })) {\n            selectedBaseUrl = baseUrls[index];\n        }\n\n        return selectedBaseUrl;\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nBasicSelector.__dashjs_factory_name = 'BasicSelector';\nexport default FactoryMaker.getClassFactory(BasicSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport ContentSteeringController from '../../../dash/controllers/ContentSteeringController';\n\nfunction ContentSteeringSelector() {\n\n    const context = this.context;\n    let instance,\n        contentSteeringController,\n        blacklistController;\n\n    function setup() {\n        contentSteeringController = ContentSteeringController(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.blacklistController) {\n            blacklistController = config.blacklistController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n    }\n\n    function selectBaseUrlIndex(data) {\n        let steeringIndex = NaN;\n\n        // In case we dont have a selected idx yet we consider the defaultServiceLocation\n        if (isNaN(data.selectedIdx)) {\n            const steeringDataFromMpd = contentSteeringController.getSteeringDataFromManifest();\n            if (steeringDataFromMpd && steeringDataFromMpd.defaultServiceLocationArray.length > 0) {\n                steeringIndex = _findexIndexOfServiceLocation(steeringDataFromMpd.defaultServiceLocationArray, data.baseUrls);\n            }\n        }\n\n        // Search in the response data of the steering server\n        const currentSteeringResponseData = contentSteeringController.getCurrentSteeringResponseData();\n        if (data.baseUrls && data.baseUrls.length && currentSteeringResponseData &&\n            currentSteeringResponseData.pathwayPriority && currentSteeringResponseData.pathwayPriority.length) {\n            steeringIndex = _findexIndexOfServiceLocation(currentSteeringResponseData.pathwayPriority, data.baseUrls);\n        }\n\n        return steeringIndex;\n    }\n\n    function _findexIndexOfServiceLocation(pathwayPriority = [], baseUrls = []) {\n        let i = 0;\n        let steeringIndex = NaN;\n        while (i < pathwayPriority.length) {\n            const curr = pathwayPriority[i];\n            const idx = baseUrls.findIndex((elem) => {\n                return elem.serviceLocation && elem.serviceLocation === curr;\n            })\n            if (idx !== -1 && !blacklistController.contains(baseUrls[idx].serviceLocation)) {\n                steeringIndex = idx;\n                break;\n            }\n            i += 1;\n        }\n        return steeringIndex;\n    }\n\n    instance = {\n        selectBaseUrlIndex,\n        setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nContentSteeringSelector.__dashjs_factory_name = 'ContentSteeringSelector';\nexport default FactoryMaker.getClassFactory(ContentSteeringSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Errors from '../../core/errors/Errors';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport BlacklistController from '../controllers/BlacklistController';\nimport DVBSelector from './baseUrlResolution/DVBSelector';\nimport BasicSelector from './baseUrlResolution/BasicSelector';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport DashJSError from '../vo/DashJSError';\nimport {checkParameterType} from '../utils/SupervisorTools';\nimport ContentSteeringSelector from './baseUrlResolution/ContentSteeringSelector';\nimport Settings from '../../core/Settings';\n\nfunction BaseURLSelector() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        serviceLocationBlacklistController,\n        basicSelector,\n        dvbSelector,\n        contentSteeringSelector,\n        selector;\n\n    function setup() {\n        serviceLocationBlacklistController = BlacklistController(context).create({\n            updateEventName: Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED,\n            addBlacklistEventName: Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD\n        });\n\n        basicSelector = BasicSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        dvbSelector = DVBSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        contentSteeringSelector = ContentSteeringSelector(context).create();\n        contentSteeringSelector.setConfig({\n            blacklistController: serviceLocationBlacklistController\n        })\n\n        selector = basicSelector;\n    }\n\n    function setConfig(config) {\n        if (config.selector) {\n            selector = config.selector;\n        }\n        if (config.contentSteeringSelector) {\n            contentSteeringSelector = config.contentSteeringSelector;\n        }\n    }\n\n    function chooseSelector(isDVB) {\n        checkParameterType(isDVB, 'boolean');\n        selector = isDVB ? dvbSelector : basicSelector;\n    }\n\n    function select(data) {\n        if (!data) {\n            return;\n        }\n\n        // Check if we got any instructions from the content steering element in the MPD or from the content steering server\n        if(settings.get().streaming.applyContentSteering) {\n            const steeringIndex = contentSteeringSelector.selectBaseUrlIndex(data);\n            if (!isNaN(steeringIndex) && steeringIndex !== -1) {\n                data.selectedIdx = steeringIndex;\n            }\n        }\n\n        // Once a random selection has been carried out amongst a group of BaseURLs with the same\n        // @priority attribute value, then that choice should be re-used if the selection needs to be made again\n        // unless the blacklist has been modified or the available BaseURLs have changed.\n        if (!isNaN(data.selectedIdx)) {\n            return data.baseUrls[data.selectedIdx];\n        }\n\n        let selectedBaseUrl = selector.select(data.baseUrls);\n\n        if (!selectedBaseUrl) {\n            eventBus.trigger(Events.URL_RESOLUTION_FAILED, {\n                error: new DashJSError(\n                    Errors.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,\n                    Errors.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE\n                )\n            });\n            if (selector === basicSelector) {\n                reset();\n            }\n            return;\n        }\n\n        data.selectedIdx = data.baseUrls.indexOf(selectedBaseUrl);\n\n        return selectedBaseUrl;\n    }\n\n    function reset() {\n        serviceLocationBlacklistController.reset();\n    }\n\n    instance = {\n        chooseSelector: chooseSelector,\n        select: select,\n        reset: reset,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLSelector.__dashjs_factory_name = 'BaseURLSelector';\nexport default FactoryMaker.getClassFactory(BaseURLSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\n\nfunction BaseURLController() {\n\n    let instance,\n        adapter;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector,\n        contentSteeringController;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n        eventBus.trigger(MediaPlayerEvents.BASE_URLS_UPDATED, {\n            baseUrls: getBaseUrls(manifest)\n        });\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n                p.queryParams = b.queryParams;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function getBaseUrls(manifest) {\n        return baseURLTreeModel.getBaseUrls(manifest);\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            adapter,\n            contentSteeringController\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset,\n        initialize,\n        resolve,\n        setConfig,\n        getBaseUrls,\n        update\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getClassFactory(BaseURLController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport Constants from '../constants/Constants';\nimport FragmentRequest from './FragmentRequest';\n\nclass TextRequest extends FragmentRequest {\n    constructor(url, type) {\n        super();\n        this.url = url || null;\n        this.type = type || null;\n        this.mediaType = Constants.STREAM;\n        this.responseType = ''; //'text' value returns a bad encoding response in Firefox\n    }\n}\n\nexport default TextRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './vo/DashJSError';\nimport URLLoader from './net/URLLoader';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TextRequest from './vo/TextRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Errors from '../core/errors/Errors';\n\nfunction XlinkLoader(config) {\n\n    config = config || {};\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let urlLoader = URLLoader(context).create({\n        errHandler: config.errHandler,\n        dashMetrics: config.dashMetrics,\n        mediaPlayerModel: config.mediaPlayerModel,\n        requestModifier: config.requestModifier,\n        errors: Errors\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new DashJSError(\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_EXPANSION_TYPE);\n\n            urlLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\nexport default FactoryMaker.getClassFactory(XlinkLoader);\n","/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\n/*\n  Further modified for dashjs to:\n  - keep track of children nodes in order in attribute __children.\n  - add type conversion matchers\n  - re-add ignoreRoot\n  - allow zero-length attributePrefix\n  - don't add white-space text nodes\n  - remove explicit RequireJS support\n*/\n\nfunction X2JS(config) {\n    'use strict';\n\n    var VERSION = \"1.2.0\";\n\n    config = config || {};\n    initConfigDefaults();\n    initRequiredPolyfills();\n\n    function initConfigDefaults() {\n        if(config.escapeMode === undefined) {\n            config.escapeMode = true;\n        }\n\n        if (config.attributePrefix === undefined) {\n            config.attributePrefix = \"_\";\n        }\n\n        config.arrayAccessForm = config.arrayAccessForm || \"none\";\n        config.emptyNodeForm = config.emptyNodeForm || \"text\";\n\n        if(config.enableToStringFunc === undefined) {\n            config.enableToStringFunc = true;\n        }\n        config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n        if(config.skipEmptyTextNodesForObj === undefined) {\n            config.skipEmptyTextNodesForObj = true;\n        }\n        if(config.stripWhitespaces === undefined) {\n            config.stripWhitespaces = true;\n        }\n        config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n\n        if(config.useDoubleQuotes === undefined) {\n            config.useDoubleQuotes = false;\n        }\n\n        config.xmlElementsFilter = config.xmlElementsFilter || [];\n        config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\n\n        if(config.keepCData === undefined) {\n            config.keepCData = false;\n        }\n\n        if (config.ignoreRoot === undefined) {\n            config.ignoreRoot = false;\n        }\n    }\n\n    var DOMNodeTypes = {\n        ELEMENT_NODE \t   : 1,\n        TEXT_NODE    \t   : 3,\n        CDATA_SECTION_NODE : 4,\n        COMMENT_NODE\t   : 8,\n        DOCUMENT_NODE \t   : 9\n    };\n\n    function initRequiredPolyfills() {\n    }\n\n    function getNodeLocalName( node ) {\n        var nodeLocalName = node.localName;\n        if(nodeLocalName == null) // Yeah, this is IE!!\n            nodeLocalName = node.baseName;\n        if(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\n            nodeLocalName = node.nodeName;\n        return nodeLocalName;\n    }\n\n    function getNodePrefix(node) {\n        return node.prefix;\n    }\n\n    function escapeXmlChars(str) {\n        if(typeof(str) == \"string\")\n            return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n        else\n            return str;\n    }\n\n    function unescapeXmlChars(str) {\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n    }\n\n    function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\n        var idx = 0;\n        for(; idx < stdFiltersArrayForm.length; idx++) {\n            var filterPath = stdFiltersArrayForm[idx];\n            if( typeof filterPath === \"string\" ) {\n                if(filterPath == path)\n                    break;\n            }\n            else\n            if( filterPath instanceof RegExp) {\n                if(filterPath.test(path))\n                    break;\n            }\n            else\n            if( typeof filterPath === \"function\") {\n                if(filterPath(obj, name, path))\n                    break;\n            }\n        }\n        return idx!=stdFiltersArrayForm.length;\n    }\n\n    function toArrayAccessForm(obj, childName, path) {\n        switch(config.arrayAccessForm) {\n            case \"property\":\n                if(!(obj[childName] instanceof Array))\n                    obj[childName+\"_asArray\"] = [obj[childName]];\n                else\n                    obj[childName+\"_asArray\"] = obj[childName];\n                break;\n            /*case \"none\":\n                break;*/\n        }\n\n        if(!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n            if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\n                obj[childName] = [obj[childName]];\n            }\n        }\n    }\n\n    function fromXmlDateTime(prop) {\n        // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n        // Improved to support full spec and optional parts\n        var bits = prop.split(/[-T:+Z]/g);\n\n        var d = new Date(bits[0], bits[1]-1, bits[2]);\n        var secondBits = bits[5].split(\"\\.\");\n        d.setHours(bits[3], bits[4], secondBits[0]);\n        if(secondBits.length>1)\n            d.setMilliseconds(secondBits[1]);\n\n        // Get supplied time zone offset in minutes\n        if(bits[6] && bits[7]) {\n            var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n            var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop)? '-' : '+';\n\n            // Apply the sign\n            offsetMinutes = 0 + (sign == '-'? -1 * offsetMinutes : offsetMinutes);\n\n            // Apply offset and local timezone\n            d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n        }\n        else\n            if(prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n            }\n\n        // d is now a local time equivalent to the supplied time\n        return d;\n    }\n\n    function checkFromXmlDateTimePaths(value, childName, fullPath) {\n        if(config.datetimeAccessFormPaths.length > 0) {\n            var path = fullPath.split(\"\\.#\")[0];\n            if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\n                return fromXmlDateTime(value);\n            }\n            else\n                return value;\n        }\n        else\n            return value;\n    }\n\n    function checkXmlElementsFilter(obj, childType, childName, childPath) {\n        if( childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\n            return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\n        }\n        else\n            return true;\n    }\n\n    function parseDOMChildren( node, path ) {\n        if(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n            var result = new Object;\n            var nodeChildren = node.childNodes;\n            // Alternative for firstElementChild which is not supported in some environments\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                if(child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                    if (config.ignoreRoot) {\n                        result = parseDOMChildren(child);\n                    } else {\n                        result = {};\n                        var childName = getNodeLocalName(child);\n                        result[childName] = parseDOMChildren(child);\n                    }\n                }\n            }\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n            var result = new Object;\n            result.__cnt=0;\n\n            var children = [];\n            var nodeChildren = node.childNodes;\n\n            // Children nodes\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                var childName = getNodeLocalName(child);\n\n                if(child.nodeType!= DOMNodeTypes.COMMENT_NODE) {\n                    var childPath = path+\".\"+childName;\n                    if (checkXmlElementsFilter(result,child.nodeType,childName,childPath)) {\n                        result.__cnt++;\n                        if(result[childName] == null) {\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                                var o = {};\n                                o[childName] = c;\n                                children.push(o);\n                            }\n                            result[childName] = c;\n                            toArrayAccessForm(result, childName, childPath);\n                        }\n                        else {\n                            if(result[childName] != null) {\n                                if( !(result[childName] instanceof Array)) {\n                                    result[childName] = [result[childName]];\n                                    toArrayAccessForm(result, childName, childPath);\n                                }\n                            }\n\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\n                                var o = {};\n                                o[childName] = c;\n                                children.push( o );\n                            }\n                            (result[childName])[result[childName].length] = c;\n                        }\n                    }\n                }\n            }\n\n            result.__children = children;\n\n            // Attributes\n            var nodeLocalName = getNodeLocalName(node)\n            for(var aidx=0; aidx <node.attributes.length; aidx++) {\n                var attr = node.attributes[aidx];\n                result.__cnt++;\n\n                var value2 = attr.value;\n                for(var m=0, ml=config.matchers.length; m < ml; m++) {\n                    var matchobj = config.matchers[m];\n                    if (matchobj.test(attr, nodeLocalName))\n                        value2 = matchobj.converter(attr.value);\n                }\n\n                result[config.attributePrefix+attr.name]=value2;\n            }\n\n            // Node namespace prefix\n            var nodePrefix = getNodePrefix(node);\n            if(nodePrefix!=null && nodePrefix!=\"\") {\n                result.__cnt++;\n                result.__prefix=nodePrefix;\n            }\n\n            if(result[\"#text\"]!=null) {\n                result.__text = result[\"#text\"];\n                if(result.__text instanceof Array) {\n                    result.__text = result.__text.join(\"\\n\");\n                }\n                //if(config.escapeMode)\n                //\tresult.__text = unescapeXmlChars(result.__text);\n                if(config.stripWhitespaces)\n                    result.__text = result.__text.trim();\n                delete result[\"#text\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#text_asArray\"];\n                result.__text = checkFromXmlDateTimePaths(result.__text, childName, path+\".\"+childName);\n            }\n            if(result[\"#cdata-section\"]!=null) {\n                result.__cdata = result[\"#cdata-section\"];\n                delete result[\"#cdata-section\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#cdata-section_asArray\"];\n            }\n\n            if( result.__cnt == 0 && config.emptyNodeForm==\"text\" ) {\n                result = '';\n            }\n            else\n            if( result.__cnt == 1 && result.__text!=null  ) {\n                result = result.__text;\n            }\n            else\n            if( result.__cnt == 1 && result.__cdata!=null && !config.keepCData  ) {\n                result = result.__cdata;\n            }\n            else\n            if ( result.__cnt > 1 && result.__text!=null && config.skipEmptyTextNodesForObj) {\n                if( (config.stripWhitespaces && result.__text==\"\") || (result.__text.trim()==\"\")) {\n                    delete result.__text;\n                }\n            }\n            delete result.__cnt;\n\n            if( config.enableToStringFunc && (result.__text!=null || result.__cdata!=null )) {\n                result.toString = function() {\n                    return (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\n                };\n            }\n\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n            return node.nodeValue;\n        }\n    }\n\n    function startTag(jsonObj, element, attrList, closed) {\n        var resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\n        if(attrList!=null) {\n            for(var aidx = 0; aidx < attrList.length; aidx++) {\n                var attrName = attrList[aidx];\n                var attrVal = jsonObj[attrName];\n                if(config.escapeMode)\n                    attrVal=escapeXmlChars(attrVal);\n                resultStr+=\" \"+attrName.substr(config.attributePrefix.length)+\"=\";\n                if(config.useDoubleQuotes)\n                    resultStr+='\"'+attrVal+'\"';\n                else\n                    resultStr+=\"'\"+attrVal+\"'\";\n            }\n        }\n        if(!closed)\n            resultStr+=\">\";\n        else\n            resultStr+=\"/>\";\n        return resultStr;\n    }\n\n    function endTag(jsonObj,elementName) {\n        return \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\n    }\n\n    function endsWith(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\n        if((config.arrayAccessForm==\"property\" && endsWith(jsonObjField.toString(),(\"_asArray\")))\n                || jsonObjField.toString().indexOf(config.attributePrefix)==0\n                || jsonObjField.toString().indexOf(\"__\")==0\n                || (jsonObj[jsonObjField] instanceof Function) )\n            return true;\n        else\n            return false;\n    }\n\n    function jsonXmlElemCount ( jsonObj ) {\n        var elementsCnt = 0;\n        if(jsonObj instanceof Object ) {\n            for( var it in jsonObj  ) {\n                if(jsonXmlSpecialElem ( jsonObj, it) )\n                    continue;\n                elementsCnt++;\n            }\n        }\n        return elementsCnt;\n    }\n\n    function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\n        return config.jsonPropertiesFilter.length == 0\n            || jsonObjPath==\"\"\n            || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\n    }\n\n    function parseJSONAttributes ( jsonObj ) {\n        var attrList = [];\n        if(jsonObj instanceof Object ) {\n            for( var ait in jsonObj  ) {\n                if(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(config.attributePrefix)==0) {\n                    attrList.push(ait);\n                }\n            }\n        }\n        return attrList;\n    }\n\n    function parseJSONTextAttrs ( jsonTxtObj ) {\n        var result =\"\";\n\n        if(jsonTxtObj.__cdata!=null) {\n            result+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\n        }\n\n        if(jsonTxtObj.__text!=null) {\n            if(config.escapeMode)\n                result+=escapeXmlChars(jsonTxtObj.__text);\n            else\n                result+=jsonTxtObj.__text;\n        }\n        return result;\n    }\n\n    function parseJSONTextObject ( jsonTxtObj ) {\n        var result =\"\";\n\n        if( jsonTxtObj instanceof Object ) {\n            result+=parseJSONTextAttrs ( jsonTxtObj );\n        }\n        else\n            if(jsonTxtObj!=null) {\n                if(config.escapeMode)\n                    result+=escapeXmlChars(jsonTxtObj);\n                else\n                    result+=jsonTxtObj;\n            }\n\n        return result;\n    }\n\n    function getJsonPropertyPath(jsonObjPath, jsonPropName) {\n        if (jsonObjPath===\"\") {\n            return jsonPropName;\n        }\n        else\n            return jsonObjPath+\".\"+jsonPropName;\n    }\n\n    function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {\n        var result = \"\";\n        if(jsonArrRoot.length == 0) {\n            result+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\n        }\n        else {\n            for(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                result+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                result+=parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath,jsonArrObj));\n                result+=endTag(jsonArrRoot[arIdx],jsonArrObj);\n            }\n        }\n        return result;\n    }\n\n    function parseJSONObject ( jsonObj, jsonObjPath ) {\n        var result = \"\";\n\n        var elementsCnt = jsonXmlElemCount ( jsonObj );\n\n        if(elementsCnt > 0) {\n            for( var it in jsonObj ) {\n\n                if(jsonXmlSpecialElem ( jsonObj, it) || (jsonObjPath!=\"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath,it))) )\n                    continue;\n\n                var subObj = jsonObj[it];\n\n                var attrList = parseJSONAttributes( subObj )\n\n                if(subObj == null || subObj == undefined) {\n                    result+=startTag(subObj, it, attrList, true);\n                }\n                else\n                if(subObj instanceof Object) {\n\n                    if(subObj instanceof Array) {\n                        result+=parseJSONArray( subObj, it, attrList, jsonObjPath );\n                    }\n                    else if(subObj instanceof Date) {\n                        result+=startTag(subObj, it, attrList, false);\n                        result+=subObj.toISOString();\n                        result+=endTag(subObj,it);\n                    }\n                    else {\n                        var subObjElementsCnt = jsonXmlElemCount ( subObj );\n                        if(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\n                            result+=startTag(subObj, it, attrList, false);\n                            result+=parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath,it));\n                            result+=endTag(subObj,it);\n                        }\n                        else {\n                            result+=startTag(subObj, it, attrList, true);\n                        }\n                    }\n                }\n                else {\n                    result+=startTag(subObj, it, attrList, false);\n                    result+=parseJSONTextObject(subObj);\n                    result+=endTag(subObj,it);\n                }\n            }\n        }\n        result+=parseJSONTextObject(jsonObj);\n\n        return result;\n    }\n\n    this.parseXmlString = function(xmlDocStr) {\n        var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n        if (xmlDocStr === undefined) {\n            return null;\n        }\n        var xmlDoc;\n        if (window.DOMParser) {\n            var parser=new window.DOMParser();\n            var parsererrorNS = null;\n            try {\n                xmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\n                if(xmlDoc.getElementsByTagNameNS(\"*\", \"parsererror\").length > 0) {\n                    xmlDoc = null;\n                }\n            }\n            catch(err) {\n                xmlDoc = null;\n            }\n        }\n        else {\n            // IE :(\n            if(xmlDocStr.indexOf(\"<?\")==0) {\n                xmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\n            }\n            xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async=\"false\";\n            xmlDoc.loadXML(xmlDocStr);\n        }\n        return xmlDoc;\n    };\n\n    this.asArray = function(prop) {\n        if (prop === undefined || prop == null)\n            return [];\n        else\n        if(prop instanceof Array)\n            return prop;\n        else\n            return [prop];\n    };\n\n    this.toXmlDateTime = function(dt) {\n        if(dt instanceof Date)\n            return dt.toISOString();\n        else\n        if(typeof(dt) === 'number' )\n            return new Date(dt).toISOString();\n        else\n            return null;\n    };\n\n    this.asDateTime = function(prop) {\n        if(typeof(prop) == \"string\") {\n            return fromXmlDateTime(prop);\n        }\n        else\n            return prop;\n    };\n\n    this.xml2json = function (xmlDoc) {\n        return parseDOMChildren ( xmlDoc );\n    };\n\n    this.xml_str2json = function (xmlDocStr) {\n        var xmlDoc = this.parseXmlString(xmlDocStr);\n        if(xmlDoc!=null)\n            return this.xml2json(xmlDoc);\n        else\n            return null;\n    };\n\n    this.json2xml_str = function (jsonObj) {\n        return parseJSONObject ( jsonObj, \"\" );\n    };\n\n    this.json2xml = function (jsonObj) {\n        var xmlDocStr = this.json2xml_str (jsonObj);\n        return this.parseXmlString(xmlDocStr);\n    };\n\n    this.getVersion = function () {\n        return VERSION;\n    };\n}\n\nexport default X2JS;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\nimport DashConstants from '../../dash/constants/DashConstants';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            settings: config.settings\n        });\n    }\n\n    function setMatchers(value) {\n        if (value) {\n            matchers = value;\n        }\n    }\n\n    function setIron(value) {\n        if (value) {\n            iron = value;\n        }\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        let elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n\n        if (manifest.Period_asArray) {\n            elements = getElementsToResolve(manifest.Period_asArray, manifest, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n            resolve(elements, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n        } else {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        let resolveObject = {};\n        let element,\n            url;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (let i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        let element,\n            resolveObject;\n\n        const openingTag = '<response>';\n        const closingTag = '</response>';\n        let mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            let index = 0;\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            if (element.resolvedContent.indexOf('<?xml') === 0) {\n                index = element.resolvedContent.indexOf('?>') + 2; //find the closing position of the xml declaration, if it exists.\n            }\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        let elements = [];\n        let i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case DashConstants.PERIOD:\n                    for (i = 0; i < manifest[DashConstants.PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[DashConstants.PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(DashConstants.ADAPTATION_SET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.ADAPTATION_SET + '_asArray'], obj, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(DashConstants.EVENT_STREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.EVENT_STREAM + '_asArray'], obj, DashConstants.EVENT_STREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case DashConstants.ADAPTATION_SET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        let toResolve = [];\n        let element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        let resolvedElements = [];\n        let element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        let i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name + '_asArray'];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if (source.Period_asArray && 'period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period_asArray;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet_asArray;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\n/**\n * @classdesc a base type for matching and converting types in manifest to\n * something more useful\n * @ignore\n */\nclass BaseMatcher {\n    constructor(test, converter) {\n        this._test = test;\n        this._converter = converter;\n    }\n\n    get test() {\n        return this._test;\n    }\n\n    get converter() {\n        return this._converter;\n    }\n}\n\nexport default BaseMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\nimport Constants from '../../../streaming/constants/Constants';\nimport DashConstants from '../../constants/DashConstants';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, DashConstants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[13] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:datetime to Date\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst SECONDS_IN_MIN = 60;\nconst MINUTES_IN_HOUR = 60;\nconst MILLISECONDS_IN_SECONDS = 1000;\n\nconst datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;\n\nclass DateTimeMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => datetimeRegex.test(attr.value),\n            str => {\n                const match = datetimeRegex.exec(str);\n                let utcDate;\n\n                // If the string does not contain a timezone offset different browsers can interpret it either\n                // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n                // all browsers\n                utcDate = Date.UTC(\n                    parseInt(match[1], 10),\n                    parseInt(match[2], 10) - 1, // months start from zero\n                    parseInt(match[3], 10),\n                    parseInt(match[4], 10),\n                    parseInt(match[5], 10),\n                    (match[6] && parseInt(match[6], 10) || 0),\n                    (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\n\n                // If the date has timezone offset take it into account as well\n                if (match[9] && match[10]) {\n                    const timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n                    utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n                }\n\n                return new Date(utcDate);\n            }\n        );\n    }\n}\n\nexport default DateTimeMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:numeric to float\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\n\nclass NumericMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => numericRegex.test(attr.value),\n            str => parseFloat(str)\n        );\n    }\n}\n\nexport default NumericMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts any ISO 639 language tag to BCP-47 language tags\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\nimport bcp47Normalize from 'bcp-47-normalize';\n\nclass LangMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.LANG ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.LANG ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.LANG ],\n                    [DashConstants.LABEL]:                          [ DashConstants.LANG ],\n                    [DashConstants.GROUP_LABEL]:                    [ DashConstants.LANG ]\n                    // still missing from 23009-1: Preselection@lang, ProgramInformation@lang\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => {\n                let lang = bcp47Normalize(str);\n                if (lang !== undefined) {\n                    return lang;\n                }\n                return String(str);\n            }\n        );\n    }\n}\n\nexport default LangMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a property belonging to a MapNode\n * @ignore\n */\n\nclass CommonProperty {\n    constructor(name) {\n        const getDefaultMergeForName =\n              (n) => n && n.length && n.charAt(0) === n.charAt(0).toUpperCase();\n\n        this._name = name;\n        this._merge = getDefaultMergeForName(name);\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get merge() {\n        return this._merge;\n    }\n}\n\nexport default CommonProperty;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a node at some level in a ValueMap\n */\nimport CommonProperty from './CommonProperty';\n\nclass MapNode {\n    constructor(name, properties, children) {\n        this._name = name || '';\n        this._properties = [];\n        this._children = children || [];\n\n        if (Array.isArray(properties)) {\n            properties.forEach(p => {\n                this._properties.push(new CommonProperty(p));\n            });\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    get properties() {\n        return this._properties;\n    }\n}\n\nexport default MapNode;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.PROFILES, DashConstants.WIDTH, DashConstants.HEIGHT, DashConstants.SAR, DashConstants.FRAMERATE, DashConstants.AUDIO_SAMPLING_RATE, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.MAXIMUM_SAP_PERIOD, DashConstants.START_WITH_SAP, DashConstants.MAX_PLAYOUT_RATE, DashConstants.CODING_DEPENDENCY, DashConstants.SCAN_TYPE, DashConstants.FRAME_PACKING, DashConstants.AUDIO_CHANNEL_CONFIGURATION, DashConstants.CONTENT_PROTECTION, DashConstants.ESSENTIAL_PROPERTY, DashConstants.ESSENTIAL_PROPERTY+'_asArray', DashConstants.SUPPLEMENTAL_PROPERTY, DashConstants.INBAND_EVENT_STREAM\n        ];\n\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a SegmentValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass SegmentValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.SEGMENT_BASE, DashConstants.SEGMENT_TEMPLATE, DashConstants.SEGMENT_LIST\n        ];\n\n        super(DashConstants.PERIOD, commonProperties, [\n            new MapNode(DashConstants.ADAPTATION_SET, commonProperties, [\n                new MapNode(DashConstants.REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default SegmentValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ObjectIron from './objectiron';\nimport X2JS from '../../../externals/xml2json';\nimport StringMatcher from './matchers/StringMatcher';\nimport DurationMatcher from './matchers/DurationMatcher';\nimport DateTimeMatcher from './matchers/DateTimeMatcher';\nimport NumericMatcher from './matchers/NumericMatcher';\nimport LangMatcher from './matchers/LangMatcher';\nimport RepresentationBaseValuesMap from './maps/RepresentationBaseValuesMap';\nimport SegmentValuesMap from './maps/SegmentValuesMap';\n\nfunction DashParser(config) {\n\n    config = config || {};\n    const context = this.context;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        matchers,\n        converter,\n        objectIron;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        matchers = [\n            new DurationMatcher(),\n            new DateTimeMatcher(),\n            new NumericMatcher(),\n            new LangMatcher(),\n            new StringMatcher()// last in list to take precedence over NumericMatcher\n        ];\n\n        converter = new X2JS({\n            escapeMode: false,\n            attributePrefix: '',\n            arrayAccessForm: 'property',\n            emptyNodeForm: 'object',\n            stripWhitespaces: false,\n            enableToStringFunc: true,\n            ignoreRoot: false,\n            matchers: matchers\n        });\n\n        objectIron = ObjectIron(context).create({\n            adaptationset: new RepresentationBaseValuesMap(),\n            period: new SegmentValuesMap()\n        });\n    }\n\n    function getMatchers() {\n        return matchers;\n    }\n\n    function getIron() {\n        return objectIron;\n    }\n\n    function parse(data) {\n        let manifest;\n        const startTime = window.performance.now();\n\n        manifest = converter.xml_str2json(data);\n\n        if (!manifest) {\n            throw new Error('parsing the manifest failed');\n        }\n\n        const jsonTime = window.performance.now();\n\n        // handle full MPD and Patch ironing separately\n        if (manifest.Patch) {\n            manifest = manifest.Patch; // drop root reference\n            // apply iron to patch operations individually\n            if (manifest.add_asArray) {\n                manifest.add_asArray.forEach((operand) => objectIron.run(operand));\n            }\n            if (manifest.replace_asArray) {\n                manifest.replace_asArray.forEach((operand) => objectIron.run(operand));\n            }\n            // note that we don't need to iron remove as they contain no children\n        } else {\n            manifest = manifest.MPD; // drop root reference\n            objectIron.run(manifest);\n        }\n\n        const ironedTime = window.performance.now();\n        logger.info('Parsing complete: ( xml2json: ' + (jsonTime - startTime).toPrecision(3) + 'ms, objectiron: ' + (ironedTime - jsonTime).toPrecision(3) + 'ms, total: ' + ((ironedTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        manifest.protocol = 'DASH';\n\n        return manifest;\n    }\n\n    instance = {\n        parse: parse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashParser.__dashjs_factory_name = 'DashParser';\nexport default FactoryMaker.getClassFactory(DashParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport DashConstants from '../dash/constants/DashConstants';\nimport XlinkController from './controllers/XlinkController';\nimport URLLoader from './net/URLLoader';\nimport URLUtils from './utils/URLUtils';\nimport TextRequest from './vo/TextRequest';\nimport DashJSError from './vo/DashJSError';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport Errors from '../core/errors/Errors';\nimport FactoryMaker from '../core/FactoryMaker';\nimport DashParser from '../dash/parser/DashParser';\n\nfunction ManifestLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const debug = config.debug;\n    const settings = config.settings;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        urlLoader,\n        xlinkController,\n        parser;\n\n    let mssHandler = config.mssHandler;\n    let errHandler = config.errHandler;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        eventBus.on(Events.XLINK_READY, onXlinkReady, instance);\n\n        urlLoader = URLLoader(context).create({\n            errHandler: config.errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            urlUtils: urlUtils,\n            constants: Constants,\n            dashConstants: DashConstants,\n            errors: Errors,\n            requestTimeout: config.settings.get().streaming.manifestRequestTimeout\n        });\n\n        xlinkController = XlinkController(context).create({\n            errHandler: errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            settings: config.settings\n        });\n\n        parser = null;\n    }\n\n    function onXlinkReady(event) {\n        eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, { manifest: event.manifest });\n    }\n\n    function createParser(data) {\n        let parser = null;\n        // Analyze manifest content to detect protocol and select appropriate parser\n        if (data.indexOf('SmoothStreamingMedia') > -1) {\n            //do some business to transform it into a Dash Manifest\n            if (mssHandler) {\n                parser = mssHandler.createMssParser();\n                mssHandler.createMssFragmentProcessor();\n                mssHandler.registerEvents();\n            }\n            return parser;\n        } else if (data.indexOf('MPD') > -1 || data.indexOf('Patch') > -1) {\n            return DashParser(context).create({ debug: debug });\n        } else {\n            return parser;\n        }\n    }\n\n    function load(url, serviceLocation = null, queryParams = null) {\n\n        const requestStartDate = new Date();\n        const request = new TextRequest(url, HTTPRequest.MPD_TYPE);\n\n        if (serviceLocation) {\n            request.serviceLocation = serviceLocation;\n        }\n\n        if (queryParams) {\n            request.queryParams = queryParams;\n        }\n\n        if (!request.requestStartDate) {\n            request.requestStartDate = requestStartDate;\n        }\n\n        eventBus.trigger(\n            Events.MANIFEST_LOADING_STARTED, {\n                request\n            }\n        );\n\n        urlLoader.load({\n            request: request,\n            success: function (data, textStatus, responseURL) {\n                // Manage situations in which success is called after calling reset\n                if (!xlinkController) return;\n\n                let actualUrl,\n                    baseUri,\n                    manifest;\n\n                // Handle redirects for the MPD - as per RFC3986 Section 5.1.3\n                // also handily resolves relative MPD URLs to absolute\n                if (responseURL && responseURL !== url) {\n                    baseUri = urlUtils.parseBaseUrl(responseURL);\n                    actualUrl = responseURL;\n                } else {\n                    // usually this case will be caught and resolved by\n                    // responseURL above but it is not available for IE11 and Edge/12 and Edge/13\n                    // baseUri must be absolute for BaseURL resolution later\n                    if (urlUtils.isRelative(url)) {\n                        url = urlUtils.resolve(url, window.location.href);\n                    }\n\n                    baseUri = urlUtils.parseBaseUrl(url);\n                }\n\n                // A response of no content implies in-memory is properly up to date\n                if (textStatus == 'No Content') {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null\n                        }\n                    );\n                    return;\n                }\n\n                // Create parser according to manifest type\n                if (parser === null) {\n                    parser = createParser(data);\n                }\n\n                if (parser === null) {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                    return;\n                }\n\n                // init xlinkcontroller with matchers and iron object from created parser\n                xlinkController.setMatchers(parser.getMatchers());\n                xlinkController.setIron(parser.getIron());\n\n                try {\n                    manifest = parser.parse(data);\n                } catch (e) {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                    return;\n                }\n\n                if (manifest) {\n                    manifest.url = actualUrl || url;\n\n                    // URL from which the MPD was originally retrieved (MPD updates will not change this value)\n                    if (!manifest.originalUrl) {\n                        manifest.originalUrl = manifest.url;\n                    }\n\n                    // If there is a mismatch between the manifest's specified duration and the total duration of all periods,\n                    // and the specified duration is greater than the total duration of all periods,\n                    // overwrite the manifest's duration attribute. This is a patch for if a manifest is generated incorrectly.\n                    if (settings &&\n                        settings.get().streaming.enableManifestDurationMismatchFix &&\n                        manifest.mediaPresentationDuration &&\n                        manifest.Period_asArray.length > 1) {\n                        const sumPeriodDurations = manifest.Period_asArray.reduce((totalDuration, period) => totalDuration + period.duration, 0);\n                        if (!isNaN(sumPeriodDurations) && manifest.mediaPresentationDuration > sumPeriodDurations) {\n                            logger.warn('Media presentation duration greater than duration of all periods. Setting duration to total period duration');\n                            manifest.mediaPresentationDuration = sumPeriodDurations;\n                        }\n                    }\n\n                    manifest.baseUri = baseUri;\n                    manifest.loadedTime = new Date();\n                    xlinkController.resolveManifestOnLoad(manifest);\n\n                    eventBus.trigger(Events.ORIGINAL_MANIFEST_LOADED, { originalManifest: data });\n                } else {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                }\n            },\n            error: function (request, statusText, errorText) {\n                eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                    manifest: null,\n                    error: new DashJSError(\n                        Errors.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE + `${url}, ${errorText}`\n                    )\n                });\n            }\n        });\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_READY, onXlinkReady, instance);\n\n        if (mssHandler) {\n            mssHandler.reset();\n        }\n\n        if (xlinkController) {\n            xlinkController.reset();\n            xlinkController = null;\n        }\n\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nManifestLoader.__dashjs_factory_name = 'ManifestLoader';\n\nconst factory = FactoryMaker.getClassFactory(ManifestLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module ErrorHandler\n * @ignore\n */\nfunction ErrorHandler() {\n\n    let instance;\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    /**\n     * @param {object} err DashJSError with code, message and data attributes\n     * @memberof module:ErrorHandler\n     */\n    function error(err) {\n        eventBus.trigger(Events.ERROR, { error: err });\n    }\n    instance = {\n        error: error\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\nexport default FactoryMaker.getSingletonFactory(ErrorHandler);\n","import FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction CapabilitiesFilter() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        adapter,\n        capabilities,\n        settings,\n        customParametersModel,\n        logger;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n\n    }\n\n    function filterUnsupportedFeatures(manifest) {\n        return new Promise((resolve) => {\n            const promises = [];\n\n            promises.push(_filterUnsupportedCodecs(Constants.VIDEO, manifest));\n            promises.push(_filterUnsupportedCodecs(Constants.AUDIO, manifest));\n\n            Promise.all(promises)\n                .then(() => {\n                    if (settings.get().streaming.capabilities.filterUnsupportedEssentialProperties) {\n                        _filterUnsupportedEssentialProperties(manifest);\n                    }\n                    _applyCustomFilters(manifest);\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n    }\n\n\n    function _filterUnsupportedCodecs(type, manifest) {\n        if (!manifest || !manifest.Period_asArray || manifest.Period_asArray.length === 0) {\n            return Promise.resolve();\n        }\n\n        const promises = [];\n        manifest.Period_asArray.forEach((period) => {\n            promises.push(_filterUnsupportedAdaptationSetsOfPeriod(period, type));\n        });\n\n        return Promise.all(promises);\n    }\n\n    function _filterUnsupportedAdaptationSetsOfPeriod(period, type) {\n        return new Promise((resolve) => {\n\n            if (!period || !period.AdaptationSet_asArray || period.AdaptationSet_asArray.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            period.AdaptationSet_asArray.forEach((as) => {\n                if (adapter.getIsTypeOf(as, type)) {\n                    promises.push(_filterUnsupportedRepresentationsOfAdaptation(as, type));\n                }\n            });\n\n            Promise.all(promises)\n                .then(() => {\n                    period.AdaptationSet_asArray = period.AdaptationSet_asArray.filter((as) => {\n                        const supported = as.Representation_asArray && as.Representation_asArray.length > 0;\n\n                        if (!supported) {\n                            eventBus.trigger(Events.ADAPTATION_SET_REMOVED_NO_CAPABILITIES, {\n                                adaptationSet: as\n                            });\n                            logger.warn(`AdaptationSet has been removed because of no supported Representation`);\n                        }\n\n                        return supported;\n                    });\n\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n\n    }\n\n    function _filterUnsupportedRepresentationsOfAdaptation(as, type) {\n        return new Promise((resolve) => {\n\n            if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            const configurations = [];\n\n            as.Representation_asArray.forEach((rep, i) => {\n                const codec = adapter.getCodec(as, i, false);\n                const config = _createConfiguration(type, rep, codec);\n\n                configurations.push(config);\n                promises.push(capabilities.supportsCodec(config, type));\n            });\n\n            Promise.all(promises)\n                .then((supported) => {\n                    as.Representation_asArray = as.Representation_asArray.filter((_, i) => {\n                        if (!supported[i]) {\n                            logger.debug(`[Stream] Codec ${configurations[i].codec} not supported `);\n                        }\n                        return supported[i];\n                    });\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n    }\n\n    function _createConfiguration(type, rep, codec) {\n        switch (type) {\n            case Constants.VIDEO:\n                return _createVideoConfiguration(rep, codec);\n            case Constants.AUDIO:\n                return _createAudioConfiguration(rep, codec);\n            default:\n                return null;\n\n        }\n    }\n\n    function _createVideoConfiguration(rep, codec) {\n        const width = rep.width || null;\n        const height = rep.height || null;\n        const framerate = rep.frameRate || null;\n        const bitrate = rep.bandwidth || null;\n\n        return {\n            codec,\n            width,\n            height,\n            framerate,\n            bitrate\n        };\n    }\n\n    function _createAudioConfiguration(rep, codec) {\n        const samplerate = rep.audioSamplingRate || null;\n        const bitrate = rep.bandwidth || null;\n\n        return {\n            codec,\n            bitrate,\n            samplerate\n        };\n    }\n\n    function _filterUnsupportedEssentialProperties(manifest) {\n\n        if (!manifest || !manifest.Period_asArray || manifest.Period_asArray.length === 0) {\n            return;\n        }\n\n        manifest.Period_asArray.forEach((period) => {\n            period.AdaptationSet_asArray = period.AdaptationSet_asArray.filter((as) => {\n\n                if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n                    return true;\n                }\n\n                as.Representation_asArray = as.Representation_asArray.filter((rep) => {\n                    const essentialProperties = adapter.getEssentialPropertiesForRepresentation(rep);\n\n                    if (essentialProperties && essentialProperties.length > 0) {\n                        let i = 0;\n                        while (i < essentialProperties.length) {\n                            if (!capabilities.supportsEssentialProperty(essentialProperties[i])) {\n                                logger.debug('[Stream] EssentialProperty not supported: ' + essentialProperties[i].schemeIdUri);\n                                return false;\n                            }\n                            i += 1;\n                        }\n                    }\n\n                    return true;\n                });\n\n                return as.Representation_asArray && as.Representation_asArray.length > 0;\n            });\n        });\n\n    }\n\n    function _applyCustomFilters(manifest) {\n        const customCapabilitiesFilters = customParametersModel.getCustomCapabilitiesFilters();\n        if (!customCapabilitiesFilters || customCapabilitiesFilters.length === 0 || !manifest || !manifest.Period_asArray || manifest.Period_asArray.length === 0) {\n            return;\n        }\n\n        manifest.Period_asArray.forEach((period) => {\n            period.AdaptationSet_asArray = period.AdaptationSet_asArray.filter((as) => {\n\n                if (!as.Representation_asArray || as.Representation_asArray.length === 0) {\n                    return true;\n                }\n\n                as.Representation_asArray = as.Representation_asArray.filter((representation) => {\n                    return !customCapabilitiesFilters.some(customFilter => !customFilter(representation));\n                });\n\n                return as.Representation_asArray && as.Representation_asArray.length > 0;\n            });\n        });\n    }\n\n    instance = {\n        setConfig,\n        filterUnsupportedFeatures\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilitiesFilter.__dashjs_factory_name = 'CapabilitiesFilter';\nexport default FactoryMaker.getSingletonFactory(CapabilitiesFilter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass URIFragmentData {\n    constructor() {\n        this.t = null;\n        this.xywh = null;\n        this.track = null;\n        this.id = null;\n        this.s = null;\n        this.r = null;\n    }\n}\n\nexport default URIFragmentData;\n\n/*\n    From Spec http://www.w3.org/TR/media-frags/\n\n    temporal (t)     - This dimension denotes a specific time range in the original media, such as \"starting at second 10, continuing until second 20\";\n    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as \"a rectangle with size (100,100) with its top-left at coordinate (10,10)\";\n                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):\n    track    (track) - this dimension denotes one or more tracks in the original media, such as \"the english audio and the video track\";\n    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.\n\n\n    ## Note\n    Akamai is purposing to add #s=X to the ISO standard.\n        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge\n        - Allows for seeking back before the start time unlike a temporal clipping.\n*/","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport URIFragmentData from '../vo/URIFragmentData';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * Model class managing URI fragments.\n * @ignore\n */\nfunction URIFragmentModel() {\n\n    let instance,\n        URIFragmentDataVO;\n\n    /**\n     * @param {string} uri The URI to parse for fragment extraction\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function initialize(uri) {\n        URIFragmentDataVO = new URIFragmentData();\n\n        if (!uri) return null;\n\n        const hashIndex = uri.indexOf('#');\n        if (hashIndex !== -1) {\n            const fragments = uri.substr(hashIndex + 1).split('&');\n            for (let i = 0, len = fragments.length; i < len; ++i) {\n                const fragment = fragments[i];\n                const equalIndex = fragment.indexOf('=');\n                if (equalIndex !== -1) {\n                    const key = fragment.substring(0,equalIndex);\n                    if (URIFragmentDataVO.hasOwnProperty(key)) {\n                        URIFragmentDataVO[key] = fragment.substr(equalIndex + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @returns {URIFragmentData} Object containing supported URI fragments\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function getURIFragmentData() {\n        return URIFragmentDataVO;\n    }\n\n    instance = {\n        initialize: initialize,\n        getURIFragmentData: getURIFragmentData\n    };\n\n    return instance;\n}\n\nURIFragmentModel.__dashjs_factory_name = 'URIFragmentModel';\nexport default FactoryMaker.getSingletonFactory(URIFragmentModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ManifestModel() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        manifest;\n\n    function getValue() {\n        return manifest;\n    }\n\n    function setValue(value) {\n        manifest = value;\n        if (value) {\n            eventBus.trigger(Events.MANIFEST_LOADED, { data: value });\n        }\n    }\n\n    instance = {\n        getValue: getValue,\n        setValue: setValue\n    };\n\n    return instance;\n}\n\nManifestModel.__dashjs_factory_name = 'ManifestModel';\nexport default FactoryMaker.getSingletonFactory(ManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../../core/Debug';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Settings from '../../core/Settings';\n\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\nconst DEFAULT_CATCHUP_MAX_DRIFT = 12;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE_MIN = -0.5;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE_MAX = 0.5;\nconst CATCHUP_PLAYBACK_RATE_MIN_LIMIT = -0.5;\nconst CATCHUP_PLAYBACK_RATE_MAX_LIMIT = 1;\n\n/**\n * We use this model as a wrapper/proxy between Settings.js and classes that are using parameters from Settings.js.\n * In some cases we require additional logic to be applied and the settings might need to be adjusted before being used.\n * @class\n * @constructor\n */\nfunction MediaPlayerModel() {\n\n    let instance,\n        logger,\n        playbackController,\n        serviceDescriptionController;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n    }\n\n    /**\n     * Checks the supplied min playback rate is a valid vlaue and within supported limits\n     * @param {number} rate - Supplied min playback rate \n     * @param {boolean} log - wether to shown warning or not \n     * @returns {number} corrected min playback rate\n     */\n    function _checkMinPlaybackRate (rate, log) {\n        if (isNaN(rate)) return 0;\n        if (rate > 0) {\n            if (log) {\n                logger.warn(`Supplied minimum playback rate is a positive value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed.`)\n            }\n            return 0;\n        } \n        if (rate < CATCHUP_PLAYBACK_RATE_MIN_LIMIT) {\n            if (log) {\n                logger.warn(`Supplied minimum playback rate is out of range and will be limited to ${CATCHUP_PLAYBACK_RATE_MIN_LIMIT}: ${CATCHUP_PLAYBACK_RATE_MIN_LIMIT * 100}% playback speed.`);\n            }\n            return CATCHUP_PLAYBACK_RATE_MIN_LIMIT;\n        }\n        return rate;\n    };\n\n    /**\n     * Checks the supplied max playback rate is a valid vlaue and within supported limits\n     * @param {number} rate - Supplied max playback rate \n     * @param {boolean} log - wether to shown warning or not \n     * @returns {number} corrected max playback rate\n     */\n    function _checkMaxPlaybackRate (rate, log) {\n        if (isNaN(rate)) return 0;\n        if (rate < 0) {\n            if (log) {\n                logger.warn(`Supplied maximum playback rate is a negative value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed.`)\n            }\n            return 0;\n        } \n        if (rate > CATCHUP_PLAYBACK_RATE_MAX_LIMIT) {\n            if (log) {\n                logger.warn(`Supplied maximum playback rate is out of range and will be limited to ${CATCHUP_PLAYBACK_RATE_MAX_LIMIT}: ${(1 + CATCHUP_PLAYBACK_RATE_MAX_LIMIT) * 100}% playback speed.`);\n            }\n            return CATCHUP_PLAYBACK_RATE_MAX_LIMIT;\n        }\n        return rate;\n    };\n\n    /**\n     * Returns the maximum drift allowed before applying a seek back to the live edge when the catchup mode is enabled\n     * @return {number}\n     */\n    function getCatchupMaxDrift() {\n        if (!isNaN(settings.get().streaming.liveCatchup.maxDrift) && settings.get().streaming.liveCatchup.maxDrift > 0) {\n            return settings.get().streaming.liveCatchup.maxDrift;\n        }\n\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n        if (serviceDescriptionSettings && serviceDescriptionSettings.liveCatchup && !isNaN(serviceDescriptionSettings.liveCatchup.maxDrift) && serviceDescriptionSettings.liveCatchup.maxDrift > 0) {\n            return serviceDescriptionSettings.liveCatchup.maxDrift;\n        }\n\n        return DEFAULT_CATCHUP_MAX_DRIFT;\n    }\n\n    /**\n     * Returns the minimum and maximum playback rates to be used when applying the catchup mechanism\n     * If only one of the min/max values has been set then the other will default to 0 (no playback rate change).\n     * @return {number}\n     */\n    function getCatchupPlaybackRates(log) {\n        const settingsPlaybackRate = settings.get().streaming.liveCatchup.playbackRate;\n        \n        if(!isNaN(settingsPlaybackRate.min) || !isNaN(settingsPlaybackRate.max)) {\n            return {\n                min: _checkMinPlaybackRate(settingsPlaybackRate.min, log),\n                max: _checkMaxPlaybackRate(settingsPlaybackRate.max, log),\n            }\n        }\n\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n        if (serviceDescriptionSettings && serviceDescriptionSettings.liveCatchup && (!isNaN(serviceDescriptionSettings.liveCatchup.playbackRate.min) || !isNaN(serviceDescriptionSettings.liveCatchup.playbackRate.max))) {\n            const sdPlaybackRate = serviceDescriptionSettings.liveCatchup.playbackRate;\n            return {\n                min: _checkMinPlaybackRate(sdPlaybackRate.min, log),\n                max: _checkMaxPlaybackRate(sdPlaybackRate.max, log),\n            }\n        }\n\n        return {\n            min: DEFAULT_CATCHUP_PLAYBACK_RATE_MIN,\n            max: DEFAULT_CATCHUP_PLAYBACK_RATE_MAX\n        }\n    }\n\n    /**\n     * Returns whether the catchup mode is activated via the settings or internally in the PlaybackController\n     * @return {boolean}\n     */\n    function getCatchupModeEnabled() {\n        if (settings.get().streaming.liveCatchup.enabled !== null) {\n            return settings.get().streaming.liveCatchup.enabled;\n        }\n\n        return playbackController.getInitialCatchupModeActivated();\n    }\n\n    /**\n     * Returns the min,max or initial bitrate for a specific media type.\n     * @param {string} field\n     * @param {string} mediaType\n     */\n    function getAbrBitrateParameter(field, mediaType) {\n        try {\n            const setting = settings.get().streaming.abr[field][mediaType];\n            if(!isNaN(setting) && setting !== -1) {\n                return setting;\n            }\n\n            const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n            if(serviceDescriptionSettings && serviceDescriptionSettings[field] && !isNaN(serviceDescriptionSettings[field][mediaType])) {\n                return serviceDescriptionSettings[field][mediaType];\n            }\n\n            return -1;\n        }\n        catch(e) {\n            return -1;\n        }\n    }\n\n    /**\n     * Returns the initial buffer level taking the stable buffer time into account\n     * @return {number}\n     */\n    function getInitialBufferLevel() {\n        const initialBufferLevel = settings.get().streaming.buffer.initialBufferLevel;\n\n        if (isNaN(initialBufferLevel) || initialBufferLevel < 0) {\n            return 0;\n        }\n\n        return Math.min(getStableBufferTime(), initialBufferLevel);\n    }\n\n    /**\n     * Returns the stable buffer time taking the live delay into account\n     * @return {number}\n     */\n    function getStableBufferTime() {\n        let stableBufferTime = settings.get().streaming.buffer.stableBufferTime > 0 ? settings.get().streaming.buffer.stableBufferTime : settings.get().streaming.buffer.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n        const liveDelay = playbackController.getLiveDelay();\n\n        return !isNaN(liveDelay) && liveDelay > 0 ? Math.min(stableBufferTime, liveDelay) : stableBufferTime;\n    }\n\n    /**\n     * Returns the number of retry attempts for a specific media type\n     * @param type\n     * @return {number}\n     */\n    function getRetryAttemptsForType(type) {\n        const lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n\n        return playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n    }\n\n    /**\n     * Returns the retry interval for a specific media type\n     * @param type\n     * @return {number}\n     */\n    function getRetryIntervalsForType(type) {\n        const lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n\n        return playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n    }\n\n    function reset() {\n    }\n\n    instance = {\n        getCatchupMaxDrift,\n        getCatchupModeEnabled,\n        getStableBufferTime,\n        getInitialBufferLevel,\n        getRetryAttemptsForType,\n        getRetryIntervalsForType,\n        getCatchupPlaybackRates,\n        getAbrBitrateParameter,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexport default FactoryMaker.getSingletonFactory(MediaPlayerModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n    const l2AABR = config.useL2AABR;\n    const loLP = config.useLoLPABR;\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n    const representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\n    const videoModel = config.videoModel ? config.videoModel : null;\n\n    function getMediaType() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.type : null;\n    }\n\n    function getStreamInfo() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.streamInfo : null;\n    }\n\n    function getMediaInfo() {\n        return representationInfo ? representationInfo.mediaInfo : null;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getVideoModel() {\n        return videoModel;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n    function useL2AABR() {\n        return l2AABR;\n    }\n\n    function useLoLPABR() {\n        return loLP;\n    }\n\n    instance = {\n        getMediaType,\n        getMediaInfo,\n        getDroppedFramesHistory,\n        getCurrentRequest,\n        getSwitchHistory,\n        getStreamInfo,\n        getScheduleController,\n        getAbrController,\n        getRepresentationInfo,\n        useBufferOccupancyABR,\n        useL2AABR,\n        useLoLPABR,\n        getVideoModel\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport SwitchRequest from './SwitchRequest';\n\nconst SWITCH_REQUEST_HISTORY_DEPTH = 8; // must be > SwitchHistoryRule SAMPLE_SIZE to enable rule\n\nfunction SwitchRequestHistory() {\n    let switchRequests = []; // running total\n    let srHistory = []; // history of each switch\n\n    function push(switchRequest) {\n        if (switchRequest.newValue === SwitchRequest.NO_CHANGE) {\n            switchRequest.newValue = switchRequest.oldValue;\n        }\n        if (!switchRequests[switchRequest.oldValue]) {\n            switchRequests[switchRequest.oldValue] = {noDrops: 0, drops: 0, dropSize: 0};\n        }\n\n        // Set switch details\n        let indexDiff = switchRequest.newValue - switchRequest.oldValue;\n        let drop = (indexDiff < 0) ? 1 : 0;\n        let dropSize = drop ? -indexDiff : 0;\n        let noDrop = drop ? 0 : 1;\n\n        // Update running totals\n        switchRequests[switchRequest.oldValue].drops += drop;\n        switchRequests[switchRequest.oldValue].dropSize += dropSize;\n        switchRequests[switchRequest.oldValue].noDrops += noDrop;\n\n        // Save to history\n        srHistory.push({idx: switchRequest.oldValue, noDrop: noDrop, drop: drop, dropSize: dropSize});\n\n        // Shift earliest switch off srHistory and readjust to keep depth of running totals constant\n        if ( srHistory.length > SWITCH_REQUEST_HISTORY_DEPTH ) {\n            let srHistoryFirst = srHistory.shift();\n            switchRequests[srHistoryFirst.idx].drops -= srHistoryFirst.drop;\n            switchRequests[srHistoryFirst.idx].dropSize -= srHistoryFirst.dropSize;\n            switchRequests[srHistoryFirst.idx].noDrops -= srHistoryFirst.noDrop;\n        }\n    }\n\n    function getSwitchRequests() {\n        return switchRequests;\n    }\n\n    function reset() {\n        switchRequests = [];\n        srHistory = [];\n    }\n\n    return {\n        push: push,\n        getSwitchRequests: getSwitchRequests,\n        reset: reset\n    };\n}\n\nSwitchRequestHistory.__dashjs_factory_name = 'SwitchRequestHistory';\nconst factory = FactoryMaker.getClassFactory(SwitchRequestHistory);\nexport default factory;\n","import FactoryMaker from '../../core/FactoryMaker';\n\nfunction DroppedFramesHistory() {\n\n    let values = {};\n    let lastDroppedFrames = {};\n    let lastTotalFrames = {};\n\n    function push(streamId, index, playbackQuality) {\n\n        if (!index) {\n            return;\n        }\n\n        if (!values[streamId]) {\n            values[streamId] = [];\n            lastDroppedFrames[streamId] = 0;\n            lastTotalFrames[streamId] = 0;\n        }\n\n        let droppedVideoFrames = playbackQuality && playbackQuality.droppedVideoFrames ? playbackQuality.droppedVideoFrames : 0;\n        let totalVideoFrames = playbackQuality && playbackQuality.totalVideoFrames ? playbackQuality.totalVideoFrames : 0;\n\n        let intervalDroppedFrames = droppedVideoFrames - lastDroppedFrames[streamId];\n        lastDroppedFrames[streamId] = droppedVideoFrames;\n\n        let intervalTotalFrames = totalVideoFrames - lastTotalFrames[streamId];\n        lastTotalFrames[streamId] = totalVideoFrames;\n\n        const current = values[streamId];\n        if (!isNaN(index)) {\n            if (!current[index]) {\n                current[index] = { droppedVideoFrames: intervalDroppedFrames, totalVideoFrames: intervalTotalFrames };\n            } else {\n                current[index].droppedVideoFrames += intervalDroppedFrames;\n                current[index].totalVideoFrames += intervalTotalFrames;\n            }\n        }\n    }\n\n    function getFrameHistory(streamId) {\n        return values[streamId];\n    }\n\n    function clearForStream(streamId) {\n        try {\n            delete values[streamId];\n            delete lastDroppedFrames[streamId];\n            delete lastTotalFrames[streamId];\n        } catch (e) {\n\n        }\n    }\n\n    function reset() {\n        values = {};\n        lastDroppedFrames = {};\n        lastTotalFrames = {};\n    }\n\n    return {\n        push,\n        getFrameHistory,\n        clearForStream,\n        reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nconst factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2017, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\n\n// throughput generally stored in kbit/s\n// latency generally stored in ms\n\nfunction ThroughputHistory(config) {\n    const context = this.context;\n    config = config || {};\n    // sliding window constants\n    const MAX_MEASUREMENTS_TO_KEEP = 20;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 3;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 4;\n    const AVERAGE_LATENCY_SAMPLE_AMOUNT = 4;\n    const THROUGHPUT_DECREASE_SCALE = 1.3;\n    const THROUGHPUT_INCREASE_SCALE = 1.3;\n\n    // EWMA constants\n    const EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS = 8;\n    const EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS = 3;\n    const EWMA_LATENCY_SLOW_HALF_LIFE_COUNT = 2;\n    const EWMA_LATENCY_FAST_HALF_LIFE_COUNT = 1;\n\n    const settings = config.settings;\n    const eventBus = EventBus(context).getInstance();\n\n    let throughputDict,\n        latencyDict,\n        ewmaThroughputDict,\n        ewmaLatencyDict,\n        ewmaHalfLife;\n\n    function setup() {\n        ewmaHalfLife = {\n            throughputHalfLife: {\n                fast: EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS,\n                slow: EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS\n            },\n            latencyHalfLife: { fast: EWMA_LATENCY_FAST_HALF_LIFE_COUNT, slow: EWMA_LATENCY_SLOW_HALF_LIFE_COUNT }\n        };\n\n        reset();\n    }\n\n    function isCachedResponse(mediaType, latencyMs, downloadTimeMs) {\n        if (mediaType === Constants.VIDEO) {\n            return downloadTimeMs < settings.get().streaming.cacheLoadThresholds[Constants.VIDEO];\n        } else if (mediaType === Constants.AUDIO) {\n            return downloadTimeMs < settings.get().streaming.cacheLoadThresholds[Constants.AUDIO];\n        }\n    }\n\n    function push(mediaType, httpRequest, useDeadTimeLatency) {\n        if (!httpRequest.trace || !httpRequest.trace.length) {\n            return;\n        }\n\n        const latencyTimeInMilliseconds = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) || 1;\n        const downloadTimeInMilliseconds = (httpRequest._tfinish.getTime() - httpRequest.tresponse.getTime()) || 1; //Make sure never 0 we divide by this value. Avoid infinity!\n        const downloadBytes = httpRequest.trace.reduce((a, b) => a + b.b[0], 0);\n        let throughputMeasureTime = 0, throughput = 0;\n\n        if (httpRequest._fileLoaderType && httpRequest._fileLoaderType === Constants.FILE_LOADER_TYPES.FETCH) {\n            throughputMeasureTime = httpRequest.trace.reduce((a, b) => a + b.d, 0);\n        } else {\n            throughputMeasureTime = useDeadTimeLatency ? downloadTimeInMilliseconds : latencyTimeInMilliseconds + downloadTimeInMilliseconds;\n        }\n\n        if (throughputMeasureTime !== 0) {\n            throughput = Math.round((8 * downloadBytes) / throughputMeasureTime); // bits/ms = kbits/s\n        }\n\n        // Get estimated throughput (etp, in kbits/s) from CMSD response headers\n        if (httpRequest.cmsd) {\n            const etp = httpRequest.cmsd.dynamic && httpRequest.cmsd.dynamic.etp ? httpRequest.cmsd.dynamic.etp : null;\n            if (etp) {\n                // Apply weight ratio on etp\n                const etpWeightRatio = settings.get().streaming.cmsd.abr.etpWeightRatio;\n                if (etpWeightRatio > 0 && etpWeightRatio <= 1) {\n                    throughput = (throughput * (1 - etpWeightRatio)) + (etp * etpWeightRatio);\n                }\n            }\n        }\n\n        checkSettingsForMediaType(mediaType);\n\n        if (isCachedResponse(mediaType, latencyTimeInMilliseconds, downloadTimeInMilliseconds)) {\n            if (throughputDict[mediaType].length > 0 && !throughputDict[mediaType].hasCachedEntries) {\n                // already have some entries which are not cached entries\n                // prevent cached fragment loads from skewing the average values\n                return;\n            } else { // have no entries || have cached entries\n                // no uncached entries yet, rely on cached entries because ABR rules need something to go by\n                throughputDict[mediaType].hasCachedEntries = true;\n            }\n        } else if (throughputDict[mediaType] && throughputDict[mediaType].hasCachedEntries) {\n            // if we are here then we have some entries already, but they are cached, and now we have a new uncached entry\n            clearSettingsForMediaType(mediaType);\n        }\n\n        throughputDict[mediaType].push(throughput);\n        eventBus.trigger(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, {\n            throughput,\n            mediaType,\n            httpRequest\n        })\n        if (throughputDict[mediaType].length > MAX_MEASUREMENTS_TO_KEEP) {\n            throughputDict[mediaType].shift();\n        }\n\n        latencyDict[mediaType].push(latencyTimeInMilliseconds);\n        if (latencyDict[mediaType].length > MAX_MEASUREMENTS_TO_KEEP) {\n            latencyDict[mediaType].shift();\n        }\n\n        updateEwmaEstimate(ewmaThroughputDict[mediaType], throughput, 0.001 * downloadTimeInMilliseconds, ewmaHalfLife.throughputHalfLife);\n        updateEwmaEstimate(ewmaLatencyDict[mediaType], latencyTimeInMilliseconds, 1, ewmaHalfLife.latencyHalfLife);\n    }\n\n    function updateEwmaEstimate(ewmaObj, value, weight, halfLife) {\n        // Note about startup:\n        // Estimates start at 0, so early values are underestimated.\n        // This effect is countered in getAverageEwma() by dividing the estimates by:\n        //     1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n\n        const fastAlpha = Math.pow(0.5, weight / halfLife.fast);\n        ewmaObj.fastEstimate = (1 - fastAlpha) * value + fastAlpha * ewmaObj.fastEstimate;\n\n        const slowAlpha = Math.pow(0.5, weight / halfLife.slow);\n        ewmaObj.slowEstimate = (1 - slowAlpha) * value + slowAlpha * ewmaObj.slowEstimate;\n\n        ewmaObj.totalWeight += weight;\n    }\n\n    function getSampleSize(isThroughput, mediaType, isDynamic) {\n        let arr,\n            sampleSize;\n\n        if (isThroughput) {\n            arr = throughputDict[mediaType];\n            sampleSize = isDynamic ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD;\n        } else {\n            arr = latencyDict[mediaType];\n            sampleSize = AVERAGE_LATENCY_SAMPLE_AMOUNT;\n        }\n\n        if (!arr) {\n            sampleSize = 0;\n        } else if (sampleSize >= arr.length) {\n            sampleSize = arr.length;\n        } else if (isThroughput) {\n            // if throughput samples vary a lot, average over a wider sample\n            for (let i = 1; i < sampleSize; ++i) {\n                const ratio = arr[arr.length - i] / arr[arr.length - i - 1];\n                if (ratio >= THROUGHPUT_INCREASE_SCALE || ratio <= 1 / THROUGHPUT_DECREASE_SCALE) {\n                    sampleSize += 1;\n                    if (sampleSize === arr.length) { // cannot increase sampleSize beyond arr.length\n                        break;\n                    }\n                }\n            }\n        }\n\n        return sampleSize;\n    }\n\n    function getAverage(isThroughput, mediaType, isDynamic) {\n        // only two moving average methods defined at the moment\n        return settings.get().streaming.abr.movingAverageMethod !== Constants.MOVING_AVERAGE_SLIDING_WINDOW ?\n            getAverageEwma(isThroughput, mediaType) : getAverageSlidingWindow(isThroughput, mediaType, isDynamic);\n    }\n\n    function getAverageSlidingWindow(isThroughput, mediaType, isDynamic) {\n        const sampleSize = getSampleSize(isThroughput, mediaType, isDynamic);\n        const dict = isThroughput ? throughputDict : latencyDict;\n        let arr = dict[mediaType];\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        arr = arr.slice(-sampleSize); // still works if sampleSize too large\n        // arr.length >= 1\n        return arr.reduce((total, elem) => total + elem) / arr.length;\n    }\n\n    function getAverageEwma(isThroughput, mediaType) {\n        const halfLife = isThroughput ? ewmaHalfLife.throughputHalfLife : ewmaHalfLife.latencyHalfLife;\n        const ewmaObj = isThroughput ? ewmaThroughputDict[mediaType] : ewmaLatencyDict[mediaType];\n\n        if (!ewmaObj || ewmaObj.totalWeight <= 0) {\n            return NaN;\n        }\n\n        // to correct for startup, divide by zero factor = 1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n        const fastEstimate = ewmaObj.fastEstimate / (1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife.fast));\n        const slowEstimate = ewmaObj.slowEstimate / (1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife.slow));\n        return isThroughput ? Math.min(fastEstimate, slowEstimate) : Math.max(fastEstimate, slowEstimate);\n    }\n\n    function getAverageThroughput(mediaType, isDynamic) {\n        return getAverage(true, mediaType, isDynamic);\n    }\n\n    function getSafeAverageThroughput(mediaType, isDynamic) {\n        let average = getAverageThroughput(mediaType, isDynamic);\n        if (!isNaN(average)) {\n            average *= settings.get().streaming.abr.bandwidthSafetyFactor;\n        }\n        return average;\n    }\n\n    function getAverageLatency(mediaType) {\n        return getAverage(false, mediaType);\n    }\n\n    function checkSettingsForMediaType(mediaType) {\n        throughputDict[mediaType] = throughputDict[mediaType] || [];\n        latencyDict[mediaType] = latencyDict[mediaType] || [];\n        ewmaThroughputDict[mediaType] = ewmaThroughputDict[mediaType] || {\n            fastEstimate: 0,\n            slowEstimate: 0,\n            totalWeight: 0\n        };\n        ewmaLatencyDict[mediaType] = ewmaLatencyDict[mediaType] || { fastEstimate: 0, slowEstimate: 0, totalWeight: 0 };\n    }\n\n    function clearSettingsForMediaType(mediaType) {\n        delete throughputDict[mediaType];\n        delete latencyDict[mediaType];\n        delete ewmaThroughputDict[mediaType];\n        delete ewmaLatencyDict[mediaType];\n        checkSettingsForMediaType(mediaType);\n    }\n\n    function reset() {\n        throughputDict = {};\n        latencyDict = {};\n        ewmaThroughputDict = {};\n        ewmaLatencyDict = {};\n    }\n\n    const instance = {\n        push,\n        getAverageThroughput,\n        getSafeAverageThroughput,\n        getAverageLatency,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nThroughputHistory.__dashjs_factory_name = 'ThroughputHistory';\nexport default FactoryMaker.getClassFactory(ThroughputHistory);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport FragmentModel from '../models/FragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport RulesContext from '../rules/RulesContext';\nimport SwitchRequest from '../rules/SwitchRequest';\nimport SwitchRequestHistory from '../rules/SwitchRequestHistory';\nimport DroppedFramesHistory from '../rules/DroppedFramesHistory';\nimport ThroughputHistory from '../rules/ThroughputHistory';\nimport Debug from '../../core/Debug';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport {checkInteger} from '../utils/SupervisorTools';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\n\nconst DEFAULT_VIDEO_BITRATE = 1000;\nconst DEFAULT_AUDIO_BITRATE = 100;\nconst QUALITY_DEFAULT = 0;\n\nfunction AbrController() {\n\n    const context = this.context;\n    const debug = Debug(context).getInstance();\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        abrRulesCollection,\n        streamController,\n        topQualities,\n        qualityDict,\n        streamProcessorDict,\n        abandonmentStateDict,\n        abandonmentTimeout,\n        windowResizeEventCalled,\n        elementWidth,\n        elementHeight,\n        adapter,\n        videoModel,\n        mediaPlayerModel,\n        customParametersModel,\n        cmsdModel,\n        domStorage,\n        playbackIndex,\n        switchHistoryDict,\n        droppedFramesHistory,\n        throughputHistory,\n        isUsingBufferOccupancyAbrDict,\n        isUsingL2AAbrDict,\n        isUsingLoLPAbrDict,\n        dashMetrics,\n        settings;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n    }\n\n    /**\n     * Initialize everything that is not Stream specific. We only have one instance of the ABR Controller for all periods.\n     */\n    function initialize() {\n        droppedFramesHistory = DroppedFramesHistory(context).create();\n        throughputHistory = ThroughputHistory(context).create({\n            settings\n        });\n\n        abrRulesCollection = ABRRulesCollection(context).create({\n            dashMetrics,\n            customParametersModel,\n            mediaPlayerModel,\n            settings\n        });\n\n        abrRulesCollection.initialize();\n\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_RENDERED, _onQualityChangeRendered, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n    }\n\n    /**\n     * Whenever a StreamProcessor is created it is added to the list of streamProcessorDict\n     * In addition, the corresponding objects for this object and its stream id are created\n     * @param {object} type\n     * @param {object} streamProcessor\n     */\n    function registerStreamType(type, streamProcessor) {\n        const streamId = streamProcessor.getStreamInfo().id;\n\n        if (!streamProcessorDict[streamId]) {\n            streamProcessorDict[streamId] = {};\n        }\n\n        if (!switchHistoryDict[streamId]) {\n            switchHistoryDict[streamId] = {};\n        }\n\n        if (!abandonmentStateDict[streamId]) {\n            abandonmentStateDict[streamId] = {};\n        }\n\n        switchHistoryDict[streamId][type] = SwitchRequestHistory(context).create();\n        streamProcessorDict[streamId][type] = streamProcessor;\n\n        abandonmentStateDict[streamId][type] = {};\n        abandonmentStateDict[streamId][type].state = MetricsConstants.ALLOW_LOAD;\n\n        _initializeAbrStrategy(type);\n\n        if (type === Constants.VIDEO) {\n            setElementSize();\n        }\n    }\n\n    function _initializeAbrStrategy(type) {\n        const strategy = settings.get().streaming.abr.ABRStrategy;\n\n        if (strategy === Constants.ABR_STRATEGY_L2A) {\n            isUsingBufferOccupancyAbrDict[type] = false;\n            isUsingLoLPAbrDict[type] = false;\n            isUsingL2AAbrDict[type] = true;\n        } else if (strategy === Constants.ABR_STRATEGY_LoLP) {\n            isUsingBufferOccupancyAbrDict[type] = false;\n            isUsingLoLPAbrDict[type] = true;\n            isUsingL2AAbrDict[type] = false;\n        } else if (strategy === Constants.ABR_STRATEGY_BOLA) {\n            isUsingBufferOccupancyAbrDict[type] = true;\n            isUsingLoLPAbrDict[type] = false;\n            isUsingL2AAbrDict[type] = false;\n        } else if (strategy === Constants.ABR_STRATEGY_THROUGHPUT) {\n            isUsingBufferOccupancyAbrDict[type] = false;\n            isUsingLoLPAbrDict[type] = false;\n            isUsingL2AAbrDict[type] = false;\n        } else if (strategy === Constants.ABR_STRATEGY_DYNAMIC) {\n            isUsingBufferOccupancyAbrDict[type] = isUsingBufferOccupancyAbrDict && isUsingBufferOccupancyAbrDict[type] ? isUsingBufferOccupancyAbrDict[type] : false;\n            isUsingLoLPAbrDict[type] = false;\n            isUsingL2AAbrDict[type] = false;\n        }\n    }\n\n    function unRegisterStreamType(streamId, type) {\n        try {\n            if (streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n                delete streamProcessorDict[streamId][type];\n            }\n\n            if (switchHistoryDict[streamId] && switchHistoryDict[streamId][type]) {\n                delete switchHistoryDict[streamId][type];\n            }\n\n            if (abandonmentStateDict[streamId] && abandonmentStateDict[streamId][type]) {\n                delete abandonmentStateDict[streamId][type];\n            }\n\n        } catch (e) {\n\n        }\n    }\n\n    function resetInitialSettings() {\n        topQualities = {};\n        qualityDict = {};\n        abandonmentStateDict = {};\n        streamProcessorDict = {};\n        switchHistoryDict = {};\n        isUsingBufferOccupancyAbrDict = {};\n        isUsingL2AAbrDict = {};\n        isUsingLoLPAbrDict = {};\n\n        if (windowResizeEventCalled === undefined) {\n            windowResizeEventCalled = false;\n        }\n        if (droppedFramesHistory) {\n            droppedFramesHistory.reset();\n        }\n\n        playbackIndex = undefined;\n        droppedFramesHistory = undefined;\n        throughputHistory = undefined;\n        clearTimeout(abandonmentTimeout);\n        abandonmentTimeout = null;\n    }\n\n    function reset() {\n\n        resetInitialSettings();\n\n        eventBus.off(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_RENDERED, _onQualityChangeRendered, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n\n        if (abrRulesCollection) {\n            abrRulesCollection.reset();\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.cmsdModel) {\n            cmsdModel = config.cmsdModel\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    function checkConfig() {\n        if (!domStorage || !domStorage.hasOwnProperty('getSavedBitrateSettings')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    /**\n     * While fragment loading is in progress we check if we might need to abort the request\n     * @param {object} e\n     * @private\n     */\n    function _onFragmentLoadProgress(e) {\n        const type = e.request.mediaType;\n        const streamId = e.streamId;\n\n        if (!type || !streamId || !streamProcessorDict[streamId] || !settings.get().streaming.abr.autoSwitchBitrate[type]) {\n            return;\n        }\n\n        const streamProcessor = streamProcessorDict[streamId][type];\n        if (!streamProcessor) {\n            return;\n        }\n\n        const rulesContext = RulesContext(context).create({\n            abrController: instance,\n            streamProcessor: streamProcessor,\n            currentRequest: e.request,\n            useBufferOccupancyABR: isUsingBufferOccupancyAbrDict[type],\n            useL2AABR: isUsingL2AAbrDict[type],\n            useLoLPABR: isUsingLoLPAbrDict[type],\n            videoModel\n        });\n        const switchRequest = abrRulesCollection.shouldAbandonFragment(rulesContext, streamId);\n\n        if (switchRequest.quality > SwitchRequest.NO_CHANGE) {\n            const fragmentModel = streamProcessor.getFragmentModel();\n            const request = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_LOADING,\n                index: e.request.index\n            })[0];\n            if (request) {\n                abandonmentStateDict[streamId][type].state = MetricsConstants.ABANDON_LOAD;\n                switchHistoryDict[streamId][type].reset();\n                switchHistoryDict[streamId][type].push({\n                    oldValue: getQualityFor(type, streamId),\n                    newValue: switchRequest.quality,\n                    confidence: 1,\n                    reason: switchRequest.reason\n                });\n                setPlaybackQuality(type, streamController.getActiveStreamInfo(), switchRequest.quality, switchRequest.reason);\n\n                clearTimeout(abandonmentTimeout);\n                abandonmentTimeout = setTimeout(\n                    () => {\n                        abandonmentStateDict[streamId][type].state = MetricsConstants.ALLOW_LOAD;\n                        abandonmentTimeout = null;\n                    },\n                    settings.get().streaming.abandonLoadTimeout\n                );\n            }\n        }\n    }\n\n    /**\n     * Update dropped frames history when the quality was changed\n     * @param {object} e\n     * @private\n     */\n    function _onQualityChangeRendered(e) {\n        if (e.mediaType === Constants.VIDEO) {\n            if (playbackIndex !== undefined) {\n                droppedFramesHistory.push(e.streamId, playbackIndex, videoModel.getPlaybackQuality());\n            }\n            playbackIndex = e.newQuality;\n        }\n    }\n\n    /**\n     * When the buffer level is updated we check if we need to change the ABR strategy\n     * @param e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        if (e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            throughputHistory.push(e.mediaType, e.value, settings.get().streaming.abr.useDeadTimeLatency);\n        }\n\n        if (e.metric === MetricsConstants.BUFFER_LEVEL && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            _updateAbrStrategy(e.mediaType, 0.001 * e.value.level);\n        }\n    }\n\n    /**\n     * Returns the highest possible index taking limitations like maxBitrate, representationRatio and portal size into account.\n     * @param {string} type\n     * @param {string} streamId\n     * @return {undefined|number}\n     */\n    function getMaxAllowedIndexFor(type, streamId) {\n        try {\n            let idx;\n            topQualities[streamId] = topQualities[streamId] || {};\n\n            if (!topQualities[streamId].hasOwnProperty(type)) {\n                topQualities[streamId][type] = 0;\n            }\n\n            idx = _checkMaxBitrate(type, streamId);\n            idx = _checkMaxRepresentationRatio(idx, type, streamId);\n            idx = _checkPortalSize(idx, type, streamId);\n            // Apply maximum suggested bitrate from CMSD headers if enabled \n            if (settings.get().streaming.cmsd.enabled && settings.get().streaming.cmsd.abr.applyMb) {\n                idx = _checkCmsdMaxBitrate(idx, type, streamId);\n            }\n            return idx;\n        } catch (e) {\n            return undefined\n        }\n    }\n\n    /**\n     * Returns the minimum allowed index. We consider thresholds defined in the settings, i.e. minBitrate for the corresponding media type.\n     * @param {string} type\n     * @param {string} streamId\n     * @return {undefined|number}\n     */\n    function getMinAllowedIndexFor(type, streamId) {\n        try {\n            return _getMinIndexBasedOnBitrateFor(type, streamId);\n        } catch (e) {\n            return undefined\n        }\n    }\n\n    /**\n     * Returns the maximum allowed index.\n     * @param {string} type\n     * @param {string} streamId\n     * @return {undefined|number}\n     */\n    function _getMaxIndexBasedOnBitrateFor(type, streamId) {\n        try {\n            const maxBitrate = mediaPlayerModel.getAbrBitrateParameter('maxBitrate', type);\n            if (maxBitrate > -1) {\n                return getQualityForBitrate(streamProcessorDict[streamId][type].getMediaInfo(), maxBitrate, streamId);\n            } else {\n                return undefined;\n            }\n        } catch (e) {\n            return undefined\n        }\n    }\n\n    /**\n     * Returns the minimum allowed index.\n     * @param {string} type\n     * @param {string} streamId\n     * @return {undefined|number}\n     */\n    function _getMinIndexBasedOnBitrateFor(type, streamId) {\n        try {\n            const minBitrate = mediaPlayerModel.getAbrBitrateParameter('minBitrate', type);\n\n            if (minBitrate > -1) {\n                const mediaInfo = streamProcessorDict[streamId][type].getMediaInfo();\n                const bitrateList = getBitrateList(mediaInfo);\n                // This returns the quality index <= for the given bitrate\n                let minIdx = getQualityForBitrate(mediaInfo, minBitrate, streamId);\n                if (bitrateList[minIdx] && minIdx < bitrateList.length - 1 && bitrateList[minIdx].bitrate < minBitrate * 1000) {\n                    minIdx++; // Go to the next bitrate\n                }\n                return minIdx;\n            } else {\n                return undefined;\n            }\n        } catch (e) {\n            return undefined;\n        }\n    }\n\n    /**\n     * Returns the maximum possible index\n     * @param type\n     * @param streamId\n     * @return {number|*}\n     */\n    function _checkMaxBitrate(type, streamId) {\n        let idx = topQualities[streamId][type];\n        let newIdx = idx;\n\n        if (!streamProcessorDict[streamId] || !streamProcessorDict[streamId][type]) {\n            return newIdx;\n        }\n\n        const minIdx = getMinAllowedIndexFor(type, streamId);\n        if (minIdx !== undefined) {\n            newIdx = Math.max(idx, minIdx);\n        }\n\n        const maxIdx = _getMaxIndexBasedOnBitrateFor(type, streamId);\n        if (maxIdx !== undefined) {\n            newIdx = Math.min(newIdx, maxIdx);\n        }\n\n        return newIdx;\n    }\n\n    /**\n     * Returns the maximum possible index from CMSD model\n     * @param type\n     * @param streamId\n     * @return {number|*}\n     */\n    function _checkCmsdMaxBitrate(idx, type, streamId) {\n        // Check CMSD max suggested bitrate only for video segments\n        if (type !== 'video') {\n            return idx;\n        }\n        // Get max suggested bitrate\n        let maxCmsdBitrate = cmsdModel.getMaxBitrate(type);\n        if (maxCmsdBitrate < 0) {\n            return idx;\n        }\n        // Substract audio bitrate\n        const audioBitrate = _getBitrateInfoForQuality(streamId, 'audio', getQualityFor('audio', streamId));\n        maxCmsdBitrate -= audioBitrate ? (audioBitrate.bitrate / 1000) : 0;\n        const maxIdx = getQualityForBitrate(streamProcessorDict[streamId][type].getMediaInfo(), maxCmsdBitrate, streamId);\n        logger.debug('Stream ID: ' + streamId + ' [' + type + '] Apply max bit rate from CMSD: ' + maxCmsdBitrate);\n        return Math.min(idx, maxIdx);\n    }\n\n    /**\n     * Returns the maximum index according to maximum representation ratio\n     * @param idx\n     * @param type\n     * @param streamId\n     * @return {number|*}\n     * @private\n     */\n    function _checkMaxRepresentationRatio(idx, type, streamId) {\n        let maxIdx = topQualities[streamId][type]\n        const maxRepresentationRatio = settings.get().streaming.abr.maxRepresentationRatio[type];\n\n        if (isNaN(maxRepresentationRatio) || maxRepresentationRatio >= 1 || maxRepresentationRatio < 0) {\n            return idx;\n        }\n        return Math.min(idx, Math.round(maxIdx * maxRepresentationRatio));\n    }\n\n    /**\n     * Returns the maximum index according to the portal size\n     * @param idx\n     * @param type\n     * @param streamId\n     * @return {number|*}\n     * @private\n     */\n    function _checkPortalSize(idx, type, streamId) {\n        if (type !== Constants.VIDEO || !settings.get().streaming.abr.limitBitrateByPortal || !streamProcessorDict[streamId] || !streamProcessorDict[streamId][type]) {\n            return idx;\n        }\n\n        if (!windowResizeEventCalled) {\n            setElementSize();\n        }\n        const streamInfo = streamProcessorDict[streamId][type].getStreamInfo();\n        const representation = adapter.getAdaptationForType(streamInfo.index, type, streamInfo).Representation_asArray;\n        let newIdx = idx;\n\n        if (elementWidth > 0 && elementHeight > 0) {\n            while (\n                newIdx > 0 &&\n                representation[newIdx] &&\n                elementWidth < representation[newIdx].width &&\n                elementWidth - representation[newIdx - 1].width < representation[newIdx].width - elementWidth) {\n                newIdx = newIdx - 1;\n            }\n\n            // Make sure that in case of multiple representation elements have same\n            // resolution, every such element is included\n            while (newIdx < representation.length - 1 && representation[newIdx].width === representation[newIdx + 1].width) {\n                newIdx = newIdx + 1;\n            }\n        }\n\n        return newIdx;\n    }\n\n    /**\n     * Gets top BitrateInfo for the player\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {string} streamId - Id of the stream\n     * @returns {BitrateInfo | null}\n     */\n    function getTopBitrateInfoFor(type, streamId = null) {\n        if (!streamId) {\n            streamId = streamController.getActiveStreamInfo().id;\n        }\n        if (type && streamProcessorDict && streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n            const idx = getMaxAllowedIndexFor(type, streamId);\n            const bitrates = getBitrateList(streamProcessorDict[streamId][type].getMediaInfo());\n            return bitrates[idx] ? bitrates[idx] : null;\n        }\n        return null;\n    }\n\n    /**\n     * Returns the initial bitrate for a specific media type and stream id\n     * @param {string} type\n     * @param {string} streamId\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function getInitialBitrateFor(type, streamId) {\n        checkConfig();\n\n        if (type === Constants.TEXT) {\n            return NaN;\n        }\n\n        const savedBitrate = domStorage.getSavedBitrateSettings(type);\n        let configBitrate = mediaPlayerModel.getAbrBitrateParameter('initialBitrate', type);\n        let configRatio = settings.get().streaming.abr.initialRepresentationRatio[type];\n\n        if (configBitrate === -1) {\n            if (configRatio > -1) {\n                const streamInfo = streamProcessorDict[streamId][type].getStreamInfo();\n                const representation = adapter.getAdaptationForType(streamInfo.index, type, streamInfo).Representation_asArray;\n                if (Array.isArray(representation)) {\n                    const repIdx = Math.max(Math.round(representation.length * configRatio) - 1, 0);\n                    configBitrate = representation[repIdx].bandwidth / 1000;\n                } else {\n                    configBitrate = 0;\n                }\n            } else if (!isNaN(savedBitrate)) {\n                configBitrate = savedBitrate;\n            } else {\n                configBitrate = (type === Constants.VIDEO) ? DEFAULT_VIDEO_BITRATE : DEFAULT_AUDIO_BITRATE;\n            }\n        }\n\n        return configBitrate;\n    }\n\n    /**\n     * This function is called by the scheduleControllers to check if the quality should be changed.\n     * Consider this the main entry point for the ABR decision logic\n     * @param {string} type\n     * @param {string} streamId\n     */\n    function checkPlaybackQuality(type, streamId) {\n        try {\n            if (!type || !streamProcessorDict || !streamProcessorDict[streamId] || !streamProcessorDict[streamId][type]) {\n                return false;\n            }\n\n            if (droppedFramesHistory) {\n                const playbackQuality = videoModel.getPlaybackQuality();\n                if (playbackQuality) {\n                    droppedFramesHistory.push(streamId, playbackIndex, playbackQuality);\n                }\n            }\n\n            // ABR is turned off, do nothing\n            if (!settings.get().streaming.abr.autoSwitchBitrate[type]) {\n                return false;\n            }\n\n            const oldQuality = getQualityFor(type, streamId);\n            const rulesContext = RulesContext(context).create({\n                abrController: instance,\n                switchHistory: switchHistoryDict[streamId][type],\n                droppedFramesHistory: droppedFramesHistory,\n                streamProcessor: streamProcessorDict[streamId][type],\n                currentValue: oldQuality,\n                useBufferOccupancyABR: isUsingBufferOccupancyAbrDict[type],\n                useL2AABR: isUsingL2AAbrDict[type],\n                useLoLPABR: isUsingLoLPAbrDict[type],\n                videoModel\n            });\n            const minIdx = getMinAllowedIndexFor(type, streamId);\n            const maxIdx = getMaxAllowedIndexFor(type, streamId);\n            const switchRequest = abrRulesCollection.getMaxQuality(rulesContext);\n            let newQuality = switchRequest.quality;\n\n            if (minIdx !== undefined && ((newQuality > SwitchRequest.NO_CHANGE) ? newQuality : oldQuality) < minIdx) {\n                newQuality = minIdx;\n            }\n            if (newQuality > maxIdx) {\n                newQuality = maxIdx;\n            }\n\n            switchHistoryDict[streamId][type].push({ oldValue: oldQuality, newValue: newQuality });\n\n            if (newQuality > SwitchRequest.NO_CHANGE && newQuality !== oldQuality && (abandonmentStateDict[streamId][type].state === MetricsConstants.ALLOW_LOAD || newQuality < oldQuality)) {\n                _changeQuality(type, oldQuality, newQuality, maxIdx, switchRequest.reason, streamId);\n                return true;\n            }\n\n            return false;\n        } catch (e) {\n            return false;\n        }\n\n    }\n\n    /**\n     * Returns the current quality for a specific media type and a specific streamId\n     * @param {string} type\n     * @param {string} streamId\n     * @return {number|*}\n     */\n    function getQualityFor(type, streamId = null) {\n        try {\n            if (!streamId) {\n                streamId = streamController.getActiveStreamInfo().id;\n            }\n            if (type && streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n                let quality;\n\n                if (streamId) {\n                    qualityDict[streamId] = qualityDict[streamId] || {};\n\n                    if (!qualityDict[streamId].hasOwnProperty(type)) {\n                        qualityDict[streamId][type] = QUALITY_DEFAULT;\n                    }\n\n                    quality = qualityDict[streamId][type];\n                    return quality;\n                }\n            }\n            return QUALITY_DEFAULT;\n        } catch (e) {\n            return QUALITY_DEFAULT;\n        }\n    }\n\n    /**\n     * Sets the new playback quality. Starts from index 0.\n     * If the index of the new quality is the same as the old one changeQuality will not be called.\n     * @param {string} type\n     * @param {object} streamInfo\n     * @param {number} newQuality\n     * @param {string} reason\n     */\n    function setPlaybackQuality(type, streamInfo, newQuality, reason = null) {\n        if (!streamInfo || !streamInfo.id || !type) {\n            return;\n        }\n        const streamId = streamInfo.id;\n        const oldQuality = getQualityFor(type, streamId);\n\n        checkInteger(newQuality);\n\n        const topQualityIdx = getMaxAllowedIndexFor(type, streamId);\n\n        if (newQuality !== oldQuality && newQuality >= 0 && newQuality <= topQualityIdx) {\n            _changeQuality(type, oldQuality, newQuality, topQualityIdx, reason, streamId);\n        }\n    }\n\n    /**\n     *\n     * @param {string} streamId\n     * @param {type} type\n     * @return {*|null}\n     */\n    function getAbandonmentStateFor(streamId, type) {\n        return abandonmentStateDict[streamId] && abandonmentStateDict[streamId][type] ? abandonmentStateDict[streamId][type].state : null;\n    }\n\n\n    /**\n     * Changes the internal qualityDict values according to the new quality\n     * @param {string} type\n     * @param {number} oldQuality\n     * @param {number} newQuality\n     * @param {number} maxIdx\n     * @param {string} reason\n     * @param {object} streamId\n     * @private\n     */\n    function _changeQuality(type, oldQuality, newQuality, maxIdx, reason, streamId) {\n        if (type && streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n            const streamInfo = streamProcessorDict[streamId][type].getStreamInfo();\n            const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n            logger.info('Stream ID: ' + streamId + ' [' + type + '] switch from ' + oldQuality + ' to ' + newQuality + '/' + maxIdx + ' (buffer: ' + bufferLevel + ') ' + (reason ? JSON.stringify(reason) : '.'));\n\n            qualityDict[streamId] = qualityDict[streamId] || {};\n            qualityDict[streamId][type] = newQuality;\n            const bitrateInfo = _getBitrateInfoForQuality(streamId, type, newQuality);\n            eventBus.trigger(Events.QUALITY_CHANGE_REQUESTED,\n                {\n                    oldQuality,\n                    newQuality,\n                    reason,\n                    streamInfo,\n                    bitrateInfo,\n                    maxIdx,\n                    mediaType: type\n                },\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            const bitrate = throughputHistory.getAverageThroughput(type, isDynamic);\n            if (!isNaN(bitrate)) {\n                domStorage.setSavedBitrateSettings(type, bitrate);\n            }\n        }\n    }\n\n    function _getBitrateInfoForQuality(streamId, type, idx) {\n        if (type && streamProcessorDict && streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n            const bitrates = getBitrateList(streamProcessorDict[streamId][type].getMediaInfo());\n            return bitrates[idx] ? bitrates[idx] : null;\n        }\n        return null;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @param {number} bitrate A bitrate value, kbps\n     * @param {String} streamId Period ID\n     * @param {number|null} latency Expected latency of connection, ms\n     * @returns {number} A quality index <= for the given bitrate\n     * @memberof AbrController#\n     */\n    function getQualityForBitrate(mediaInfo, bitrate, streamId, latency = null) {\n        const voRepresentation = mediaInfo && mediaInfo.type ? streamProcessorDict[streamId][mediaInfo.type].getRepresentationInfo() : null;\n\n        if (settings.get().streaming.abr.useDeadTimeLatency && latency && voRepresentation && voRepresentation.fragmentDuration) {\n            latency = latency / 1000;\n            const fragmentDuration = voRepresentation.fragmentDuration;\n            if (latency > fragmentDuration) {\n                return 0;\n            } else {\n                const deadTimeRatio = latency / fragmentDuration;\n                bitrate = bitrate * (1 - deadTimeRatio);\n            }\n        }\n\n        const bitrateList = getBitrateList(mediaInfo);\n\n        for (let i = bitrateList.length - 1; i >= 0; i--) {\n            const bitrateInfo = bitrateList[i];\n            if (bitrate * 1000 >= bitrateInfo.bitrate) {\n                return i;\n            }\n        }\n        return QUALITY_DEFAULT;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @returns {Array|null} A list of {@link BitrateInfo} objects\n     * @memberof AbrController#\n     */\n    function getBitrateList(mediaInfo) {\n        const infoList = [];\n        if (!mediaInfo || !mediaInfo.bitrateList) return infoList;\n\n        const bitrateList = mediaInfo.bitrateList;\n        const type = mediaInfo.type;\n\n        let bitrateInfo;\n\n        for (let i = 0, ln = bitrateList.length; i < ln; i++) {\n            bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = type;\n            bitrateInfo.qualityIndex = i;\n            bitrateInfo.bitrate = bitrateList[i].bandwidth;\n            bitrateInfo.width = bitrateList[i].width;\n            bitrateInfo.height = bitrateList[i].height;\n            bitrateInfo.scanType = bitrateList[i].scanType;\n            infoList.push(bitrateInfo);\n        }\n\n        return infoList;\n    }\n\n    function _updateAbrStrategy(mediaType, bufferLevel) {\n        // else ABR_STRATEGY_DYNAMIC\n        const strategy = settings.get().streaming.abr.ABRStrategy;\n\n        if (strategy === Constants.ABR_STRATEGY_DYNAMIC) {\n            _updateDynamicAbrStrategy(mediaType, bufferLevel);\n        }\n    }\n\n    function _updateDynamicAbrStrategy(mediaType, bufferLevel) {\n        try {\n            const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n            const switchOnThreshold = stableBufferTime;\n            const switchOffThreshold = 0.5 * stableBufferTime;\n\n            const useBufferABR = isUsingBufferOccupancyAbrDict[mediaType];\n            const newUseBufferABR = bufferLevel > (useBufferABR ? switchOffThreshold : switchOnThreshold); // use hysteresis to avoid oscillating rules\n            isUsingBufferOccupancyAbrDict[mediaType] = newUseBufferABR;\n\n            if (newUseBufferABR !== useBufferABR) {\n                if (newUseBufferABR) {\n                    logger.info('[' + mediaType + '] switching from throughput to buffer occupancy ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n                } else {\n                    logger.info('[' + mediaType + '] switching from buffer occupancy to throughput ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    function getThroughputHistory() {\n        return throughputHistory;\n    }\n\n    function updateTopQualityIndex(mediaInfo) {\n        const type = mediaInfo.type;\n        const streamId = mediaInfo.streamInfo.id;\n        const max = mediaInfo.representationCount - 1;\n\n        topQualities[streamId] = topQualities[streamId] || {};\n        topQualities[streamId][type] = max;\n\n        return max;\n    }\n\n    function isPlayingAtTopQuality(streamInfo) {\n        const streamId = streamInfo ? streamInfo.id : null;\n        const audioQuality = getQualityFor(Constants.AUDIO, streamId);\n        const videoQuality = getQualityFor(Constants.VIDEO, streamId);\n\n        const isAtTop = (audioQuality === getMaxAllowedIndexFor(Constants.AUDIO, streamId)) &&\n            (videoQuality === getMaxAllowedIndexFor(Constants.VIDEO, streamId));\n\n        return isAtTop;\n    }\n\n    function setWindowResizeEventCalled(value) {\n        windowResizeEventCalled = value;\n    }\n\n    function setElementSize() {\n        if (videoModel) {\n            const hasPixelRatio = settings.get().streaming.abr.usePixelRatioInLimitBitrateByPortal && window.hasOwnProperty('devicePixelRatio');\n            const pixelRatio = hasPixelRatio ? window.devicePixelRatio : 1;\n            elementWidth = videoModel.getClientWidth() * pixelRatio;\n            elementHeight = videoModel.getClientHeight() * pixelRatio;\n        }\n    }\n\n    function clearDataForStream(streamId) {\n        if (droppedFramesHistory) {\n            droppedFramesHistory.clearForStream(streamId);\n        }\n        if (streamProcessorDict[streamId]) {\n            delete streamProcessorDict[streamId];\n        }\n        if (switchHistoryDict[streamId]) {\n            delete switchHistoryDict[streamId];\n        }\n\n        if (abandonmentStateDict[streamId]) {\n            delete abandonmentStateDict[streamId];\n        }\n    }\n\n    instance = {\n        initialize,\n        isPlayingAtTopQuality,\n        updateTopQualityIndex,\n        clearDataForStream,\n        getThroughputHistory,\n        getBitrateList,\n        getQualityForBitrate,\n        getTopBitrateInfoFor,\n        getMinAllowedIndexFor,\n        getMaxAllowedIndexFor,\n        getInitialBitrateFor,\n        getQualityFor,\n        getAbandonmentStateFor,\n        setPlaybackQuality,\n        checkPlaybackQuality,\n        setElementSize,\n        setWindowResizeEventCalled,\n        registerStreamType,\n        unRegisterStreamType,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbrController.__dashjs_factory_name = 'AbrController';\nconst factory = FactoryMaker.getSingletonFactory(AbrController);\nfactory.QUALITY_DEFAULT = QUALITY_DEFAULT;\nFactoryMaker.updateSingletonFactory(AbrController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport Debug from '../../core/Debug';\nimport Constants from '../constants/Constants';\n\n\nconst READY_STATES_TO_EVENT_NAMES = new Map([\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, 'loadedmetadata'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_CURRENT_DATA, 'loadeddata'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, 'canplay'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_ENOUGH_DATA, 'canplaythrough']\n]);\n\nfunction VideoModel() {\n\n    let instance,\n        logger,\n        element,\n        _currentTime,\n        TTMLRenderingDiv,\n        vttRenderingDiv,\n        previousPlaybackRate;\n\n    const VIDEO_MODEL_WRONG_ELEMENT_TYPE = 'element is not video or audio DOM type!';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const stalledStreams = [];\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _currentTime = NaN;\n    }\n\n    function initialize() {\n        eventBus.on(Events.PLAYBACK_PLAYING, onPlaying, this);\n    }\n\n    function reset() {\n        eventBus.off(Events.PLAYBACK_PLAYING, onPlaying, this);\n    }\n\n    function onPlaybackCanPlay() {\n        if (element) {\n            element.playbackRate = previousPlaybackRate || 1;\n            element.removeEventListener('canplay', onPlaybackCanPlay);\n        }\n    }\n\n    function setPlaybackRate(value, ignoreReadyState = false) {\n        if (!element) return;\n        if (!ignoreReadyState && element.readyState <= 2 && value > 0) {\n            // If media element hasn't loaded enough data to play yet, wait until it has\n            element.addEventListener('canplay', onPlaybackCanPlay);\n        } else {\n            element.playbackRate = value;\n        }\n    }\n\n    //TODO Move the DVR window calculations from MediaPlayer to Here.\n    function setCurrentTime(currentTime, stickToBuffered) {\n        if (element) {\n            _currentTime = currentTime;\n            waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, () => {\n                // We don't set the same currentTime because it can cause firing unexpected Pause event in IE11\n                // providing playbackRate property equals to zero.\n                if (element.currentTime === _currentTime) {\n                    _currentTime = NaN;\n                    return;\n                }\n\n                // TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime\n                // immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property\n                // Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to\n                // set currentTime even if readyState = 0.\n                // setTimeout is used to workaround InvalidStateError in IE11\n                try {\n                    _currentTime = stickToBuffered ? stickTimeToBuffered(_currentTime) : _currentTime;\n                    element.currentTime = _currentTime;\n                    _currentTime = NaN;\n                } catch (e) {\n                    if (element.readyState === 0 && e.code === e.INVALID_STATE_ERR) {\n                        setTimeout(function () {\n                            element.currentTime = _currentTime;\n                            _currentTime = NaN;\n                        }, 400);\n                    }\n                }\n            });\n        }\n    }\n\n    function stickTimeToBuffered(time) {\n        const buffered = getBufferRange();\n        let closestTime = time;\n        let closestDistance = 9999999999;\n        if (buffered) {\n            for (let i = 0; i < buffered.length; i++) {\n                const start = buffered.start(i);\n                const end = buffered.end(i);\n                const distanceToStart = Math.abs(start - time);\n                const distanceToEnd = Math.abs(end - time);\n\n                if (time >= start && time <= end) {\n                    return time;\n                }\n\n                if (distanceToStart < closestDistance) {\n                    closestDistance = distanceToStart;\n                    closestTime = start;\n                }\n\n                if (distanceToEnd < closestDistance) {\n                    closestDistance = distanceToEnd;\n                    closestTime = end;\n                }\n            }\n        }\n        return closestTime;\n    }\n\n    function getElement() {\n        return element;\n    }\n\n    function setElement(value) {\n        //add check of value type\n        if (value === null || value === undefined || (value && (/^(VIDEO|AUDIO)$/i).test(value.nodeName))) {\n            element = value;\n            // Workaround to force Firefox to fire the canplay event.\n            if (element) {\n                element.preload = 'auto';\n            }\n        } else {\n            throw VIDEO_MODEL_WRONG_ELEMENT_TYPE;\n        }\n    }\n\n    function setSource(source) {\n        if (element) {\n            if (source) {\n                element.src = source;\n            } else {\n                element.removeAttribute('src');\n                element.load();\n            }\n        }\n    }\n\n    function getSource() {\n        return element ? element.src : null;\n    }\n\n    function getTTMLRenderingDiv() {\n        return TTMLRenderingDiv;\n    }\n\n    function getVttRenderingDiv() {\n        return vttRenderingDiv;\n    }\n\n    function setTTMLRenderingDiv(div) {\n        TTMLRenderingDiv = div;\n        // The styling will allow the captions to match the video window size and position.\n        TTMLRenderingDiv.style.position = 'absolute';\n        TTMLRenderingDiv.style.display = 'flex';\n        TTMLRenderingDiv.style.overflow = 'hidden';\n        TTMLRenderingDiv.style.pointerEvents = 'none';\n        TTMLRenderingDiv.style.top = 0;\n        TTMLRenderingDiv.style.left = 0;\n    }\n\n    function setVttRenderingDiv(div) {\n        vttRenderingDiv = div;\n    }\n\n    function setStallState(type, state) {\n        stallStream(type, state);\n    }\n\n    function isStalled() {\n        return (stalledStreams.length > 0);\n    }\n\n    function addStalledStream(type) {\n\n        if (type === null || !element || element.seeking || stalledStreams.indexOf(type) !== -1) {\n            return;\n        }\n\n        stalledStreams.push(type);\n    }\n\n    function removeStalledStream(type) {\n        let index = stalledStreams.indexOf(type);\n\n        if (type === null) {\n            return;\n        }\n        if (index !== -1) {\n            stalledStreams.splice(index, 1);\n        }\n\n    }\n\n    function stallStream(type, isStalled) {\n        if (isStalled) {\n            addStalledStream(type);\n        } else {\n            removeStalledStream(type);\n        }\n    }\n\n    //Calling play on the element will emit playing - even if the stream is stalled. If the stream is stalled, emit a waiting event.\n    function onPlaying() {\n        if (element && isStalled() && element.playbackRate === 0) {\n            const event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function getPlaybackQuality() {\n        if (!element) {\n            return null;\n        }\n        let hasWebKit = ('webkitDroppedFrameCount' in element) && ('webkitDecodedFrameCount' in element);\n        let hasQuality = ('getVideoPlaybackQuality' in element);\n        let result = null;\n\n        if (hasQuality) {\n            result = element.getVideoPlaybackQuality();\n        } else if (hasWebKit) {\n            result = {\n                droppedVideoFrames: element.webkitDroppedFrameCount,\n                totalVideoFrames: element.webkitDroppedFrameCount + element.webkitDecodedFrameCount,\n                creationTime: new Date()\n            };\n        }\n\n        return result;\n    }\n\n    function play() {\n        if (element) {\n            element.autoplay = true;\n            const p = element.play();\n            if (p && p.catch && typeof Promise !== 'undefined') {\n                p.catch((e) => {\n                    if (e.name === 'NotAllowedError') {\n                        eventBus.trigger(Events.PLAYBACK_NOT_ALLOWED);\n                    }\n                    logger.warn(`Caught pending play exception - continuing (${e})`);\n                });\n            }\n        }\n    }\n\n    function isPaused() {\n        return element ? element.paused : null;\n    }\n\n    function pause() {\n        if (element) {\n            element.pause();\n            element.autoplay = false;\n        }\n    }\n\n    function isSeeking() {\n        return element ? (element.seeking || !isNaN(_currentTime)) : null;\n    }\n\n    function getTime() {\n        return element ? (!isNaN(_currentTime) ? _currentTime : element.currentTime) : null;\n    }\n\n    function getPlaybackRate() {\n        return element ? element.playbackRate : null;\n    }\n\n    function getPlayedRanges() {\n        return element ? element.played : null;\n    }\n\n    function getEnded() {\n        return element ? element.ended : null;\n    }\n\n    function addEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.addEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function removeEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.removeEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function getReadyState() {\n        return element ? element.readyState : NaN;\n    }\n\n    function getBufferRange() {\n        return element ? element.buffered : null;\n    }\n\n    function getClientWidth() {\n        return element ? element.clientWidth : NaN;\n    }\n\n    function getClientHeight() {\n        return element ? element.clientHeight : NaN;\n    }\n\n    function getVideoWidth() {\n        return element ? element.videoWidth : NaN;\n    }\n\n    function getVideoHeight() {\n        return element ? element.videoHeight : NaN;\n    }\n\n    function getVideoRelativeOffsetTop() {\n        if (element) {\n            const parentElement = element.parentNode.host || element.parentNode;\n            return parentElement ? element.getBoundingClientRect().top - parentElement.getBoundingClientRect().top : NaN;\n        }\n        return NaN;\n    }\n\n    function getVideoRelativeOffsetLeft() {\n        if (element) {\n            const parentElement = element.parentNode.host || element.parentNode;\n            return parentElement ? element.getBoundingClientRect().left - parentElement.getBoundingClientRect().left : NaN;\n        }\n        return NaN;\n    }\n\n    function getTextTracks() {\n        return element ? element.textTracks : [];\n    }\n\n    function getTextTrack(kind, label, lang, isTTML, isEmbedded) {\n        if (element) {\n            for (let i = 0; i < element.textTracks.length; i++) {\n                //label parameter could be a number (due to adaptationSet), but label, the attribute of textTrack, is a string => to modify...\n                //label could also be undefined (due to adaptationSet)\n                if (element.textTracks[i].kind === kind && (label ? element.textTracks[i].label == label : true) &&\n                    element.textTracks[i].language === lang && element.textTracks[i].isTTML === isTTML && element.textTracks[i].isEmbedded === isEmbedded) {\n                    return element.textTracks[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function addTextTrack(kind, label, lang, isTTML, isEmbedded) {\n        if (!element) {\n            return null;\n        }\n        // check if track of same type has not been already created for previous stream\n        // then use it (no way to remove existing text track from video element)\n        let track = getTextTrack(kind, label, lang, isTTML, isEmbedded);\n        if (!track) {\n            track = element.addTextTrack(kind, label, lang);\n            track.isEmbedded = isEmbedded;\n            track.isTTML = isTTML;\n        }\n        return track;\n    }\n\n    function appendChild(childElement) {\n        if (element) {\n            element.appendChild(childElement);\n            //in Chrome, we need to differenciate textTrack with same lang, kind and label but different format (vtt, ttml, etc...)\n            if (childElement.isTTML !== undefined) {\n                element.textTracks[element.textTracks.length - 1].isTTML = childElement.isTTML;\n                element.textTracks[element.textTracks.length - 1].isEmbedded = childElement.isEmbedded;\n            }\n        }\n    }\n\n    function removeChild(childElement) {\n        if (element) {\n            element.removeChild(childElement);\n        }\n    }\n\n    function waitForReadyState(targetReadyState, callback) {\n        if (targetReadyState === Constants.VIDEO_ELEMENT_READY_STATES.HAVE_NOTHING ||\n            getReadyState() >= targetReadyState) {\n            callback();\n        } else {\n            // wait for the appropriate callback before checking again\n            const event = READY_STATES_TO_EVENT_NAMES.get(targetReadyState);\n            _listenOnce(event, callback);\n        }\n    }\n\n    function _listenOnce(event, callback) {\n        const func = () => {\n            // Stop listening to this event.\n            removeEventListener(event, func);\n            // Call the original listener.\n            callback(event);\n        };\n        addEventListener(event, func);\n    }\n\n    instance = {\n        initialize,\n        setCurrentTime,\n        play,\n        isPaused,\n        pause,\n        isStalled,\n        isSeeking,\n        getTime,\n        getPlaybackRate,\n        setPlaybackRate,\n        getPlayedRanges,\n        getEnded,\n        setStallState,\n        getElement,\n        setElement,\n        setSource,\n        getSource,\n        getTTMLRenderingDiv,\n        setTTMLRenderingDiv,\n        getVttRenderingDiv,\n        setVttRenderingDiv,\n        getPlaybackQuality,\n        addEventListener,\n        removeEventListener,\n        getReadyState,\n        getBufferRange,\n        getClientWidth,\n        getClientHeight,\n        getTextTracks,\n        getTextTrack,\n        addTextTrack,\n        appendChild,\n        removeChild,\n        getVideoWidth,\n        getVideoHeight,\n        getVideoRelativeOffsetTop,\n        getVideoRelativeOffsetLeft,\n        waitForReadyState,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nVideoModel.__dashjs_factory_name = 'VideoModel';\nexport default FactoryMaker.getSingletonFactory(VideoModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Constants from '../constants/Constants';\n\nconst legacyKeysAndReplacements = [\n    { oldKey: 'dashjs_vbitrate', newKey: 'dashjs_video_bitrate' },\n    { oldKey: 'dashjs_abitrate', newKey: 'dashjs_audio_bitrate' },\n    { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },\n    { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' }\n];\n\nconst LOCAL_STORAGE_BITRATE_KEY_TEMPLATE = 'dashjs_?_bitrate';\nconst LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE = 'dashjs_?_settings';\n\nconst STORAGE_TYPE_LOCAL = 'localStorage';\nconst STORAGE_TYPE_SESSION = 'sessionStorage';\nconst LAST_BITRATE = 'lastBitrate';\nconst LAST_MEDIA_SETTINGS = 'lastMediaSettings';\n\nfunction DOMStorage(config) {\n\n    config = config || {};\n    const context = this.context;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        supported;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        translateLegacyKeys();\n    }\n\n    //type can be local, session\n    function isSupported(type) {\n        if (supported !== undefined) return supported;\n\n        supported = false;\n\n        const testKey = '1';\n        const testValue = '1';\n        let storage;\n\n        try {\n            if (typeof window !== 'undefined') {\n                storage = window[type];\n            }\n        } catch (error) {\n            logger.warn('DOMStorage access denied: ' + error.message);\n            return supported;\n        }\n\n        if (!storage || (type !== STORAGE_TYPE_LOCAL && type !== STORAGE_TYPE_SESSION)) {\n            return supported;\n        }\n\n        /* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.\n         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an\n\n         Check if the storage can be used\n         */\n        try {\n            storage.setItem(testKey, testValue);\n            storage.removeItem(testKey);\n            supported = true;\n        } catch (error) {\n            logger.warn('DOMStorage is supported, but cannot be used: ' + error.message);\n        }\n\n        return supported;\n    }\n\n    function translateLegacyKeys() {\n        if (isSupported(STORAGE_TYPE_LOCAL)) {\n            legacyKeysAndReplacements.forEach(entry => {\n                const value = localStorage.getItem(entry.oldKey);\n\n                if (value) {\n                    localStorage.removeItem(entry.oldKey);\n\n                    try {\n                        localStorage.setItem(entry.newKey, value);\n                    } catch (e) {\n                        logger.error(e.message);\n                    }\n                }\n            });\n        }\n    }\n\n    // Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user\n    function getTimestamp() {\n        const ten_minutes_ms = 60 * 1000 * 10;\n        return Math.round(new Date().getTime() / ten_minutes_ms) * ten_minutes_ms;\n    }\n\n    function canStore(storageType, key) {\n        return isSupported(storageType) && settings.get().streaming[key + 'CachingInfo'].enabled;\n    }\n\n    function checkConfig() {\n        if (!settings) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getSavedMediaSettings(type) {\n        checkConfig();\n\n        if (!settings.get().streaming.lastMediaSettingsCachingInfo.enabled) {\n            return null;\n        }\n\n        let mediaSettings = null;\n\n        //Checks local storage to see if there is valid, non-expired media settings\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) {\n            const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                const obj = JSON.parse(localStorage.getItem(key)) || {};\n                const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= settings.get().streaming.lastMediaSettingsCachingInfo.ttl || false;\n                mediaSettings = obj.settings;\n\n                if (isExpired) {\n                    localStorage.removeItem(key);\n                    mediaSettings = null;\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n        return mediaSettings;\n    }\n\n    function getSavedBitrateSettings(type) {\n        checkConfig();\n\n        if (!settings.get().streaming.lastBitrateCachingInfo.enabled) {\n            return NaN;\n        }\n\n        let savedBitrate = NaN;\n\n        //Checks local storage to see if there is valid, non-expired bit rate\n        //hinting from the last play session to use as a starting bit rate.\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE)) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                const obj = JSON.parse(localStorage.getItem(key)) || {};\n                const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= settings.get().streaming.lastBitrateCachingInfo.ttl || false;\n                const bitrate = parseFloat(obj.bitrate);\n\n                if (!isNaN(bitrate) && !isExpired) {\n                    savedBitrate = bitrate;\n                    logger.debug('Last saved bitrate for ' + type + ' was ' + bitrate);\n                } else if (isExpired) {\n                    localStorage.removeItem(key);\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n        return savedBitrate;\n    }\n\n    function setSavedMediaSettings(type, value) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) {\n            const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({ settings: value, timestamp: getTimestamp() }));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    function setSavedBitrateSettings(type, bitrate) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE) && bitrate) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({ bitrate: bitrate.toFixed(3), timestamp: getTimestamp() }));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    instance = {\n        getSavedBitrateSettings,\n        setSavedBitrateSettings,\n        getSavedMediaSettings,\n        setSavedMediaSettings\n    };\n\n    setup();\n    return instance;\n}\n\nDOMStorage.__dashjs_factory_name = 'DOMStorage';\nconst factory = FactoryMaker.getSingletonFactory(DOMStorage);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Segment from './vo/Segment';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport FactoryMaker from '../core/FactoryMaker';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport URLLoader from '../streaming/net/URLLoader';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        errHandler,\n        boxParser,\n        requestModifier,\n        dashMetrics,\n        mediaPlayerModel,\n        urlLoader,\n        errors,\n        constants,\n        dashConstants,\n        urlUtils,\n        baseURLController;\n\n    function setup() {\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier,\n            boxParser: boxParser,\n            errors: errors,\n            urlUtils: urlUtils,\n            constants: constants,\n            dashConstants: dashConstants\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n\n        if (config.debug) {\n            logger = config.debug.getLogger(instance);\n        }\n\n        if (config.requestModifier) {\n            requestModifier = config.requestModifier;\n        }\n\n        if (config.errors) {\n            errors = config.errors;\n        }\n\n        if (config.urlUtils) {\n            urlUtils = config.urlUtils;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.dashConstants) {\n            dashConstants = config.dashConstants;\n        }\n    }\n\n    function loadInitialization(representation, mediaType) {\n        return new Promise((resolve) => {\n            _loadInitializationRecursively(representation, mediaType, resolve);\n        });\n    }\n\n    function _loadInitializationRecursively(representation, mediaType, resolve, loadingInfo) {\n        let initRange = null;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType\n        };\n\n        logger.debug('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            initRange = boxParser.findInitRange(response);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                resolve(representation);\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                return _loadInitializationRecursively(representation, mediaType, resolve, info);\n            }\n        };\n\n        const onerror = function () {\n            resolve(representation);\n        };\n\n        urlLoader.load({ request: request, success: onload, error: onerror });\n\n        logger.debug('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, mediaType, range) {\n        return new Promise((resolve) => {\n            _loadSegmentsRecursively(representation, mediaType, range, resolve);\n        });\n    }\n\n    function _loadSegmentsRecursively(representation, mediaType, range, resolve, callback, loadingInfo) {\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? { start: parseFloat(parts[0]), end: parseFloat(parts[1]) } : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, resolve);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                _loadSegmentsRecursively(representation, mediaType, info.range, resolve, null, info);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    logger.debug('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                // http requests can be processed in a wrong order, so, we have to reorder segments with an ascending start Time order\n                                segs.sort(function (a, b) {\n                                    return a.startTime - b.startTime < 0 ? -1 : 0;\n                                });\n                                callback(segs, representation, resolve);\n                            }\n                        } else {\n                            callback(null, representation, resolve);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = { start: ss, end: se };\n                        _loadSegmentsRecursively(representation, mediaType, r, resolve, tmpCallback, info);\n                    }\n\n                } else {\n                    logger.debug('Parsing segments from SIDX. representation ' + mediaType + ' - id: ' + representation.id + ' for range : ' + info.range.start + ' - ' + info.range.end);\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, resolve);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(null, representation, resolve);\n        };\n\n        urlLoader.load({ request: request, success: onload, error: onerror });\n        logger.debug(`Perform SIDX load for type ${mediaType} : ${info.url} with range ${info.range.start} - ${info.range.end}`);\n    }\n\n    function onLoaded(segments, representation, resolve) {\n        resolve({\n            segments: segments,\n            representation: representation,\n            error: segments ? undefined : new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n        });\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        loadInitialization,\n        loadSegments,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n","import FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * Creates an instance of an EBMLParser class which implements a large subset\n * of the functionality required to parse Matroska EBML\n *\n * @param {Object} config object with data member which is the buffer to parse\n * @ignore\n */\nfunction EBMLParser(config) {\n\n    config = config || {};\n    let instance;\n\n    let data = new DataView(config.data);\n    let pos = 0;\n\n    function getPos() {\n        return pos;\n    }\n\n    function setPos(value) {\n        pos = value;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformed.\n     * @memberof EBMLParser\n     */\n    function consumeTag(tag, test) {\n        let found = true;\n        let bytesConsumed = 0;\n        let p1,\n            p2;\n\n        if (test === undefined) {\n            test = false;\n        }\n\n        if (tag.tag > 0xFFFFFF) {\n            if (data.getUint32(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 4;\n        } else if (tag.tag > 0xFFFF) {\n            // 3 bytes\n            p1 = data.getUint16(pos);\n            p2 = data.getUint8(pos + 2);\n\n            // shift p1 over a byte and add p2\n            if (p1 * 256 + p2 !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 3;\n        } else if (tag.tag > 0xFF) {\n            if (data.getUint16(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 2;\n        } else {\n            if (data.getUint8(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 1;\n        }\n\n        if (!found && tag.required && !test) {\n            throw new Error('required tag not found');\n        }\n\n        if (found) {\n            pos += bytesConsumed;\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformedata.\n     * @memberof EBMLParser\n     */\n    function consumeTagAndSize(tag, test) {\n        let found = consumeTag(tag, test);\n\n        if (found) {\n            getMatroskaCodedNum();\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to parse a binary\n     * field, using a parser defined in the tag itself\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag,\n     * {boolean} required flag, and a parse function which takes a size parameter\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found,\n     * or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function parseTag(tag) {\n        let size;\n\n        consumeTag(tag);\n        size = getMatroskaCodedNum();\n        return instance[tag.parse](size);\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to skip over the\n     * entire section of EBML encapsulated by the tag.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag, and\n     * {boolean} required flag\n     * @param {boolean} test a flag to indicate if an exception should be thrown\n     * if a required tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test is\n     * false or undefined or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function skipOverElement(tag, test) {\n        let found = consumeTag(tag, test);\n        let headerSize;\n\n        if (found) {\n            headerSize = getMatroskaCodedNum();\n            pos += headerSize;\n        }\n\n        return found;\n    }\n\n    /**\n     * Returns and consumes a number encoded according to the Matroska EBML\n     * specification from the bitstream.\n     *\n     * @param {boolean} retainMSB whether or not to retain the Most Significant Bit (the\n     * first 1). this is usually true when reading Tag IDs.\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaCodedNum(retainMSB) {\n        let bytesUsed = 1;\n        let mask = 0x80;\n        let maxBytes = 8;\n        let extraBytes = -1;\n        let num = 0;\n        let ch = data.getUint8(pos);\n        let i = 0;\n\n        for (i = 0; i < maxBytes; i += 1) {\n            if ((ch & mask) === mask) {\n                num = (retainMSB === undefined) ? ch & ~mask : ch;\n                extraBytes = i;\n                break;\n            }\n            mask >>= 1;\n        }\n\n        for (i = 0; i < extraBytes; i += 1, bytesUsed += 1) {\n            num = (num << 8) | (0xff & data.getUint8(pos + bytesUsed));\n        }\n\n        pos += bytesUsed;\n\n        return num;\n    }\n\n    /**\n     * Returns and consumes a float from the bitstream.\n     *\n     * @param {number} size 4 or 8 byte floats are supported\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaFloat(size) {\n        let outFloat;\n\n        switch (size) {\n            case 4:\n                outFloat = data.getFloat32(pos);\n                pos += 4;\n                break;\n            case 8:\n                outFloat = data.getFloat64(pos);\n                pos += 8;\n                break;\n        }\n        return outFloat;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed, there is\n     * not enough data, or if the value exceeds the maximum safe integer value\n     * @memberof EBMLParser\n     */\n    function getMatroskaUint(size) {\n        if (size > 4) {\n            return getMatroskaUintLarge(size);\n        }\n\n        let val = 0;\n\n        for (let i = 0; i < size; i += 1) {\n            val <<= 8;\n            val |= data.getUint8(pos + i) & 0xff;\n        }\n\n        pos += size;\n        return val >>> 0;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed, there is\n     * not enough data, or if the value exceeds the maximum safe integer value\n     */\n    function getMatroskaUintLarge(size) {\n        const limit = Math.floor(Number.MAX_SAFE_INTEGER / 256);\n        let val = 0;\n\n        for (let i = 0; i < size; i += 1) {\n            if (val > limit) {\n                throw new Error('Value exceeds safe integer limit');\n            }\n            val *= 256;\n            const n = data.getUint8(pos + i);\n            if (val > Number.MAX_SAFE_INTEGER - n) {\n                throw new Error('Value exceeds safe integer limit');\n            }\n            val += n;\n        }\n\n        pos += size;\n        return val;\n    }\n\n    /**\n     * Tests whether there is more data in the bitstream for parsing\n     *\n     * @return {boolean} whether there is more data to parse\n     * @memberof EBMLParser\n     */\n    function moreData() {\n        return pos < data.byteLength;\n    }\n\n    instance = {\n        getPos: getPos,\n        setPos: setPos,\n        consumeTag: consumeTag,\n        consumeTagAndSize: consumeTagAndSize,\n        parseTag: parseTag,\n        skipOverElement: skipOverElement,\n        getMatroskaCodedNum: getMatroskaCodedNum,\n        getMatroskaFloat: getMatroskaFloat,\n        getMatroskaUint: getMatroskaUint,\n        moreData: moreData\n    };\n\n    return instance;\n}\n\nEBMLParser.__dashjs_factory_name = 'EBMLParser';\nexport default FactoryMaker.getClassFactory(EBMLParser);\n","import EBMLParser from '../streaming/utils/EBMLParser';\nimport Constants from '../streaming/constants/Constants';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Segment from './vo/Segment';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport URLLoader from '../streaming/net/URLLoader';\nimport DashJSError from '../streaming/vo/DashJSError';\n\nfunction WebmSegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        WebM,\n        errHandler,\n        requestModifier,\n        dashMetrics,\n        mediaPlayerModel,\n        urlLoader,\n        errors,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier,\n            errors: errors\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.dashMetrics || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n        baseURLController = config.baseURLController;\n        dashMetrics = config.dashMetrics;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n        errors = config.errors;\n        logger = config.debug.getLogger(instance);\n        requestModifier = config.requestModifier;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n        let cue,\n            cueTrack;\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n            ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration,\n            parsed,\n            segments,\n            segment,\n            i,\n            len,\n            start,\n            end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        if (!data || data.byteLength === 0) {\n            callback(null);\n            return;\n        }\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration,\n            segments,\n            segmentEnd,\n            segmentStart;\n        let parts = theRange ? theRange.split('-') : null;\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parts ? parseFloat(parts[0]) : null,\n                end: parts ? parseFloat(parts[1]) : null\n            },\n            request: request\n        };\n\n        logger.debug('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n        !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = _getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            logger.error('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        urlLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function loadInitialization(representation, mediaType) {\n        return new Promise((resolve) => {\n            let request = null;\n            let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n            let initRange = representation ? representation.range.split('-') : null;\n            let info = {\n                range: {\n                    start: initRange ? parseFloat(initRange[0]) : null,\n                    end: initRange ? parseFloat(initRange[1]) : null\n                },\n                request: request,\n                url: baseUrl ? baseUrl.url : undefined,\n                init: true,\n                mediaType: mediaType\n            };\n\n            logger.info('Start loading initialization.');\n\n            request = _getFragmentRequest(info);\n\n            const onload = function () {\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                resolve(representation);\n            };\n\n            const onloadend = function () {\n                resolve(representation);\n            };\n\n            urlLoader.load({\n                request: request,\n                success: onload,\n                error: onloadend\n            });\n\n            logger.debug('Perform init load: ' + info.url);\n        });\n    }\n\n    function loadSegments(representation, mediaType, theRange) {\n        return new Promise((resolve) => {\n            let request = null;\n            let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n            let media = baseUrl ? baseUrl.url : undefined;\n            let bytesToLoad = 8192;\n            let info = {\n                bytesLoaded: 0,\n                bytesToLoad: bytesToLoad,\n                range: {\n                    start: 0,\n                    end: bytesToLoad\n                },\n                request: request,\n                url: media,\n                init: false,\n                mediaType: mediaType\n            };\n\n            request = _getFragmentRequest(info);\n\n            // first load the header, but preserve the manifest range so we can\n            // load the cues after parsing the header\n            // NOTE: we expect segment info to appear in the first 8192 bytes\n            logger.debug('Parsing ebml header');\n\n            const onload = function (response) {\n                parseEbmlHeader(response, media, theRange, function (segments) {\n                    resolve({\n                        segments: segments,\n                        representation: representation,\n                        error: segments ? undefined : new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n                    });\n                });\n            };\n\n            const onloadend = function () {\n                resolve({\n                    representation: representation,\n                    error: new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n                });\n            };\n\n            urlLoader.load({\n                request: request,\n                success: onload,\n                error: onloadend\n            });\n        });\n\n    }\n\n\n    function _getFragmentRequest(info) {\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        loadInitialization,\n        loadSegments,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport SegmentBaseLoader from '../SegmentBaseLoader';\nimport WebmSegmentBaseLoader from '../WebmSegmentBaseLoader';\n\nfunction SegmentBaseController(config) {\n    config = config || {};\n\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const errHandler = config.errHandler;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const boxParser = config.boxParser;\n    const requestModifier = config.requestModifier;\n    const errors = config.errors;\n\n    let instance,\n        segmentBaseLoader,\n        webmSegmentBaseLoader;\n\n    function setup() {\n        segmentBaseLoader = SegmentBaseLoader(context).getInstance();\n        webmSegmentBaseLoader = WebmSegmentBaseLoader(context).getInstance();\n\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug,\n            boxParser: boxParser,\n            requestModifier: requestModifier\n        });\n\n        webmSegmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug,\n            requestModifier: requestModifier\n        });\n    }\n\n    function isWebM(mimeType) {\n        const type = mimeType ? mimeType.split('/')[1] : '';\n        return 'webm' === type.toLowerCase();\n    }\n\n    function initialize() {\n        segmentBaseLoader.initialize();\n        webmSegmentBaseLoader.initialize();\n    }\n\n    function getSegmentBaseInitSegment(data) {\n        if (isWebM(data.representation.mimeType)) {\n            return webmSegmentBaseLoader.loadInitialization(data.representation, data.mediaType);\n        } else {\n            return segmentBaseLoader.loadInitialization(data.representation, data.mediaType);\n        }\n    }\n\n    function getSegmentList(e) {\n        if (isWebM(e.mimeType)) {\n            return webmSegmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null);\n        } else {\n            return segmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null);\n        }\n    }\n\n    function reset() {\n        segmentBaseLoader.reset();\n        webmSegmentBaseLoader.reset();\n    }\n\n\n    instance = {\n        initialize,\n        getSegmentBaseInitSegment,\n        getSegmentList,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseController.__dashjs_factory_name = 'SegmentBaseController';\nconst factory = FactoryMaker.getSingletonFactory(SegmentBaseController);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RepresentationInfo {\n    constructor() {\n        this.id = null;\n        this.quality = null;\n        this.fragmentDuration = null;\n        this.mediaInfo = null;\n        this.MSETimeOffset = null;\n    }\n}\n\nexport default RepresentationInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.type = null;\n        this.streamInfo = null;\n        this.representationCount = 0;\n        this.labels = null;\n        this.lang = null;\n        this.viewpoint = null;\n        this.viewpointsWithSchemeIdUri = null;\n        this.accessibility = null;\n        this.accessibilitiesWithSchemeIdUri = null;\n        this.audioChannelConfiguration = null;\n        this.audioChannelConfigurationsWithSchemeIdUri = null;\n        this.roles = null;\n        this.rolesWithSchemeIdUri = null;\n        this.codec = null;\n        this.mimeType = null;\n        this.contentProtection = null;\n        this.isText = false;\n        this.KID = null;\n        this.bitrateList = null;\n        this.isFragmented = null;\n        this.isEmbedded = null;\n        this.selectionPriority = 1;\n        this.supplementalProperties = {};\n        this.supplementalPropertiesAsArray = [];\n        this.segmentAlignment = false;\n        this.subSegmentAlignment = false;\n    }\n\n}\n\nexport default MediaInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass StreamInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.start = NaN;\n        this.duration = NaN;\n        this.manifestInfo = null;\n        this.isLast = true;\n    }\n}\n\nexport default StreamInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ManifestInfo {\n    constructor() {\n        this.dvrWindowSize = NaN;\n        this.loadedTime = null;\n        this.availableFrom = null;\n        this.minBufferTime = NaN;\n        this.duration = NaN;\n        this.isDynamic = false;\n        this.maxFragmentDuration = null;\n        this.serviceDescriptions = [];\n        this.protocol = null;\n    }\n}\n\nexport default ManifestInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass SimpleXPath {\n    constructor(selector) {\n        // establish validation of the path, to catch unsupported cases\n        this.valid = selector[0] == '/'; // first check, we only support absolute addressing\n\n        // establish parsed path, example:\n        // /MPD/Period[@id=\"foobar\"]/AdaptationSet[@id=\"2\"]/SegmentTemplate/SegmentTimeline\n        this.path = selector.split('/')\n            .filter((component) => component.length !== 0) // remove excess empty components\n            .map((component) => {\n                let parsed = {\n                    name: component\n                };\n\n                let qualifierPoint = component.indexOf('[');\n                if (qualifierPoint != -1) {\n                    parsed.name = component.substring(0, qualifierPoint);\n\n                    let qualifier = component.substring(qualifierPoint + 1, component.length - 1);\n\n                    // quick sanity check are there additional qualifiers making this invalid\n                    this.valid = this.valid && qualifier.indexOf('[') == -1;\n\n                    let equalityPoint = qualifier.indexOf('=');\n                    if (equalityPoint != -1) {\n                        parsed.attribute = {\n                            name: qualifier.substring(1, equalityPoint), // skip the @\n                            value: qualifier.substring(equalityPoint + 1)\n                        };\n\n                        // check for single and double quoted attribute values\n                        if (['\\'', '\"'].indexOf(parsed.attribute.value[0]) != -1) {\n                            parsed.attribute.value = parsed.attribute.value.substring(1, parsed.attribute.value.length - 1);\n                        }\n                    } else {\n                        // positional access in xpath is 1-based index\n                        // internal processes will assume 0-based so we normalize that here\n                        parsed.position = parseInt(qualifier, 10) - 1;\n                    }\n                }\n\n                return parsed;\n            });\n    }\n\n    isValid() {\n        return this.valid;\n    }\n\n    findsElement() {\n        return !this.findsAttribute();\n    }\n\n    findsAttribute() {\n        return this.path[this.path.length - 1].name.startsWith('@');\n    }\n\n    getMpdTarget(root, isSiblingOperation) {\n        let parent = null;\n        let leaf = root;\n        // assume root is MPD and we start at next level match\n        let level = 1;\n        let name = 'MPD';\n\n        while ( level < this.path.length && leaf !== null) {\n            // set parent to current\n            parent = leaf;\n\n            // select next leaf based on component\n            let component = this.path[level];\n            name = component.name;\n\n            // stop one early if this is the last element and an attribute\n            if (level !== this.path.length - 1 || !name.startsWith('@')) {\n                let children = parent[name + '_asArray'] || [];\n                if (children.length === 0 && parent[name]) {\n                    children.push(parent[name]);\n                }\n\n                if (component.position) {\n                    leaf = children[component.position] || null;\n                } else if (component.attribute) {\n                    let attr = component.attribute;\n                    leaf = children.filter((elm) => elm[attr.name] == attr.value)[0] || null;\n                } else {\n                    // default case, select first\n                    leaf = children[0] || null;\n                }\n            }\n\n            level++;\n        }\n\n        if (leaf === null) {\n            // given path not found in root\n            return null;\n        }\n\n        // attributes the target is the leaf node, the name is the attribute\n        if (name.startsWith('@')) {\n            return {\n                name: name.substring(1),\n                leaf: leaf,\n                target: leaf\n            };\n        }\n\n        // otherwise we target the parent for sibling operations and leaf for child operations\n        return {\n            name: name,\n            leaf: leaf,\n            target: isSiblingOperation ? parent : leaf\n        };\n    }\n}\n\nexport default SimpleXPath;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass PatchOperation {\n    constructor(action, xpath, value) {\n        this.action = action;\n        this.xpath = xpath;\n        this.value = value;\n        this.position = null;\n    }\n\n    getMpdTarget(root) {\n        let isSiblingOperation = this.action === 'remove' || this.action === 'replace' || this.position === 'before' || this.position === 'after';\n        return this.xpath.getMpdTarget(root, isSiblingOperation);\n    }\n}\n\nexport default PatchOperation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashConstants from '../constants/DashConstants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport SimpleXPath from '../vo/SimpleXPath';\nimport PatchOperation from '../vo/PatchOperation';\n\nfunction PatchManifestModel() {\n    let instance,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsPatch(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.ORIGINAL_MPD_ID) || false;\n    }\n\n    function getPublishTime(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(patch[DashConstants.PUBLISH_TIME]) : null;\n    }\n\n    function getOriginalPublishTime(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.ORIGINAL_PUBLISH_TIME) ? new Date(patch[DashConstants.ORIGINAL_PUBLISH_TIME]) : null;\n    }\n\n    function getMpdId(patch) {\n        return (patch && patch[DashConstants.ORIGINAL_MPD_ID]) || null;\n    }\n\n    function getPatchOperations(patch) {\n        if (!patch) {\n            return [];\n        }\n\n        // Go through the patch operations in order and parse their actions out for usage\n        return (patch.__children || []).map((nodeContainer) => {\n            let action = Object.keys(nodeContainer)[0];\n\n            // we only look add add/remove/replace actions\n            if (action !== 'add' && action !== 'remove' && action !== 'replace') {\n                logger.warn(`Ignoring node of invalid action: ${action}`);\n                return null;\n            }\n\n            let node = nodeContainer[action];\n            let selector = node.sel;\n\n            // add action can have special targeting via the 'type' attribute\n            if (action === 'add' && node.type) {\n                if (!node.type.startsWith('@')) {\n                    logger.warn(`Ignoring add action for prefixed namespace declaration: ${node.type}=${node.__text}`);\n                    return null;\n                }\n\n                // for our purposes adding/replacing attribute are equivalent and we can normalize\n                // our processing logic by appending the attribute to the selector path\n                selector = `${selector}/${node.type}`;\n            }\n\n            let xpath = new SimpleXPath(selector);\n            if (!xpath.isValid()) {\n                logger.warn(`Ignoring action with invalid selector: ${action} - ${selector}`);\n                return null;\n            }\n\n            let value = null;\n            if (xpath.findsAttribute()) {\n                value = node.__text || '';\n            } else if (action !== 'remove') {\n                value = node.__children.reduce((groups, child) => {\n                    // note that this is informed by xml2js parse structure for the __children array\n                    // which will be something like this for each child:\n                    // {\n                    //     \"<node-name>\": { <xml2js-node-object> }\n                    // }\n                    let key = Object.keys(child)[0];\n                    // we also ignore\n                    if (key !== '#text') {\n                        groups[key] = groups[key] || [];\n                        groups[key].push(child[key]);\n                    }\n                    return groups;\n                }, {});\n            }\n\n            let operation = new PatchOperation(action, xpath, value);\n\n            if (action === 'add') {\n                operation.position = node.pos;\n            }\n\n            return operation;\n        }).filter((operation) => !!operation);\n    }\n\n    instance = {\n        getIsPatch: getIsPatch,\n        getPublishTime: getPublishTime,\n        getOriginalPublishTime: getOriginalPublishTime,\n        getMpdId: getMpdId,\n        getPatchOperations: getPatchOperations\n    };\n\n    setup();\n\n    return instance;\n}\n\nPatchManifestModel.__dashjs_factory_name = 'PatchManifestModel';\nexport default FactoryMaker.getSingletonFactory(PatchManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DashConstants from './constants/DashConstants';\nimport RepresentationInfo from './vo/RepresentationInfo';\nimport MediaInfo from './vo/MediaInfo';\nimport StreamInfo from './vo/StreamInfo';\nimport ManifestInfo from './vo/ManifestInfo';\nimport Event from './vo/Event';\nimport FactoryMaker from '../core/FactoryMaker';\nimport DashManifestModel from './models/DashManifestModel';\nimport PatchManifestModel from './models/PatchManifestModel';\nimport bcp47Normalize from 'bcp-47-normalize';\n\n/**\n * @module DashAdapter\n * @description The DashAdapter module can be accessed using the MediaPlayer API getDashAdapter()\n */\n\nfunction DashAdapter() {\n    let instance,\n        dashManifestModel,\n        patchManifestModel,\n        voPeriods,\n        currentMediaInfo,\n        constants,\n        cea608parser;\n\n    const context = this.context;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n        patchManifestModel = PatchManifestModel(context).getInstance();\n        reset();\n    }\n\n    // #region PUBLIC FUNCTIONS\n    // --------------------------------------------------\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.cea608parser) {\n            cea608parser = config.cea608parser;\n        }\n\n        if (config.errHandler) {\n            dashManifestModel.setConfig({ errHandler: config.errHandler });\n        }\n\n        if (config.BASE64) {\n            dashManifestModel.setConfig({ BASE64: config.BASE64 });\n        }\n    }\n\n    /**\n     * Creates an instance of RepresentationInfo based on a representation value object\n     * @param {object} voRepresentation\n     * @returns {RepresentationInfo|null} representationInfo\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function convertRepresentationToRepresentationInfo(voRepresentation) {\n        if (voRepresentation) {\n            let representationInfo = new RepresentationInfo();\n            const realAdaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\n            const realRepresentation = dashManifestModel.getRepresentationFor(voRepresentation.index, realAdaptation);\n\n            representationInfo.id = voRepresentation.id;\n            representationInfo.quality = voRepresentation.index;\n            representationInfo.bandwidth = dashManifestModel.getBandwidth(realRepresentation);\n            representationInfo.fragmentDuration = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length > 0 ? voRepresentation.segments[0].duration : NaN);\n            representationInfo.MSETimeOffset = voRepresentation.MSETimeOffset;\n            representationInfo.mediaInfo = convertAdaptationToMediaInfo(voRepresentation.adaptation);\n\n            return representationInfo;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns a MediaInfo object for a given media type and the corresponding streamInfo.\n     * @param {object} streamInfo\n     * @param {MediaType }type\n     * @returns {null|MediaInfo} mediaInfo\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMediaInfoForType(streamInfo, type) {\n        if (voPeriods.length === 0 || !streamInfo) {\n            return null;\n        }\n\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        if (!selectedVoPeriod) return null;\n\n        const voAdaptations = dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        let realAdaptation = getAdaptationForType(streamInfo.index, type, streamInfo);\n        if (!realAdaptation) return null;\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, voPeriods[0].mpd.manifest, streamInfo.index);\n\n        return convertAdaptationToMediaInfo(voAdaptations[idx]);\n    }\n\n    /**\n     * Checks if the role of the specified AdaptationSet is set to main\n     * @param {object} adaptation\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsMain(adaptation) {\n        return dashManifestModel.getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    /**\n     * Returns the AdaptationSet for a given period index and a given mediaType.\n     * @param {number} periodIndex\n     * @param {MediaType} type\n     * @param {object} streamInfo\n     * @returns {null|object} adaptation\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getAdaptationForType(periodIndex, type, streamInfo) {\n        const adaptations = dashManifestModel.getAdaptationsForType(voPeriods[0].mpd.manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            const allMediaInfoForType = getAllMediaInfoForType(streamInfo, type);\n\n            if (currentMediaInfo[streamInfo.id] && currentMediaInfo[streamInfo.id][type]) {\n                for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                    if (areMediaInfosEqual(currentMediaInfo[streamInfo.id][type], allMediaInfoForType[i])) {\n                        return adaptations[i];\n                    }\n                }\n            }\n\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    /**\n     * Compares two mediaInfo objects\n     * @param {MediaInfo} mInfoOne\n     * @param {MediaInfo} mInfoTwo\n     * @returns {boolean}\n     * @memberof module:DashAdapter\n     * @instance\n     */\n    function areMediaInfosEqual(mInfoOne, mInfoTwo) {\n        if (!mInfoOne || !mInfoTwo) {\n            return false;\n        }\n\n        const sameId = mInfoOne.id === mInfoTwo.id;\n        const sameCodec = mInfoOne.codec === mInfoTwo.codec;\n        const sameViewpoint = mInfoOne.viewpoint === mInfoTwo.viewpoint;\n        const sameViewpointWithSchemeIdUri = JSON.stringify(mInfoOne.viewpointsWithSchemeIdUri) === JSON.stringify(mInfoTwo.viewpointsWithSchemeIdUri);\n        const sameLang = mInfoOne.lang === mInfoTwo.lang;\n        const sameRoles = mInfoOne.roles.toString() === mInfoTwo.roles.toString();\n        const sameRolesWithSchemeIdUri = JSON.stringify(mInfoOne.rolesWithSchemeIdUri) === JSON.stringify(mInfoTwo.rolesWithSchemeIdUri);\n        const sameAccessibility = mInfoOne.accessibility.toString() === mInfoTwo.accessibility.toString();\n        const sameAccessibilityWithSchemeIdUri = JSON.stringify(mInfoOne.accessibilitiesWithSchemeIdUri) === JSON.stringify(mInfoTwo.accessibilitiesWithSchemeIdUri);\n        const sameAudioChannelConfiguration = mInfoOne.audioChannelConfiguration.toString() === mInfoTwo.audioChannelConfiguration.toString();\n        const sameAudioChannelConfigurationWithSchemeIdUri = JSON.stringify(mInfoOne.audioChannelConfigurationsWithSchemeIdUri) === JSON.stringify(mInfoTwo.audioChannelConfigurationsWithSchemeIdUri);\n\n        return (sameId && sameCodec && sameViewpoint && sameViewpointWithSchemeIdUri && sameLang && sameRoles && sameRolesWithSchemeIdUri && sameAccessibility && sameAccessibilityWithSchemeIdUri && sameAudioChannelConfiguration && sameAudioChannelConfigurationWithSchemeIdUri);\n    }\n\n    function _getAllMediaInfo(manifest, period, streamInfo, adaptations, type, embeddedText) {\n        let mediaArr = [];\n        let data,\n            media,\n            idx,\n            i,\n            j,\n            ln;\n\n        if (!adaptations || adaptations.length === 0) {\n            return [];\n        }\n\n        const voAdaptations = dashManifestModel.getAdaptationsForPeriod(period);\n\n        for (i = 0, ln = adaptations.length; i < ln; i++) {\n            data = adaptations[i];\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n            media = convertAdaptationToMediaInfo(voAdaptations[idx]);\n\n            if (embeddedText) {\n                let accessibilityLength = media.accessibility.length;\n                for (j = 0; j < accessibilityLength; j++) {\n                    if (!media) {\n                        continue;\n                    }\n                    let accessibility = media.accessibility[j];\n                    if (accessibility.indexOf('cea-608:') === 0) {\n                        let value = accessibility.substring(8);\n                        let parts = value.split(';');\n                        if (parts[0].substring(0, 2) === 'CC') {\n                            for (j = 0; j < parts.length; j++) {\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        } else {\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        }\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\n                        convertVideoInfoToEmbeddedTextInfo(media, constants.CC1, 'eng');\n                        mediaArr.push(media);\n                        media = null;\n                    }\n                }\n            } else if (type === constants.IMAGE) {\n                convertVideoInfoToThumbnailInfo(media);\n                mediaArr.push(media);\n                media = null;\n            } else if (media) {\n                mediaArr.push(media);\n            }\n        }\n\n        return mediaArr;\n    }\n\n    /**\n     * Returns all the mediaInfos for a given mediaType and the corresponding streamInfo.\n     * @param {object} streamInfo\n     * @param {MediaType} type\n     * @param {object} externalManifest Set to null or undefined if no external manifest is to be used\n     * @returns {Array} mediaArr\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\n        let voLocalPeriods = voPeriods;\n        let manifest = externalManifest;\n        let mediaArr = [];\n\n        if (manifest) {\n            checkConfig();\n\n            voLocalPeriods = getRegularPeriods(manifest);\n        } else {\n            if (voPeriods.length > 0) {\n                manifest = voPeriods[0].mpd.manifest;\n            } else {\n                return mediaArr;\n            }\n        }\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\n        let adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo ? streamInfo.index : null, type);\n\n        mediaArr = _getAllMediaInfo(manifest, selectedVoPeriod, streamInfo, adaptationsForType, type);\n\n        // Search for embedded text in video track\n        if (type === constants.TEXT) {\n            adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo ? streamInfo.index : null, constants.VIDEO);\n            mediaArr = mediaArr.concat(_getAllMediaInfo(manifest, selectedVoPeriod, streamInfo, adaptationsForType, type, true));\n        }\n\n        return mediaArr;\n    }\n\n    /**\n     * Update the internal voPeriods array with the information from the new manifest\n     * @param {object} newManifest\n     * @returns {*}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function updatePeriods(newManifest) {\n        if (!newManifest) return null;\n\n        checkConfig();\n\n        voPeriods = getRegularPeriods(newManifest);\n    }\n\n    /**\n     * Returns an array of streamInfo objects\n     * @param {object} externalManifest\n     * @param {number} maxStreamsInfo\n     * @returns {Array} streams\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\n        const streams = [];\n        let voLocalPeriods = voPeriods;\n\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\n        if (externalManifest) {\n            checkConfig();\n            voLocalPeriods = getRegularPeriods(externalManifest);\n        }\n\n        if (voLocalPeriods.length > 0) {\n            if (!maxStreamsInfo || maxStreamsInfo > voLocalPeriods.length) {\n                maxStreamsInfo = voLocalPeriods.length;\n            }\n            for (let i = 0; i < maxStreamsInfo; i++) {\n                streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\n            }\n        }\n\n        return streams;\n    }\n\n    /**\n     * Returns the AdaptationSet as saved in the DashManifestModel\n     * @param {object} streamInfo\n     * @param {object} mediaInfo\n     * @returns {object} realAdaptation\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRealAdaptation(streamInfo, mediaInfo) {\n        let id,\n            realAdaptation;\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n\n        id = mediaInfo ? mediaInfo.id : null;\n\n        if (voPeriods.length > 0 && selectedVoPeriod) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo ? mediaInfo.index : null, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n        }\n\n        return realAdaptation;\n    }\n\n    /**\n     * Returns the ProducerReferenceTimes as saved in the DashManifestModel if present\n     * @param {object} streamInfo\n     * @param {object} mediaInfo\n     * @returns {object} producerReferenceTimes\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getProducerReferenceTimes(streamInfo, mediaInfo) {\n        let id, realAdaptation;\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        id = mediaInfo ? mediaInfo.id : null;\n\n        if (voPeriods.length > 0 && selectedVoPeriod) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo ? mediaInfo.index : null, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n        }\n\n        if (!realAdaptation) return [];\n        return dashManifestModel.getProducerReferenceTimesForAdaptation(realAdaptation);\n    }\n\n    /**\n     * Return all EssentialProperties of a Representation\n     * @param {object} representation\n     * @return {array}\n     */\n    function getEssentialPropertiesForRepresentation(representation) {\n        try {\n            return dashManifestModel.getEssentialPropertiesForRepresentation(representation);\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Returns the period as defined in the DashManifestModel for a given index\n     * @param {number} index\n     * @return {object}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRealPeriodByIndex(index) {\n        return dashManifestModel.getRealPeriodForIndex(index, voPeriods[0].mpd.manifest);\n    }\n\n    /**\n     * Returns all voRepresentations for a given mediaInfo\n     * @param {object} mediaInfo\n     * @returns {Array} voReps\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getVoRepresentations(mediaInfo) {\n        let voReps;\n\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\n        voReps = dashManifestModel.getRepresentationsForAdaptation(voAdaptation);\n\n        return voReps;\n    }\n\n    /**\n     * Returns the event for the given parameters.\n     * @param {object} eventBox\n     * @param {object} eventStreams\n     * @param {number} mediaStartTime - Specified in seconds\n     * @param {object} voRepresentation\n     * @returns {null|Event}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getEvent(eventBox, eventStreams, mediaStartTime, voRepresentation) {\n        try {\n            if (!eventBox || !eventStreams || isNaN(mediaStartTime) || !voRepresentation) {\n                return null;\n            }\n\n            const schemeIdUri = eventBox.scheme_id_uri;\n            const value = eventBox.value;\n\n            if (!eventStreams[schemeIdUri + '/' + value]) {\n                return null;\n            }\n\n            const event = new Event();\n            const timescale = eventBox.timescale || 1;\n            const periodStart = voRepresentation.adaptation.period.start;\n            const eventStream = eventStreams[schemeIdUri + '/' + value];\n            // The PTO in voRepresentation is already specified in seconds\n            const presentationTimeOffset = !isNaN(voRepresentation.presentationTimeOffset) ? voRepresentation.presentationTimeOffset : !isNaN(eventStream.presentationTimeOffset) ? eventStream.presentationTimeOffset : 0;\n            // In case of version 1 events the presentation_time is parsed as presentation_time_delta\n            let presentationTimeDelta = eventBox.presentation_time_delta / timescale;\n            let calculatedPresentationTime;\n\n            if (eventBox.version === 0) {\n                calculatedPresentationTime = periodStart + mediaStartTime - presentationTimeOffset + presentationTimeDelta;\n            } else {\n                calculatedPresentationTime = periodStart - presentationTimeOffset + presentationTimeDelta;\n            }\n\n            const duration = eventBox.event_duration / timescale;\n            const id = eventBox.id;\n            const messageData = eventBox.message_data;\n\n            event.eventStream = eventStream;\n            event.eventStream.value = value;\n            event.eventStream.timescale = timescale;\n            event.duration = duration;\n            event.id = id;\n            event.calculatedPresentationTime = calculatedPresentationTime;\n            event.messageData = messageData;\n            event.presentationTimeDelta = presentationTimeDelta;\n\n            return event;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the events for the given info object. info can either be an instance of StreamInfo, MediaInfo or RepresentationInfo\n     * @param {object} info\n     * @param {object} voRepresentation\n     * @returns {Array}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getEventsFor(info, voRepresentation, streamInfo) {\n        let events = [];\n\n        if (voPeriods.length > 0) {\n            const manifest = voPeriods[0].mpd.manifest;\n\n            if (info instanceof StreamInfo) {\n                const period = getPeriodForStreamInfo(info, voPeriods)\n                events = dashManifestModel.getEventsForPeriod(period);\n            } else if (info instanceof MediaInfo) {\n                const period = getPeriodForStreamInfo(streamInfo, voPeriods)\n                events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info), period);\n            } else if (info instanceof RepresentationInfo) {\n                const period = getPeriodForStreamInfo(streamInfo, voPeriods)\n                events = dashManifestModel.getEventStreamForRepresentation(manifest, voRepresentation, period);\n            }\n        }\n\n        return events;\n    }\n\n    /**\n     * Sets the current active mediaInfo for a given streamId and a given mediaType\n     * @param {number} streamId\n     * @param {MediaType} type\n     * @param {object} mediaInfo\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function setCurrentMediaInfo(streamId, type, mediaInfo) {\n        currentMediaInfo[streamId] = currentMediaInfo[streamId] || {};\n        currentMediaInfo[streamId][type] = currentMediaInfo[streamId][type] || {};\n        currentMediaInfo[streamId][type] = mediaInfo;\n    }\n\n    /**\n     * Check if the given type is a text track\n     * @param {object} adaptation\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getIsTextTrack(adaptation) {\n        return dashManifestModel.getIsText(adaptation);\n    }\n\n    /**\n     * Returns the UTC Timing Sources specified in the manifest\n     * @returns {Array} utcTimingSources\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getUTCTimingSources() {\n        const manifest = getManifest();\n        return dashManifestModel.getUTCTimingSources(manifest);\n    }\n\n    /**\n     * Returns the suggestedPresentationDelay as specified in the manifest\n     * @returns {String} suggestedPresentationDelay\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getSuggestedPresentationDelay() {\n        const mpd = voPeriods.length > 0 ? voPeriods[0].mpd : null;\n        return dashManifestModel.getSuggestedPresentationDelay(mpd);\n    }\n\n    /**\n     * Returns the availabilityStartTime as specified in the manifest\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {number} availabilityStartTime\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getAvailabilityStartTime(externalManifest) {\n        const mpd = getMpd(externalManifest);\n        return dashManifestModel.getAvailabilityStartTime(mpd);\n    }\n\n    /**\n     * Returns a boolean indicating if the manifest is dynamic or not\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsDynamic(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getIsDynamic(manifest);\n    }\n\n    /**\n     * Returns the duration of the MPD\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {number} duration\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getDuration(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getDuration(manifest);\n    }\n\n    /**\n     * Returns all periods of the MPD\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {Array} periods\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRegularPeriods(externalManifest) {\n        const mpd = getMpd(externalManifest);\n        return dashManifestModel.getRegularPeriods(mpd);\n    }\n\n    /**\n     * Returns an MPD object\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {object} MPD\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMpd(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getMpd(manifest);\n    }\n\n    /**\n     * Returns the ContentSteering element of the MPD\n     * @param {object} manifest\n     * @returns {object} contentSteering\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getContentSteering(manifest) {\n        return dashManifestModel.getContentSteering(manifest);\n    }\n\n    /**\n     * Returns the location element of the MPD\n     * @param {object} manifest\n     * @returns {String} location\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getLocation(manifest) {\n        return dashManifestModel.getLocation(manifest);\n    }\n\n    /**\n     * Returns the manifest update period used for dynamic manifests\n     * @param {object} manifest\n     * @param {number} latencyOfLastUpdate\n     * @returns {NaN|number} manifestUpdatePeriod\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        return dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n    }\n\n    /**\n     * Returns the publish time from the manifest\n     * @param {object} manifest\n     * @returns {Date|null} publishTime\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPublishTime(manifest) {\n        return dashManifestModel.getPublishTime(manifest);\n    }\n\n    /**\n     * Returns the patch locations of the MPD if existing and if they are still valid\n     * @param {object} manifest\n     * @returns {PatchLocation[]} patch location\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPatchLocation(manifest) {\n        const patchLocations = dashManifestModel.getPatchLocation(manifest);\n        const publishTime = dashManifestModel.getPublishTime(manifest);\n\n        // short-circuit when no patch location or publish time exists\n        if (!patchLocations || patchLocations.length === 0 || !publishTime) {\n            return [];\n        }\n\n        return patchLocations.filter((patchLocation) => {\n            // check if the patch location has expired, if so do not consider it\n            return isNaN(patchLocation.ttl) || (publishTime.getTime() + patchLocation.ttl > new Date().getTime())\n        })\n    }\n\n    /**\n     * Checks if the manifest has a DVB profile\n     * @param {object} manifest\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getIsDVB(manifest) {\n        return dashManifestModel.hasProfile(manifest, PROFILE_DVB);\n    }\n\n    /**\n     * Checks if the manifest is actually just a patch manifest\n     * @param  {object} manifest\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsPatch(manifest) {\n        return patchManifestModel.getIsPatch(manifest);\n    }\n\n    /**\n     * Returns the base urls for a given element\n     * @param {object} node\n     * @returns {BaseURL[]}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getBaseURLsFromElement(node) {\n        return dashManifestModel.getBaseURLsFromElement(node);\n    }\n\n    /**\n     * Returns the function to sort the Representations\n     * @returns {function}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getRepresentationSortFunction() {\n        return dashManifestModel.getRepresentationSortFunction();\n    }\n\n    /**\n     * Returns the codec for a given adaptation set and a given representation id.\n     * @param {object} adaptation\n     * @param {number} representationId\n     * @param {boolean} addResolutionInfo Defines whether to include resolution information in the output\n     * @returns {String} codec\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        return dashManifestModel.getCodec(adaptation, representationId, addResolutionInfo);\n    }\n\n    /**\n     * Returns the bandwidth for a given representation id and the corresponding period index\n     * @param {number} representationId\n     * @param {number} periodIdx\n     * @returns {number} bandwidth\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getBandwidthForRepresentation(representationId, periodIdx) {\n        let representation;\n        let period = getPeriod(periodIdx);\n\n        representation = findRepresentation(period, representationId);\n\n        return representation ? representation.bandwidth : null;\n    }\n\n    /**\n     * Returns the index for a given representation id\n     * @param {string} representationId\n     * @param {number} periodIdx\n     * @returns {number} index\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIndexForRepresentation(representationId, periodIdx) {\n        let period = getPeriod(periodIdx);\n\n        return findRepresentationIndex(period, representationId);\n    }\n\n    /**\n     * This method returns the current max index based on what is defined in the MPD.\n     * @param {string} bufferType - String 'audio' or 'video',\n     * @param {number} periodIdx - Make sure this is the period index not id\n     * @return {number}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMaxIndexForBufferType(bufferType, periodIdx) {\n        let period = getPeriod(periodIdx);\n\n        return findMaxBufferIndex(period, bufferType);\n    }\n\n    /**\n     * Returns the voPeriod object for a given id\n     * @param {String} id\n     * @returns {object|null}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPeriodById(id) {\n        if (!id || voPeriods.length === 0) {\n            return null;\n        }\n        const periods = voPeriods.filter((p) => {\n            return p.id === id;\n        });\n\n        if (periods && periods.length > 0) {\n            return periods[0];\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks if the given AdaptationSet is from the given media type\n     * @param {object} adaptation\n     * @param {string} type\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsTypeOf(adaptation, type) {\n        return dashManifestModel.getIsTypeOf(adaptation, type);\n    }\n\n    function reset() {\n        voPeriods = [];\n        currentMediaInfo = {};\n    }\n\n    /**\n     * Checks if the supplied manifest is compatible for application of the supplied patch\n     * @param  {object}  manifest\n     * @param  {object}  patch\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function isPatchValid(manifest, patch) {\n        let manifestId = dashManifestModel.getId(manifest);\n        let patchManifestId = patchManifestModel.getMpdId(patch);\n        let manifestPublishTime = dashManifestModel.getPublishTime(manifest);\n        let patchPublishTime = patchManifestModel.getPublishTime(patch);\n        let originalManifestPublishTime = patchManifestModel.getOriginalPublishTime(patch);\n\n        // Patches are considered compatible if the following are true\n        // - MPD@id == Patch@mpdId\n        // - MPD@publishTime == Patch@originalPublishTime\n        // - MPD@publishTime < Patch@publishTime\n        // - All values in comparison exist\n        return !!(manifestId && patchManifestId && (manifestId == patchManifestId) &&\n            manifestPublishTime && originalManifestPublishTime && (manifestPublishTime.getTime() == originalManifestPublishTime.getTime()) &&\n            patchPublishTime && (manifestPublishTime.getTime() < patchPublishTime.getTime()));\n    }\n\n    /**\n     * Takes a given patch and applies it to the provided manifest, assumes patch is valid for manifest\n     * @param  {object} manifest\n     * @param  {object} patch\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function applyPatchToManifest(manifest, patch) {\n        // get all operations from the patch and apply them in document order\n        patchManifestModel.getPatchOperations(patch)\n            .forEach((operation) => {\n                let result = operation.getMpdTarget(manifest);\n\n                // operation supplies a path that doesn't match mpd, skip\n                if (result === null) {\n                    return;\n                }\n\n                let { name, target, leaf } = result;\n\n                // short circuit for attribute selectors\n                if (operation.xpath.findsAttribute()) {\n                    switch (operation.action) {\n                        case 'add':\n                        case 'replace':\n                            // add and replace are just setting the value\n                            target[name] = operation.value;\n                            break;\n                        case 'remove':\n                            // remove is deleting the value\n                            delete target[name];\n                            break;\n                    }\n                    return;\n                }\n\n                // determine the relative insert position prior to possible removal\n                let relativePosition = (target[name + '_asArray'] || []).indexOf(leaf);\n                let insertBefore = (operation.position === 'prepend' || operation.position === 'before');\n\n                // perform removal operation first, we have already capture the appropriate relative position\n                if (operation.action === 'remove' || operation.action === 'replace') {\n                    // note that we ignore the 'ws' attribute of patch operations as it does not effect parsed mpd operations\n\n                    // purge the directly named entity\n                    delete target[name];\n\n                    // if we did have a positional reference we need to purge from array set and restore X2JS proper semantics\n                    if (relativePosition != -1) {\n                        let targetArray = target[name + '_asArray'];\n                        targetArray.splice(relativePosition, 1);\n                        if (targetArray.length > 1) {\n                            target[name] = targetArray;\n                        } else if (targetArray.length == 1) {\n                            // xml parsing semantics, singular asArray must be non-array in the unsuffixed key\n                            target[name] = targetArray[0];\n                        } else {\n                            // all nodes of this type deleted, remove entry\n                            delete target[name + '_asArray'];\n                        }\n                    }\n                }\n\n                // Perform any add/replace operations now, technically RFC5261 only allows a single element to take the\n                // place of a replaced element while the add case allows an arbitrary number of children.\n                // Due to the both operations requiring the same insertion logic they have been combined here and we will\n                // not enforce single child operations for replace, assertions should be made at patch parse time if necessary\n                if (operation.action === 'add' || operation.action === 'replace') {\n                    // value will be an object with element name keys pointing to arrays of objects\n                    Object.keys(operation.value).forEach((insert) => {\n                        let insertNodes = operation.value[insert];\n\n                        let updatedNodes = target[insert + '_asArray'] || [];\n                        if (updatedNodes.length === 0 && target[insert]) {\n                            updatedNodes.push(target[insert]);\n                        }\n\n                        if (updatedNodes.length === 0) {\n                            // no original nodes for this element type\n                            updatedNodes = insertNodes;\n                        } else {\n                            // compute the position we need to insert at, default to end of set\n                            let position = updatedNodes.length;\n                            if (insert == name && relativePosition != -1) {\n                                // if the inserted element matches the operation target (not leaf) and there is a relative position we\n                                // want the inserted position to be set such that our insertion is relative to original position\n                                // since replace has modified the array length we reduce the insert point by 1\n                                position = relativePosition + (insertBefore ? 0 : 1) + (operation.action == 'replace' ? -1 : 0);\n                            } else {\n                                // otherwise we are in an add append/prepend case or replace case that removed the target name completely\n                                position = insertBefore ? 0 : updatedNodes.length;\n                            }\n\n                            // we dont have to perform element removal for the replace case as that was done above\n                            updatedNodes.splice.apply(updatedNodes, [position, 0].concat(insertNodes));\n                        }\n\n                        // now we properly reset the element keys on the target to match parsing semantics\n                        target[insert + '_asArray'] = updatedNodes;\n                        target[insert] = updatedNodes.length == 1 ? updatedNodes[0] : updatedNodes;\n                    });\n                }\n            });\n    }\n\n    // #endregion PUBLIC FUNCTIONS\n\n    // #region PRIVATE FUNCTIONS\n    // --------------------------------------------------\n    function getManifest(externalManifest) {\n        return externalManifest ? externalManifest : voPeriods.length > 0 ? voPeriods[0].mpd.manifest : null;\n    }\n\n    function getAdaptationForMediaInfo(mediaInfo) {\n        try {\n            const selectedVoPeriod = getPeriodForStreamInfo(mediaInfo.streamInfo, voPeriods);\n            const voAdaptations = dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n            if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations) return null;\n            return voAdaptations[mediaInfo.index];\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\n        const ln = voPeriodsArray.length;\n\n        for (let i = 0; i < ln; i++) {\n            let voPeriod = voPeriodsArray[i];\n\n            if (streamInfo && streamInfo.id === voPeriod.id) return voPeriod;\n        }\n\n        return null;\n    }\n\n    function convertAdaptationToMediaInfo(adaptation) {\n        if (!adaptation) {\n            return null;\n        }\n\n        let mediaInfo = new MediaInfo();\n        const realAdaptation = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\n        let viewpoint, acc, acc_rep, roles, accessibility;\n\n        mediaInfo.id = adaptation.id;\n        mediaInfo.index = adaptation.index;\n        mediaInfo.type = adaptation.type;\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\n        mediaInfo.labels = dashManifestModel.getLabelsForAdaptation(realAdaptation);\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\n        mediaInfo.segmentAlignment = dashManifestModel.getSegmentAlignment(realAdaptation);\n        mediaInfo.subSegmentAlignment = dashManifestModel.getSubSegmentAlignment(realAdaptation);\n\n        viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\n        mediaInfo.viewpoint = viewpoint.length ? viewpoint[0].value : undefined;\n        mediaInfo.viewpointsWithSchemeIdUri = viewpoint;\n        \n        accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation);\n        mediaInfo.accessibility = accessibility.map(function (accessibility) {\n            let accessibilityValue = accessibility.value;\n            let accessibilityData = accessibilityValue;\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\n                if (accessibilityValue) {\n                    accessibilityData = 'cea-608:' + accessibilityValue;\n                } else {\n                    accessibilityData = 'cea-608';\n                }\n                mediaInfo.embeddedCaptions = true;\n            }\n            return accessibilityData;\n        });\n        mediaInfo.accessibilitiesWithSchemeIdUri = accessibility;\n\n        acc = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation);\n        mediaInfo.audioChannelConfiguration = acc.map(function (audioChannelConfiguration) {\n            return audioChannelConfiguration.value;\n        });\n        mediaInfo.audioChannelConfigurationsWithSchemeIdUri = acc;\n\n        if (mediaInfo.audioChannelConfiguration.length === 0 && Array.isArray(realAdaptation.Representation_asArray) && realAdaptation.Representation_asArray.length > 0) {\n            acc_rep = dashManifestModel.getAudioChannelConfigurationForRepresentation(realAdaptation.Representation_asArray[0]);\n            mediaInfo.audioChannelConfiguration = acc_rep.map(function (audioChannelConfiguration) {\n                return audioChannelConfiguration.value;\n            });\n            mediaInfo.audioChannelConfigurationsWithSchemeIdUri = acc_rep;\n        }\n        \n        roles = dashManifestModel.getRolesForAdaptation(realAdaptation);\n        mediaInfo.roles = roles.map(function (role) {\n            return role.value;\n        });\n        mediaInfo.rolesWithSchemeIdUri = roles;\n        \n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(realAdaptation);\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\n        mediaInfo.selectionPriority = dashManifestModel.getSelectionPriority(realAdaptation);\n\n        if (mediaInfo.contentProtection) {\n            // Get the default key ID and apply it to all key systems\n            const keyIds = mediaInfo.contentProtection.map(cp => dashManifestModel.getKID(cp)).filter(kid => kid !== null);\n            if (keyIds.length) {\n                const keyId = keyIds[0];\n                mediaInfo.contentProtection.forEach(cp => {\n                    cp.keyId = keyId;\n                });\n            }\n        }\n\n        mediaInfo.isText = dashManifestModel.getIsText(realAdaptation);\n        mediaInfo.supplementalProperties = dashManifestModel.getSupplementalPropertiesForAdaptation(realAdaptation);\n        if ( (!mediaInfo.supplementalProperties || Object.keys(mediaInfo.supplementalProperties).length === 0) && Array.isArray(realAdaptation.Representation_asArray) && realAdaptation.Representation_asArray.length > 0) {\n            let arr = realAdaptation.Representation_asArray.map( repr => {\n                return dashManifestModel.getSupplementalPropertiesForRepresentation(repr);\n            });\n            if ( arr.every( v => JSON.stringify(v) === JSON.stringify(arr[0]) ) ) {\n                // only output Representation.supplementalProperties to mediaInfo, if they are present on all Representations\n                mediaInfo.supplementalProperties = arr[0];\n            }\n        }\n        mediaInfo.supplementalPropertiesAsArray = dashManifestModel.getSupplementalPropertiesAsArrayForAdaptation(realAdaptation);\n        if ( (!mediaInfo.supplementalPropertiesAsArray || mediaInfo.supplementalPropertiesAsArray.length === 0) && Array.isArray(realAdaptation.Representation_asArray) && realAdaptation.Representation_asArray.length > 0) {\n            let arr = realAdaptation.Representation_asArray.map( repr => {\n                return dashManifestModel.getSupplementalPropertiesAsArrayForRepresentation(repr);\n            });\n            if ( arr.every( v => JSON.stringify(v) === JSON.stringify(arr[0]) ) ) {\n                // only output Representation.supplementalProperties to mediaInfo, if they are present on all Representations\n                mediaInfo.supplementalPropertiesAsArray = arr[0];\n            }\n        }\n        \n        mediaInfo.isFragmented = dashManifestModel.getIsFragmented(realAdaptation);\n        mediaInfo.isEmbedded = false;\n\n        return mediaInfo;\n    }\n\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\n        mediaInfo.type = constants.TEXT;\n        mediaInfo.codec = 'cea-608-in-SEI';\n        mediaInfo.isEmbedded = true;\n        mediaInfo.isFragmented = false;\n        mediaInfo.lang = bcp47Normalize(lang);\n        mediaInfo.roles = ['caption'];\n        mediaInfo.rolesWithSchemeIdUri = [{schemeIdUri:'urn:mpeg:dash:role:2011', value:'caption'}];\n    }\n\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\n        mediaInfo.type = constants.IMAGE;\n    }\n\n    function convertPeriodToStreamInfo(period) {\n        let streamInfo = new StreamInfo();\n        const THRESHOLD = 1;\n\n        streamInfo.id = period.id;\n        streamInfo.index = period.index;\n        streamInfo.start = period.start;\n        streamInfo.duration = period.duration;\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\n        streamInfo.isLast = period.mpd.manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\n\n        return streamInfo;\n    }\n\n    function convertMpdToManifestInfo(mpd) {\n        let manifestInfo = new ManifestInfo();\n\n        manifestInfo.dvrWindowSize = mpd.timeShiftBufferDepth;\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\n        manifestInfo.serviceDescriptions = dashManifestModel.getServiceDescriptions(mpd.manifest);\n        manifestInfo.protocol = mpd.manifest.protocol;\n\n        return manifestInfo;\n    }\n\n    function checkConfig() {\n        if (!constants) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function getPeriod(periodIdx) {\n        return voPeriods.length > 0 ? voPeriods[0].mpd.manifest.Period_asArray[periodIdx] : null;\n    }\n\n    function findRepresentationIndex(period, representationId) {\n        const index = findRepresentation(period, representationId, true);\n\n        return index !== null ? index : -1;\n    }\n\n    function findRepresentation(period, representationId, returnIndex) {\n        let adaptationSet,\n            adaptationSetArray,\n            representation,\n            representationArray,\n            adaptationSetArrayIndex,\n            representationArrayIndex;\n\n        if (period) {\n            adaptationSetArray = period.AdaptationSet_asArray;\n            for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n                adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n                representationArray = adaptationSet.Representation_asArray;\n                for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\n                    representation = representationArray[representationArrayIndex];\n                    if (representationId === representation.id) {\n                        if (returnIndex) {\n                            return representationArrayIndex;\n                        } else {\n                            return representation;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function findMaxBufferIndex(period, bufferType) {\n        let adaptationSet,\n            adaptationSetArray,\n            representationArray,\n            adaptationSetArrayIndex;\n\n        if (!period || !bufferType) return -1;\n\n        adaptationSetArray = period.AdaptationSet_asArray;\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n            representationArray = adaptationSet.Representation_asArray;\n            if (dashManifestModel.getIsTypeOf(adaptationSet, bufferType)) {\n                return representationArray.length;\n            }\n        }\n\n        return -1;\n    }\n\n    // #endregion PRIVATE FUNCTIONS\n\n    instance = {\n        getBandwidthForRepresentation,\n        getIndexForRepresentation,\n        getMaxIndexForBufferType,\n        convertRepresentationToRepresentationInfo,\n        getStreamsInfo,\n        getMediaInfoForType,\n        getAllMediaInfoForType,\n        getAdaptationForType,\n        getRealAdaptation,\n        getProducerReferenceTimes,\n        getRealPeriodByIndex,\n        getEssentialPropertiesForRepresentation,\n        getVoRepresentations,\n        getEventsFor,\n        getEvent,\n        getMpd,\n        setConfig,\n        updatePeriods,\n        getIsTextTrack,\n        getUTCTimingSources,\n        getSuggestedPresentationDelay,\n        getAvailabilityStartTime,\n        getIsTypeOf,\n        getIsDynamic,\n        getDuration,\n        getRegularPeriods,\n        getContentSteering,\n        getLocation,\n        getPatchLocation,\n        getManifestUpdatePeriod,\n        getPublishTime,\n        getIsDVB,\n        getIsPatch,\n        getBaseURLsFromElement,\n        getRepresentationSortFunction,\n        getCodec,\n        getPeriodById,\n        setCurrentMediaInfo,\n        isPatchValid,\n        applyPatchToManifest,\n        areMediaInfosEqual,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Static methods for rounding decimals\n *\n * Modified version of the CC0-licenced example at:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n *\n * @export\n * @class Round10\n * @ignore\n */\nexport default class Round10 {\n    /**\n    * Decimal round.\n    *\n    * @param {Number}  value The number.\n    * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n    * @returns {Number} The adjusted value.\n    * @ignore\n    */\n    static round10(value, exp) {\n        return _decimalAdjust('round', value, exp);\n    }\n}\n\n/**\n * Decimal adjustment of a number.\n *\n * @param {String}  type  The type of adjustment.\n * @param {Number}  value The number.\n * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n * @returns {Number} The adjusted value.\n * @ignore\n */\nfunction _decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n        return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp;\n\n    // If the value is not a number or the exp is not an integer...\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n        return NaN;\n    }\n\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MetricsList {\n    constructor() {\n        this.TcpList = [];\n        this.HttpList = [];\n        this.RepSwitchList = [];\n        this.BufferLevel = [];\n        this.BufferState = [];\n        this.PlayList = [];\n        this.DroppedFrames = [];\n        this.SchedulingInfo = [];\n        this.DVRInfo = [];\n        this.ManifestUpdate = [];\n        this.RequestsQueue = null;\n        this.DVBErrors = [];\n    }\n}\n\nexport default MetricsList;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RepresentationSwitch {\n    /**\n     * @description This Object holds reference to the info at quality switch between two representations.\n     */\n    constructor() {\n\n        /**\n         * Time of the switch event.\n         * @public\n         */\n        this.t = null;\n        /**\n         * The media presentation time of the earliest access unit\n         * (out of all media content components) played out from\n         * the Representation.\n         *\n         * @public\n         */\n        this.mt = null;\n        /**\n         * Value of Representation@id identifying the switch-to Representation.\n         * @public\n         */\n        this.to = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, lto indicates the value of SubRepresentation@level within\n         * Representation identifying the switch-to level of the Representation.\n         *\n         * @public\n         */\n        this.lto = null;\n\n    }\n}\n\nexport default RepresentationSwitch;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass BufferLevel {\n    /**\n     * @description This Object holds reference to the current buffer level and the time it was recorded.\n     */\n    constructor() {\n        /**\n         * Real-Time | Time of the measurement of the buffer level.\n         * @public\n         */\n        this.t = null;\n        /**\n         * Level of the buffer in milliseconds. Indicates the playout duration for which\n         * media data of all active media components is available starting from the\n         * current playout time.\n         * @public\n         */\n        this.level = null;\n    }\n}\n\nexport default BufferLevel;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MetricsConstants from '../../constants/MetricsConstants';\n\n/**\n * @class\n * @ignore\n */\nclass BufferState {\n    /**\n     * @description This Object holds reference to the current buffer state of the video element.\n     */\n    constructor() {\n        /**\n         * The Buffer Level Target determined by the BufferLevelRule.\n         * @public\n         */\n        this.target = null;\n        /**\n         * Current buffer state. Will be MetricsConstants.BUFFER_EMPTY or MetricsConstants.BUFFER_LOADED.\n         * @public\n         */\n        this.state = MetricsConstants.BUFFER_EMPTY;\n    }\n}\n\nexport default BufferState;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DVRInfo {\n    /**\n     * @description This Object holds reference to DVR availability window information.\n     */\n    constructor() {\n\n        /**\n         * The current time of the video element when this was created.\n         * @public\n         */\n        this.time = null;\n        /**\n         * The current Segment Availability Range as an object with start and end properties.\n         * It's delta defined by the timeShiftBufferDepth MPD attribute.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Reference to the internal ManifestInfo.js VO.\n         * @public\n         */\n        this.manifestInfo = null;\n    }\n}\n\nexport default DVRInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DroppedFrames {\n    /**\n     * @description This Object holds reference to DroppedFrames count and the time it was recorded.\n     */\n    constructor()\n    {\n        /**\n         * Real-Time | Time of the measurement of the dropped frames.\n         * @public\n         */\n        this.time = null;\n        /**\n         * Number of dropped frames\n         * @public\n         */\n        this.droppedFrames = null;\n    }\n}\n\nexport default DroppedFrames;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the manifest update information.\n * @ignore\n */\nclass ManifestUpdate {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * MPD Type static | dynamic\n         * @public\n         */\n        this.type = null;\n        /**\n         * When this manifest update was requested\n         * @public\n         */\n        this.requestTime = null;\n        /**\n         * When this manifest update was received\n         * @public\n         */\n        this.fetchTime = null;\n        /**\n         * Calculated Availability Start time of the stream.\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n         * @public\n         */\n        this.presentationStartTime = 0;\n        /**\n         * The calculated difference between the server and client wall clock time\n         * @public\n         */\n        this.clientTimeOffset = 0;\n        /**\n         * Actual element.currentTime\n         * @public\n         */\n        this.currentTime = null;\n        /**\n         * Actual element.ranges\n         * @public\n         */\n        this.buffered = null;\n        /**\n         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)\n         * @public\n         */\n        this.latency = 0;\n        /**\n         * Array holding list of StreamInfo VO Objects\n         * @public\n         */\n        this.streamInfo = [];\n        /**\n         * Array holding list of RepresentationInfo VO Objects\n         * @public\n         */\n        this.representationInfo = [];\n\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current period's stream information when the manifest was updated.\n * @ignore\n */\nclass ManifestUpdateStreamInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Stream@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Period Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Stream@start\n         * @public\n         */\n        this.start = null;\n        /**\n         * Stream@duration\n         * @public\n         */\n        this.duration = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current representation's info when the manifest was updated.\n * @ignore\n */\nclass ManifestUpdateRepresentationInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Track@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Representation Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Which representation\n         * @public\n         */\n        this.streamIndex = null;\n        /**\n         * Holds reference to @presentationTimeOffset\n         * @public\n         */\n        this.presentationTimeOffset = null;\n        /**\n         * Holds reference to @startNumber\n         * @public\n         */\n        this.startNumber = null;\n        /**\n         * list|template|timeline\n         * @public\n         */\n        this.fragmentInfoType = null;\n    }\n}\n\nexport { ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateRepresentationInfo };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass SchedulingInfo {\n    /**\n     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.\n     */\n    constructor() {\n\n        /**\n         * Type of stream Audio | Video | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Time of the scheduling event.\n         * @public\n         */\n        this.t = null;\n\n        /**\n         * Type of fragment (initialization | media)\n         * @public\n         */\n        this.type = null;\n        /**\n         * Presentation start time of fragment\n         * @public\n         */\n        this.startTime = null;\n        /**\n         * Availability start time of fragment\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * Duration of fragment\n         * @public\n         */\n        this.duration = null;\n        /**\n         * Bit Rate Quality of fragment\n         * @public\n         */\n        this.quality = null;\n        /**\n         * Range of fragment\n         * @public\n         */\n        this.range = null;\n\n        /**\n         * Current state of fragment\n         * @public\n         */\n        this.state = null;\n    }\n}\n\nexport default SchedulingInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RequestsQueue {\n    /**\n     * @description This Object holds reference to Fragment Model's request queues\n     */\n    constructor() {\n\n        /**\n         * Array of all of the requests that have begun to load\n         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.\n         * @public\n         */\n        this.loadingRequests = [];\n        /**\n         * Array of the The requests that have completed\n         * @public\n         */\n        this.executedRequests = [];\n    }\n}\n\nexport default RequestsQueue;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport MetricsList from '../vo/MetricsList';\nimport {HTTPRequest, HTTPRequestTrace} from '../vo/metrics/HTTPRequest';\nimport TrackSwitch from '../vo/metrics/RepresentationSwitch';\nimport BufferLevel from '../vo/metrics/BufferLevel';\nimport BufferState from '../vo/metrics/BufferState';\nimport DVRInfo from '../vo/metrics/DVRInfo';\nimport DroppedFrames from '../vo/metrics/DroppedFrames';\nimport {ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateRepresentationInfo} from '../vo/metrics/ManifestUpdate';\nimport SchedulingInfo from '../vo/metrics/SchedulingInfo';\nimport EventBus from '../../core/EventBus';\nimport RequestsQueue from '../vo/metrics/RequestsQueue';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction MetricsModel(config) {\n\n    config = config || {};\n\n    const settings = config.settings;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        streamMetrics;\n\n    function setup() {\n        streamMetrics = {};\n    }\n\n    function metricsChanged() {\n        eventBus.trigger(Events.METRICS_CHANGED);\n    }\n\n    function metricChanged(mediaType) {\n        eventBus.trigger(Events.METRIC_CHANGED, { mediaType: mediaType });\n        metricsChanged();\n    }\n\n    function metricUpdated(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_UPDATED, { mediaType: mediaType, metric: metricType, value: vo });\n        metricChanged(mediaType);\n    }\n\n    function metricAdded(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_ADDED, { mediaType: mediaType, metric: metricType, value: vo });\n        metricChanged(mediaType);\n    }\n\n    function clearCurrentMetricsForType(type) {\n        delete streamMetrics[type];\n        metricChanged(type);\n    }\n\n    function clearAllCurrentMetrics() {\n        streamMetrics = {};\n        metricsChanged();\n    }\n\n    function getMetricsFor(type, readOnly) {\n        let metrics = null;\n\n        if (!type) {\n            return metrics;\n        }\n\n        if (streamMetrics.hasOwnProperty(type)) {\n            metrics = streamMetrics[type];\n        } else if (!readOnly) {\n            metrics = new MetricsList();\n            streamMetrics[type] = metrics;\n        }\n\n        return metrics;\n    }\n\n    function pushMetrics(type, list, value) {\n        let metrics = getMetricsFor(type);\n        if (metrics !== null) {\n            metrics[list].push(value);\n            if (metrics[list].length > settings.get().streaming.metrics.maxListDepth) {\n                metrics[list].shift();\n            }\n        }\n    }\n\n    function appendHttpTrace(httpRequest, s, d, b) {\n        let vo = new HTTPRequestTrace();\n\n        vo.s = s;\n        vo.d = d;\n        vo.b = b;\n\n        httpRequest.trace.push(vo);\n\n        if (!httpRequest.interval) {\n            httpRequest.interval = 0;\n        }\n\n        httpRequest.interval += d;\n\n        return vo;\n    }\n\n    function addHttpRequest(mediaType, tcpid, type, url, quality, actualurl, serviceLocation, range, trequest, tresponse, tfinish, responsecode, mediaduration, responseHeaders, traces, fileLoaderType, cmsd) {\n        let vo = new HTTPRequest();\n\n        // ISO 23009-1 D.4.3 NOTE 2:\n        // All entries for a given object will have the same URL and range\n        // and so can easily be correlated. If there were redirects or\n        // failures there will be one entry for each redirect/failure.\n        // The redirect-to URL or alternative url (where multiple have been\n        // provided in the MPD) will appear as the actualurl of the next\n        // entry with the same url value.\n        if (actualurl && (actualurl !== url)) {\n\n            // given the above, add an entry for the original request\n            addHttpRequest(\n                mediaType,\n                null,\n                type,\n                url,\n                quality,\n                null,\n                null,\n                range,\n                trequest,\n                null, // unknown\n                null, // unknown\n                null, // unknown, probably a 302\n                mediaduration,\n                null,\n                null,\n                fileLoaderType,\n                cmsd\n            );\n\n            vo.actualurl = actualurl;\n        }\n\n        vo.tcpid = tcpid;\n        vo.type = type;\n        vo.url = url;\n        vo.range = range;\n        vo.trequest = trequest;\n        vo.tresponse = tresponse;\n        vo.responsecode = responsecode;\n        vo.cmsd = cmsd;\n\n        vo._tfinish = tfinish;\n        vo._stream = mediaType;\n        vo._mediaduration = mediaduration;\n        vo._quality = quality;\n        vo._responseHeaders = responseHeaders;\n        vo._serviceLocation = serviceLocation;\n        vo._fileLoaderType = fileLoaderType;\n\n        if (traces) {\n            traces.forEach(trace => {\n                appendHttpTrace(vo, trace.s, trace.d, trace.b);\n            });\n        } else {\n            // The interval and trace shall be absent for redirect and failure records.\n            delete vo.interval;\n            delete vo.trace;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.HTTP_REQUEST, vo);\n    }\n\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        let vo = new TrackSwitch();\n\n        vo.t = t;\n        vo.mt = mt;\n        vo.to = to;\n\n        if (lto) {\n            vo.lto = lto;\n        } else {\n            delete vo.lto;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.TRACK_SWITCH, vo);\n    }\n\n    function pushAndNotify(mediaType, metricType, metricObject) {\n        pushMetrics(mediaType, metricType, metricObject);\n        metricAdded(mediaType, metricType, metricObject);\n    }\n\n    function addBufferLevel(mediaType, t, level) {\n        let vo = new BufferLevel();\n        vo.t = t;\n        vo.level = level;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_LEVEL, vo);\n    }\n\n    function addBufferState(mediaType, state, target) {\n        let vo = new BufferState();\n        vo.target = target;\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_STATE, vo);\n    }\n\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        let vo = new DVRInfo();\n        vo.time = currentTime;\n        vo.range = range;\n        vo.manifestInfo = mpd;\n\n        pushAndNotify(mediaType, MetricsConstants.DVR_INFO, vo);\n    }\n\n    function addDroppedFrames(mediaType, quality) {\n        let vo = new DroppedFrames();\n        let list = getMetricsFor(mediaType).DroppedFrames;\n\n        if (!quality) {\n            return;\n        }\n\n        vo.time = quality.creationTime;\n        vo.droppedFrames = quality.droppedVideoFrames;\n\n        if (list.length > 0 && list[list.length - 1] == vo) {\n            return;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.DROPPED_FRAMES, vo);\n    }\n\n    function addSchedulingInfo(mediaType, t, type, startTime, availabilityStartTime, duration, quality, range, state) {\n        let vo = new SchedulingInfo();\n\n        vo.mediaType = mediaType;\n        vo.t = t;\n\n        vo.type = type;\n        vo.startTime = startTime;\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.duration = duration;\n        vo.quality = quality;\n        vo.range = range;\n\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.SCHEDULING_INFO, vo);\n    }\n\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        let vo = new RequestsQueue();\n\n        vo.loadingRequests = loadingRequests;\n        vo.executedRequests = executedRequests;\n\n        getMetricsFor(mediaType).RequestsQueue = vo;\n        metricAdded(mediaType, MetricsConstants.REQUESTS_QUEUE, vo);\n    }\n\n    function addManifestUpdate(mediaType, type, requestTime, fetchTime, availabilityStartTime, presentationStartTime, clientTimeOffset, currentTime, buffered, latency) {\n        let vo = new ManifestUpdate();\n\n        vo.mediaType = mediaType;\n        vo.type = type;\n        vo.requestTime = requestTime; // when this manifest update was requested\n        vo.fetchTime = fetchTime; // when this manifest update was received\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.presentationStartTime = presentationStartTime; // the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n        vo.clientTimeOffset = clientTimeOffset; // the calculated difference between the server and client wall clock time\n        vo.currentTime = currentTime; // actual element.currentTime\n        vo.buffered = buffered; // actual element.ranges\n        vo.latency = latency; // (static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - currentTime)\n\n        pushMetrics(Constants.STREAM, MetricsConstants.MANIFEST_UPDATE, vo);\n        metricAdded(mediaType, MetricsConstants.MANIFEST_UPDATE, vo);\n    }\n\n    function updateManifestUpdateInfo(manifestUpdate, updatedFields) {\n        if (manifestUpdate) {\n            for (let field in updatedFields) {\n                manifestUpdate[field] = updatedFields[field];\n            }\n\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateStreamInfo(manifestUpdate, id, index, start, duration) {\n        if (manifestUpdate) {\n            let vo = new ManifestUpdateStreamInfo();\n\n            vo.id = id;\n            vo.index = index;\n            vo.start = start;\n            vo.duration = duration;\n\n            manifestUpdate.streamInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_STREAM_INFO, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateRepresentationInfo(manifestUpdate, id, index, streamIndex, mediaType, presentationTimeOffset, startNumber, fragmentInfoType) {\n        if (manifestUpdate && manifestUpdate.representationInfo) {\n\n            const vo = new ManifestUpdateRepresentationInfo();\n            vo.id = id;\n            vo.index = index;\n            vo.streamIndex = streamIndex;\n            vo.mediaType = mediaType;\n            vo.startNumber = startNumber;\n            vo.fragmentInfoType = fragmentInfoType;\n            vo.presentationTimeOffset = presentationTimeOffset;\n\n            manifestUpdate.representationInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_TRACK_INFO, manifestUpdate);\n        }\n    }\n\n    function addPlayList(vo) {\n        if (vo.trace && Array.isArray(vo.trace)) {\n            vo.trace.forEach(trace => {\n                if (trace.hasOwnProperty('subreplevel') && !trace.subreplevel) {\n                    delete trace.subreplevel;\n                }\n            });\n        } else {\n            delete vo.trace;\n        }\n\n        pushAndNotify(Constants.STREAM, MetricsConstants.PLAY_LIST, vo);\n    }\n\n    function addDVBErrors(vo) {\n        pushAndNotify(Constants.STREAM, MetricsConstants.DVB_ERRORS, vo);\n    }\n\n    instance = {\n        clearCurrentMetricsForType: clearCurrentMetricsForType,\n        clearAllCurrentMetrics: clearAllCurrentMetrics,\n        getMetricsFor: getMetricsFor,\n        addHttpRequest: addHttpRequest,\n        addRepresentationSwitch: addRepresentationSwitch,\n        addBufferLevel: addBufferLevel,\n        addBufferState: addBufferState,\n        addDVRInfo: addDVRInfo,\n        addDroppedFrames: addDroppedFrames,\n        addSchedulingInfo: addSchedulingInfo,\n        addRequestsQueue: addRequestsQueue,\n        addManifestUpdate: addManifestUpdate,\n        updateManifestUpdateInfo: updateManifestUpdateInfo,\n        addManifestUpdateStreamInfo: addManifestUpdateStreamInfo,\n        addManifestUpdateRepresentationInfo: addManifestUpdateRepresentationInfo,\n        addPlayList: addPlayList,\n        addDVBErrors: addDVBErrors\n    };\n\n    setup();\n    return instance;\n}\n\nMetricsModel.__dashjs_factory_name = 'MetricsModel';\nexport default FactoryMaker.getSingletonFactory(MetricsModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../streaming/constants/Constants';\nimport { HTTPRequest } from '../streaming/vo/metrics/HTTPRequest';\nimport FactoryMaker from '../core/FactoryMaker';\nimport MetricsConstants from '../streaming/constants/MetricsConstants';\nimport Round10 from './utils/Round10';\nimport MetricsModel from '../streaming/models/MetricsModel';\nimport Utils from '../core/Utils';\nimport {\n    PlayList,\n    PlayListTrace\n} from '../streaming/vo/metrics/PlayList';\n\n/**\n * @module DashMetrics\n * @description The DashMetrics module can be accessed using the MediaPlayer API getDashMetrics()\n * @param {object} config\n */\n\nfunction DashMetrics(config) {\n\n    config = config || {};\n\n    const context = this.context;\n    let instance,\n        playListTraceMetricsClosed,\n        playListTraceMetrics,\n        playListMetrics;\n\n    let metricsModel = config.metricsModel;\n\n    function setup() {\n        metricsModel = metricsModel || MetricsModel(context).getInstance({settings: config.settings});\n        resetInitialSettings();\n    }\n\n    function resetInitialSettings() {\n        playListTraceMetricsClosed = true;\n        playListTraceMetrics = null;\n        playListMetrics = null;\n    }\n\n    /**\n     * Returns the latest Representation switch for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentRepresentationSwitch(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.TRACK_SWITCH);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Date} t time of the switch event\n     * @param {Date} mt media presentation time\n     * @param {string} to id of representation\n     * @param {string} lto if present, subrepresentation reference\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        metricsModel.addRepresentationSwitch(mediaType, t, mt, to, lto);\n    }\n\n    /**\n     * Returns the current buffer state for a given media type\n     * @param {MediaType} mediaType\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferState(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.BUFFER_STATE);\n    }\n\n    /**\n     * Returns the current buffer level for a given media type\n     * @param {MediaType} mediaType\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferLevel(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        const metric = getCurrent(metrics, MetricsConstants.BUFFER_LEVEL);\n\n        if (metric) {\n            return Round10.round10(metric.level / 1000, -3);\n        }\n\n        return 0;\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {number} t\n     * @param {number} level\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addBufferLevel(mediaType, t, level) {\n        metricsModel.addBufferLevel(mediaType, t, level);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {string} state\n     * @param {number} target\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addBufferState(mediaType, state, target) {\n        metricsModel.addBufferState(mediaType, state, target);\n    }\n\n    /**\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function clearAllCurrentMetrics () {\n        metricsModel.clearAllCurrentMetrics();\n    }\n\n    /**\n     * Returns the latest HTTP request for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentHttpRequest(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n\n        if (!metrics) {\n            return null;\n        }\n\n        const httpList = metrics.HttpList;\n        let currentHttpList = null;\n\n        let httpListLastIndex;\n\n        if (!httpList || httpList.length <= 0) {\n            return null;\n        }\n\n        httpListLastIndex = httpList.length - 1;\n\n        while (httpListLastIndex >= 0) {\n            if (httpList[httpListLastIndex].responsecode) {\n                currentHttpList = httpList[httpListLastIndex];\n                break;\n            }\n            httpListLastIndex--;\n        }\n        return currentHttpList;\n    }\n\n    /**\n     * Returns all HTTP requests for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getHttpRequests(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        if (!metrics) {\n            return [];\n        }\n\n        return !!metrics.HttpList ? metrics.HttpList : [];\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Array} loadingRequests\n     * @param {Array} executedRequests\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        metricsModel.addRequestsQueue(mediaType, loadingRequests, executedRequests);\n    }\n\n    /**\n     * Returns the latest metrics for a given metric list and specific metric name\n     * @param {MetricsList} metrics\n     * @param {string} metricName\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrent(metrics, metricName) {\n        if (!metrics) {\n            return null;\n        }\n        const list = metrics[metricName];\n        return (!list || list.length === 0) ? null : list[list.length - 1];\n    }\n\n    /**\n     * Returns the number of dropped frames\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDroppedFrames() {\n        const metrics = metricsModel.getMetricsFor(Constants.VIDEO, true);\n        return getCurrent(metrics, MetricsConstants.DROPPED_FRAMES);\n    }\n\n    /**\n     * @param {number} quality\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDroppedFrames(quality) {\n        metricsModel.addDroppedFrames(Constants.VIDEO, quality);\n    }\n\n    /**\n     * Returns the current scheduling info for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentSchedulingInfo(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.SCHEDULING_INFO);\n    }\n\n    /**\n     * @param {object} request\n     * @param {string} state\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addSchedulingInfo(request, state) {\n        metricsModel.addSchedulingInfo(\n            request.mediaType,\n            new Date(),\n            request.type,\n            request.startTime,\n            request.availabilityStartTime,\n            request.duration,\n            request.quality,\n            request.range,\n            state);\n    }\n\n    /**\n     * Returns the current manifest update information\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentManifestUpdate() {\n        const streamMetrics = metricsModel.getMetricsFor(Constants.STREAM);\n        return getCurrent(streamMetrics, MetricsConstants.MANIFEST_UPDATE);\n    }\n\n    /**\n     * @param {object} updatedFields fields to be updated\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function updateManifestUpdateInfo(updatedFields) {\n        const manifestUpdate = this.getCurrentManifestUpdate();\n        metricsModel.updateManifestUpdateInfo(manifestUpdate, updatedFields);\n    }\n\n    /**\n     * @param {object} streamInfo\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdateStreamInfo(streamInfo) {\n        if (streamInfo) {\n            const manifestUpdate = this.getCurrentManifestUpdate();\n            metricsModel.addManifestUpdateStreamInfo(manifestUpdate, streamInfo.id, streamInfo.index, streamInfo.start, streamInfo.duration);\n        }\n    }\n\n    /**\n     * @param {object} request\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdate(request) {\n        metricsModel.addManifestUpdate(Constants.STREAM, request.type, request.requestStartDate, request.requestEndDate);\n    }\n\n    /**\n     * @param {object} request\n     * @param {string} responseURL\n     * @param {number} responseStatus\n     * @param {object} responseHeaders\n     * @param {object} traces\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addHttpRequest(request, responseURL, responseStatus, responseHeaders, traces, cmsd) {\n        metricsModel.addHttpRequest(request.mediaType,\n            null,\n            request.type,\n            request.url,\n            request.quality,\n            responseURL,\n            request.serviceLocation || null,\n            request.range || null,\n            request.requestStartDate,\n            request.firstByteDate,\n            request.requestEndDate,\n            responseStatus,\n            request.duration,\n            responseHeaders,\n            traces,\n            request.fileLoaderType,\n            cmsd);\n    }\n\n    /**\n     * @param {object} representation\n     * @param {MediaType} mediaType\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdateRepresentationInfo(representation, mediaType) {\n        if (representation) {\n            const manifestUpdateInfo = this.getCurrentManifestUpdate();\n            metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo, representation.id, representation.index, representation.streamIndex, mediaType, representation.presentationTimeOffset, representation.startNumber, representation.fragmentInfoType);\n        }\n    }\n\n    /**\n     * Returns the current DVR window\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDVRInfo(mediaType) {\n        const metrics = mediaType ? metricsModel.getMetricsFor(mediaType, true) :\n            metricsModel.getMetricsFor(Constants.VIDEO, true) || metricsModel.getMetricsFor(Constants.AUDIO, true);\n        return getCurrent(metrics, MetricsConstants.DVR_INFO);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Date} currentTime time of the switch event\n     * @param {object} mpd mpd reference\n     * @param {object} range range of the dvr info\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        metricsModel.addDVRInfo(mediaType, currentTime, mpd, range);\n    }\n\n    /**\n     * Returns the value for a specific request headers used in the latest MPD request\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestMPDRequestHeaderValueByID(id) {\n        if (!id) {\n            return null;\n        }\n\n        let headers = {};\n        let httpRequestList,\n            httpRequest,\n            i;\n\n        httpRequestList = getHttpRequests(Constants.STREAM);\n\n        for (i = httpRequestList.length - 1; i >= 0; i--) {\n            httpRequest = httpRequestList[i];\n\n            if (httpRequest.type === HTTPRequest.MPD_TYPE) {\n                headers = Utils.parseHttpHeaders(httpRequest._responseHeaders);\n                break;\n            }\n        }\n\n        const value = headers[id.toLowerCase()];\n        return value === undefined ? null : value;\n    }\n\n    /**\n     * Returns the value for a specific request headers used in the latest fragment request\n     * @param {MediaType} mediaType\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestFragmentRequestHeaderValueByID(mediaType, id) {\n        if (!id) {\n            return null;\n        }\n\n        let headers = {};\n        let httpRequest = getCurrentHttpRequest(mediaType);\n        if (httpRequest) {\n            headers = Utils.parseHttpHeaders(httpRequest._responseHeaders);\n        }\n\n        const value = headers[id.toLowerCase()];\n        return value === undefined ? null : value;\n    }\n\n    /**\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addPlayList() {\n        if (playListMetrics) {\n            metricsModel.addPlayList(playListMetrics);\n            playListMetrics = null;\n        }\n    }\n\n    /**\n     * Create a new playlist metric\n     * @param {number} mediaStartTime\n     * @param {string} startReason\n     * @ignore\n     */\n    function createPlaylistMetrics(mediaStartTime, startReason) {\n        playListMetrics = new PlayList();\n\n        playListMetrics.start = new Date();\n        playListMetrics.mstart = mediaStartTime;\n        playListMetrics.starttype = startReason;\n    }\n\n    /**\n     * Create a playlist trace metric\n     * @param {number} representationId\n     * @param {number} mediaStartTime\n     * @param {number} speed\n     * @ignore\n     */\n    function createPlaylistTraceMetrics(representationId, mediaStartTime, speed) {\n        if (playListTraceMetricsClosed === true ) {\n            playListTraceMetricsClosed = false;\n            playListTraceMetrics = new PlayListTrace();\n\n            playListTraceMetrics.representationid = representationId;\n            playListTraceMetrics.start = new Date();\n            playListTraceMetrics.mstart = mediaStartTime;\n            playListTraceMetrics.playbackspeed = speed !== null ? speed.toString() : null;\n        }\n    }\n\n    /**\n     * Update existing playlist trace metric\n     * @param {object} traceToUpdate\n     * @ignore\n     */\n    function updatePlayListTraceMetrics(traceToUpdate) {\n        if (playListTraceMetrics) {\n            for (let field in playListTraceMetrics) {\n                playListTraceMetrics[field] = traceToUpdate[field];\n            }\n        }\n    }\n\n    /**\n     * Push a new playlist trace metric\n     * @param endTime\n     * @param reason\n     * @ignore\n     */\n    function pushPlayListTraceMetrics(endTime, reason) {\n        if (playListTraceMetricsClosed === false && playListMetrics && playListTraceMetrics && playListTraceMetrics.start) {\n            const startTime = playListTraceMetrics.start;\n            const duration = endTime.getTime() - startTime.getTime();\n            playListTraceMetrics.duration = duration;\n            playListTraceMetrics.stopreason = reason;\n            playListMetrics.trace.push(playListTraceMetrics);\n            playListTraceMetricsClosed = true;\n        }\n    }\n\n    /**\n     * @param {object} errors\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDVBErrors(errors) {\n        metricsModel.addDVBErrors(errors);\n    }\n\n    instance = {\n        getCurrentRepresentationSwitch,\n        getCurrentBufferState,\n        getCurrentBufferLevel,\n        getCurrentHttpRequest,\n        getHttpRequests,\n        getCurrentDroppedFrames,\n        getCurrentSchedulingInfo,\n        getCurrentDVRInfo,\n        getCurrentManifestUpdate,\n        getLatestFragmentRequestHeaderValueByID,\n        getLatestMPDRequestHeaderValueByID,\n        addRepresentationSwitch,\n        addDVRInfo,\n        updateManifestUpdateInfo,\n        addManifestUpdateStreamInfo,\n        addManifestUpdateRepresentationInfo,\n        addManifestUpdate,\n        addHttpRequest,\n        addSchedulingInfo,\n        addRequestsQueue,\n        addBufferLevel,\n        addBufferState,\n        addDroppedFrames,\n        addPlayList,\n        addDVBErrors,\n        createPlaylistMetrics,\n        createPlaylistTraceMetrics,\n        updatePlayListTraceMetrics,\n        pushPlayListTraceMetrics,\n        clearAllCurrentMetrics\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashMetrics.__dashjs_factory_name = 'DashMetrics';\nexport default FactoryMaker.getSingletonFactory(DashMetrics);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport DashConstants from '../constants/DashConstants';\nimport DashManifestModel from '../models/DashManifestModel';\nimport Settings from '../../core/Settings';\nimport Constants from '../../streaming/constants/Constants';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport ConformanceViolationConstants from '../../streaming/constants/ConformanceViolationConstants';\n\nfunction TimelineConverter() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        dashManifestModel,\n        timelineAnchorAvailabilityOffset, // In case we calculate the TSBD using _calcTimeShiftBufferWindowForDynamicTimelineManifest we use the segments as anchor times. We apply this offset when calculating if a segment is available or not.\n        clientServerTimeShift;\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n        reset();\n    }\n\n    function initialize() {\n        resetInitialSettings();\n        eventBus.on(Events.UPDATE_TIME_SYNC_OFFSET, _onUpdateTimeSyncOffset, this);\n    }\n\n    function getClientTimeOffset() {\n        return clientServerTimeShift;\n    }\n\n    function setClientTimeOffset(value) {\n        clientServerTimeShift = value;\n    }\n\n    /**\n     * Returns a \"now\" reference time for the client to compare the availability time of a segment against.\n     * Takes the client/server drift into account\n     */\n    function getClientReferenceTime() {\n        return Date.now() - (timelineAnchorAvailabilityOffset * 1000) + (clientServerTimeShift * 1000);\n    }\n\n    function _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic, calculateAvailabilityEndTime) {\n        let availabilityTime;\n        let mpd = representation.adaptation.period.mpd;\n        const availabilityStartTime = mpd.availabilityStartTime;\n\n        if (calculateAvailabilityEndTime) {\n            //@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed\n            // to be available for a Media Presentation with type 'dynamic'.\n            // When not present, the value is infinite.\n            if (isDynamic && mpd.timeShiftBufferDepth !== Number.POSITIVE_INFINITY) {\n                // SAET = SAST + TSBD + seg@duration\n                availabilityTime = new Date(availabilityStartTime.getTime() + ((presentationEndTime + mpd.timeShiftBufferDepth) * 1000));\n            } else {\n                availabilityTime = mpd.availabilityEndTime;\n            }\n        } else {\n            if (isDynamic) {\n                // SAST = Period@start + seg@presentationStartTime + seg@duration\n                // ASAST = SAST - ATO\n                const availabilityTimeOffset = representation.availabilityTimeOffset;\n                // presentationEndTime = Period@start + seg@presentationStartTime + Segment@duration\n                availabilityTime = new Date(availabilityStartTime.getTime() + (presentationEndTime - availabilityTimeOffset) * 1000);\n            } else {\n                // in static mpd, all segments are available at the same time\n                availabilityTime = availabilityStartTime;\n            }\n        }\n\n        return availabilityTime;\n    }\n\n    function calcAvailabilityStartTimeFromPresentationTime(presentationEndTime, representation, isDynamic) {\n        return _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic);\n    }\n\n    function calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation, isDynamic) {\n        return _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic, true);\n    }\n\n    function calcPresentationTimeFromWallTime(wallTime, period) {\n        return ((wallTime.getTime() - period.mpd.availabilityStartTime.getTime() + clientServerTimeShift * 1000) / 1000);\n    }\n\n    function calcPresentationTimeFromMediaTime(mediaTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return mediaTime + (periodStart - presentationOffset);\n    }\n\n    function calcMediaTimeFromPresentationTime(presentationTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return presentationTime - periodStart + presentationOffset;\n    }\n\n    function calcWallTimeForSegment(segment, isDynamic) {\n        let suggestedPresentationDelay,\n            displayStartTime,\n            wallTime;\n\n        if (isDynamic) {\n            suggestedPresentationDelay = segment.representation.adaptation.period.mpd.suggestedPresentationDelay;\n            displayStartTime = segment.presentationStartTime + suggestedPresentationDelay;\n            wallTime = new Date(segment.availabilityStartTime.getTime() + (displayStartTime * 1000));\n        }\n\n        return wallTime;\n    }\n\n    /**\n     * Calculates the timeshiftbuffer range. This range might overlap multiple periods and is not limited to period boundaries. However, we make sure that the range is potentially covered by period.\n     * @param {Array} streams\n     * @param {boolean} isDynamic\n     * @return {}\n     */\n    function calcTimeShiftBufferWindow(streams, isDynamic) {\n        // Static manifests. The availability window is equal to the DVR window\n        if (!isDynamic) {\n            return _calcTimeshiftBufferForStaticManifest(streams);\n        }\n\n        // Specific use case of SegmentTimeline\n        if (settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline) {\n            const data = _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams);\n            _adjustTimelineAnchorAvailabilityOffset(data.now, data.range);\n\n            return data.range;\n        }\n\n        return _calcTimeShiftBufferWindowForDynamicManifest(streams);\n    }\n\n    function _calcTimeshiftBufferForStaticManifest(streams) {\n        // Static Range Finder. We iterate over all periods and return the total duration\n        const range = { start: NaN, end: NaN };\n        let duration = 0;\n        let start = NaN;\n        streams.forEach((stream) => {\n            const streamInfo = stream.getStreamInfo();\n            duration += streamInfo.duration;\n\n            if (isNaN(start) || streamInfo.start < start) {\n                start = streamInfo.start;\n            }\n        });\n\n        range.start = start;\n        range.end = start + duration;\n\n        return range;\n    }\n\n    function _calcTimeShiftBufferWindowForDynamicManifest(streams) {\n        const range = { start: NaN, end: NaN };\n\n        if (!streams || streams.length === 0) {\n            return range;\n        }\n\n        const voPeriod = streams[0].getAdapter().getRegularPeriods()[0];\n        const now = calcPresentationTimeFromWallTime(new Date(), voPeriod);\n        const timeShiftBufferDepth = voPeriod.mpd.timeShiftBufferDepth;\n        const start = !isNaN(timeShiftBufferDepth) ? now - timeShiftBufferDepth : 0;\n        // check if we find a suitable period for that starttime. Otherwise we use the time closest to that\n        range.start = _adjustTimeBasedOnPeriodRanges(streams, start);\n        range.end = !isNaN(range.start) && now < range.start ? now : _adjustTimeBasedOnPeriodRanges(streams, now, true);\n\n        if (!isNaN(timeShiftBufferDepth) && range.end < now - timeShiftBufferDepth) {\n            range.end = NaN;\n        }\n\n        // If we have SegmentTimeline as a reference we can verify that the calculated DVR window is at least partially included in the DVR window exposed by the timeline.\n        // If that is not the case we stick to the DVR window defined by SegmentTimeline\n        if (settings.get().streaming.timeShiftBuffer.fallbackToSegmentTimeline) {\n            const timelineRefData = _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams);\n            if (timelineRefData.range.end < range.start) {\n                eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                    level: ConformanceViolationConstants.LEVELS.WARNING,\n                    event: ConformanceViolationConstants.EVENTS.INVALID_DVR_WINDOW\n                });\n                _adjustTimelineAnchorAvailabilityOffset(timelineRefData.now, timelineRefData.range);\n                return timelineRefData.range;\n            }\n        }\n\n        return range;\n    }\n\n    function _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams) {\n        const range = { start: NaN, end: NaN };\n        const voPeriod = streams[0].getAdapter().getRegularPeriods()[0];\n        const now = calcPresentationTimeFromWallTime(new Date(), voPeriod);\n        \n        if (!streams || streams.length === 0) {\n            return { range, now };\n        }\n\n        streams.forEach((stream) => {\n            const adapter = stream.getAdapter();\n            const mediaInfo = adapter.getMediaInfoForType(stream.getStreamInfo(), Constants.VIDEO) || adapter.getMediaInfoForType(stream.getStreamInfo(), Constants.AUDIO);\n            const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n            const voRepresentation = voRepresentations[0];\n            let periodRange = { start: NaN, end: NaN };\n\n            if (voRepresentation) {\n                if (voRepresentation.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                    periodRange = _calcRangeForTimeline(voRepresentation);\n                } else {\n                    const currentVoPeriod = voRepresentation.adaptation.period;\n                    periodRange.start = currentVoPeriod.start;\n                    periodRange.end = Math.max(now, currentVoPeriod.start + currentVoPeriod.duration);\n                }\n            }\n\n            if (!isNaN(periodRange.start) && (isNaN(range.start) || range.start > periodRange.start)) {\n                range.start = periodRange.start;\n            }\n            if (!isNaN(periodRange.end) && (isNaN(range.end) || range.end < periodRange.end)) {\n                range.end = periodRange.end;\n            }\n        });\n\n\n        range.end = Math.min(now, range.end);\n        const adjustedEndTime = _adjustTimeBasedOnPeriodRanges(streams, range.end, true);\n\n        // if range is NaN all periods are in the future. we should return range.start > range.end in this case\n        range.end = isNaN(adjustedEndTime) ? range.end : adjustedEndTime;\n\n        range.start = voPeriod && voPeriod.mpd && voPeriod.mpd.timeShiftBufferDepth && !isNaN(voPeriod.mpd.timeShiftBufferDepth) && !isNaN(range.end) ? Math.max(range.end - voPeriod.mpd.timeShiftBufferDepth, range.start) : range.start;\n        range.start = _adjustTimeBasedOnPeriodRanges(streams, range.start);\n\n        return { range, now };\n    }\n\n    function _adjustTimelineAnchorAvailabilityOffset(now, range) {\n        timelineAnchorAvailabilityOffset = now - range.end;\n    }\n\n    function _adjustTimeBasedOnPeriodRanges(streams, time, isEndOfDvrWindow = false) {\n        try {\n            let i = 0;\n            let found = false;\n            let adjustedTime = NaN;\n\n            while (!found && i < streams.length) {\n                const streamInfo = streams[i].getStreamInfo();\n\n                // We found a period which contains the target time.\n                if (streamInfo.start <= time && (!isFinite(streamInfo.duration) || (streamInfo.start + streamInfo.duration >= time))) {\n                    adjustedTime = time;\n                    found = true;\n                }\n\n                // Adjust the time for the start of the DVR window. The current period starts after the target time. We use the starttime of this period as adjusted time\n                else if (!isEndOfDvrWindow && (streamInfo.start > time && (isNaN(adjustedTime) || streamInfo.start < adjustedTime))) {\n                    adjustedTime = streamInfo.start;\n                }\n\n                // Adjust the time for the end of the DVR window. The current period ends before the targettime. We use the end time of this period as the adjusted time\n                else if (isEndOfDvrWindow && ((streamInfo.start + streamInfo.duration) < time && (isNaN(adjustedTime) || (streamInfo.start + streamInfo.duration > adjustedTime)))) {\n                    adjustedTime = streamInfo.start + streamInfo.duration;\n                }\n\n                i += 1;\n            }\n\n            return adjustedTime;\n        } catch (e) {\n            return time;\n        }\n    }\n\n    function _calcRangeForTimeline(voRepresentation) {\n        const adaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\n        const representation = dashManifestModel.getRepresentationFor(voRepresentation.index, adaptation);\n        const base = representation.SegmentTemplate || representation.SegmentList;\n        const timeline = base.SegmentTimeline;\n        const timescale = base.timescale;\n        const segments = timeline.S_asArray;\n        const range = { start: 0, end: 0 };\n        const segmentTime = segments[0].t;\n        const hasValidSegmentTime = !isNaN(segmentTime);\n        const enhancedSegmentTime = hasValidSegmentTime ? segmentTime : 0;\n        let d = 0;\n        let segment,\n            repeat,\n            i,\n            len;\n        \n        if(hasValidSegmentTime) {\n            range.start = calcPresentationTimeFromMediaTime(enhancedSegmentTime / timescale, voRepresentation);\n        }\n        \n        for (i = 0, len = segments.length; i < len; i++) {\n            segment = segments[i];\n            repeat = 0;\n            if (segment.hasOwnProperty('r')) {\n                repeat = segment.r;\n            }\n            d += segment.d * (1 + repeat);\n        }\n\n        range.end = calcPresentationTimeFromMediaTime((enhancedSegmentTime + d) / timescale, voRepresentation);\n\n        return range;\n    }\n\n    function calcPeriodRelativeTimeFromMpdRelativeTime(representation, mpdRelativeTime) {\n        const periodStartTime = representation.adaptation.period.start;\n        return mpdRelativeTime - periodStartTime;\n    }\n\n    function _onUpdateTimeSyncOffset(e) {\n        if (e.offset !== undefined && !isNaN(e.offset)) {\n            setClientTimeOffset(e.offset / 1000);\n        }\n    }\n\n    function resetInitialSettings() {\n        clientServerTimeShift = 0;\n        timelineAnchorAvailabilityOffset = 0;\n    }\n\n    function reset() {\n        eventBus.off(Events.UPDATE_TIME_SYNC_OFFSET, _onUpdateTimeSyncOffset, this);\n        resetInitialSettings();\n    }\n\n    instance = {\n        initialize,\n        getClientTimeOffset,\n        setClientTimeOffset,\n        getClientReferenceTime,\n        calcAvailabilityStartTimeFromPresentationTime,\n        calcAvailabilityEndTimeFromPresentationTime,\n        calcPresentationTimeFromWallTime,\n        calcPresentationTimeFromMediaTime,\n        calcPeriodRelativeTimeFromMpdRelativeTime,\n        calcMediaTimeFromPresentationTime,\n        calcWallTimeForSegment,\n        calcTimeShiftBufferWindow,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nTimelineConverter.__dashjs_factory_name = 'TimelineConverter';\nexport default FactoryMaker.getSingletonFactory(TimelineConverter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MediaInfo from './../../dash/vo/MediaInfo';\n\n/**\n * @class\n * @ignore\n */\nclass TextTrackInfo extends MediaInfo {\n    constructor () {\n        super();\n        this.captionData = null;\n        this.label = null;\n        this.defaultTrack = false;\n        this.kind = null;\n        this.isFragmented = false;\n        this.isEmbedded = false;\n        this.isTTML = null;\n    }\n}\n\nexport default TextTrackInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/, '').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = { start: startTime, end: endTime, spans: [] };\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({\n                type: 'html',\n                start: startTime,\n                end: endTime,\n                cueHTMLElement: finalDiv,\n                cueID: cueID,\n                cellResolution: [32, 15],\n                isFromCEA608: true,\n                fontSize: fontSize,\n                lineHeight: {},\n                linePadding: {}\n            });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport TextTrackInfo from '../vo/TextTrackInfo';\nimport BoxParser from '../utils/BoxParser';\nimport CustomTimeRanges from '../utils/CustomTimeRanges';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EmbeddedTextHtmlRender from './EmbeddedTextHtmlRender';\nimport ISOBoxer from 'codem-isoboxer';\nimport cea608parser from '../../../externals/cea608-parser';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport DashJSError from '../vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\n\nfunction TextSourceBuffer(config) {\n    const errHandler = config.errHandler;\n    const manifestModel = config.manifestModel;\n    const mediaController = config.mediaController;\n    const videoModel = config.videoModel;\n    const textTracks = config.textTracks;\n    const vttParser = config.vttParser;\n    const vttCustomRenderingParser = config.vttCustomRenderingParser;\n    const ttmlParser = config.ttmlParser;\n    const streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let embeddedInitialized = false;\n\n    let instance,\n        logger,\n        boxParser,\n        parser,\n        mediaInfos,\n        fragmentModel,\n        initializationSegmentReceived,\n        timescale,\n        fragmentedTracks,\n        firstFragmentedSubtitleStart,\n        currFragmentedTrackIdx,\n        embeddedTracks,\n        embeddedTimescale,\n        embeddedLastSequenceNumber,\n        embeddedCea608FieldParsers,\n        embeddedTextHtmlRender;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        boxParser = BoxParser(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function _resetFragmented() {\n        fragmentModel = null;\n        timescale = NaN;\n        fragmentedTracks = [];\n        firstFragmentedSubtitleStart = null;\n        initializationSegmentReceived = false;\n    }\n\n    function resetInitialSettings() {\n        _resetFragmented();\n\n        mediaInfos = [];\n        parser = null;\n    }\n\n    function initialize() {\n\n        if (!embeddedInitialized) {\n            _initEmbedded();\n        }\n\n    }\n\n    /**\n     * There might be media infos of different types. For instance text and fragmentedText.\n     * @param {string} type\n     * @param {array} mInfos\n     * @param {object} fModel\n     */\n    function addMediaInfos(type, mInfos, fModel) {\n\n        mediaInfos = mediaInfos.concat(mInfos);\n\n        if (type === Constants.TEXT && mInfos[0].isFragmented && !mInfos[0].isEmbedded) {\n            fragmentModel = fModel;\n            instance.buffered = CustomTimeRanges(context).create();\n            fragmentedTracks = mediaController.getTracksFor(Constants.TEXT, streamInfo.id).filter(track => track.isFragmented);\n            const currFragTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamInfo.id);\n            for (let i = 0; i < fragmentedTracks.length; i++) {\n                if (fragmentedTracks[i] === currFragTrack) {\n                    setCurrentFragmentedTrackIdx(i);\n                    break;\n                }\n            }\n        }\n\n        for (let i = 0; i < mInfos.length; i++) {\n            _createTextTrackFromMediaInfo(mInfos[i]);\n        }\n\n    }\n\n    /**\n     * Create a new track based on the mediaInfo information\n     * @param {object} mediaInfo\n     * @private\n     */\n    function _createTextTrackFromMediaInfo(mediaInfo) {\n        const textTrackInfo = new TextTrackInfo();\n        const trackKindMap = { subtitle: 'subtitles', caption: 'captions' }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\n\n        for (let key in mediaInfo) {\n            textTrackInfo[key] = mediaInfo[key];\n        }\n\n        textTrackInfo.labels = mediaInfo.labels;\n        textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\n        textTrackInfo.isFragmented = mediaInfo.isFragmented;\n        textTrackInfo.isEmbedded = !!mediaInfo.isEmbedded;\n        textTrackInfo.isTTML = _checkTtml(mediaInfo);\n        textTrackInfo.kind = _getKind(mediaInfo, trackKindMap);\n\n        textTracks.addTextTrack(textTrackInfo);\n    }\n\n    function abort() {\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        mediaInfos = [];\n        boxParser = null;\n    }\n\n    function _onVideoChunkReceived(e) {\n        const chunk = e.chunk;\n\n        if (chunk.mediaInfo.embeddedCaptions) {\n            append(chunk.bytes, chunk);\n        }\n    }\n\n    function _initEmbedded() {\n        embeddedTracks = [];\n        currFragmentedTrackIdx = null;\n        embeddedTimescale = 0;\n        embeddedCea608FieldParsers = [];\n        embeddedLastSequenceNumber = null;\n        embeddedInitialized = true;\n        embeddedTextHtmlRender = EmbeddedTextHtmlRender(context).getInstance();\n\n        eventBus.on(Events.VIDEO_CHUNK_RECEIVED, _onVideoChunkReceived, instance);\n        eventBus.on(Events.BUFFER_CLEARED, onVideoBufferCleared, instance);\n    }\n\n    function resetEmbedded() {\n        eventBus.off(Events.VIDEO_CHUNK_RECEIVED, _onVideoChunkReceived, instance);\n        eventBus.off(Events.BUFFER_CLEARED, onVideoBufferCleared, instance);\n        if (textTracks) {\n            textTracks.deleteAllTextTracks();\n        }\n        embeddedInitialized = false;\n        embeddedTracks = [];\n        embeddedCea608FieldParsers = [null, null];\n        embeddedLastSequenceNumber = null;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n\n        if (!embeddedInitialized) {\n            return;\n        }\n\n        if (mediaInfo) {\n            if (mediaInfo.id === Constants.CC1 || mediaInfo.id === Constants.CC3) {\n                for (let i = 0; i < embeddedTracks.length; i++) {\n                    if (embeddedTracks[i].id === mediaInfo.id) {\n                        return;\n                    }\n                }\n                embeddedTracks.push(mediaInfo);\n            } else {\n                logger.warn('Embedded track ' + mediaInfo.id + ' not supported!');\n            }\n        }\n    }\n\n    function getConfig() {\n        const config = {\n            fragmentModel: fragmentModel,\n            fragmentedTracks: fragmentedTracks,\n            videoModel: videoModel\n        };\n\n        return config;\n    }\n\n    function setCurrentFragmentedTrackIdx(idx) {\n        currFragmentedTrackIdx = idx;\n    }\n\n    function _checkTtml(mediaInfo) {\n        return (mediaInfo.codec && mediaInfo.codec.search(Constants.STPP) >= 0) || (mediaInfo.mimeType && mediaInfo.mimeType.search(Constants.TTML) >= 0);\n    }\n\n    function _getKind(mediaInfo, trackKindMap) {\n        let kind = (mediaInfo.roles && mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\n\n        kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\n\n        return kind;\n    }\n\n    function append(bytes, chunk) {\n        const mediaInfo = chunk.mediaInfo;\n        const mediaType = mediaInfo.type;\n        const mimeType = mediaInfo.mimeType;\n        const codecType = mediaInfo.codec || mimeType;\n\n        if (!codecType) {\n            logger.error('No text type defined');\n            return;\n        }\n\n        if (mediaInfo.codec.indexOf('application/mp4') !== -1) {\n            _appendFragmentedText(bytes, chunk, codecType);\n        } else if (mediaType === Constants.VIDEO) {\n            _appendEmbeddedText(bytes, chunk);\n        } else {\n            _appendText(bytes, chunk, codecType);\n        }\n    }\n\n    function _appendFragmentedText(bytes, chunk, codecType) {\n        let sampleList,\n            samplesInfo;\n\n        if (chunk.segmentType === 'InitializationSegment') {\n            initializationSegmentReceived = true;\n            timescale = boxParser.getMediaTimescaleFromMoov(bytes);\n        } else {\n            if (!initializationSegmentReceived) {\n                return;\n            }\n            samplesInfo = boxParser.getSamplesInfo(bytes);\n            sampleList = samplesInfo.sampleList;\n            if (sampleList.length > 0) {\n                firstFragmentedSubtitleStart = sampleList[0].cts - chunk.start * timescale;\n            }\n            if (codecType.search(Constants.STPP) >= 0) {\n                _appendFragmentedSttp(bytes, sampleList, codecType);\n            } else {\n                _appendFragmentedWebVtt(bytes, sampleList);\n            }\n        }\n    }\n\n    function _appendFragmentedSttp(bytes, sampleList, codecType) {\n        let i, j;\n\n        parser = parser !== null ? parser : _getParser(codecType);\n\n        for (i = 0; i < sampleList.length; i++) {\n            const sample = sampleList[i];\n            const sampleStart = sample.cts;\n            const timestampOffset = _getTimestampOffset();\n            const start = timestampOffset + sampleStart / timescale;\n            const end = start + sample.duration / timescale;\n            instance.buffered.add(start, end);\n            const dataView = new DataView(bytes, sample.offset, sample.subSizes[0]);\n            let ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n            const images = [];\n            let subOffset = sample.offset + sample.subSizes[0];\n\n            for (j = 1; j < sample.subSizes.length; j++) {\n                const inData = new Uint8Array(bytes, subOffset, sample.subSizes[j]);\n                const raw = String.fromCharCode.apply(null, inData);\n                images.push(raw);\n                subOffset += sample.subSizes[j];\n            }\n\n            try {\n                const manifest = manifestModel.getValue();\n\n                // Only used for Miscrosoft Smooth Streaming support - caption time is relative to sample time. In this case, we apply an offset.\n                const offsetTime = manifest.ttmlTimeIsRelative ? sampleStart / timescale : 0;\n\n                const result = parser.parse(ccContent, offsetTime, sampleStart / timescale, (sampleStart + sample.duration) / timescale, images);\n                textTracks.addCaptions(currFragmentedTrackIdx, timestampOffset, result);\n            } catch (e) {\n                fragmentModel.removeExecutedRequestsBeforeTime();\n                this.remove();\n                logger.error('TTML parser error: ' + e.message);\n            }\n        }\n    }\n\n    function _appendFragmentedWebVtt(bytes, sampleList) {\n        let i, j, k;\n\n        const captionArray = [];\n        for (i = 0; i < sampleList.length; i++) {\n            const sample = sampleList[i];\n            sample.cts -= firstFragmentedSubtitleStart;\n            const timestampOffset = _getTimestampOffset();\n            const start = timestampOffset + sample.cts / timescale;\n            const end = start + sample.duration / timescale;\n            instance.buffered.add(start, end);\n            const sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\n            // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\n            const sampleBoxes = ISOBoxer.parseBuffer(sampleData);\n\n            for (j = 0; j < sampleBoxes.boxes.length; j++) {\n                const box1 = sampleBoxes.boxes[j];\n                logger.debug('VTT box1: ' + box1.type);\n                if (box1.type === 'vtte') {\n                    continue; //Empty box\n                }\n                if (box1.type === 'vttc') {\n                    logger.debug('VTT vttc boxes.length = ' + box1.boxes.length);\n                    let entry = {\n                        styles: {}\n                    };\n                    for (k = 0; k < box1.boxes.length; k++) {\n                        const box2 = box1.boxes[k];\n                        logger.debug('VTT box2: ' + box2.type);\n\n                        // Mandatory cue payload lines\n                        if (box2.type === 'payl') {\n                            entry.start = sample.cts / timescale;\n                            entry.end = (sample.cts + sample.duration) / timescale;\n                            entry.data = box2.cue_text;\n                        }\n\n                        // The styling information\n                        else if (box2.type === 'sttg' && box2.settings && box2.settings !== '') {\n                            try {\n                                const stylings = box2.settings.split(' ');\n                                entry.styles = vttParser.getCaptionStyles(stylings);\n                            } catch (e) {\n\n                            }\n                        }\n                    }\n                    if (entry && entry.data) {\n                        captionArray.push(entry);\n                        logger.debug(`VTT  ${entry.start} - ${entry.end} :  ${entry.data}`);\n                    }\n                }\n            }\n        }\n        if (captionArray.length > 0) {\n            textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\n        }\n    }\n\n    function _appendText(bytes, chunk, codecType) {\n        let result,\n            ccContent;\n\n        const dataView = new DataView(bytes, 0, bytes.byteLength);\n        ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n\n        try {\n            result = _getParser(codecType).parse(ccContent, 0);\n            textTracks.addCaptions(textTracks.getCurrentTrackIdx(), 0, result);\n            if (instance.buffered) {\n                instance.buffered.add(chunk.start, chunk.end);\n            }\n        } catch (e) {\n            errHandler.error(new DashJSError(Errors.TIMED_TEXT_ERROR_ID_PARSE_CODE, Errors.TIMED_TEXT_ERROR_MESSAGE_PARSE + e.message, ccContent));\n        }\n    }\n\n    function _appendEmbeddedText(bytes, chunk) {\n        let i, samplesInfo;\n\n        // Init segment\n        if (chunk.segmentType === HTTPRequest.INIT_SEGMENT_TYPE) {\n            if (embeddedTimescale === 0) {\n                embeddedTimescale = boxParser.getMediaTimescaleFromMoov(bytes);\n            }\n        }\n\n        // MediaSegment\n        else if (chunk.segmentType === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n\n            if (embeddedTimescale === 0) {\n                logger.warn('CEA-608: No timescale for embeddedTextTrack yet');\n                return;\n            }\n\n            samplesInfo = boxParser.getSamplesInfo(bytes);\n\n            const sequenceNumber = samplesInfo.lastSequenceNumber;\n            if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\n                _setupCeaParser();\n            }\n\n            if (embeddedTimescale) {\n                if (embeddedLastSequenceNumber !== null && sequenceNumber !== embeddedLastSequenceNumber + samplesInfo.numSequences) {\n                    for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\n                        if (embeddedCea608FieldParsers[i]) {\n                            embeddedCea608FieldParsers[i].reset();\n                        }\n                    }\n                }\n\n                const allCcData = _extractCea608Data(bytes, samplesInfo.sampleList);\n\n                for (let fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\n                    const ccData = allCcData.fields[fieldNr];\n                    const fieldParser = embeddedCea608FieldParsers[fieldNr];\n                    if (fieldParser) {\n                        for (i = 0; i < ccData.length; i++) {\n                            fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\n                        }\n                    }\n                }\n                embeddedLastSequenceNumber = sequenceNumber;\n            }\n        }\n    }\n\n    function _setupCeaParser() {\n        // Time to setup the CEA-608 parsing\n        let trackIdx;\n        for (let i = 0; i < embeddedTracks.length; i++) {\n            trackIdx = textTracks.getTrackIdxForId(embeddedTracks[i].id);\n\n            if (trackIdx === -1) {\n                logger.warn('CEA-608: data before track is ready.');\n                return;\n            }\n\n            const handler = _makeCueAdderForIndex(trackIdx);\n            embeddedCea608FieldParsers[i] = new cea608parser.Cea608Parser(i + 1, {\n                newCue: handler\n            }, null);\n        }\n    }\n\n    function _makeCueAdderForIndex(trackIndex) {\n        function newCue(startTime, endTime, captionScreen) {\n            let captionsArray;\n            if (videoModel.getTTMLRenderingDiv()) {\n                captionsArray = embeddedTextHtmlRender.createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\n            } else {\n                const text = captionScreen.getDisplayText();\n                captionsArray = [{\n                    start: startTime,\n                    end: endTime,\n                    data: text,\n                    styles: {}\n                }];\n            }\n            if (captionsArray) {\n                textTracks.addCaptions(trackIndex, 0, captionsArray);\n            }\n        }\n\n        return newCue;\n    }\n\n    /**\n     * Extract CEA-608 data from a buffer of data.\n     * @param {ArrayBuffer} data\n     * @param {Array} samples cue information\n     * @returns {Object|null} ccData corresponding to one segment.\n     */\n    function _extractCea608Data(data, samples) {\n        if (samples.length === 0) {\n            return null;\n        }\n\n        const allCcData = {\n            splits: [],\n            fields: [[], []]\n        };\n        const raw = new DataView(data);\n        for (let i = 0; i < samples.length; i++) {\n            const sample = samples[i];\n            const cea608Ranges = cea608parser.findCea608Nalus(raw, sample.offset, sample.size);\n            let lastSampleTime = null;\n            let idx = 0;\n            for (let j = 0; j < cea608Ranges.length; j++) {\n                const ccData = cea608parser.extractCea608DataFromRange(raw, cea608Ranges[j]);\n                for (let k = 0; k < 2; k++) {\n                    if (ccData[k].length > 0) {\n                        if (sample.cts !== lastSampleTime) {\n                            idx = 0;\n                        } else {\n                            idx += 1;\n                        }\n                        const timestampOffset = _getTimestampOffset();\n                        allCcData.fields[k].push([sample.cts + (timestampOffset * embeddedTimescale), ccData[k], idx]);\n                        lastSampleTime = sample.cts;\n                    }\n                }\n            }\n        }\n\n        // Sort by sampleTime ascending order\n        // If two packets have the same sampleTime, use them in the order\n        // they were received\n        allCcData.fields.forEach(function sortField(field) {\n            field.sort(function (a, b) {\n                if (a[0] === b[0]) {\n                    return a[2] - b[2];\n                }\n                return a[0] - b[0];\n            });\n        });\n\n        return allCcData;\n    }\n\n    function _getTimestampOffset() {\n        return !isNaN(instance.timestampOffset) ? instance.timestampOffset : 0;\n    }\n\n    function getIsDefault(mediaInfo) {\n        //TODO How to tag default. currently same order as listed in manifest.\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\n        let isDefault = false;\n        if (embeddedTracks.length > 1 && mediaInfo.isEmbedded) {\n            isDefault = (mediaInfo.id && mediaInfo.id === Constants.CC1); // CC1 if both CC1 and CC3 exist\n        } else if (embeddedTracks.length === 1) {\n            if (mediaInfo.id && typeof mediaInfo.id === 'string' && mediaInfo.id.substring(0, 2) === 'CC') { // Either CC1 or CC3\n                isDefault = true;\n            }\n        } else if (embeddedTracks.length === 0) {\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\n        }\n        return isDefault;\n    }\n\n    function _getParser(codecType) {\n        let parser;\n        if (codecType.search(Constants.VTT) >= 0) {\n            parser = settings.get().streaming.text.webvtt.customRenderingEnabled && vttCustomRenderingParser ? vttCustomRenderingParser : vttParser;\n        } else if (codecType.search(Constants.TTML) >= 0 || codecType.search(Constants.STPP) >= 0) {\n            parser = ttmlParser;\n        }\n        return parser;\n    }\n\n    function remove(start, end) {\n        //if start and end are not defined, remove all\n        if ((start === undefined) && (start === end)) {\n            start = instance.buffered.start(0);\n            end = instance.buffered.end(instance.buffered.length - 1);\n        }\n        instance.buffered.remove(start, end);\n        textTracks.deleteCuesFromTrackIdx(currFragmentedTrackIdx, start, end);\n    }\n\n    function onVideoBufferCleared(e) {\n        embeddedTracks.forEach(function (track) {\n            const trackIdx = textTracks.getTrackIdxForId(track.id);\n            if (trackIdx >= 0) {\n                textTracks.deleteCuesFromTrackIdx(trackIdx, e.from, e.to);\n            }\n        });\n    }\n\n    function resetMediaInfos() {\n        mediaInfos = [];\n    }\n\n    instance = {\n        initialize,\n        addMediaInfos,\n        resetMediaInfos,\n        getStreamId,\n        append,\n        abort,\n        addEmbeddedTrack,\n        resetEmbedded,\n        getConfig,\n        setCurrentFragmentedTrackIdx,\n        remove,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\nexport default FactoryMaker.getClassFactory(TextSourceBuffer);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport {renderHTML} from 'imsc';\n\nconst CUE_PROPS_TO_COMPARE = [\n    'text',\n    'align',\n    'fontSize',\n    'id',\n    'isd',\n    'line',\n    'lineAlign',\n    'lineHeight',\n    'linePadding',\n    'position',\n    'positionAlign',\n    'region',\n    'size',\n    'snapToLines',\n    'vertical',\n];\n\nfunction TextTracks(config) {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const videoModel = config.videoModel;\n    const streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        Cue,\n        textTrackQueue,\n        nativeTrackElementArr,\n        currentTrackIdx,\n        actualVideoLeft,\n        actualVideoTop,\n        actualVideoWidth,\n        actualVideoHeight,\n        captionContainer,\n        vttCaptionContainer,\n        videoSizeCheckInterval,\n        fullscreenAttribute,\n        displayCCOnTop,\n        previousISDState,\n        topZIndex,\n        resizeObserver;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n            return;\n        }\n\n        Cue = window.VTTCue || window.TextTrackCue;\n        textTrackQueue = [];\n        nativeTrackElementArr = [];\n        currentTrackIdx = -1;\n        actualVideoLeft = 0;\n        actualVideoTop = 0;\n        actualVideoWidth = 0;\n        actualVideoHeight = 0;\n        captionContainer = null;\n        vttCaptionContainer = null;\n        videoSizeCheckInterval = null;\n        displayCCOnTop = false;\n        topZIndex = 2147483647;\n        previousISDState = null;\n\n        if (document.fullscreenElement !== undefined) {\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n        } else if (document.webkitIsFullScreen !== undefined) {\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n        } else if (document.msFullscreenElement) { // IE11\n            fullscreenAttribute = 'msFullscreenElement';\n        } else if (document.mozFullScreen) { // Firefox\n            fullscreenAttribute = 'mozFullScreen';\n        }\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function _createTrackForUserAgent(element) {\n        const kind = element.kind;\n        const label = element.id !== undefined ? element.id : element.lang;\n        const lang = element.lang;\n        const isTTML = element.isTTML;\n        const isEmbedded = element.isEmbedded;\n        const track = videoModel.addTextTrack(kind, label, lang, isTTML, isEmbedded);\n\n        return track;\n    }\n\n    function addTextTrack(textTrackInfoVO) {\n        textTrackQueue.push(textTrackInfoVO);\n    }\n\n    function createTracks() {\n\n        //Sort in same order as in manifest\n        textTrackQueue.sort(function (a, b) {\n            return a.index - b.index;\n        });\n\n        captionContainer = videoModel.getTTMLRenderingDiv();\n        vttCaptionContainer = videoModel.getVttRenderingDiv();\n        let defaultIndex = -1;\n        for (let i = 0; i < textTrackQueue.length; i++) {\n            const track = _createTrackForUserAgent(textTrackQueue[i]);\n\n            //used to remove tracks from video element when added manually\n            nativeTrackElementArr.push(track);\n\n            if (textTrackQueue[i].defaultTrack) {\n                // track.default is an object property identifier that is a reserved word\n                // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\n                /*jshint -W024 */\n                track.default = true;\n                defaultIndex = i;\n            }\n\n            const textTrack = getTrackByIdx(i);\n            if (textTrack) {\n                //each time a track is created, its mode should be showing by default\n                //sometime, it's not on Chrome\n                textTrack.mode = Constants.TEXT_SHOWING;\n                if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\n                    textTrack.renderingType = 'html';\n                } else {\n                    textTrack.renderingType = 'default';\n                }\n            }\n\n            addCaptions(i, 0, textTrackQueue[i].captionData);\n            eventBus.trigger(MediaPlayerEvents.TEXT_TRACK_ADDED);\n        }\n\n        //set current track index in textTrackQueue array\n        setCurrentTrackIdx.call(this, defaultIndex);\n\n        if (defaultIndex >= 0) {\n\n            let onMetadataLoaded = function () {\n                const track = getTrackByIdx(defaultIndex);\n                if (track && track.renderingType === 'html') {\n                    checkVideoSize.call(this, track, true);\n                }\n                eventBus.off(MediaPlayerEvents.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n            };\n\n            eventBus.on(MediaPlayerEvents.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n\n            for (let idx = 0; idx < textTrackQueue.length; idx++) {\n                const videoTextTrack = getTrackByIdx(idx);\n                if (videoTextTrack) {\n                    videoTextTrack.mode = (idx === defaultIndex) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                    videoTextTrack.manualMode = (idx === defaultIndex) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                }\n            }\n        }\n\n        eventBus.trigger(Events.TEXT_TRACKS_QUEUE_INITIALIZED, {\n            index: currentTrackIdx,\n            tracks: textTrackQueue,\n            streamId: streamInfo.id\n        });\n    }\n\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n        const viewAspectRatio = viewWidth / viewHeight;\n        const videoAspectRatio = videoWidth / videoHeight;\n\n        let videoPictureWidth = 0;\n        let videoPictureHeight = 0;\n\n        if (viewAspectRatio > videoAspectRatio) {\n            videoPictureHeight = viewHeight;\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\n        } else {\n            videoPictureWidth = viewWidth;\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\n        }\n\n        let videoPictureXAspect = 0;\n        let videoPictureYAspect = 0;\n        let videoPictureWidthAspect = 0;\n        let videoPictureHeightAspect = 0;\n        const videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n        if (videoPictureAspect > aspectRatio) {\n            videoPictureHeightAspect = videoPictureHeight;\n            videoPictureWidthAspect = videoPictureHeight * aspectRatio;\n        } else {\n            videoPictureWidthAspect = videoPictureWidth;\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n        }\n        videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n        videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n\n        if (use80Percent) {\n            return {\n                x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\n                y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\n                w: videoPictureWidthAspect * 0.8,\n                h: videoPictureHeightAspect * 0.8\n            }; /* Maximal picture size in videos aspect ratio */\n        } else {\n            return {\n                x: videoPictureXAspect,\n                y: videoPictureYAspect,\n                w: videoPictureWidthAspect,\n                h: videoPictureHeightAspect\n            }; /* Maximal picture size in videos aspect ratio */\n        }\n    }\n\n    function checkVideoSize(track, forceDrawing) {\n        const clientWidth = videoModel.getClientWidth();\n        const clientHeight = videoModel.getClientHeight();\n        const videoWidth = videoModel.getVideoWidth();\n        const videoHeight = videoModel.getVideoHeight();\n        const videoOffsetTop = videoModel.getVideoRelativeOffsetTop();\n        const videoOffsetLeft = videoModel.getVideoRelativeOffsetLeft();\n\n        if (videoWidth !== 0 && videoHeight !== 0) {\n\n            let aspectRatio = videoWidth / videoHeight;\n            let use80Percent = false;\n            if (track.isFromCEA608) {\n                // If this is CEA608 then use predefined aspect ratio\n                aspectRatio = 3.5 / 3.0;\n                use80Percent = true;\n            }\n\n            const realVideoSize = getVideoVisibleVideoSize.call(this, clientWidth, clientHeight, videoWidth, videoHeight, aspectRatio, use80Percent);\n\n            const newVideoWidth = realVideoSize.w;\n            const newVideoHeight = realVideoSize.h;\n            const newVideoLeft = realVideoSize.x;\n            const newVideoTop = realVideoSize.y;\n\n            if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight || newVideoLeft != actualVideoLeft || newVideoTop != actualVideoTop || forceDrawing) {\n                actualVideoLeft = newVideoLeft + videoOffsetLeft;\n                actualVideoTop = newVideoTop + videoOffsetTop;\n                actualVideoWidth = newVideoWidth;\n                actualVideoHeight = newVideoHeight;\n\n                if (captionContainer) {\n                    const containerStyle = captionContainer.style;\n                    if (containerStyle) {\n                        containerStyle.left = actualVideoLeft + 'px';\n                        containerStyle.top = actualVideoTop + 'px';\n                        containerStyle.width = actualVideoWidth + 'px';\n                        containerStyle.height = actualVideoHeight + 'px';\n                        containerStyle.zIndex = (fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop ? topZIndex : null;\n                        eventBus.trigger(MediaPlayerEvents.CAPTION_CONTAINER_RESIZE);\n                    }\n                }\n\n                // Video view has changed size, so resize any active cues\n                const activeCues = track.activeCues;\n                if (activeCues) {\n                    const len = activeCues.length;\n                    for (let i = 0; i < len; ++i) {\n                        const cue = activeCues[i];\n                        cue.scaleCue(cue);\n                    }\n                }\n            }\n        }\n    }\n\n    function _scaleCue(activeCue) {\n        const videoWidth = actualVideoWidth;\n        const videoHeight = actualVideoHeight;\n        let key,\n            replaceValue,\n            valueFontSize,\n            valueLineHeight,\n            elements;\n\n        if (activeCue.cellResolution) {\n            const cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n            if (activeCue.linePadding) {\n                for (key in activeCue.linePadding) {\n                    if (activeCue.linePadding.hasOwnProperty(key)) {\n                        const valueLinePadding = activeCue.linePadding[key];\n                        replaceValue = (valueLinePadding * cellUnit[0]).toString();\n                        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n                        const elementsSpan = document.getElementsByClassName('spanPadding');\n                        for (let i = 0; i < elementsSpan.length; i++) {\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n            }\n\n            if (activeCue.fontSize) {\n                for (key in activeCue.fontSize) {\n                    if (activeCue.fontSize.hasOwnProperty(key)) {\n                        if (activeCue.fontSize[key][0] === '%') {\n                            valueFontSize = activeCue.fontSize[key][1] / 100;\n                        } else if (activeCue.fontSize[key][0] === 'c') {\n                            valueFontSize = activeCue.fontSize[key][1];\n                        }\n\n                        replaceValue = (valueFontSize * cellUnit[1]).toString();\n\n                        if (key !== 'defaultFontSize') {\n                            elements = document.getElementsByClassName(key);\n                        } else {\n                            elements = document.getElementsByClassName('paragraph');\n                        }\n\n                        for (let j = 0; j < elements.length; j++) {\n                            elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n\n                if (activeCue.lineHeight) {\n                    for (key in activeCue.lineHeight) {\n                        if (activeCue.lineHeight.hasOwnProperty(key)) {\n                            if (activeCue.lineHeight[key][0] === '%') {\n                                valueLineHeight = activeCue.lineHeight[key][1] / 100;\n                            } else if (activeCue.fontSize[key][0] === 'c') {\n                                valueLineHeight = activeCue.lineHeight[key][1];\n                            }\n\n                            replaceValue = (valueLineHeight * cellUnit[1]).toString();\n                            elements = document.getElementsByClassName(key);\n                            for (let k = 0; k < elements.length; k++) {\n                                elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (activeCue.isd) {\n            let htmlCaptionDiv = document.getElementById(activeCue.cueID);\n            if (htmlCaptionDiv) {\n                captionContainer.removeChild(htmlCaptionDiv);\n            }\n            _renderCaption(activeCue);\n        }\n    }\n\n    function _resolveImageSrc(cue, src) {\n        const imsc1ImgUrnTester = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;\n        const smpteImgUrnTester = /^#(.*)$/;\n        if (imsc1ImgUrnTester.test(src)) {\n            const match = imsc1ImgUrnTester.exec(src);\n            const imageId = parseInt(match[4], 10) - 1;\n            const imageData = btoa(cue.images[imageId]);\n            const imageSrc = 'data:image/png;base64,' + imageData;\n            return imageSrc;\n        } else if (smpteImgUrnTester.test(src)) {\n            const match = smpteImgUrnTester.exec(src);\n            const imageId = match[1];\n            const imageSrc = 'data:image/png;base64,' + cue.embeddedImages[imageId];\n            return imageSrc;\n        } else {\n            return src;\n        }\n    }\n\n    function _renderCaption(cue) {\n        if (captionContainer) {\n            const finalCue = document.createElement('div');\n            captionContainer.appendChild(finalCue);\n            previousISDState = renderHTML(cue.isd, finalCue, function (src) {\n                return _resolveImageSrc(cue, src);\n            }, captionContainer.clientHeight, captionContainer.clientWidth, false/*displayForcedOnlyMode*/, function (err) {\n                logger.info('renderCaption :', err);\n                //TODO add ErrorHandler management\n            }, previousISDState, true /*enableRollUp*/);\n            finalCue.id = cue.cueID;\n            eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, { captionDiv: finalCue, currentTrackIdx });\n        }\n    }\n\n    function _extendLastCue(cue, track) {\n        if (!settings.get().streaming.text.extendSegmentedCues) {\n            return false;\n        }\n        if (!track.cues || track.cues.length === 0) {\n            return false;\n        }\n        const prevCue = track.cues[track.cues.length - 1];\n        // Check previous cue endTime with current cue startTime\n        // (should we consider an epsilon margin? for example to get around rounding issues)\n        if (prevCue.endTime < cue.startTime) {\n            return false;\n        }\n        // Compare cues content\n        if (!_cuesContentAreEqual(prevCue, cue, CUE_PROPS_TO_COMPARE)) {\n            return false;\n        }\n        prevCue.endTime = Math.max(prevCue.endTime, cue.endTime);\n        return true;\n    }\n\n    function _cuesContentAreEqual(cue1, cue2, props) {\n        for (let i = 0; i < props.length; i++) {\n            const key = props[i];\n            if (JSON.stringify(cue1[key]) !== JSON.stringify(cue2[key])) {\n                return false;\n            }\n        };\n        return true;\n    }\n\n    function _resolveImagesInContents(cue, contents) {\n        if (!contents) {\n            return;\n        }\n        contents.forEach(c => {\n            if (c.kind && c.kind === 'image') {\n                c.src = _resolveImageSrc(cue, c.src);\n            }\n            _resolveImagesInContents(cue, c.contents);\n        });\n    }\n\n    /*\n     * Add captions to track, store for later adding, or add captions added before\n     */\n    function addCaptions(trackIdx, timeOffset, captionData) {\n        const track = getTrackByIdx(trackIdx);\n\n        if (!track) {\n            return;\n        }\n\n        if (!Array.isArray(captionData) || captionData.length === 0) {\n            return;\n        }\n\n        for (let item = 0; item < captionData.length; item++) {\n            let cue;\n            const currentItem = captionData[item];\n\n            track.cellResolution = currentItem.cellResolution;\n            track.isFromCEA608 = currentItem.isFromCEA608;\n\n            if (!isNaN(currentItem.start) && !isNaN(currentItem.end)) {\n                cue = currentItem.type === 'html' && captionContainer ? _handleHtmlCaption(currentItem, timeOffset, track)\n                    : currentItem.data ? _handleNonHtmlCaption(currentItem, timeOffset, track) : null;\n            }\n            try {\n                if (cue) {\n                    if (!cueInTrack(track, cue)) {\n                        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n                            if (!track.manualCueList) {\n                                track.manualCueList = [];\n                            }\n                            track.manualCueList.push(cue);\n                        } else {\n                            if (!_extendLastCue(cue, track)) {\n                                track.addCue(cue);\n                            }\n                        }\n\n                    }\n                } else {\n                    logger.error('Impossible to display subtitles. You might have missed setting a TTML rendering div via player.attachTTMLRenderingDiv(TTMLRenderingDiv)');\n                }\n            } catch (e) {\n                // Edge crash, delete everything and start adding again\n                // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/\n                deleteTrackCues(track);\n                track.addCue(cue);\n                throw e;\n            }\n        }\n    }\n\n    function _handleHtmlCaption(currentItem, timeOffset, track) {\n        const self = this;\n        let cue = new Cue(currentItem.start + timeOffset, currentItem.end + timeOffset, '');\n        cue.cueHTMLElement = currentItem.cueHTMLElement;\n        cue.isd = currentItem.isd;\n        cue.images = currentItem.images;\n        cue.embeddedImages = currentItem.embeddedImages;\n        cue.cueID = currentItem.cueID;\n        cue.scaleCue = _scaleCue.bind(self);\n        //useful parameters for cea608 subtitles, not for TTML one.\n        cue.cellResolution = currentItem.cellResolution;\n        cue.lineHeight = currentItem.lineHeight;\n        cue.linePadding = currentItem.linePadding;\n        cue.fontSize = currentItem.fontSize;\n\n        captionContainer.style.left = actualVideoLeft + 'px';\n        captionContainer.style.top = actualVideoTop + 'px';\n        captionContainer.style.width = actualVideoWidth + 'px';\n        captionContainer.style.height = actualVideoHeight + 'px';\n\n        // Resolve images sources\n        if (cue.isd) {\n            _resolveImagesInContents(cue, cue.isd.contents);\n        }\n\n        cue.onenter = function () {\n            if (track.mode === Constants.TEXT_SHOWING) {\n                if (this.isd) {\n                    _renderCaption(this);\n                    logger.debug('Cue enter id:' + this.cueID);\n                } else {\n                    captionContainer.appendChild(this.cueHTMLElement);\n                    _scaleCue.call(self, this);\n                    eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, {\n                        captionDiv: this.cueHTMLElement,\n                        currentTrackIdx\n                    });\n                }\n            }\n        };\n\n        cue.onexit = function () {\n            if (captionContainer) {\n                const divs = captionContainer.childNodes;\n                for (let i = 0; i < divs.length; ++i) {\n                    if (divs[i].id === this.cueID) {\n                        logger.debug('Cue exit id:' + divs[i].id);\n                        captionContainer.removeChild(divs[i]);\n                        --i;\n                    }\n                }\n            }\n        };\n\n        return cue;\n    }\n\n    function _handleNonHtmlCaption(currentItem, timeOffset, track) {\n        let cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n\n        cue.cueID = `${cue.startTime}_${cue.endTime}`;\n        cue.isActive = false;\n\n        if (currentItem.styles) {\n            try {\n                if (currentItem.styles.align !== undefined && 'align' in cue) {\n                    cue.align = currentItem.styles.align;\n                }\n                if (currentItem.styles.line !== undefined && 'line' in cue) {\n                    cue.line = currentItem.styles.line;\n                }\n                if (currentItem.styles.snapToLines !== undefined && 'snapToLines' in cue) {\n                    cue.snapToLines = currentItem.styles.snapToLines;\n                }\n                if (currentItem.styles.position !== undefined && 'position' in cue) {\n                    cue.position = currentItem.styles.position;\n                }\n                if (currentItem.styles.size !== undefined && 'size' in cue) {\n                    cue.size = currentItem.styles.size;\n                }\n            } catch (e) {\n                logger.error(e);\n            }\n        }\n\n        cue.onenter = function () {\n            if (track.mode === Constants.TEXT_SHOWING) {\n                eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, { currentTrackIdx });\n            }\n        };\n\n        return cue;\n    }\n\n    function manualCueProcessing(time) {\n        const activeTracks = _getManualActiveTracks();\n\n        if (activeTracks && activeTracks.length > 0) {\n            const targetTrack = activeTracks[0];\n            const cues = targetTrack.manualCueList;\n\n\n            if (cues && cues.length > 0) {\n                cues.forEach((cue) => {\n                    // Render cue if target time is reached and not in active state\n                    if (cue.startTime <= time && cue.endTime >= time && !cue.isActive) {\n                        cue.isActive = true;\n                        // eslint-disable-next-line no-undef\n                        WebVTT.processCues(window, [cue], vttCaptionContainer, cue.cueID);\n                    } else if (cue.isActive && (cue.startTime > time || cue.endTime < time)) {\n                        cue.isActive = false;\n                        if (vttCaptionContainer) {\n                            const divs = vttCaptionContainer.childNodes;\n                            for (let i = 0; i < divs.length; ++i) {\n                                if (divs[i].id === cue.cueID) {\n                                    vttCaptionContainer.removeChild(divs[i]);\n                                    --i;\n                                }\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    function disableManualTracks() {\n        const activeTracks = _getManualActiveTracks();\n\n        if (activeTracks && activeTracks.length > 0) {\n            const targetTrack = activeTracks[0];\n            const cues = targetTrack.manualCueList;\n\n\n            if (cues && cues.length > 0) {\n                cues.forEach((cue) => {\n                    if (cue.isActive) {\n                        cue.isActive = false;\n                        if (vttCaptionContainer) {\n                            const divs = vttCaptionContainer.childNodes;\n                            for (let i = 0; i < divs.length; ++i) {\n                                if (divs[i].id === cue.cueID) {\n                                    vttCaptionContainer.removeChild(divs[i]);\n                                    --i;\n                                }\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    function _getManualActiveTracks() {\n        const tracks = videoModel.getTextTracks();\n        const activeTracks = []\n\n        for (const track of tracks) {\n            if (track.manualMode === Constants.TEXT_SHOWING) {\n                activeTracks.push(track);\n            }\n        }\n        return activeTracks;\n    }\n\n    function getTrackByIdx(idx) {\n        return idx >= 0 && textTrackQueue[idx] ?\n            videoModel.getTextTrack(textTrackQueue[idx].kind, textTrackQueue[idx].id, textTrackQueue[idx].lang, textTrackQueue[idx].isTTML, textTrackQueue[idx].isEmbedded) : null;\n    }\n\n    function getCurrentTrackIdx() {\n        return currentTrackIdx;\n    }\n\n    function getTrackIdxForId(trackId) {\n        let idx = -1;\n        for (let i = 0; i < textTrackQueue.length; i++) {\n            if (textTrackQueue[i].id === trackId) {\n                idx = i;\n                break;\n            }\n        }\n\n        return idx;\n    }\n\n    function setCurrentTrackIdx(idx) {\n        if (idx === currentTrackIdx) {\n            return;\n        }\n        currentTrackIdx = idx;\n        const track = getTrackByIdx(currentTrackIdx);\n        setCueStyleOnTrack.call(this, track);\n\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n\n        if (track && track.renderingType === 'html') {\n            checkVideoSize.call(this, track, true);\n            if (window.ResizeObserver) {\n                resizeObserver = new window.ResizeObserver(() => {\n                    checkVideoSize.call(this, track, true);\n                });\n                resizeObserver.observe(videoModel.getElement());\n            } else {\n                videoSizeCheckInterval = setInterval(checkVideoSize.bind(this, track), 500);\n            }\n        }\n    }\n\n    function setCueStyleOnTrack(track) {\n        clearCaptionContainer.call(this);\n        if (track) {\n            if (track.renderingType === 'html') {\n                setNativeCueStyle.call(this);\n            } else {\n                removeNativeCueStyle.call(this);\n            }\n        } else {\n            removeNativeCueStyle.call(this);\n        }\n    }\n\n    function cueInTrack(track, cue) {\n        if (!track.cues) return false;\n        for (let i = 0; i < track.cues.length; i++) {\n            if ((track.cues[i].startTime === cue.startTime) &&\n                (track.cues[i].endTime === cue.endTime)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function cueInRange(cue, start, end, strict = true) {\n        return (isNaN(start) || (strict ? cue.startTime : cue.endTime) >= start) && (isNaN(end) || (strict ? cue.endTime : cue.startTime) <= end);\n    }\n\n    function deleteTrackCues(track, start, end, strict = true) {\n        if (track.cues) {\n            const cues = track.cues;\n            const lastIdx = cues.length - 1;\n\n            for (let r = lastIdx; r >= 0; r--) {\n                if (cueInRange(cues[r], start, end, strict)) {\n                    if (cues[r].onexit) {\n                        cues[r].onexit();\n                    }\n                    track.removeCue(cues[r]);\n                }\n            }\n        }\n    }\n\n    function deleteCuesFromTrackIdx(trackIdx, start, end) {\n        const track = getTrackByIdx(trackIdx);\n        if (track) {\n            deleteTrackCues(track, start, end);\n        }\n    }\n\n    function deleteAllTextTracks() {\n        const ln = nativeTrackElementArr ? nativeTrackElementArr.length : 0;\n        for (let i = 0; i < ln; i++) {\n            const track = getTrackByIdx(i);\n            if (track) {\n                deleteTrackCues.call(this, track, streamInfo.start, streamInfo.start + streamInfo.duration, false);\n            }\n        }\n        nativeTrackElementArr = [];\n        textTrackQueue = [];\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n        if (resizeObserver && videoModel) {\n            resizeObserver.unobserve(videoModel.getElement());\n            resizeObserver = null;\n        }\n        currentTrackIdx = -1;\n        clearCaptionContainer.call(this);\n    }\n\n    function deleteTextTrack(idx) {\n        videoModel.removeChild(nativeTrackElementArr[idx]);\n        nativeTrackElementArr.splice(idx, 1);\n    }\n\n    /* Set native cue style to transparent background to avoid it being displayed. */\n    function setNativeCueStyle() {\n        let styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            return; //Already set\n        }\n\n        styleElement = document.createElement('style');\n        styleElement.id = 'native-cue-style';\n        document.head.appendChild(styleElement);\n        const stylesheet = styleElement.sheet;\n        const video = videoModel.getElement();\n        try {\n            if (video) {\n                if (video.id) {\n                    stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n                } else if (video.classList.length !== 0) {\n                    stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n                } else {\n                    stylesheet.insertRule('video::cue {background: transparent}', 0);\n                }\n            }\n        } catch (e) {\n            logger.info('' + e.message);\n        }\n    }\n\n    /* Remove the extra cue style with transparent background for native cues. */\n    function removeNativeCueStyle() {\n        const styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            document.head.removeChild(styleElement);\n        }\n    }\n\n    function clearCaptionContainer() {\n        if (captionContainer) {\n            while (captionContainer.firstChild) {\n                captionContainer.removeChild(captionContainer.firstChild);\n            }\n        }\n    }\n\n    function setModeForTrackIdx(idx, mode) {\n        const track = getTrackByIdx(idx);\n        if (track && track.mode !== mode) {\n            track.mode = mode;\n        }\n        if (track && track.manualMode !== mode) {\n            track.manualMode = mode;\n        }\n    }\n\n    function getCurrentTrackInfo() {\n        return textTrackQueue[currentTrackIdx];\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        addTextTrack,\n        addCaptions,\n        createTracks,\n        getCurrentTrackIdx,\n        setCurrentTrackIdx,\n        getTrackIdxForId,\n        getCurrentTrackInfo,\n        setModeForTrackIdx,\n        deleteCuesFromTrackIdx,\n        deleteAllTextTracks,\n        deleteTextTrack,\n        manualCueProcessing,\n        disableManualTracks\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexport default FactoryMaker.getClassFactory(TextTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst WEBVTT = 'WEBVTT';\n\nfunction VTTParser() {\n    const context = this.context;\n\n    let instance,\n        logger,\n        regExNewLine,\n        regExToken,\n        regExWhiteSpace,\n        regExWhiteSpaceWordBoundary;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\n        regExToken = /-->/;\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\n    }\n\n    function parse(data) {\n        const captionArray = [];\n        let len,\n            lastStartTime;\n\n        if (!data) {\n            return captionArray;\n        }\n\n        data = data.split( regExNewLine );\n        len = data.length;\n        lastStartTime = -1;\n\n        for (let i = 0 ; i < len; i++) {\n            let item = data[i];\n\n            if (item.length > 0 && item !== WEBVTT) {\n                if (item.match(regExToken)) {\n                    const attributes = parseItemAttributes(item);\n                    const cuePoints = attributes.cuePoints;\n                    const styles = attributes.styles;\n                    const text = getSublines(data, i + 1);\n                    const startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\n                    const endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\n\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\n                        if (text !== '') {\n                            lastStartTime = startTime;\n                            //TODO Make VO external so other parsers can use.\n                            captionArray.push({\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: styles\n                            });\n                        }\n                        else {\n                            logger.error('Skipping cue due to empty/malformed cue text');\n                        }\n                    }\n                    else {\n                        logger.error('Skipping cue due to incorrect cue timing');\n                    }\n                }\n            }\n        }\n\n        return captionArray;\n    }\n\n    function convertCuePointTimes(time) {\n        const timeArray = time.split(':');\n        const len = timeArray.length - 1;\n\n        time = parseInt( timeArray[len - 1], 10 ) * 60 + parseFloat( timeArray[len]);\n\n        if ( len === 2 ) {\n            time += parseInt( timeArray[0], 10 ) * 3600;\n        }\n\n        return time;\n    }\n\n    function parseItemAttributes(data) {\n        const vttCuePoints = data.split(regExToken);\n        const arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\n        arr.shift(); //remove first array index it is empty...\n        vttCuePoints[1] = arr[0];\n        arr.shift();\n        return {cuePoints: vttCuePoints, styles: getCaptionStyles(arr)};\n    }\n\n    function getCaptionStyles(arr) {\n        const styleObject = {};\n        arr.forEach(function (element) {\n            if (element.split(/:/).length > 1) {\n                let val = element.split(/:/)[1];\n                let isPercentage = false;\n                if (val && val.search(/%/) != -1) {\n                    isPercentage = true;\n                    val = parseInt(val.replace(/%/, ''), 10);\n                }\n                if (element.match(/align/) || element.match(/A/)) {\n                    styleObject.align = val;\n                }\n                if (element.match(/line/) || element.match(/L/) ) {\n                    styleObject.line = val === 'auto' ? val : parseInt(val, 10);\n                    if (isPercentage) {\n                        styleObject.snapToLines = false;\n                    }\n                }\n                if (element.match(/position/) || element.match(/P/) ) {\n                    styleObject.position = val;\n                }\n                if (element.match(/size/) || element.match(/S/)) {\n                    styleObject.size = val;\n                }\n            }\n        });\n\n        return styleObject;\n    }\n\n    /*\n    * VTT can have multiple lines to display per cuepoint.\n    */\n    function getSublines(data, idx) {\n        let i = idx;\n\n        let subline = '';\n        let lineData = '';\n        let lineCount;\n\n        while (data[i] !== '' && i < data.length) {\n            i++;\n        }\n\n        lineCount = i - idx;\n        if (lineCount > 1) {\n            for (let j = 0; j < lineCount; j++) {\n                lineData = data[(idx + j)];\n                if (!lineData.match(regExToken)) {\n                    subline += lineData;\n                    if (j !== lineCount - 1) {\n                        subline += '\\n';\n                    }\n                }\n                else {\n                    // caption text should not have '-->' in it\n                    subline = '';\n                    break;\n                }\n            }\n        } else {\n            lineData = data[idx];\n            if (!lineData.match(regExToken))\n                subline = lineData;\n        }\n        return subline;\n    }\n\n    instance = {\n        parse: parse,\n        getCaptionStyles\n    };\n\n    setup();\n    return instance;\n}\nVTTParser.__dashjs_factory_name = 'VTTParser';\nexport default FactoryMaker.getSingletonFactory(VTTParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction VttCustomRenderingParser() {\n\n    let instance,\n        vttjs;\n\n    function setup() {\n        try {\n            if (window && window.WebVTT && window.WebVTT.Parser) {\n                vttjs = new window.WebVTT.Parser(\n                    window,\n                    window.vttjs,\n                    window.WebVTT.StringDecoder()\n                );\n            }\n        }\n        catch(e) {\n\n        }\n    }\n\n    function parse(data) {\n        let cues = [];\n        vttjs.oncue = function (cue) {\n            cue.start = cue.startTime;\n            cue.end = cue.endTime;\n            cue.data = cue.text;\n            cue.styles = {\n                align: cue.align,\n                line: cue.line,\n                position: cue.position,\n                size: cue.size\n            }\n            cues.push(cue);\n        };\n        vttjs.parse(data);\n\n        return cues;\n    }\n\n    instance = {\n        parse\n    };\n\n    setup();\n    return instance;\n}\n\nVttCustomRenderingParser.__dashjs_factory_name = 'VttCustomRenderingParser';\nexport default FactoryMaker.getSingletonFactory(VttCustomRenderingParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport {fromXML, generateISD} from 'imsc';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport ConformanceViolationConstants from '../constants/ConformanceViolationConstants';\n\nfunction TTMLParser() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    /*\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n     * */\n    let instance,\n        logger;\n\n    let cueCounter = 0; // Used to give every cue a unique ID.\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getCueID() {\n        const id = 'cue_TTML_' + cueCounter;\n        cueCounter++;\n        return id;\n    }\n\n    /**\n     * Parse the raw data and process it to return the HTML element representing the cue.\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\n     * @param {string} data - raw data received from the TextSourceBuffer\n     * @param {number} offsetTime - offset time to apply to cue time\n     * @param {integer} startTimeSegment - startTime for the current segment\n     * @param {integer} endTimeSegment - endTime for the current segment\n     * @param {Array} images - images array referenced by subs MP4 box\n     */\n    function parse(data, offsetTime, startTimeSegment, endTimeSegment, images) {\n        let errorMsg = '';\n        const captionArray = [];\n        let startTime,\n            endTime,\n            i;\n\n        const content = {};\n\n        const embeddedImages = {};\n        let currentImageId = '';\n        let accumulated_image_data = '';\n        let metadataHandler = {\n\n            onOpenTag: function (ns, name, attrs) {\n                // cope with existing non-compliant content\n                if (attrs[' imagetype'] && !attrs[' imageType']) {\n                    eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                        level: ConformanceViolationConstants.LEVELS.ERROR,\n                        event: ConformanceViolationConstants.EVENTS.NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE\n                    });\n                    attrs[' imageType'] = attrs[' imagetype'];\n                }\n\n                if (name === 'image' &&\n                    (ns === 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt' ||\n                        ns === 'http://www.smpte-ra.org/schemas/2052-1/2013/smpte-tt')) {\n                    if (!attrs[' imageType'] || attrs[' imageType'].value !== 'PNG') {\n                        logger.warn('smpte-tt imageType != PNG. Discarded');\n                        return;\n                    }\n                    currentImageId = attrs['http://www.w3.org/XML/1998/namespace id'].value;\n                }\n            },\n\n            onCloseTag: function () {\n                if (currentImageId) {\n                    embeddedImages[currentImageId] = accumulated_image_data.trim();\n                }\n                accumulated_image_data = '';\n                currentImageId = '';\n            },\n\n            onText: function (contents) {\n                if (currentImageId) {\n                    accumulated_image_data = accumulated_image_data + contents;\n                }\n            }\n        };\n\n        if (!data) {\n            errorMsg = 'no ttml data to parse';\n            throw new Error(errorMsg);\n        }\n\n        content.data = data;\n\n        eventBus.trigger(Events.TTML_TO_PARSE, content);\n\n        const imsc1doc = fromXML(content.data, function (msg) {\n            errorMsg = msg;\n        }, metadataHandler);\n\n        eventBus.trigger(Events.TTML_PARSED, { ttmlString: content.data, ttmlDoc: imsc1doc });\n\n        const mediaTimeEvents = imsc1doc.getMediaTimeEvents();\n\n        for (i = 0; i < mediaTimeEvents.length; i++) {\n            let isd = generateISD(imsc1doc, mediaTimeEvents[i], function (error) {\n                errorMsg = error;\n            });\n\n            if (isd.contents.some(topLevelContents => topLevelContents.contents.length)) {\n                //be sure that mediaTimeEvents values are in the mp4 segment time ranges.\n                startTime = mediaTimeEvents[i] + offsetTime;\n                endTime = mediaTimeEvents[i + 1] + offsetTime;\n\n                if (startTime < endTime) {\n                    captionArray.push({\n                        start: startTime,\n                        end: endTime,\n                        type: 'html',\n                        cueID: getCueID(),\n                        isd: isd,\n                        images: images,\n                        embeddedImages: embeddedImages\n                    });\n                }\n            }\n        }\n\n        if (errorMsg !== '') {\n            logger.error(errorMsg);\n            throw new Error(errorMsg);\n        }\n\n        return captionArray;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n    return instance;\n}\n\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\nexport default FactoryMaker.getSingletonFactory(TTMLParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport TextSourceBuffer from './TextSourceBuffer';\nimport TextTracks from './TextTracks';\nimport VTTParser from '../utils/VTTParser';\nimport VttCustomRenderingParser from '../utils/VttCustomRenderingParser';\nimport TTMLParser from '../utils/TTMLParser';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\nimport {checkParameterType} from '../utils/SupervisorTools';\n\nfunction TextController(config) {\n\n    let context = this.context;\n\n    const adapter = config.adapter;\n    const errHandler = config.errHandler;\n    const manifestModel = config.manifestModel;\n    const mediaController = config.mediaController;\n    const videoModel = config.videoModel;\n    const settings = config.settings;\n\n    let instance,\n        streamData,\n        textSourceBuffers,\n        textTracks,\n        vttParser,\n        vttCustomRenderingParser,\n        ttmlParser,\n        eventBus,\n        allTracksAreDisabled,\n        forceTextStreaming,\n        textTracksAdded,\n        disableTextBeforeTextTracksAdded;\n\n    function setup() {\n        forceTextStreaming = false;\n        textTracksAdded = false;\n        disableTextBeforeTextTracksAdded = false;\n\n        vttParser = VTTParser(context).getInstance();\n        vttCustomRenderingParser = VttCustomRenderingParser(context).getInstance();\n        ttmlParser = TTMLParser(context).getInstance();\n        eventBus = EventBus(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function initialize() {\n        eventBus.on(Events.TEXT_TRACKS_QUEUE_INITIALIZED, _onTextTracksAdded, instance);\n        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n            eventBus.on(Events.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n            eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        }\n    }\n\n    function initializeForStream(streamInfo) {\n        const streamId = streamInfo.id;\n        const tracks = TextTracks(context).create({\n            videoModel,\n            settings,\n            streamInfo\n        });\n        tracks.initialize();\n        textTracks[streamId] = tracks;\n\n        const textSourceBuffer = TextSourceBuffer(context).create({\n            errHandler,\n            adapter,\n            manifestModel,\n            mediaController,\n            videoModel,\n            textTracks: tracks,\n            vttParser,\n            vttCustomRenderingParser,\n            ttmlParser,\n            streamInfo,\n            settings\n        });\n        textSourceBuffer.initialize();\n        textSourceBuffers[streamId] = textSourceBuffer;\n\n        streamData[streamId] = {};\n        streamData[streamId].lastEnabledIndex = -1;\n    }\n\n    /**\n     * All media infos have been added. Start creating the track objects\n     * @param {object} streamInfo\n     */\n    function createTracks(streamInfo) {\n        const streamId = streamInfo.id;\n\n        if (!textTracks[streamId]) {\n            return;\n        }\n        textTracks[streamId].createTracks();\n    }\n\n    /**\n     * Adds the new mediaInfo objects to the textSourceBuffer.\n     * @param {object} streamInfo\n     * @param {array} mInfos\n     * @param {string|null} mimeType\n     * @param {object} fragmentModel\n     */\n    function addMediaInfosToBuffer(streamInfo, type, mInfos, fragmentModel = null) {\n        const streamId = streamInfo.id;\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n        textSourceBuffers[streamId].addMediaInfos(type, mInfos, fragmentModel);\n    }\n\n    function getTextSourceBuffer(streamInfo) {\n        const streamId = streamInfo.id;\n\n        if (textSourceBuffers && textSourceBuffers[streamId]) {\n            return textSourceBuffers[streamId];\n        }\n    }\n\n    function getAllTracksAreDisabled() {\n        return allTracksAreDisabled;\n    }\n\n    function addEmbeddedTrack(streamInfo, mediaInfo) {\n        const streamId = streamInfo.id;\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n\n        textSourceBuffers[streamId].addEmbeddedTrack(mediaInfo);\n    }\n\n    function _onTextTracksAdded(e) {\n        let tracks = e.tracks;\n        let index = e.index;\n        const streamId = e.streamId;\n\n        const textDefaultEnabled = settings.get().streaming.text.defaultEnabled;\n\n        if ((textDefaultEnabled === false && !isTextEnabled()) || disableTextBeforeTextTracksAdded) {\n            // disable text at startup if explicitly configured with setTextDefaultEnabled(false) or if there is no defaultSettings (configuration or from domStorage)\n            setTextTrack(streamId, -1);\n        } else {\n            const currentTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamId);\n            if (currentTrack) {\n                const defaultSettings = {\n                    lang: currentTrack.lang,\n                    role: currentTrack.roles[0],\n                    index: currentTrack.index,\n                    codec: currentTrack.codec,\n                    accessibility: currentTrack.accessibility[0]\n                };\n                tracks.some((item, idx) => {\n                    // matchSettings is compatible with setTextDefaultLanguage and setInitialSettings\n                    if (mediaController.matchSettings(defaultSettings, item)) {\n                        setTextTrack(streamId, idx);\n                        index = idx;\n                        return true;\n                    }\n                });\n            }\n            allTracksAreDisabled = false;\n        }\n\n        streamData[streamId].lastEnabledIndex = index;\n\n        eventBus.trigger(MediaPlayerEvents.TEXT_TRACKS_ADDED, {\n            enabled: isTextEnabled(),\n            index: index,\n            tracks: tracks,\n            streamId\n        });\n\n        textTracksAdded = true;\n    }\n\n    function _onPlaybackTimeUpdated(e) {\n        try {\n            const streamId = e.streamId;\n\n            if (!textTracks[streamId] || isNaN(e.time)) {\n                return;\n            }\n            textTracks[streamId].manualCueProcessing(e.time);\n        } catch (err) {\n        }\n    }\n\n    function _onPlaybackSeeking(e) {\n        try {\n            const streamId = e.streamId;\n\n            if (!textTracks[streamId]) {\n                return;\n            }\n            textTracks[streamId].disableManualTracks();\n        } catch (e) {\n\n        }\n    }\n\n    function enableText(streamId, enable) {\n        checkParameterType(enable, 'boolean');\n        if (isTextEnabled() !== enable) {\n            // change track selection\n            if (enable) {\n                // apply last enabled track\n                setTextTrack(streamId, streamData[streamId].lastEnabledIndex);\n            }\n\n            if (!enable) {\n                // keep last index and disable text track\n                streamData[streamId].lastEnabledIndex = getCurrentTrackIdx(streamId);\n                if (!textTracksAdded) {\n                    disableTextBeforeTextTracksAdded = true;\n                } else {\n                    setTextTrack(streamId, -1);\n                }\n            }\n        }\n\n        return true\n    }\n\n    function isTextEnabled() {\n        let enabled = true;\n        if (allTracksAreDisabled && !forceTextStreaming) {\n            enabled = false;\n        }\n        return enabled;\n    }\n\n    // when set to true ScheduleController will allow schedule of chunks even if tracks are all disabled. Allowing streaming to hidden track for external players to work with.\n    function enableForcedTextStreaming(enable) {\n        checkParameterType(enable, 'boolean');\n        forceTextStreaming = enable;\n        return true\n    }\n\n    function setTextTrack(streamId, idx) {\n        // For external time text file, the only action needed to change a track is marking the track mode to showing.\n        // Fragmented text tracks need the additional step of calling TextController.setTextTrack();\n        allTracksAreDisabled = idx === -1;\n\n        if (allTracksAreDisabled && mediaController) {\n            mediaController.saveTextSettingsDisabled();\n        }\n\n        let oldTrackIdx = getCurrentTrackIdx(streamId);\n\n        // No change, no action required\n        if (oldTrackIdx === idx || !textTracks[streamId]) {\n            return;\n        }\n\n\n        textTracks[streamId].disableManualTracks();\n\n        textTracks[streamId].setModeForTrackIdx(oldTrackIdx, Constants.TEXT_HIDDEN);\n        textTracks[streamId].setCurrentTrackIdx(idx);\n        textTracks[streamId].setModeForTrackIdx(idx, Constants.TEXT_SHOWING);\n\n        let currentTrackInfo = textTracks[streamId].getCurrentTrackInfo();\n\n        if (currentTrackInfo && currentTrackInfo.isFragmented && !currentTrackInfo.isEmbedded) {\n            _setFragmentedTextTrack(streamId, currentTrackInfo, oldTrackIdx);\n        } else if (currentTrackInfo && !currentTrackInfo.isFragmented) {\n            _setNonFragmentedTextTrack(streamId, currentTrackInfo);\n        }\n\n        mediaController.setTrack(currentTrackInfo);\n    }\n\n    function _setFragmentedTextTrack(streamId, currentTrackInfo, oldTrackIdx) {\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n\n        let config = textSourceBuffers[streamId].getConfig();\n        let fragmentedTracks = config.fragmentedTracks;\n\n        for (let i = 0; i < fragmentedTracks.length; i++) {\n            let mediaInfo = fragmentedTracks[i];\n            if (currentTrackInfo.lang === mediaInfo.lang &&\n                (mediaInfo.id ? currentTrackInfo.id === mediaInfo.id : currentTrackInfo.index === mediaInfo.index)) {\n                let currentFragTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamId);\n                if (mediaInfo.id ? currentFragTrack.id !== mediaInfo.id : currentFragTrack.index !== mediaInfo.index) {\n                    textTracks[streamId].deleteCuesFromTrackIdx(oldTrackIdx);\n                    textSourceBuffers[streamId].setCurrentFragmentedTrackIdx(i);\n                } else if (oldTrackIdx === -1) {\n                    // in fragmented use case, if the user selects the older track (the one selected before disabled text track)\n                    // no CURRENT_TRACK_CHANGED event will be triggered because the mediaInfo in the StreamProcessor is equal to the one we are selecting\n                    // For that reason we reactivate the StreamProcessor and the ScheduleController\n                    eventBus.trigger(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, {}, {\n                        streamId,\n                        mediaType: Constants.TEXT\n                    });\n                }\n            }\n        }\n    }\n\n    function _setNonFragmentedTextTrack(streamId, currentTrackInfo) {\n        eventBus.trigger(Events.SET_NON_FRAGMENTED_TEXT, {\n            currentTrackInfo\n        }, {\n            streamId,\n            mediaType: Constants.TEXT\n        });\n    }\n\n    function getCurrentTrackIdx(streamId) {\n        return textTracks[streamId].getCurrentTrackIdx();\n    }\n\n    function deactivateStream(streamInfo) {\n        if (!streamInfo) {\n            return;\n        }\n        const streamId = streamInfo.id;\n\n        if (textSourceBuffers[streamId]) {\n            textSourceBuffers[streamId].resetMediaInfos();\n        }\n\n        if (textTracks[streamId]) {\n            textTracks[streamId].deleteAllTextTracks();\n        }\n    }\n\n    function resetInitialSettings() {\n        textSourceBuffers = {};\n        textTracks = {};\n        streamData = {};\n        allTracksAreDisabled = true;\n        textTracksAdded = false;\n        disableTextBeforeTextTracksAdded = false;\n    }\n\n    function reset() {\n        resetInitialSettings();\n        eventBus.off(Events.TEXT_TRACKS_QUEUE_INITIALIZED, _onTextTracksAdded, instance);\n        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n            eventBus.off(Events.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n            eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance)\n        }\n\n        Object.keys(textSourceBuffers).forEach((key) => {\n            textSourceBuffers[key].resetEmbedded();\n            textSourceBuffers[key].reset();\n        });\n    }\n\n    instance = {\n        deactivateStream,\n        initialize,\n        initializeForStream,\n        createTracks,\n        getTextSourceBuffer,\n        getAllTracksAreDisabled,\n        addEmbeddedTrack,\n        enableText,\n        isTextEnabled,\n        setTextTrack,\n        getCurrentTrackIdx,\n        enableForcedTextStreaming,\n        addMediaInfosToBuffer,\n        reset\n    };\n    setup();\n    return instance;\n}\n\nTextController.__dashjs_factory_name = 'TextController';\nexport default FactoryMaker.getClassFactory(TextController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport cea608parser from '../../externals/cea608-parser';\nimport Constants from './constants/Constants';\nimport DashConstants from '../dash/constants/DashConstants';\nimport MetricsConstants from './constants/MetricsConstants';\nimport PlaybackController from './controllers/PlaybackController';\nimport StreamController from './controllers/StreamController';\nimport GapController from './controllers/GapController';\nimport CatchupController from './controllers/CatchupController';\nimport ServiceDescriptionController from '../dash/controllers/ServiceDescriptionController';\nimport ContentSteeringController from '../dash/controllers/ContentSteeringController';\nimport MediaController from './controllers/MediaController';\nimport BaseURLController from './controllers/BaseURLController';\nimport ManifestLoader from './ManifestLoader';\nimport ErrorHandler from './utils/ErrorHandler';\nimport Capabilities from './utils/Capabilities';\nimport CapabilitiesFilter from './utils/CapabilitiesFilter';\nimport RequestModifier from './utils/RequestModifier';\nimport URIFragmentModel from './models/URIFragmentModel';\nimport ManifestModel from './models/ManifestModel';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport AbrController from './controllers/AbrController';\nimport SchemeLoaderFactory from './net/SchemeLoaderFactory';\nimport VideoModel from './models/VideoModel';\nimport CmcdModel from './models/CmcdModel';\nimport CmsdModel from './models/CmsdModel';\nimport DOMStorage from './utils/DOMStorage';\nimport Debug from './../core/Debug';\nimport Errors from './../core/errors/Errors';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport MediaPlayerEvents from './MediaPlayerEvents';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Settings from '../core/Settings';\nimport {getVersionString} from '../core/Version';\n\n//Dash\nimport SegmentBaseController from '../dash/controllers/SegmentBaseController';\nimport DashAdapter from '../dash/DashAdapter';\nimport DashMetrics from '../dash/DashMetrics';\nimport TimelineConverter from '../dash/utils/TimelineConverter';\nimport {\n    HTTPRequest\n} from './vo/metrics/HTTPRequest';\nimport BASE64 from '../../externals/base64';\nimport ISOBoxer from 'codem-isoboxer';\nimport DashJSError from './vo/DashJSError';\nimport {checkParameterType} from './utils/SupervisorTools';\nimport ManifestUpdater from './ManifestUpdater';\nimport URLUtils from '../streaming/utils/URLUtils';\nimport BoxParser from './utils/BoxParser';\nimport TextController from './text/TextController';\nimport CustomParametersModel from './models/CustomParametersModel';\n\n/**\n * The media types\n * @typedef {(\"video\" | \"audio\" | \"text\" | \"image\")} MediaType\n */\n\n/**\n * @module MediaPlayer\n * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.\n * It will allow you access to all the important dash.js properties/methods via the public API and all the\n * events to build a robust DASH media player.\n */\nfunction MediaPlayer() {\n    /**\n     * @constant {string} STREAMING_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized\n     * @inner\n     */\n    const STREAMING_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a source before calling this method';\n    /**\n     * @constant {string} PLAYBACK_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized\n     * @inner\n     */\n    const PLAYBACK_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a valid source and view before calling this method';\n    /**\n     * @constant {string} ELEMENT_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a reference of an HTML5 video element\n     * @inner\n     */\n    const ELEMENT_NOT_ATTACHED_ERROR = 'You must first call attachView() to set the video element before calling this method';\n    /**\n     * @constant {string} SOURCE_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a valid source stream.\n     * @inner\n     */\n    const SOURCE_NOT_ATTACHED_ERROR = 'You must first call attachSource() with a valid source before calling this method';\n    /**\n     * @constant {string} MEDIA_PLAYER_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized.\n     * @inner\n     */\n    const MEDIA_PLAYER_NOT_INITIALIZED_ERROR = 'MediaPlayer not initialized!';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n    const debug = Debug(context).getInstance({ settings: settings });\n\n    let instance,\n        logger,\n        source,\n        protectionData,\n        mediaPlayerInitialized,\n        streamingInitialized,\n        playbackInitialized,\n        autoPlay,\n        providedStartTime,\n        abrController,\n        schemeLoaderFactory,\n        timelineConverter,\n        mediaController,\n        protectionController,\n        metricsReportingController,\n        mssHandler,\n        offlineController,\n        adapter,\n        mediaPlayerModel,\n        customParametersModel,\n        errHandler,\n        baseURLController,\n        capabilities,\n        capabilitiesFilter,\n        streamController,\n        textController,\n        gapController,\n        playbackController,\n        serviceDescriptionController,\n        contentSteeringController,\n        catchupController,\n        dashMetrics,\n        manifestModel,\n        cmcdModel,\n        cmsdModel,\n        videoModel,\n        uriFragmentModel,\n        domStorage,\n        segmentBaseController;\n\n    /*\n    ---------------------------------------------------------------------------\n\n        INIT FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function setup() {\n        logger = debug.getLogger(instance);\n        mediaPlayerInitialized = false;\n        playbackInitialized = false;\n        streamingInitialized = false;\n        autoPlay = true;\n        providedStartTime = NaN;\n        protectionController = null;\n        offlineController = null;\n        protectionData = null;\n        adapter = null;\n        segmentBaseController = null;\n        Events.extend(MediaPlayerEvents);\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        customParametersModel = CustomParametersModel(context).getInstance();\n        videoModel = VideoModel(context).getInstance();\n        uriFragmentModel = URIFragmentModel(context).getInstance();\n    }\n\n    /**\n     * Configure media player with customs controllers. Helpful for tests\n     *\n     * @param {object=} config controllers configuration\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.capabilitiesFilter) {\n            capabilitiesFilter = config.capabilitiesFilter;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textController) {\n            textController = config.textController;\n        }\n        if (config.gapController) {\n            gapController = config.gapController;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n        if (config.catchupController) {\n            catchupController = config.catchupController;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.schemeLoaderFactory) {\n            schemeLoaderFactory = config.schemeLoaderFactory;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    /**\n     * Upon creating the MediaPlayer you must call initialize before you call anything else.\n     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}\n     * with all your extensions prior to calling initialize.\n     *\n     * ALL arguments are optional and there are individual methods to set each argument later on.\n     * The args in this method are just for convenience and should only be used for a simple player setup.\n     *\n     * @param {HTML5MediaElement=} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}\n     * @param {string=} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}\n     * @param {boolean=} autoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @param {number|string} startTime - For VoD content the start time is relative to the start time of the first period.\n     * For live content\n     * If the parameter starts from prefix posix: it signifies the absolute time range defined in seconds of Coordinated Universal Time (ITU-R TF.460-6). This is the number of seconds since 01-01-1970 00:00:00 UTC. Fractions of seconds may be optionally specified down to the millisecond level.\n     * If no posix prefix is used the starttime is relative to MPD@availabilityStartTime\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function initialize(view, source, autoPlay, startTime = NaN) {\n        if (!capabilities) {\n            capabilities = Capabilities(context).getInstance();\n            capabilities.setConfig({\n                settings\n            })\n        }\n\n        if (!errHandler) {\n            errHandler = ErrorHandler(context).getInstance();\n        }\n\n        if (!capabilities.supportsMediaSource()) {\n            errHandler.error(new DashJSError(Errors.CAPABILITY_MEDIASOURCE_ERROR_CODE, Errors.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE));\n            return;\n        }\n\n        if (!mediaPlayerInitialized) {\n            mediaPlayerInitialized = true;\n\n            // init some controllers and models\n            timelineConverter = TimelineConverter(context).getInstance();\n            if (!abrController) {\n                abrController = AbrController(context).getInstance();\n                abrController.setConfig({\n                    settings: settings\n                });\n            }\n\n            if (!schemeLoaderFactory) {\n                schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\n            }\n\n            if (!playbackController) {\n                playbackController = PlaybackController(context).getInstance();\n            }\n\n            if (!mediaController) {\n                mediaController = MediaController(context).getInstance();\n            }\n\n            if (!streamController) {\n                streamController = StreamController(context).getInstance();\n            }\n\n            if (!gapController) {\n                gapController = GapController(context).getInstance();\n            }\n\n            if (!catchupController) {\n                catchupController = CatchupController(context).getInstance();\n            }\n\n            if (!serviceDescriptionController) {\n                serviceDescriptionController = ServiceDescriptionController(context).getInstance();\n            }\n\n            if (!contentSteeringController) {\n                contentSteeringController = ContentSteeringController(context).getInstance();\n            }\n\n            if (!capabilitiesFilter) {\n                capabilitiesFilter = CapabilitiesFilter(context).getInstance();\n            }\n\n            adapter = DashAdapter(context).getInstance();\n\n            manifestModel = ManifestModel(context).getInstance();\n\n            cmcdModel = CmcdModel(context).getInstance();\n\n            cmsdModel = CmsdModel(context).getInstance();\n\n            dashMetrics = DashMetrics(context).getInstance({\n                settings: settings\n            });\n\n            domStorage = DOMStorage(context).getInstance({\n                settings: settings\n            });\n\n            adapter.setConfig({\n                constants: Constants,\n                cea608parser: cea608parser,\n                errHandler: errHandler,\n                BASE64: BASE64\n            });\n\n            if (!baseURLController) {\n                baseURLController = BaseURLController(context).create();\n            }\n\n            baseURLController.setConfig({\n                adapter,\n                contentSteeringController\n            });\n\n            serviceDescriptionController.setConfig({\n                adapter\n            });\n\n            if (!segmentBaseController) {\n                segmentBaseController = SegmentBaseController(context).getInstance({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    errHandler: errHandler,\n                    baseURLController: baseURLController,\n                    events: Events,\n                    eventBus: eventBus,\n                    debug: debug,\n                    boxParser: BoxParser(context).getInstance(),\n                    requestModifier: RequestModifier(context).getInstance(),\n                    errors: Errors\n                });\n            }\n\n            // configure controllers\n            mediaController.setConfig({\n                domStorage,\n                settings,\n                customParametersModel\n            });\n\n            mediaPlayerModel.setConfig({\n                playbackController,\n                serviceDescriptionController\n            });\n\n            contentSteeringController.setConfig({\n                adapter,\n                errHandler,\n                dashMetrics,\n                mediaPlayerModel,\n                manifestModel,\n                serviceDescriptionController,\n                eventBus,\n                requestModifier: RequestModifier(context).getInstance()\n            })\n\n            restoreDefaultUTCTimingSources();\n            setAutoPlay(autoPlay !== undefined ? autoPlay : true);\n\n            // Detect and initialize offline module to support offline contents playback\n            _detectOffline();\n        }\n\n        if (view) {\n            attachView(view);\n        }\n\n        if (source) {\n            attachSource(source, startTime);\n        }\n\n        logger.info('[dash.js ' + getVersion() + '] ' + 'MediaPlayer has been initialized');\n    }\n\n    /**\n     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by\n     * calling attachSource with a new source file.\n     *\n     * This call does not destroy the MediaPlayer. To destroy the MediaPlayer and free all of its\n     * memory, call destroy().\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function reset() {\n        attachSource(null);\n        attachView(null);\n        protectionData = null;\n        if (protectionController) {\n            protectionController.reset();\n            protectionController = null;\n        }\n        if (metricsReportingController) {\n            metricsReportingController.reset();\n            metricsReportingController = null;\n        }\n        if (customParametersModel) {\n            customParametersModel.reset();\n        }\n\n        settings.reset();\n\n        if (offlineController) {\n            offlineController.reset();\n            offlineController = null;\n        }\n    }\n\n    /**\n     * Completely destroys the media player and frees all memory.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function destroy() {\n        reset();\n        FactoryMaker.deleteSingletonInstances(context);\n    }\n\n    /**\n     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.\n     *\n     * @returns {boolean} The current ready state of the MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isReady() {\n        return (!!source && !!videoModel.getElement());\n    }\n\n    /**\n     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @param {Object} options - object to define various options such as priority and mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function on(type, listener, scope, options) {\n        eventBus.on(type, listener, scope, options);\n    }\n\n    /**\n     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function off(type, listener, scope) {\n        eventBus.off(type, listener, scope);\n    }\n\n    /**\n     * Current version of Dash.js\n     * @returns {string} the current dash.js version string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVersion() {\n        return getVersionString();\n    }\n\n    /**\n     * Use this method to access the dash.js logging class.\n     *\n     * @returns {Debug}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDebug() {\n        return debug;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PLAYBACK FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Causes the player to begin streaming the media as set by the {@link module:MediaPlayer#attachSource attachSource()}\n     * method in preparation for playing. It specifically does not require a view to be attached with {@link module:MediaPlayer#attachSource attachView()} to begin preloading.\n     * When a view is attached after preloading, the buffered data is transferred to the attached mediaSource buffers.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function\n     * @instance\n     */\n    function preload() {\n        if (videoModel.getElement() || streamingInitialized) {\n            return;\n        }\n        if (source) {\n            _initializePlayback(providedStartTime);\n        } else {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n    }\n\n    /**\n     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.\n     * This method will call play on the native Video Element.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function play() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (!autoPlay || (isPaused() && playbackInitialized)) {\n            playbackController.play(true);\n        }\n    }\n\n    /**\n     * This method will call pause on the native Video Element.\n     *\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function pause() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        playbackController.pause();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the Video Element is paused.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isPaused() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isPaused();\n    }\n\n    /**\n     * Sets the currentTime property of the attached video element.  If it is a live stream with a\n     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * For dynamic streams duration() returns DVRWindow.end - DVRWindow.start. Consequently, the value provided to this function should be relative to DVRWindow.start.\n     * @see {@link module:MediaPlayer#getDVRSeekOffset getDVRSeekOffset()}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type or is NaN.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function seek(value) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        checkParameterType(value, 'number');\n\n        if (isNaN(value)) {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n\n        if (value < 0) {\n            value = 0;\n        }\n\n        let s = playbackController.getIsDynamic() ? getDVRSeekOffset(value) : value;\n\n        // For VoD limit the seek to the duration of the content\n        const videoElement = getVideoElement();\n        if (!playbackController.getIsDynamic() && videoElement.duration) {\n            s = Math.min(videoElement.duration, s);\n        }\n\n        playbackController.seek(s, false, false, true);\n    }\n\n    /**\n     * Seeks back to the original live edge (live edge as calculated at playback start). Only applies to live streams, for VoD streams this call will be ignored.\n     */\n    function seekToOriginalLive() {\n        if (!playbackInitialized || !isDynamic()) {\n            return;\n        }\n\n        playbackController.seekToOriginalLive();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isSeeking() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isSeeking();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of dynamic.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isDynamic() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getIsDynamic();\n    }\n\n    /**\n     * Returns a boolean that indicates whether the player is operating in low latency mode.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getLowLatencyModeEnabled() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getLowLatencyModeEnabled();\n    }\n\n    /**\n     * Use this method to set the native Video Element's playback rate.\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setPlaybackRate(value) {\n        getVideoElement().playbackRate = value;\n    }\n\n    /**\n     * Returns the current playback rate.\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getPlaybackRate() {\n        return getVideoElement().playbackRate;\n    }\n\n    /**\n     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.\n     * @instance\n     */\n    function setMute(value) {\n        checkParameterType(value, 'boolean');\n        getVideoElement().muted = value;\n    }\n\n    /**\n     * A Boolean that determines whether audio is muted.\n     * @returns {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isMuted() {\n        return getVideoElement().muted;\n    }\n\n    /**\n     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type, or is NaN or not between 0 and 1.\n     * @instance\n     */\n    function setVolume(value) {\n        if (typeof value !== 'number' || isNaN(value) || value < 0.0 || value > 1.0) {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        getVideoElement().volume = value;\n    }\n\n    /**\n     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVolume() {\n        return getVideoElement().volume;\n    }\n\n    /**\n     * The length of the buffer for a given media type, in seconds. Valid media\n     * types are \"video\", \"audio\" and \"text\". If no type is passed\n     * in, then the minimum of video, audio and text buffer length is\n     * returned. NaN is returned if an invalid type is requested, the\n     * presentation does not contain that type, or if no arguments are passed\n     * and the presentation does not include any adaption sets of valid media\n     * type.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'text'\n     * @returns {number} The length of the buffer for the given media type, in\n     *  seconds, or NaN\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferLength(type) {\n        const types = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT];\n        if (!type) {\n            const buffer = types.map(\n                t => getTracksFor(t).length > 0 ? getDashMetrics().getCurrentBufferLevel(t) : Number.MAX_VALUE\n            ).reduce(\n                (p, c) => Math.min(p, c)\n            );\n            return buffer === Number.MAX_VALUE ? NaN : buffer;\n        } else {\n            if (types.indexOf(type) !== -1) {\n                const buffer = getDashMetrics().getCurrentBufferLevel(type);\n                return buffer ? buffer : NaN;\n            } else {\n                logger.warn('getBufferLength requested for invalid type');\n                return NaN;\n            }\n        }\n    }\n\n    /**\n     * The timeShiftBufferLength (DVR Window), in seconds.\n     *\n     * @returns {number} The window of allowable play time behind the live point of a live stream as defined in the manifest.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRWindowSize() {\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        if (!metric) {\n            return 0;\n        }\n        return metric.manifestInfo.dvrWindowSize;\n    }\n\n    /**\n     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).\n     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method\n     * which will calculate this value for you and set the video element's currentTime property all in one simple call.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).\n     * @see {@link module:MediaPlayer#seek seek()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRSeekOffset(value) {\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        if (!metric) {\n            return 0;\n        }\n\n        let liveDelay = playbackController.getOriginalLiveDelay();\n\n        let val = metric.range.start + value;\n\n        if (val > (metric.range.end - liveDelay)) {\n            val = metric.range.end - liveDelay;\n        }\n\n        return val;\n    }\n\n    /**\n     * Returns the target live delay\n     * @returns {number} The target live delay\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTargetLiveDelay() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        return playbackController.getOriginalLiveDelay();\n    }\n\n    /**\n     * Current time of the playhead, in seconds.\n     *\n     * If called with no arguments then the returned time value is time elapsed since the start point of the first stream, or if it is a live stream, then the time will be based on the return value of the {@link module:MediaPlayer#duration duration()} method.\n     * However if a stream ID is supplied then time is relative to the start of that stream, or is null if there is no such stream id in the manifest.\n     *\n     * @param {string} streamId - The ID of a stream that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first stream.\n     * @returns {number} The current playhead time of the media, or null.\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function time(streamId) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let t = getVideoElement().currentTime;\n\n        if (streamId !== undefined) {\n            t = streamController.getTimeRelativeToStreamId(t, streamId);\n        } else if (playbackController.getIsDynamic()) {\n            const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n            let metric = dashMetrics.getCurrentDVRInfo(type);\n            t = (metric === null || t === 0) ? 0 : Math.max(0, (t - metric.range.start));\n        }\n\n        return t;\n    }\n\n    /**\n     * Duration of the media's playback, in seconds.\n     *\n     * @returns {number} The current duration of the media. For a dynamic stream this will return DVRWindow.end - DVRWindow.start\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function duration() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let d = getVideoElement().duration;\n\n        if (playbackController.getIsDynamic()) {\n            const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n            let metric = dashMetrics.getCurrentDVRInfo(type);\n            d = metric ? (metric.range.end - metric.range.start) : 0;\n        }\n        return d;\n    }\n\n    /**\n     * Use this method to get the current playhead time as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams. If called before play() has begun, it will return a value of NaN.\n     *\n     * @returns {number} The current playhead time as UTC timestamp.\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function timeAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (time() < 0) {\n            return NaN;\n        }\n        return _getAsUTC(time());\n    }\n\n    /**\n     * Use this method to get the current duration as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams.\n     *\n     * @returns {number} The current duration as UTC timestamp.\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function durationAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return _getAsUTC(duration());\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        AUTO BITRATE\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Gets the top quality BitrateInfo checking portal limit and max allowed.\n     * It calls getMaxAllowedIndexFor internally\n     *\n     * @param {MediaType} type - 'video' or 'audio'\n     * @memberof module:MediaPlayer\n     * @returns {BitrateInfo | null}\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getTopBitrateInfoFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        return abrController.getTopBitrateInfoFor(type);\n    }\n\n    /**\n     * Gets the current download quality for media type video, audio or images. For video and audio types the ABR\n     * rules update this value before every new download unless autoSwitchBitrate is set to false. For 'image'\n     * type, thumbnails, there is no ABR algorithm and quality is set manually.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'image' (thumbnails)\n     * @returns {number} the quality index, 0 corresponding to the lowest bitrate\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setQualityFor setQualityFor()}\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getQualityFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        if (type === Constants.IMAGE) {\n            const activeStream = getActiveStream();\n            if (!activeStream) {\n                return -1;\n            }\n            const thumbnailController = activeStream.getThumbnailController();\n\n            return !thumbnailController ? -1 : thumbnailController.getCurrentTrackIndex();\n        }\n        return abrController.getQualityFor(type);\n    }\n\n    /**\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically selecting it.\n     * This value will be overwritten by the ABR rules unless autoSwitchBitrate is set to false.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'image'\n     * @param {number} value - the quality index, 0 corresponding to the lowest bitrate\n     * @param {boolean} forceReplace - true if segments have to be replaced by segments of the new quality\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#getQualityFor getQualityFor()}\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function setQualityFor(type, value, forceReplace = false) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        if (type === Constants.IMAGE) {\n            const activeStream = getActiveStream();\n            if (!activeStream) {\n                return;\n            }\n            const thumbnailController = activeStream.getThumbnailController();\n            if (thumbnailController) {\n                thumbnailController.setTrackByIndex(value);\n            }\n        }\n        abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), value, { forceReplace });\n    }\n\n    /**\n     * Update the video element size variables\n     * Should be called on window resize (or any other time player is resized). Fullscreen does trigger a window resize event.\n     *\n     * Once windowResizeEventCalled = true, abrController.checkPortalSize() will use element size variables rather than querying clientWidth every time.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function updatePortalSize() {\n        abrController.setElementSize();\n        abrController.setWindowResizeEventCalled(true);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        MEDIA PLAYER CONFIGURATION\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>\n     *\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.\n     * @instance\n     *\n     */\n    function setAutoPlay(value) {\n        checkParameterType(value, 'boolean');\n        autoPlay = value;\n    }\n\n    /**\n     * @returns {boolean} The current autoPlay state.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     * @returns {number|NaN} Current live stream latency in seconds. It is the difference between now time and time position at the playback head.\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     */\n    function getCurrentLiveLatency() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!playbackInitialized) {\n            return NaN;\n        }\n\n        return playbackController.getCurrentLiveLatency();\n    }\n\n    /**\n     * Add a custom ABR Rule\n     * Rule will be apply on next stream if a stream is being played\n     *\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\n     * @param {object} rule - the rule object instance\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.\n     * @instance\n     */\n    function addABRCustomRule(type, rulename, rule) {\n        customParametersModel.addAbrCustomRule(type, rulename, rule);\n    }\n\n    /**\n     * Remove a custom ABR Rule\n     *\n     * @param {string} rulename - name of the rule to be removed\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeABRCustomRule(rulename) {\n        customParametersModel.removeAbrCustomRule(rulename);\n    }\n\n    /**\n     * Remove all ABR custom rules\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeAllABRCustomRule() {\n        customParametersModel.removeAllAbrCustomRule();\n    }\n\n    /**\n     * Returns all ABR custom rules\n     * @return {Array}\n     */\n    function getABRCustomRules() {\n        return customParametersModel.getAbrCustomRules();\n    }\n\n    /**\n     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.\n     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>\n     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.\n     * This will allow the date header on the manifest to be used instead of a time server</p>\n     * @param {string} schemeIdUri - <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2014</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2014</li>\n     * <li>urn:mpeg:dash:utc:direct:2014</li>\n     * </ul>\n     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use\n     * 2012 in the URI, rather than 2014. support these for now.</p>\n     * <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2012</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2012</li>\n     * <li>urn:mpeg:dash:utc:direct:2012</li>\n     * </ul>\n     * @param {string} value - Path to a time source.\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com/?iso&ms/li>\n     * </ul>\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}\n     * @instance\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        customParametersModel.addUTCTimingSource(schemeIdUri, value);\n    }\n\n    /**\n     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the\n     * entry to be removed from the array</p>\n     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments, schemeIdUri and value are not string type.\n     * @instance\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        customParametersModel.removeUTCTimingSource(schemeIdUri, value);\n    }\n\n    /**\n     * <p>Allows you to clear the stored array of time sources.</p>\n     * <p>Example use: If you have exposed the Date header, calling this method\n     * will allow the date header on the manifest to be used instead of the time server.</p>\n     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back\n     * to using a binary search to discover the live edge</p>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}\n     * @instance\n     */\n    function clearDefaultUTCTimingSources() {\n        customParametersModel.clearDefaultUTCTimingSources();\n    }\n\n    /**\n     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>\n     *\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com/?iso&ms</li>\n     * </ul>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function restoreDefaultUTCTimingSources() {\n        customParametersModel.restoreDefaultUTCTimingSources();\n    }\n\n    /**\n     * Returns the average throughput computed in the ABR logic\n     *\n     * @param {MediaType} type\n     * @return {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAverageThroughput(type) {\n        const throughputHistory = abrController.getThroughputHistory();\n        const isDynamic = playbackController.getIsDynamic();\n\n        return throughputHistory ? throughputHistory.getAverageThroughput(type, isDynamic) : 0;\n    }\n\n    /**\n     * Sets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @default false\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setXHRWithCredentialsForType(type, value) {\n        customParametersModel.setXHRWithCredentialsForType(type, value);\n    }\n\n    /**\n     * Gets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getXHRWithCredentialsForType(type) {\n        return customParametersModel.getXHRWithCredentialsForType(type);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        OFFLINE\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Detects if Offline is included and returns an instance of OfflineController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getOfflineController() {\n        return _detectOffline();\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        METRICS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics\n     * stored in dash.js\n     *\n     * @see {@link module:DashMetrics}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashMetrics() {\n        return dashMetrics;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        TEXT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enable/disable text\n     * When enabling text, dash will choose the previous selected text track\n     *\n     * @param {boolean} enable - true to enable text, false otherwise (same as setTextTrack(-1))\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableText(enable) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.enableText(activeStreamInfo.id, enable);\n    }\n\n    /**\n     * Enable/disable text\n     * When enabling dash will keep downloading and process fragmented text tracks even if all tracks are in mode \"hidden\"\n     *\n     * @param {boolean} enable - true to enable text streaming even if all text tracks are hidden.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableForcedTextStreaming(enable) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.enableForcedTextStreaming(enable);\n    }\n\n    /**\n     * Return if text is enabled\n     *\n     * @return {boolean} return true if text is enabled, false otherwise\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isTextEnabled() {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.isTextEnabled(activeStreamInfo);\n    }\n\n    /**\n     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to\n     * set the track mode on the video object to switch a track when using this method.\n     * @param {number} idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.\n     * @see {@link MediaPlayerEvents#event:TEXT_TRACK_ADDED dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextTrack(idx) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return;\n        }\n\n        textController.setTextTrack(activeStreamInfo.id, idx);\n    }\n\n    function getCurrentTextTrackIndex() {\n        let idx = NaN;\n\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return;\n        }\n\n        idx = textController.getCurrentTrackIdx(activeStreamInfo.id);\n\n        return idx;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        VIDEO ELEMENT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns instance of Video Element that was attached by calling attachView()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function\n     * @instance\n     */\n    function getVideoElement() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return videoModel.getElement();\n    }\n\n    /**\n     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.\n     *\n     * @param {Object} element - An HTMLMediaElement that has already been defined in the DOM (or equivalent stub).\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function attachView(element) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        videoModel.setElement(element);\n\n        if (element) {\n            _detectProtection();\n            _detectMetricsReporting();\n            _detectMss();\n\n            if (streamController) {\n                streamController.switchToVideoElement(providedStartTime);\n            }\n        }\n\n        if (playbackInitialized) { //Reset if we have been playing before, so this is a new element.\n            _resetPlaybackControllers();\n        }\n\n        _initializePlayback(providedStartTime);\n    }\n\n    /**\n     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTTMLRenderingDiv() {\n        return videoModel ? videoModel.getTTMLRenderingDiv() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.\n     *\n     * @param {HTMLDivElement} div - An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function\n     * @instance\n     */\n    function attachTTMLRenderingDiv(div) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setTTMLRenderingDiv(div);\n    }\n\n    function attachVttRenderingDiv(div) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setVttRenderingDiv(div);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        STREAM AND TRACK MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * @param {MediaType} type\n     * @returns {Array}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getBitrateInfoListFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let stream = getActiveStream();\n        return stream ? stream.getBitrateListFor(type) : [];\n    }\n\n    /**\n     * This method returns the list of all available streams from a given manifest\n     * @param {Object} manifest\n     * @returns {Array} list of {@link StreamInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getStreamsFromManifest(manifest) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        return adapter.getStreamsInfo(manifest);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type\n     * @param {MediaType} type\n     * @returns {Array} list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getTracksFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n\n        if (!streamInfo) {\n            return [];\n        }\n\n        return mediaController.getTracksFor(type, streamInfo.id);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest\n     * @param {MediaType} type\n     * @param {Object} manifest\n     * @param {Object} streamInfo\n     * @returns {Array}  list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getTracksForTypeFromManifest(type, manifest, streamInfo) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n\n        streamInfo = streamInfo || adapter.getStreamsInfo(manifest, 1)[0];\n\n        return streamInfo ? adapter.getAllMediaInfoForType(streamInfo, type, manifest) : [];\n    }\n\n    /**\n     * @param {MediaType} type\n     * @returns {Object|null} {@link MediaInfo}\n     *\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getCurrentTrackFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        return mediaController.getCurrentTrackFor(type, streamInfo.id);\n    }\n\n    /**\n     * This method allows to set media settings that will be used to pick the initial track. Format of the settings\n     * is following: <br />\n     * {lang: langValue (can be either a string primitive, a string object, or a RegExp object to match),\n     *  index: indexValue,\n     *  viewpoint: viewpointValue,\n     *  audioChannelConfiguration: audioChannelConfigurationValue,\n     *  accessibility: accessibilityValue,\n     *  role: roleValue}\n     *\n     * @param {MediaType} type\n     * @param {Object} value\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function setInitialMediaSettingsFor(type, value) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setInitialSettings(type, value);\n    }\n\n    /**\n     * This method returns media settings that is used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n     *  index: indexValue,\n     *  viewpoint: viewpointValue,\n     *  audioChannelConfiguration: audioChannelConfigurationValue,\n     *  accessibility: accessibilityValue,\n     *  role: roleValue}\n     * @param {MediaType} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function getInitialMediaSettingsFor(type) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        return mediaController.getInitialSettings(type);\n    }\n\n    /**\n     * @param {MediaInfo} track - instance of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function setCurrentTrack(track) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setTrack(track);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        Custom filter and callback functions\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Registers a custom capabilities filter. This enables application to filter representations to use.\n     * The provided callback function shall return a boolean based on whether or not to use the representation.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the custom capabilities filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerCustomCapabilitiesFilter(filter) {\n        customParametersModel.registerCustomCapabilitiesFilter(filter);\n    }\n\n    /**\n     * Unregisters a custom capabilities filter.\n     * @param {function} filter - the custom capabilities filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterCustomCapabilitiesFilter(filter) {\n        customParametersModel.unregisterCustomCapabilitiesFilter(filter);\n    }\n\n    /**\n     * Registers a custom initial track selection function. Only one function is allowed. Calling this method will overwrite a potentially existing function.\n     * @param {function} customFunc - the custom function that returns the initial track\n     */\n    function setCustomInitialTrackSelectionFunction(customFunc) {\n        customParametersModel.setCustomInitialTrackSelectionFunction(customFunc);\n    }\n\n    /**\n     * Resets the custom initial track selection\n     */\n    function resetCustomInitialTrackSelectionFunction() {\n        customParametersModel.resetCustomInitialTrackSelectionFunction(null);\n\n    }\n\n    /**\n     * Registers a license request filter. This enables application to manipulate/overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license request filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerLicenseRequestFilter(filter) {\n        customParametersModel.registerLicenseRequestFilter(filter);\n    }\n\n    /**\n     * Registers a license response filter. This enables application to manipulate/overwrite the response data\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license response filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerLicenseResponseFilter(filter) {\n        customParametersModel.registerLicenseResponseFilter(filter);\n    }\n\n    /**\n     * Unregisters a license request filter.\n     * @param {function} filter - the license request filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterLicenseRequestFilter(filter) {\n        customParametersModel.unregisterLicenseRequestFilter(filter);\n    }\n\n    /**\n     * Unregisters a license response filter.\n     * @param {function} filter - the license response filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterLicenseResponseFilter(filter) {\n        customParametersModel.unregisterLicenseResponseFilter(filter);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PROTECTION MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Detects if Protection is included and returns an instance of ProtectionController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getProtectionController() {\n        return _detectProtection();\n    }\n\n    /**\n     * Will override dash.js protection controller.\n     * @param {ProtectionController} value - valid protection controller instance.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachProtectionController(value) {\n        protectionController = value;\n    }\n\n    /**\n     * Sets Protection Data required to setup the Protection Module (DRM). Protection Data must\n     * be set before initializing MediaPlayer or, once initialized, before PROTECTION_CREATED event is fired.\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @see {@link ProtectionEvents#event:PROTECTION_CREATED dashjs.Protection.events.PROTECTION_CREATED}\n     * @param {ProtectionDataSet} value - object containing\n     * property names corresponding to key system name strings and associated\n     * values being instances of.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setProtectionData(value) {\n        protectionData = value;\n\n        // Propagate changes in case StreamController is already created\n        if (streamController) {\n            streamController.setProtectionData(protectionData);\n        }\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        THUMBNAILS MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Provide the thumbnail at time position. This can be asynchronous, so you must provide a callback ro retrieve thumbnails informations\n     * @param {number} time - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\n     * @param {function} callback - A Callback function provided when retrieving thumbnail the given time position. Thumbnail object is null in case there are is not a thumbnails representation or\n     * if it doesn't contain a thumbnail for the given time position.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function provideThumbnail(time, callback) {\n        if (typeof callback !== 'function') {\n            return;\n        }\n        if (time < 0) {\n            callback(null);\n            return;\n        }\n        const s = playbackController.getIsDynamic() ? getDVRSeekOffset(time) : time;\n        const stream = streamController.getStreamForTime(s);\n        if (stream === null) {\n            callback(null);\n            return;\n        }\n\n        const thumbnailController = stream.getThumbnailController();\n        if (!thumbnailController) {\n            callback(null);\n            return;\n        }\n\n        return thumbnailController.provide(s, callback);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        TOOLS AND OTHERS FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Allows application to retrieve a manifest.  Manifest loading is asynchronous and requires the app-provided callback function\n     *\n     * @param {string} url - url the manifest url\n     * @param {function} callback - A Callback function provided when retrieving manifests\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function retrieveManifest(url, callback) {\n        let manifestLoader = _createManifestLoader();\n        let self = this;\n\n        const handler = function (e) {\n            if (!e.error) {\n                callback(e.manifest);\n            } else {\n                callback(null, e.error);\n            }\n            eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n            manifestLoader.reset();\n        };\n\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n\n        uriFragmentModel.initialize(url);\n        manifestLoader.load(url);\n    }\n\n    /**\n     * Returns the source string or manifest that was attached by calling attachSource()\n     * @returns {string | manifest}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function\n     * @instance\n     */\n    function getSource() {\n        if (!source) {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n        return source;\n    }\n\n    /**\n     * Sets the source to a new manifest URL or object without reloading\n     * Useful for updating CDN tokens\n     * @param urlOrManifest\n     */\n    function updateSource(urlOrManifest) {\n        source = urlOrManifest\n        streamController.load(source);\n    }\n\n    /**\n     * Use this method to set a source URL to a valid MPD manifest file OR\n     * a previously downloaded and parsed manifest object.  Optionally, can\n     * also provide protection information\n     *\n     * @param {string|Object} urlOrManifest - A URL to a valid MPD manifest file, or a\n     * parsed manifest object.\n     * @param {number|string} startTime - For VoD content the start time is relative to the start time of the first period.\n     * For live content\n     * If the parameter starts from prefix posix: it signifies the absolute time range defined in seconds of Coordinated Universal Time (ITU-R TF.460-6). This is the number of seconds since 01-01-1970 00:00:00 UTC. Fractions of seconds may be optionally specified down to the millisecond level.\n     * If no posix prefix is used the starttime is relative to MPD@availabilityStartTime\n     *\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachSource(urlOrManifest, startTime = NaN) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (typeof urlOrManifest === 'string') {\n            uriFragmentModel.initialize(urlOrManifest);\n        }\n\n        if (startTime == null) {\n            startTime = NaN;\n        }\n\n        if (!isNaN(startTime)) {\n            startTime = Math.max(0, startTime);\n        }\n\n        providedStartTime = startTime;\n        source = urlOrManifest;\n\n        if (streamingInitialized || playbackInitialized) {\n            _resetPlaybackControllers();\n        }\n\n        if (isReady()) {\n            _initializePlayback(providedStartTime);\n        }\n    }\n\n    /**\n     * Get the current settings object being used on the player.\n     * @returns {PlayerSettings} The settings object being used.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSettings() {\n        return settings.get();\n    }\n\n    /**\n     * @summary Update the current settings object being used on the player. Anything left unspecified is not modified.\n     * @param {PlayerSettings} settingsObj - An object corresponding to the settings definition.\n     * @description This function does not update the entire object, only properties in the passed in object are updated.\n     *\n     * This means that updateSettings({a: x}) and updateSettings({b: y}) are functionally equivalent to\n     * updateSettings({a: x, b: y}). If the default values are required again, @see{@link resetSettings}.\n     * @example\n     * player.updateSettings({\n     *      streaming: {\n     *          lowLatencyEnabled: false,\n     *          abr: {\n     *              maxBitrate: { audio: 100, video: 1000 }\n     *          }\n     *      }\n     *  });\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function updateSettings(settingsObj) {\n        settings.update(settingsObj);\n    }\n\n    /**\n     * Resets the settings object back to the default.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function resetSettings() {\n        settings.reset();\n    }\n\n    /**\n     * A utility methods which converts UTC timestamp value into a valid time and date string.\n     *\n     * @param {number} time - UTC timestamp to be converted into date and time.\n     * @param {string} locales - a region identifier (i.e. en_US).\n     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.\n     * @param {boolean} withDate - default is false. Set to true to append current date to UTC time format.\n     * @returns {string} A formatted time and date string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function formatUTC(time, locales, hour12, withDate = false) {\n        const dt = new Date(time * 1000);\n        const d = dt.toLocaleDateString(locales);\n        const t = dt.toLocaleTimeString(locales, {\n            hour12: hour12\n        });\n        return withDate ? t + ' ' + d : t;\n    }\n\n    /**\n     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).\n     *\n     * @param {number} value - A number in seconds to be converted into a formatted time code.\n     * @returns {string} A formatted time code string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function convertToTimeCode(value) {\n        value = Math.max(value, 0);\n\n        let h = Math.floor(value / 3600);\n        let m = Math.floor((value % 3600) / 60);\n        let s = Math.floor((value % 3600) % 60);\n        return (h === 0 ? '' : (h < 10 ? '0' + h.toString() + ':' : h.toString() + ':')) + (m < 10 ? '0' + m.toString() : m.toString()) + ':' + (s < 10 ? '0' + s.toString() : s.toString());\n    }\n\n    /**\n     * This method should be used to extend or replace internal dash.js objects.\n     * There are two ways to extend dash.js (determined by the override argument):\n     * <ol>\n     * <li>If you set override to true any public method or property in your custom object will\n     * override the dash.js parent object's property(ies) and will be used instead but the\n     * dash.js parent module will still be created.</li>\n     *\n     * <li>If you set override to false your object will completely replace the dash.js object.\n     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>\n     * </ol>\n     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>\n     * <ul>\n     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>\n     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>\n     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>\n     * </ul>\n     * <b>You must call extend before you call initialize</b>\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @param {string} parentNameString - name of parent module\n     * @param {Object} childInstance - overriding object\n     * @param {boolean} override - replace only some methods (true) or the whole object (false)\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function extend(parentNameString, childInstance, override) {\n        FactoryMaker.extend(parentNameString, childInstance, override, context);\n    }\n\n    /**\n     * This method returns the active stream\n     *\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getActiveStream() {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        return streamInfo ? streamController.getStreamById(streamInfo.id) : null;\n    }\n\n    /**\n     * Returns the DashAdapter.js Module.\n     *\n     * @see {@link module:DashAdapter}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashAdapter() {\n        return adapter;\n    }\n\n    /**\n     * Triggers a request to the content steering server to update the steering information.\n     * @return {Promise<any>}\n     */\n    function triggerSteeringRequest() {\n        if (contentSteeringController) {\n            return contentSteeringController.loadSteeringData();\n        }\n    }\n\n    /**\n     * Returns the current response data of the content steering server\n     * @return {object}\n     */\n    function getCurrentSteeringResponseData() {\n        if (contentSteeringController) {\n            return contentSteeringController.getCurrentSteeringResponseData();\n        }\n    }\n\n\n    /**\n     * Returns all BaseURLs that are available including synthesized elements (e.g by content steering)\n     * @returns {BaseURL[]}\n     */\n    function getAvailableBaseUrls() {\n        const manifest = manifestModel.getValue();\n\n        if (!manifest) {\n            return [];\n        }\n\n        return baseURLController.getBaseUrls(manifest);\n    }\n\n\n    /**\n     * Returns the available location elements including synthesized elements (e.g by content steering)\n     * @returns {MpdLocation[]}\n     */\n    function getAvailableLocations() {\n        const manifest = manifestModel.getValue();\n\n        if (!manifest) {\n            return [];\n        }\n\n        const manifestLocations = adapter.getLocation(manifest);\n        const synthesizedElements = contentSteeringController.getSynthesizedLocationElements(manifestLocations);\n\n        return manifestLocations.concat(synthesizedElements);\n    }\n\n    //***********************************\n    // PRIVATE METHODS\n    //***********************************\n\n    function _resetPlaybackControllers() {\n        playbackInitialized = false;\n        streamingInitialized = false;\n        adapter.reset();\n        streamController.reset();\n        gapController.reset();\n        catchupController.reset();\n        playbackController.reset();\n        serviceDescriptionController.reset();\n        contentSteeringController.reset();\n        abrController.reset();\n        mediaController.reset();\n        segmentBaseController.reset();\n        if (protectionController) {\n            if (settings.get().streaming.protection.keepProtectionMediaKeys) {\n                protectionController.stop();\n            } else {\n                protectionController.reset();\n                protectionController = null;\n                _detectProtection();\n            }\n        }\n        textController.reset();\n        cmcdModel.reset();\n        cmsdModel.reset();\n    }\n\n    function _createPlaybackControllers() {\n        // creates or get objects instances\n        const manifestLoader = _createManifestLoader();\n\n        if (!streamController) {\n            streamController = StreamController(context).getInstance();\n        }\n\n        if (!textController) {\n            textController = TextController(context).create({\n                errHandler,\n                manifestModel,\n                adapter,\n                mediaController,\n                videoModel,\n                settings\n            });\n        }\n\n        capabilitiesFilter.setConfig({\n            capabilities,\n            customParametersModel,\n            adapter,\n            settings,\n            manifestModel,\n            errHandler\n        });\n\n        streamController.setConfig({\n            capabilities,\n            capabilitiesFilter,\n            manifestLoader,\n            manifestModel,\n            mediaPlayerModel,\n            customParametersModel,\n            protectionController,\n            textController,\n            adapter,\n            dashMetrics,\n            errHandler,\n            timelineConverter,\n            videoModel,\n            playbackController,\n            serviceDescriptionController,\n            contentSteeringController,\n            abrController,\n            mediaController,\n            settings,\n            baseURLController,\n            uriFragmentModel,\n            segmentBaseController\n        });\n\n        gapController.setConfig({\n            settings,\n            playbackController,\n            streamController,\n            videoModel,\n            timelineConverter,\n            adapter\n        });\n\n        playbackController.setConfig({\n            streamController,\n            serviceDescriptionController,\n            dashMetrics,\n            adapter,\n            videoModel,\n            timelineConverter,\n            settings\n        });\n\n        catchupController.setConfig({\n            streamController,\n            playbackController,\n            mediaPlayerModel,\n            videoModel,\n            settings\n        })\n\n        abrController.setConfig({\n            streamController,\n            domStorage,\n            mediaPlayerModel,\n            customParametersModel,\n            cmsdModel,\n            dashMetrics,\n            adapter,\n            videoModel,\n            settings\n        });\n\n        cmcdModel.setConfig({\n            abrController,\n            dashMetrics,\n            playbackController\n        });\n\n        cmsdModel.setConfig({});\n\n        // initializes controller\n        abrController.initialize();\n        streamController.initialize(autoPlay, protectionData);\n        textController.initialize();\n        gapController.initialize();\n        catchupController.initialize();\n        cmcdModel.initialize();\n        cmsdModel.initialize();\n        contentSteeringController.initialize();\n        segmentBaseController.initialize();\n    }\n\n    function _createManifestLoader() {\n        return ManifestLoader(context).create({\n            debug: debug,\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: RequestModifier(context).getInstance(),\n            mssHandler: mssHandler,\n            settings: settings\n        });\n    }\n\n    function _detectProtection() {\n        if (protectionController) {\n            return protectionController;\n        }\n        // do not require Protection as dependencies as this is optional and intended to be loaded separately\n        let Protection = dashjs.Protection; /* jshint ignore:line */\n        if (typeof Protection === 'function') { //TODO need a better way to register/detect plugin components\n            let protection = Protection(context).create();\n            Events.extend(Protection.events);\n            MediaPlayerEvents.extend(Protection.events, {\n                publicOnly: true\n            });\n            Errors.extend(Protection.errors);\n            if (!capabilities) {\n                capabilities = Capabilities(context).getInstance();\n            }\n            protectionController = protection.createProtectionSystem({\n                debug,\n                errHandler,\n                videoModel,\n                customParametersModel,\n                capabilities,\n                eventBus,\n                events: Events,\n                BASE64,\n                constants: Constants,\n                cmcdModel,\n                settings\n            });\n\n            return protectionController;\n        }\n\n        return null;\n    }\n\n    function _detectMetricsReporting() {\n        if (metricsReportingController) {\n            return;\n        }\n        // do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately\n        let MetricsReporting = dashjs.MetricsReporting; /* jshint ignore:line */\n        if (typeof MetricsReporting === 'function') { //TODO need a better way to register/detect plugin components\n            let metricsReporting = MetricsReporting(context).create();\n\n            metricsReportingController = metricsReporting.createMetricsReporting({\n                debug: debug,\n                eventBus: eventBus,\n                mediaElement: getVideoElement(),\n                adapter: adapter,\n                dashMetrics: dashMetrics,\n                mediaPlayerModel: mediaPlayerModel,\n                events: Events,\n                constants: Constants,\n                metricsConstants: MetricsConstants\n            });\n        }\n    }\n\n    function _detectMss() {\n        if (mssHandler) {\n            return;\n        }\n        // do not require MssHandler as dependencies as this is optional and intended to be loaded separately\n        let MssHandler = dashjs.MssHandler; /* jshint ignore:line */\n        if (typeof MssHandler === 'function') { //TODO need a better way to register/detect plugin components\n            Errors.extend(MssHandler.errors);\n            mssHandler = MssHandler(context).create({\n                eventBus: eventBus,\n                mediaPlayerModel: mediaPlayerModel,\n                dashMetrics: dashMetrics,\n                manifestModel: manifestModel,\n                playbackController: playbackController,\n                streamController: streamController,\n                protectionController: protectionController,\n                baseURLController: baseURLController,\n                errHandler: errHandler,\n                events: Events,\n                constants: Constants,\n                debug: debug,\n                initSegmentType: HTTPRequest.INIT_SEGMENT_TYPE,\n                BASE64: BASE64,\n                ISOBoxer: ISOBoxer,\n                settings: settings\n            });\n        }\n    }\n\n    function _detectOffline() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (offlineController) {\n            return offlineController;\n        }\n\n        // do not require Offline as dependencies as this is optional and intended to be loaded separately\n        let OfflineController = dashjs.OfflineController; /* jshint ignore:line */\n\n        if (typeof OfflineController === 'function') { //TODO need a better way to register/detect plugin components\n            Events.extend(OfflineController.events);\n            MediaPlayerEvents.extend(OfflineController.events, {\n                publicOnly: true\n            });\n            Errors.extend(OfflineController.errors);\n\n            const manifestLoader = _createManifestLoader();\n            const manifestUpdater = ManifestUpdater(context).create();\n\n            manifestUpdater.setConfig({\n                manifestModel,\n                adapter,\n                manifestLoader,\n                errHandler,\n                contentSteeringController\n            });\n\n            offlineController = OfflineController(context).create({\n                debug: debug,\n                manifestUpdater: manifestUpdater,\n                baseURLController: baseURLController,\n                manifestLoader: manifestLoader,\n                manifestModel: manifestModel,\n                mediaPlayerModel: mediaPlayerModel,\n                abrController: abrController,\n                playbackController: playbackController,\n                adapter: adapter,\n                errHandler: errHandler,\n                dashMetrics: dashMetrics,\n                timelineConverter: timelineConverter,\n                segmentBaseController: segmentBaseController,\n                schemeLoaderFactory: schemeLoaderFactory,\n                eventBus: eventBus,\n                events: Events,\n                errors: Errors,\n                constants: Constants,\n                settings: settings,\n                dashConstants: DashConstants,\n                urlUtils: URLUtils(context).getInstance()\n            });\n            return offlineController;\n        }\n\n        return null;\n    }\n\n    function _getAsUTC(valToConvert) {\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        let availableFrom,\n            utcValue;\n\n        if (!metric) {\n            return 0;\n        }\n        availableFrom = metric.manifestInfo.availableFrom.getTime() / 1000;\n        utcValue = valToConvert + (availableFrom + metric.range.start);\n        return utcValue;\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _initializePlayback(startTime = NaN) {\n\n        if (offlineController) {\n            offlineController.resetRecords();\n        }\n\n        if (!streamingInitialized && source) {\n            streamingInitialized = true;\n            logger.info('Streaming Initialized');\n            _createPlaybackControllers();\n\n            if (typeof source === 'string') {\n                streamController.load(source, startTime);\n            } else {\n                streamController.loadWithManifest(source, startTime);\n            }\n        }\n\n        if (!playbackInitialized && isReady()) {\n            playbackInitialized = true;\n            logger.info('Playback Initialized');\n        }\n    }\n\n    instance = {\n        initialize,\n        setConfig,\n        on,\n        off,\n        extend,\n        attachView,\n        attachSource,\n        isReady,\n        preload,\n        play,\n        isPaused,\n        pause,\n        isSeeking,\n        isDynamic,\n        getLowLatencyModeEnabled,\n        seek,\n        seekToOriginalLive,\n        setPlaybackRate,\n        getPlaybackRate,\n        setMute,\n        isMuted,\n        setVolume,\n        getVolume,\n        time,\n        duration,\n        timeAsUTC,\n        durationAsUTC,\n        getActiveStream,\n        getDVRWindowSize,\n        getDVRSeekOffset,\n        getAvailableBaseUrls,\n        getAvailableLocations,\n        getTargetLiveDelay,\n        convertToTimeCode,\n        formatUTC,\n        getVersion,\n        getDebug,\n        getBufferLength,\n        getTTMLRenderingDiv,\n        getVideoElement,\n        getSource,\n        updateSource,\n        getCurrentLiveLatency,\n        getTopBitrateInfoFor,\n        setAutoPlay,\n        getAutoPlay,\n        getDashMetrics,\n        getQualityFor,\n        setQualityFor,\n        updatePortalSize,\n        enableText,\n        enableForcedTextStreaming,\n        isTextEnabled,\n        setTextTrack,\n        getBitrateInfoListFor,\n        getStreamsFromManifest,\n        getTracksFor,\n        getTracksForTypeFromManifest,\n        getCurrentTrackFor,\n        setInitialMediaSettingsFor,\n        getInitialMediaSettingsFor,\n        setCurrentTrack,\n        addABRCustomRule,\n        removeABRCustomRule,\n        removeAllABRCustomRule,\n        getABRCustomRules,\n        getAverageThroughput,\n        retrieveManifest,\n        addUTCTimingSource,\n        removeUTCTimingSource,\n        clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources,\n        setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType,\n        getProtectionController,\n        attachProtectionController,\n        setProtectionData,\n        registerLicenseRequestFilter,\n        registerLicenseResponseFilter,\n        unregisterLicenseRequestFilter,\n        unregisterLicenseResponseFilter,\n        registerCustomCapabilitiesFilter,\n        unregisterCustomCapabilitiesFilter,\n        setCustomInitialTrackSelectionFunction,\n        resetCustomInitialTrackSelectionFunction,\n        attachTTMLRenderingDiv,\n        attachVttRenderingDiv,\n        getCurrentTextTrackIndex,\n        provideThumbnail,\n        getDashAdapter,\n        getOfflineController,\n        triggerSteeringRequest,\n        getCurrentSteeringResponseData,\n        getSettings,\n        updateSettings,\n        resetSettings,\n        reset,\n        destroy\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayer.__dashjs_factory_name = 'MediaPlayer';\nconst factory = FactoryMaker.getClassFactory(MediaPlayer);\nfactory.events = MediaPlayerEvents;\nfactory.errors = Errors;\nFactoryMaker.updateClassFactory(MediaPlayer.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the BaseURLs have been updated.\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\n         */\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is started\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\n         */\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\n\n        /**\n         * Triggered when the manifest loading is finished, providing the request object information\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\n         */\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\n\n        /**\n         * Triggered when the manifest load is complete, providing the payload\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a throughput measurement based on the last segment request has been stored\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\n         */\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The event is fired when the frame at the current playback position of the media has finished loading;\n         * often the first frame\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the video element reports that the volume has changed\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\n         */\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n\n        /**\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\n         */\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\n\n        /**\n         * Triggered when a content steering request has completed.\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\n         */\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\n\n        /**\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\n         * @event MediaPlayerEvents#INBAND_PRFT\n         */\n        this.INBAND_PRFT = 'inbandPrft';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Constants declaration\n * @class\n * @ignore\n * @hideconstructor\n */\nclass Constants {\n\n    init() {\n        /**\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STREAM = 'stream';\n\n        /**\n         *  @constant {string} VIDEO Video media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VIDEO = 'video';\n\n        /**\n         *  @constant {string} AUDIO Audio media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.AUDIO = 'audio';\n\n        /**\n         *  @constant {string} TEXT Text media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TEXT = 'text';\n\n        /**\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MUXED = 'muxed';\n\n        /**\n         *  @constant {string} IMAGE Image media type\n         *  @memberof Constants#\n         *  @static\n         */\n        this.IMAGE = 'image';\n\n        /**\n         *  @constant {string} STPP STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.STPP = 'stpp';\n\n        /**\n         *  @constant {string} TTML STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TTML = 'ttml';\n\n        /**\n         *  @constant {string} VTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.VTT = 'vtt';\n\n        /**\n         *  @constant {string} WVTT STTP Subtitles format\n         *  @memberof Constants#\n         *  @static\n         */\n        this.WVTT = 'wvtt';\n\n        /**\n         *  @constant {string} Content Steering\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CONTENT_STEERING = 'contentSteering';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_BOLA = 'abrBola';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_L2A = 'abrL2A';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\n\n        /**\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\n\n        /**\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\n\n        /**\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\n        *  @memberof Constants#\n        *  @static\n        */\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\n\n        /**\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\n         *  @memberof Constants#\n         *  @static\n         */\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\n\n        /**\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\n\n        /**\n         *  @constant {string} EWMA Exponential moving average\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MOVING_AVERAGE_EWMA = 'ewma';\n\n        /**\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\n\n        /**\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\n         *  @memberof Constants#\n         *  @static\n         */\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\n\n        /**\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\n\n        /**\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\n         *  @memberof Constants#\n         *  @static\n         */\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\n\n        /**\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_QUERY = 'query';\n\n        /**\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\n         *  @memberof Constants#\n         *  @static\n         */\n        this.CMCD_MODE_HEADER = 'header';\n        this.INITIALIZE = 'initialize';\n        this.TEXT_SHOWING = 'showing';\n        this.TEXT_HIDDEN = 'hidden';\n        this.CC1 = 'CC1';\n        this.CC3 = 'CC3';\n        this.UTF8 = 'utf-8';\n        this.SCHEME_ID_URI = 'schemeIdUri';\n        this.START_TIME = 'starttime';\n        this.SERVICE_DESCRIPTION_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\n        this.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\n        this.XML = 'XML';\n        this.ARRAY_BUFFER = 'ArrayBuffer';\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\n        this.DVB_PROBABILITY = 'dvb:probability';\n        this.VIDEO_ELEMENT_READY_STATES = {\n            HAVE_NOTHING: 0,\n            HAVE_METADATA: 1,\n            HAVE_CURRENT_DATA: 2,\n            HAVE_FUTURE_DATA: 3,\n            HAVE_ENOUGH_DATA: 4\n        };\n        this.FILE_LOADER_TYPES = {\n            FETCH: 'fetch_loader',\n            XHR: 'xhr_loader'\n        }\n    }\n\n    constructor() {\n        this.init();\n    }\n}\n\nconst constants = new Constants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Metrics Constants declaration\n * @class\n * @ignore\n */\nclass MetricsConstants {\n\n    init () {\n        this.TCP_CONNECTION = 'TcpList';\n        this.HTTP_REQUEST = 'HttpList';\n        this.TRACK_SWITCH = 'RepSwitchList';\n        this.BUFFER_LEVEL = 'BufferLevel';\n        this.BUFFER_LOADED = 'bufferLoaded';\n        this.ABANDON_LOAD = 'abandonload';\n        this.ALLOW_LOAD = 'allowload';\n        this.BUFFER_EMPTY = 'bufferStalled';\n        this.BUFFER_STATE = 'BufferState';\n        this.DVR_INFO = 'DVRInfo';\n        this.DROPPED_FRAMES = 'DroppedFrames';\n        this.SCHEDULING_INFO = 'SchedulingInfo';\n        this.REQUESTS_QUEUE = 'RequestsQueue';\n        this.MANIFEST_UPDATE = 'ManifestUpdate';\n        this.MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo';\n        this.MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo';\n        this.PLAY_LIST = 'PlayList';\n        this.DVB_ERRORS = 'DVBErrors';\n        this.HTTP_REQUEST_DVB_REPORTING_TYPE = 'DVBReporting';\n    }\n\n    constructor() {\n        this.init();\n    }\n}\n\nlet constants = new MetricsConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DVBErrors {\n    constructor() {\n        this.mpdurl = null;\n        // String - Absolute URL from which the MPD was originally\n        // retrieved (MPD updates will not change this value).\n\n        this.errorcode = null;\n        // String - The value of errorcode depends upon the type\n        // of error being reported. For an error listed in the\n        // ErrorType column below the value is as described in the\n        // Value column.\n        //\n        // ErrorType                                            Value\n        // ---------                                            -----\n        // HTTP error status code                               HTTP status code\n        // Unknown HTTP status code                             HTTP status code\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\n        // DNS resolution failed                                \"C00\"\n        // Host unreachable                                     \"C01\"\n        // Connection refused                                   \"C02\"\n        // Connection error – Not otherwise specified           \"C03\"\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\n        // Corrupt media – Not otherwise specified              \"M01\"\n        // Changing Base URL in use due to errors               \"F00\"\n        // Becoming an error reporting Player                   \"S00\"\n\n        this.terror = null;\n        // Real-Time - Date and time at which error occurred in UTC,\n        // formatted as a combined date and time according to ISO 8601.\n\n        this.url = null;\n        // String - Absolute URL from which data was being requested\n        // when this error occurred. If the error report is in relation\n        // to corrupt media or changing BaseURL, this may be a null\n        // string if the URL from which the media was obtained or\n        // which led to the change of BaseURL is no longer known.\n\n        this.ipaddress = null;\n        // String - IP Address which the host name in \"url\" resolved to.\n        // If the error report is in relation to corrupt media or\n        // changing BaseURL, this may be a null string if the URL\n        // from which the media was obtained or which led to the\n        // change of BaseURL is no longer known.\n\n        this.servicelocation = null;\n        // String - The value of the serviceLocation field in the\n        // BaseURL being used. In the event of this report indicating\n        // a change of BaseURL this is the value from the BaseURL\n        // being moved from.\n    }\n}\n\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\nDVBErrors.DNS_RESOLUTION_FAILED = 'C00';\nDVBErrors.HOST_UNREACHABLE = 'C01';\nDVBErrors.CONNECTION_REFUSED = 'C02';\nDVBErrors.CONNECTION_ERROR = 'C03';\nDVBErrors.CORRUPT_MEDIA_ISOBMFF = 'M00';\nDVBErrors.CORRUPT_MEDIA_OTHER = 'M01';\nDVBErrors.BASE_URL_CHANGED = 'F00';\nDVBErrors.BECAME_REPORTER = 'S00';\n\nexport default DVBErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrors from '../vo/DVBErrors';\nimport MetricsReportingEvents from '../MetricsReportingEvents';\n\nfunction DVBErrorsTranslator(config) {\n\n    config = config || {};\n    let instance,\n        mpd;\n    const eventBus = config.eventBus;\n    const dashMetrics = config.dashMetrics;\n    const metricsConstants = config.metricsConstants;\n    //MediaPlayerEvents have been added to Events in MediaPlayer class\n    const Events = config.events;\n\n    function report(vo) {\n        let o = new DVBErrors();\n\n        if (!mpd) {\n            return;\n        }\n\n        for (const key in vo) {\n            if (vo.hasOwnProperty(key)) {\n                o[key] = vo[key];\n            }\n        }\n\n        if (!o.mpdurl) {\n            o.mpdurl = mpd.originalUrl || mpd.url;\n        }\n\n        if (!o.terror) {\n            o.terror = new Date();\n        }\n\n        dashMetrics.addDVBErrors(o);\n    }\n\n    function onManifestUpdate(e) {\n        if (e.error) {\n            return;\n        }\n\n        mpd = e.manifest;\n    }\n\n    function onServiceLocationChanged(e) {\n        report({\n            errorcode: DVBErrors.BASE_URL_CHANGED,\n            servicelocation: e.entry\n        });\n    }\n\n    function onBecameReporter() {\n        report({\n            errorcode: DVBErrors.BECAME_REPORTER\n        });\n    }\n\n    function handleHttpMetric(vo) {\n        if ((vo.responsecode === 0) || // connection failure - unknown\n            (vo.responsecode == null) || // Generated on .catch() and when uninitialized\n            (vo.responsecode >= 400) || // HTTP error status code\n            (vo.responsecode < 100) || // unknown status codes\n            (vo.responsecode >= 600)) { // unknown status codes\n            report({\n                errorcode: vo.responsecode || DVBErrors.CONNECTION_ERROR,\n                url: vo.url,\n                terror: vo.tresponse,\n                servicelocation: vo._serviceLocation\n            });\n        }\n    }\n\n    function onMetricEvent(e) {\n        switch (e.metric) {\n            case metricsConstants.HTTP_REQUEST:\n                handleHttpMetric(e.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    function onPlaybackError(e) {\n        let reason = e.error ? e.error.code : 0;\n        let errorcode;\n\n        switch (reason) {\n            case MediaError.MEDIA_ERR_NETWORK:\n                errorcode = DVBErrors.CONNECTION_ERROR;\n                break;\n            case MediaError.MEDIA_ERR_DECODE:\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\n                break;\n            default:\n                return;\n        }\n\n        report({\n            errorcode: errorcode\n        });\n    }\n\n    function initialize() {\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.on(\n            Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.on(Events.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.on(Events.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.on(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.off(\n            Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.off(Events.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.off(Events.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.off(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    instance = {\n        initialize,\n        reset\n    };\n\n    return instance;\n}\n\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\nexport default dashjs.FactoryMaker.getSingletonFactory(DVBErrorsTranslator); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport CustomTimeRanges from '../../utils/CustomTimeRanges';\n\nfunction RangeController(config) {\n\n    config = config || {};\n    let useWallClockTime = false;\n    let context = this.context;\n    let instance,\n        ranges;\n\n    let mediaElement = config.mediaElement;\n\n    function initialize(rs) {\n        if (rs && rs.length) {\n            rs.forEach(r => {\n                let start = r.starttime;\n                let end = start + r.duration;\n\n                ranges.add(start, end);\n            });\n\n            useWallClockTime = !!rs[0]._useWallClockTime;\n        }\n    }\n\n    function reset() {\n        ranges.clear();\n    }\n\n    function setup() {\n        ranges = CustomTimeRanges(context).create();\n    }\n\n    function isEnabled() {\n        let numRanges = ranges.length;\n        let time;\n\n        if (!numRanges) {\n            return true;\n        }\n\n        // When not present, DASH Metrics reporting is requested\n        // for the whole duration of the content.\n        time = useWallClockTime ?\n            (new Date().getTime() / 1000) :\n            mediaElement.currentTime;\n\n        for (let i = 0; i < numRanges; i += 1) {\n            let start = ranges.start(i);\n            let end = ranges.end(i);\n\n            if ((start <= time) && (time < end)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    instance = {\n        initialize: initialize,\n        reset: reset,\n        isEnabled: isEnabled\n    };\n\n    setup();\n\n    return instance;\n}\n\nRangeController.__dashjs_factory_name = 'RangeController';\nexport default dashjs.FactoryMaker.getClassFactory(RangeController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction MetricSerialiser() {\n\n    // For each entry in the top level list within the metric (in the case\n    // of the DVBErrors metric each entry corresponds to an \"error event\"\n    // described in clause 10.8.4) the Player shall:\n    function serialise(metric) {\n        let pairs = [];\n        let obj = [];\n        let key,\n            value;\n\n        // Take each (key, value) pair from the metric entry and create a\n        // string consisting of the name of the key, followed by an equals\n        // ('=') character, followed by the string representation of the\n        // value. The string representation of the value is created based\n        // on the type of the value following the instructions in Table 22.\n        for (key in metric) {\n            if (metric.hasOwnProperty(key) && (key.indexOf('_') !== 0)) {\n                value = metric[key];\n\n                // we want to ensure that keys still end up in the report\n                // even if there is no value\n                if ((value === undefined) || (value === null)) {\n                    value = '';\n                }\n\n                // DVB A168 10.12.4 Table 22\n                if (Array.isArray(value)) {\n                    // if trace or similar is null, do not include in output\n                    if (!value.length) {\n                        continue;\n                    }\n\n                    obj = [];\n\n                    value.forEach(function (v) {\n                        let isBuiltIn = Object.prototype.toString.call(v).slice(8, -1) !== 'Object';\n\n                        obj.push(isBuiltIn ? v : serialise(v));\n                    });\n\n                    value = obj.map(encodeURIComponent).join(',');\n                } else if (typeof value === 'string') {\n                    value = encodeURIComponent(value);\n                } else if (value instanceof Date) {\n                    value = value.toISOString();\n                } else if (typeof value === 'number') {\n                    value = Math.round(value);\n                }\n\n                pairs.push(key + '=' + value);\n            }\n        }\n\n        // Concatenate the strings created in the previous step with an\n        // ampersand ('&') character between each one.\n        return pairs.join('&');\n    }\n\n    return {\n        serialise: serialise\n    };\n}\n\nMetricSerialiser.__dashjs_factory_name = 'MetricSerialiser';\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricSerialiser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction RNG() {\n\n    // check whether secure random numbers are available. if not, revert to\n    // using Math.random\n    let crypto = window.crypto || window.msCrypto;\n\n    // could just as easily use any other array type by changing line below\n    let ArrayType = Uint32Array;\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\n\n    // currently there is only one client for this code, and that only uses\n    // a single random number per initialisation. may want to increase this\n    // number if more consumers in the future\n    let NUM_RANDOM_NUMBERS = 10;\n\n    let randomNumbers,\n        index,\n        instance;\n\n    function initialize() {\n        if (crypto) {\n            if (!randomNumbers) {\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\n            }\n            crypto.getRandomValues(randomNumbers);\n            index = 0;\n        }\n    }\n\n    function rand(min, max) {\n        let r;\n\n        if (!min) {\n            min = 0;\n        }\n\n        if (!max) {\n            max = 1;\n        }\n\n        if (crypto) {\n            if (index === randomNumbers.length) {\n                initialize();\n            }\n\n            r = randomNumbers[index] / MAX_VALUE;\n            index += 1;\n        } else {\n            r = Math.random();\n        }\n\n        return (r * (max - min)) + min;\n    }\n\n    instance = {\n        random: rand\n    };\n\n    initialize();\n\n    return instance;\n}\n\nRNG.__dashjs_factory_name = 'RNG';\nexport default dashjs.FactoryMaker.getSingletonFactory(RNG); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricSerialiser from '../../utils/MetricSerialiser';\nimport RNG from '../../utils/RNG';\nimport CustomParametersModel from '../../../models/CustomParametersModel';\n\nfunction DVBReporting(config) {\n    config = config || {};\n    let instance;\n\n    let context = this.context;\n    let metricSerialiser,\n        customParametersModel,\n        randomNumberGenerator,\n        reportingPlayerStatusDecided,\n        isReportingPlayer,\n        reportingUrl,\n        rangeController;\n\n    let USE_DRAFT_DVB_SPEC = true;\n    let allowPendingRequestsToCompleteOnReset = true;\n    let pendingRequests = [];\n\n    const metricsConstants = config.metricsConstants;\n\n    function setup() {\n        metricSerialiser = MetricSerialiser(context).getInstance();\n        randomNumberGenerator = RNG(context).getInstance();\n        customParametersModel = CustomParametersModel(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function doGetRequest(url, successCB, failureCB) {\n        let req = new XMLHttpRequest();\n        req.withCredentials = customParametersModel.getXHRWithCredentialsForType(metricsConstants.HTTP_REQUEST_DVB_REPORTING_TYPE);\n        const oncomplete = function () {\n            let reqIndex = pendingRequests.indexOf(req);\n\n            if (reqIndex === -1) {\n                return;\n            } else {\n                pendingRequests.splice(reqIndex, 1);\n            }\n\n            if ((req.status >= 200) && (req.status < 300)) {\n                if (successCB) {\n                    successCB();\n                }\n            } else {\n                if (failureCB) {\n                    failureCB();\n                }\n            }\n        };\n\n        pendingRequests.push(req);\n\n        try {\n            req.open('GET', url);\n            req.onloadend = oncomplete;\n            req.onerror = oncomplete;\n            req.send();\n        } catch (e) {\n            req.onerror();\n        }\n    }\n\n    function report(type, vos) {\n        if (!Array.isArray(vos)) {\n            vos = [vos];\n        }\n\n        // If the Player is not a reporting Player, then the Player shall\n        // not report any errors.\n        // ... In addition to any time restrictions specified by a Range\n        // element within the Metrics element.\n        if (isReportingPlayer && rangeController.isEnabled()) {\n\n            // This reporting mechanism operates by creating one HTTP GET\n            // request for every entry in the top level list of the metric.\n            vos.forEach(function (vo) {\n                let url = metricSerialiser.serialise(vo);\n\n                // this has been proposed for errata\n                if (USE_DRAFT_DVB_SPEC && (type !== metricsConstants.DVB_ERRORS)) {\n                    url = `metricname=${type}&${url}`;\n                }\n\n                // Take the value of the @reportingUrl attribute, append a\n                // question mark ('?') character and then append the string\n                // created in the previous step.\n                url = `${reportingUrl}?${url}`;\n\n                // Make an HTTP GET request to the URL contained within the\n                // string created in the previous step.\n                doGetRequest(url, null, function () {\n                    // If the Player is unable to make the report, for\n                    // example because the @reportingUrl is invalid, the\n                    // host cannot be reached, or an HTTP status code other\n                    // than one in the 200 series is received, the Player\n                    // shall cease being a reporting Player for the\n                    // duration of the MPD.\n                    isReportingPlayer = false;\n                });\n            });\n        }\n    }\n\n    function initialize(entry, rc) {\n        let probability;\n\n        rangeController = rc;\n\n        reportingUrl = entry.dvb_reportingUrl;\n\n        // If a required attribute is missing, the Reporting descriptor may\n        // be ignored by the Player\n        if (!reportingUrl) {\n            throw new Error(\n                'required parameter missing (dvb:reportingUrl)'\n            );\n        }\n\n        // A Player's status, as a reporting Player or not, shall remain\n        // static for the duration of the MPD, regardless of MPD updates.\n        // (i.e. only calling reset (or failure) changes this state)\n        if (!reportingPlayerStatusDecided) {\n            probability = entry.dvb_probability;\n            // TS 103 285 Clause 10.12.3.4\n            // If the @probability attribute is set to 1000, it shall be a reporting Player.\n            // If the @probability attribute is absent it will take the default value of 1000.\n            // For any other value of the @probability attribute, it shall decide at random whether to be a\n            // reporting Player, such that the probability of being one is @probability/1000.\n            if (probability && (probability === 1000 || ((probability / 1000) >= randomNumberGenerator.random()))) {\n                isReportingPlayer = true;\n            }\n\n            reportingPlayerStatusDecided = true;\n        }\n    }\n\n    function resetInitialSettings() {\n        reportingPlayerStatusDecided = false;\n        isReportingPlayer = false;\n        reportingUrl = null;\n        rangeController = null;\n    }\n\n    function reset() {\n        if (!allowPendingRequestsToCompleteOnReset) {\n            pendingRequests.forEach(req => req.abort());\n            pendingRequests = [];\n        }\n\n        resetInitialSettings();\n    }\n\n    instance = {\n        report:     report,\n        initialize: initialize,\n        reset:      reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nDVBReporting.__dashjs_factory_name = 'DVBReporting';\nexport default dashjs.FactoryMaker.getClassFactory(DVBReporting); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBReporting from './reporters/DVBReporting';\n\nfunction ReportingFactory(config) {\n    config = config || {};\n\n    const knownReportingSchemeIdUris = {\n        'urn:dvb:dash:reporting:2014': DVBReporting\n    };\n\n    const context = this.context;\n    let instance;\n    const logger = config.debug ? config.debug.getLogger(instance) : {};\n    const metricsConstants = config.metricsConstants;\n    const mediaPlayerModel = config.mediaPlayerModel || {};\n\n    function create(entry, rangeController) {\n        let reporting;\n\n        try {\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create({\n                metricsConstants: metricsConstants,\n                mediaPlayerModel: mediaPlayerModel\n            });\n\n            reporting.initialize(entry, rangeController);\n        } catch (e) {\n            reporting = null;\n            logger.error(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\n        }\n\n        return reporting;\n    }\n\n    function register(schemeIdUri, moduleName) {\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\n    }\n\n    function unregister(schemeIdUri) {\n        delete knownReportingSchemeIdUris[schemeIdUri];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\nexport default dashjs.FactoryMaker.getSingletonFactory(ReportingFactory); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ReportingFactory from '../reporting/ReportingFactory';\n\nfunction ReportingController(config) {\n\n    let reporters = [];\n    let instance;\n\n    const reportingFactory = ReportingFactory(this.context).getInstance(config);\n\n    function initialize(reporting, rangeController) {\n        // \"if multiple Reporting elements are present, it is expected that\n        // the client processes one of the recognized reporting schemes.\"\n        // to ignore this, and support multiple Reporting per Metric,\n        // simply change the 'some' below to 'forEach'\n        reporting.some(r => {\n            let reporter = reportingFactory.create(r, rangeController);\n\n            if (reporter) {\n                reporters.push(reporter);\n                return true;\n            }\n        });\n    }\n\n    function reset() {\n        reporters.forEach(r => r.reset());\n        reporters = [];\n    }\n\n    function report(type, vos) {\n        reporters.forEach(r => r.report(type, vos));\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        report:     report\n    };\n\n    return instance;\n}\n\nReportingController.__dashjs_factory_name = 'ReportingController';\nexport default dashjs.FactoryMaker.getClassFactory(ReportingController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction HandlerHelpers() {\n    return {\n        reconstructFullMetricName: function (key, n, type) {\n            let mn = key;\n\n            if (n) {\n                mn += '(' + n;\n\n                if (type && type.length) {\n                    mn += ',' + type;\n                }\n\n                mn += ')';\n            }\n\n            return mn;\n        },\n\n        validateN: function (n_ms) {\n            if (!n_ms) {\n                throw new Error('missing n');\n            }\n\n            if (isNaN(n_ms)) {\n                throw new Error('n is NaN');\n            }\n\n            // n is a positive integer is defined to refer to the metric\n            // in which the buffer level is recorded every n ms.\n            if (n_ms < 0) {\n                throw new Error('n must be positive');\n            }\n\n            return n_ms;\n        }\n    };\n}\n\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\nexport default dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction BufferLevelHandler(config) {\n\n    config = config || {};\n    let instance,\n        reportingController,\n        n,\n        name,\n        interval,\n        lastReportedTime;\n\n    let context = this.context;\n    let handlerHelpers = HandlerHelpers(context).getInstance();\n\n    let storedVOs = [];\n\n    const metricsConstants = config.metricsConstants;\n\n    function getLowestBufferLevelVO() {\n        try {\n            return Object.keys(storedVOs).map(\n                key => storedVOs[key]\n            ).reduce(\n                (a, b) => {\n                    return (a.level < b.level) ? a : b;\n                }\n            );\n        } catch (e) {\n            return;\n        }\n    }\n\n    function intervalCallback() {\n        let vo = getLowestBufferLevelVO();\n\n        if (vo) {\n            if (lastReportedTime !== vo.t) {\n                lastReportedTime = vo.t;\n                reportingController.report(name, vo);\n            }\n        }\n    }\n\n    function initialize(basename, rc, n_ms) {\n        if (rc) {\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n            reportingController = rc;\n            name = handlerHelpers.reconstructFullMetricName(basename, n_ms);\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = 0;\n        reportingController = null;\n        lastReportedTime = null;\n    }\n\n    function handleNewMetric(metric, vo, type) {\n        if (metric === metricsConstants.BUFFER_LEVEL) {\n            storedVOs[type] = vo;\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nBufferLevelHandler.__dashjs_factory_name = 'BufferLevelHandler';\nexport default dashjs.FactoryMaker.getClassFactory(BufferLevelHandler); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsReportingEvents from '../../MetricsReportingEvents';\n\nfunction DVBErrorsHandler(config) {\n\n    config = config || {};\n    let instance,\n        reportingController;\n\n    let eventBus = config.eventBus;\n    const metricsConstants = config.metricsConstants;\n\n    function onInitialisationComplete() {\n        // we only want to report this once per call to initialize\n        eventBus.off(\n            MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n            onInitialisationComplete,\n            this\n        );\n\n        // Note: A Player becoming a reporting Player is itself\n        // something which is recorded by the DVBErrors metric.\n        eventBus.trigger(MetricsReportingEvents.BECAME_REPORTING_PLAYER);\n    }\n\n    function initialize(unused, rc) {\n        if (rc) {\n            reportingController = rc;\n\n            eventBus.on(\n                MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE,\n                onInitialisationComplete,\n                this\n            );\n        }\n    }\n\n    function reset() {\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === metricsConstants.DVB_ERRORS) {\n            if (reportingController) {\n                reportingController.report(metric, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nexport default dashjs.FactoryMaker.getClassFactory(DVBErrorsHandler); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction HttpListHandler(config) {\n\n    config = config || {};\n    let instance,\n        reportingController,\n        n,\n        type,\n        name,\n        interval;\n\n    let storedVos = [];\n\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\n\n    const metricsConstants = config.metricsConstants;\n\n    function intervalCallback() {\n        var vos = storedVos;\n\n        if (vos.length) {\n            if (reportingController) {\n                reportingController.report(name, vos);\n            }\n        }\n\n        storedVos = [];\n    }\n\n    function initialize(basename, rc, n_ms, requestType) {\n        if (rc) {\n\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n\n            reportingController = rc;\n\n            if (requestType && requestType.length) {\n                type = requestType;\n            }\n\n            name = handlerHelpers.reconstructFullMetricName(\n                basename,\n                n_ms,\n                requestType\n            );\n\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = null;\n        type = null;\n        storedVos = [];\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        if (metric === metricsConstants.HTTP_REQUEST) {\n            if (!type || (type === vo.type)) {\n                storedVos.push(vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\nexport default dashjs.FactoryMaker.getClassFactory(HttpListHandler); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction GenericMetricHandler() {\n\n    let instance,\n        metricName,\n        reportingController;\n\n    function initialize(name, rc) {\n        metricName = name;\n        reportingController = rc;\n    }\n\n    function reset() {\n        reportingController = null;\n        metricName = undefined;\n    }\n\n    function handleNewMetric(metric, vo) {\n        // simply pass metric straight through\n        if (metric === metricName) {\n            if (reportingController) {\n                reportingController.report(metricName, vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset: reset,\n        handleNewMetric: handleNewMetric\n    };\n\n    return instance;\n}\n\nGenericMetricHandler.__dashjs_factory_name = 'GenericMetricHandler';\nexport default dashjs.FactoryMaker.getClassFactory(GenericMetricHandler); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BufferLevel from './handlers/BufferLevelHandler';\nimport DVBErrors from './handlers/DVBErrorsHandler';\nimport HttpList from './handlers/HttpListHandler';\nimport GenericMetricHandler from './handlers/GenericMetricHandler';\n\nfunction MetricsHandlerFactory(config) {\n\n    config = config || {};\n    let instance;\n    const logger = config.debug ? config.debug.getLogger(instance) : {};\n\n    // group 1: key, [group 3: n [, group 5: type]]\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\n\n    const context = this.context;\n    let knownFactoryProducts = {\n        BufferLevel:    BufferLevel,\n        DVBErrors:      DVBErrors,\n        HttpList:       HttpList,\n        PlayList:       GenericMetricHandler,\n        RepSwitchList:  GenericMetricHandler,\n        TcpList:        GenericMetricHandler\n    };\n\n    function create(listType, reportingController) {\n        var matches = listType.match(keyRegex);\n        var handler;\n\n        if (!matches) {\n            return;\n        }\n\n        try {\n            handler = knownFactoryProducts[matches[1]](context).create({\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants\n            });\n\n            handler.initialize(\n                matches[1],\n                reportingController,\n                matches[3],\n                matches[5]\n            );\n        } catch (e) {\n            handler = null;\n            logger.error(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\n        }\n\n        return handler;\n    }\n\n    function register(key, handler) {\n        knownFactoryProducts[key] = handler;\n    }\n\n    function unregister(key) {\n        delete knownFactoryProducts[key];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricsHandlerFactory); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsHandlerFactory from '../metrics/MetricsHandlerFactory';\n\nfunction MetricsHandlersController(config) {\n\n    config = config || {};\n    let handlers = [];\n\n    let instance;\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const Events = config.events;\n\n    let metricsHandlerFactory = MetricsHandlerFactory(context).getInstance({\n        debug: config.debug,\n        eventBus: config.eventBus,\n        metricsConstants: config.metricsConstants\n    });\n\n    function handle(e) {\n        handlers.forEach(handler => {\n            handler.handleNewMetric(e.metric, e.value, e.mediaType);\n        });\n    }\n\n    function initialize(metrics, reportingController) {\n        metrics.split(',').forEach(\n            (m, midx, ms) => {\n                let handler;\n\n                // there is a bug in ISO23009-1 where the metrics attribute\n                // is a comma-separated list but HttpList key can contain a\n                // comma enclosed by ().\n                if ((m.indexOf('(') !== -1) && m.indexOf(')') === -1) {\n                    let nextm = ms[midx + 1];\n\n                    if (nextm &&\n                            (nextm.indexOf('(') === -1) &&\n                            (nextm.indexOf(')') !== -1)) {\n                        m += ',' + nextm;\n\n                        // delete the next metric so forEach does not visit.\n                        delete ms[midx + 1];\n                    }\n                }\n\n                handler = metricsHandlerFactory.create(\n                    m,\n                    reportingController\n                );\n\n                if (handler) {\n                    handlers.push(handler);\n                }\n            }\n        );\n\n        eventBus.on(\n            Events.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.on(\n            Events.METRIC_UPDATED,\n            handle,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(\n            Events.METRIC_ADDED,\n            handle,\n            instance\n        );\n\n        eventBus.off(\n            Events.METRIC_UPDATED,\n            handle,\n            instance\n        );\n\n        handlers.forEach(handler => handler.reset());\n\n        handlers = [];\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsHandlersController.__dashjs_factory_name = 'MetricsHandlersController';\nexport default dashjs.FactoryMaker.getClassFactory(MetricsHandlersController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport RangeController from './RangeController';\nimport ReportingController from './ReportingController';\nimport MetricsHandlersController from './MetricsHandlersController';\n\nfunction MetricsController(config) {\n\n    config = config || {};\n    let metricsHandlersController,\n        reportingController,\n        rangeController,\n        instance;\n\n    let context = this.context;\n\n    function initialize(metricsEntry) {\n        try {\n            rangeController = RangeController(context).create({\n                mediaElement: config.mediaElement\n            });\n\n            rangeController.initialize(metricsEntry.Range);\n\n            reportingController = ReportingController(context).create({\n                debug: config.debug,\n                metricsConstants: config.metricsConstants,\n                mediaPlayerModel: config.mediaPlayerModel\n            });\n\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\n\n            metricsHandlersController = MetricsHandlersController(context).create({\n                debug: config.debug,\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants,\n                events: config.events\n            });\n\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\n        } catch (e) {\n            reset();\n            throw e;\n        }\n    }\n\n    function reset() {\n        if (metricsHandlersController) {\n            metricsHandlersController.reset();\n        }\n\n        if (reportingController) {\n            reportingController.reset();\n        }\n\n        if (rangeController) {\n            rangeController.reset();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsController.__dashjs_factory_name = 'MetricsController';\nexport default dashjs.FactoryMaker.getClassFactory(MetricsController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Metrics {\n    constructor() {\n\n        this.metrics = '';\n        this.Range = [];\n        this.Reporting = [];\n    }\n}\n\nexport default Metrics;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Range {\n    constructor() {\n\n        // as defined in ISO23009-1\n        this.starttime = 0;\n        this.duration = Infinity;\n\n        // for internal use\n        this._useWallClockTime = false;\n    }\n}\n\nexport default Range;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\n// TS 103 285 Clause 10.12.3.3\nconst DEFAULT_DVB_PROBABILITY = 1000;\n\nclass Reporting {\n    constructor() {\n\n        this.schemeIdUri = '';\n        this.value = '';\n\n        // DVB Extensions\n        this.dvb_reportingUrl = '';\n        this.dvb_probability = DEFAULT_DVB_PROBABILITY;\n    }\n}\n\nexport default Reporting;\n","import Metrics from '../vo/Metrics';\nimport Range from '../vo/Range';\nimport Reporting from '../vo/Reporting';\n\nfunction ManifestParsing (config) {\n    config = config || {};\n    let instance;\n    let adapter = config.adapter;\n    const constants = config.constants;\n\n    function getMetricsRangeStartTime(manifest, dynamic, range) {\n        let voPeriods,\n            reportingStartTime;\n        let presentationStartTime = 0;\n\n        if (dynamic) {\n            // For services with MPD@type='dynamic', the start time is\n            // indicated in wall clock time by adding the value of this\n            // attribute to the value of the MPD@availabilityStartTime\n            // attribute.\n            presentationStartTime = adapter.getAvailabilityStartTime(manifest) / 1000;\n        } else {\n            // For services with MPD@type='static', the start time is indicated\n            // in Media Presentation time and is relative to the PeriodStart\n            // time of the first Period in this MPD.\n            voPeriods = adapter.getRegularPeriods(manifest);\n\n            if (voPeriods.length) {\n                presentationStartTime = voPeriods[0].start;\n            }\n        }\n\n        // When not present, DASH Metrics collection is\n        // requested from the beginning of content\n        // consumption.\n        reportingStartTime = presentationStartTime;\n\n        if (range && range.hasOwnProperty(constants.START_TIME)) {\n            reportingStartTime += range.starttime;\n        }\n\n        return reportingStartTime;\n    }\n\n    function getMetrics(manifest) {\n        let metrics = [];\n\n        if (manifest && manifest.Metrics_asArray) {\n            manifest.Metrics_asArray.forEach(metric => {\n                var metricEntry = new Metrics();\n                var isDynamic = adapter.getIsDynamic(manifest);\n\n                if (metric.hasOwnProperty('metrics')) {\n                    metricEntry.metrics = metric.metrics;\n                } else {\n                    return;\n                }\n\n                if (metric.Range_asArray) {\n                    metric.Range_asArray.forEach(range => {\n                        var rangeEntry = new Range();\n\n                        rangeEntry.starttime =\n                            getMetricsRangeStartTime(manifest, isDynamic, range);\n\n                        if (range.hasOwnProperty('duration')) {\n                            rangeEntry.duration = range.duration;\n                        } else {\n                            // if not present, the value is identical to the\n                            // Media Presentation duration.\n                            rangeEntry.duration = adapter.getDuration(manifest);\n                        }\n\n                        rangeEntry._useWallClockTime = isDynamic;\n\n                        metricEntry.Range.push(rangeEntry);\n                    });\n                }\n\n                if (metric.Reporting_asArray) {\n                    metric.Reporting_asArray.forEach(reporting => {\n                        var reportingEntry = new Reporting();\n\n                        if (reporting.hasOwnProperty(constants.SCHEME_ID_URI)) {\n                            reportingEntry.schemeIdUri = reporting.schemeIdUri;\n                        } else {\n                            // Invalid Reporting. schemeIdUri must be set. Ignore.\n                            return;\n                        }\n\n                        if (reporting.hasOwnProperty('value')) {\n                            reportingEntry.value = reporting.value;\n                        }\n\n                        if (reporting.hasOwnProperty(constants.DVB_REPORTING_URL)) {\n                            reportingEntry.dvb_reportingUrl = reporting[constants.DVB_REPORTING_URL];\n                        }\n\n                        if (reporting.hasOwnProperty(constants.DVB_PROBABILITY)) {\n                            reportingEntry.dvb_probability = reporting[constants.DVB_PROBABILITY];\n                        }\n\n                        metricEntry.Reporting.push(reportingEntry);\n                    });\n                } else {\n                    // Invalid Metrics. At least one reporting must be present. Ignore\n                    return;\n                }\n\n                metrics.push(metricEntry);\n            });\n        }\n\n        return metrics;\n    }\n\n    instance = {\n        getMetrics: getMetrics\n    };\n\n    return instance;\n}\n\nManifestParsing.__dashjs_factory_name = 'ManifestParsing';\nexport default dashjs.FactoryMaker.getSingletonFactory(ManifestParsing); /* jshint ignore:line */","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MetricsController from './MetricsController';\nimport ManifestParsing from '../utils/ManifestParsing';\nimport MetricsReportingEvents from '../MetricsReportingEvents';\n\nfunction MetricsCollectionController(config) {\n\n    config = config || {};\n    let instance;\n    let metricsControllers = {};\n    let context = this.context;\n    let eventBus = config.eventBus;\n    const events = config.events;\n\n    function update(e) {\n        if (e.error) {\n            return;\n        }\n\n        // start by assuming all existing controllers need removing\n        let controllersToRemove = Object.keys(metricsControllers);\n\n        const metrics = ManifestParsing(context).getInstance({\n            adapter: config.adapter,\n            constants: config.constants\n        }).getMetrics(e.manifest);\n\n        metrics.forEach(m => {\n            const key = JSON.stringify(m);\n\n            if (!metricsControllers.hasOwnProperty(key)) {\n                try {\n                    let controller = MetricsController(context).create(config);\n                    controller.initialize(m);\n                    metricsControllers[key] = controller;\n                } catch (e) {\n                    // fail quietly\n                }\n            } else {\n                // we still need this controller - delete from removal list\n                controllersToRemove.splice(key, 1);\n            }\n        });\n\n        // now remove the unwanted controllers\n        controllersToRemove.forEach(c => {\n            metricsControllers[c].reset();\n            delete metricsControllers[c];\n        });\n\n        eventBus.trigger(MetricsReportingEvents.METRICS_INITIALISATION_COMPLETE);\n    }\n\n    function resetMetricsControllers() {\n        Object.keys(metricsControllers).forEach(key => {\n            metricsControllers[key].reset();\n        });\n\n        metricsControllers = {};\n    }\n\n    function setup() {\n        eventBus.on(events.MANIFEST_UPDATED, update, instance);\n        eventBus.on(events.STREAM_TEARDOWN_COMPLETE, resetMetricsControllers, instance);\n    }\n\n    function reset() {\n        eventBus.off(events.MANIFEST_UPDATED, update, instance);\n        eventBus.off(events.STREAM_TEARDOWN_COMPLETE, resetMetricsControllers, instance);\n    }\n\n    instance = {\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nMetricsCollectionController.__dashjs_factory_name = 'MetricsCollectionController';\nexport default dashjs.FactoryMaker.getClassFactory(MetricsCollectionController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrorsTranslator from './utils/DVBErrorsTranslator';\nimport MetricsReportingEvents from './MetricsReportingEvents';\nimport MetricsCollectionController from './controllers/MetricsCollectionController';\nimport MetricsHandlerFactory from './metrics/MetricsHandlerFactory';\nimport ReportingFactory from './reporting/ReportingFactory';\n\nfunction MetricsReporting() {\n\n    let context = this.context;\n    let instance,\n        dvbErrorsTranslator;\n\n    /**\n     * Create a MetricsCollectionController, and a DVBErrorsTranslator\n     * @param {Object} config - dependancies from owner\n     * @return {MetricsCollectionController} Metrics Collection Controller\n     */\n    function createMetricsReporting(config) {\n        dvbErrorsTranslator = DVBErrorsTranslator(context).getInstance({\n            eventBus: config.eventBus,\n            dashMetrics: config.dashMetrics,\n            metricsConstants: config.metricsConstants,\n            events: config.events\n        });\n        dvbErrorsTranslator.initialize();\n        return MetricsCollectionController(context).create(config);\n    }\n\n    /**\n     * Get the ReportingFactory to allow new reporters to be registered\n     * @return {ReportingFactory} Reporting Factory\n     */\n    function getReportingFactory() {\n        return ReportingFactory(context).getInstance();\n    }\n\n    /**\n     * Get the MetricsHandlerFactory to allow new handlers to be registered\n     * @return {MetricsHandlerFactory} Metrics Handler Factory\n     */\n    function getMetricsHandlerFactory() {\n        return MetricsHandlerFactory(context).getInstance();\n    }\n\n    instance = {\n        createMetricsReporting:     createMetricsReporting,\n        getReportingFactory:        getReportingFactory,\n        getMetricsHandlerFactory:   getMetricsHandlerFactory\n    };\n\n    return instance;\n}\n\nMetricsReporting.__dashjs_factory_name = 'MetricsReporting';\nconst factory = dashjs.FactoryMaker.getClassFactory(MetricsReporting); /* jshint ignore:line */\nfactory.events = MetricsReportingEvents;\ndashjs.FactoryMaker.updateClassFactory(MetricsReporting.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MetricsReportingEvents extends EventsBase {\n    constructor () {\n        super();\n\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\n\n        /**\n         * Triggered when CMCD data was generated for a HTTP request\n         * @event MetricsReportingEvents#CMCD_DATA_GENERATED\n         */\n        this.CMCD_DATA_GENERATED = 'cmcdDataGenerated';\n    }\n}\n\nlet metricsReportingEvents = new MetricsReportingEvents();\nexport default metricsReportingEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport UTCTiming from '../../dash/vo/UTCTiming';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Settings from '../../core/Settings';\nimport {checkParameterType} from '../utils/SupervisorTools';\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport Constants from '../constants/Constants';\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction CustomParametersModel() {\n\n    let instance,\n        utcTimingSources,\n        xhrWithCredentials,\n        licenseRequestFilters,\n        licenseResponseFilters,\n        customCapabilitiesFilters,\n        customInitialTrackSelectionFunction,\n        customAbrRules;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        xhrWithCredentials = {\n            default: DEFAULT_XHR_WITH_CREDENTIALS\n        };\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        licenseRequestFilters = [];\n        licenseResponseFilters = [];\n        customCapabilitiesFilters = [];\n        customAbrRules = [];\n        customInitialTrackSelectionFunction = null;\n        utcTimingSources = [];\n    }\n\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    function setConfig() {\n\n    }\n\n    /**\n     * Registers a custom initial track selection function. Only one function is allowed. Calling this method will overwrite a potentially existing function.\n     * @param {function} customFunc - the custom function that returns the initial track\n     */\n    function setCustomInitialTrackSelectionFunction(customFunc) {\n        customInitialTrackSelectionFunction = customFunc;\n    }\n\n    /**\n     * Resets the custom initial track selection\n     */\n    function resetCustomInitialTrackSelectionFunction() {\n        customInitialTrackSelectionFunction = null;\n    }\n\n    /**\n     * Returns the initial track selection function\n     * @return {function}\n     */\n    function getCustomInitialTrackSelectionFunction() {\n        return customInitialTrackSelectionFunction;\n    }\n\n    /**\n     * Returns all license request filters\n     * @return {array}\n     */\n    function getLicenseRequestFilters() {\n        return licenseRequestFilters;\n    }\n\n    /**\n     * Returns all license response filters\n     * @return {array}\n     */\n    function getLicenseResponseFilters() {\n        return licenseResponseFilters;\n    }\n\n    /**\n     * Registers a license request filter. This enables application to manipulate/overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license request filter callback\n     */\n    function registerLicenseRequestFilter(filter) {\n        licenseRequestFilters.push(filter);\n    }\n\n    /**\n     * Registers a license response filter. This enables application to manipulate/overwrite the response data\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license response filter callback\n     */\n    function registerLicenseResponseFilter(filter) {\n        licenseResponseFilters.push(filter);\n    }\n\n    /**\n     * Unregisters a license request filter.\n     * @param {function} filter - the license request filter callback\n     */\n    function unregisterLicenseRequestFilter(filter) {\n        _unregisterFilter(licenseRequestFilters, filter);\n    }\n\n    /**\n     * Unregisters a license response filter.\n     * @param {function} filter - the license response filter callback\n     */\n    function unregisterLicenseResponseFilter(filter) {\n        _unregisterFilter(licenseResponseFilters, filter);\n    }\n\n    /**\n     * Returns all custom capabilities filter\n     * @return {array}\n     */\n    function getCustomCapabilitiesFilters() {\n        return customCapabilitiesFilters;\n    }\n\n    /**\n     * Registers a custom capabilities filter. This enables application to filter representations to use.\n     * The provided callback function shall return a boolean based on whether or not to use the representation.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the custom capabilities filter callback\n     */\n    function registerCustomCapabilitiesFilter(filter) {\n        customCapabilitiesFilters.push(filter);\n    }\n\n    /**\n     * Unregisters a custom capabilities filter.\n     * @param {function} filter - the custom capabilities filter callback\n     */\n    function unregisterCustomCapabilitiesFilter(filter) {\n        _unregisterFilter(customCapabilitiesFilters, filter);\n    }\n\n    /**\n     * Unregister a filter from the list of existing filers.\n     * @param {array} filters\n     * @param {function} filter\n     * @private\n     */\n    function _unregisterFilter(filters, filter) {\n        let index = -1;\n        filters.some((item, i) => {\n            if (item === filter) {\n                index = i;\n                return true;\n            }\n        });\n        if (index < 0) return;\n        filters.splice(index, 1);\n    }\n\n    /**\n     * Iterate through the list of custom ABR rules and find the right rule by name\n     * @param {string} rulename\n     * @return {number} rule number\n     */\n    function _findAbrCustomRuleIndex(rulename) {\n        let i;\n        for (i = 0; i < customAbrRules.length; i++) {\n            if (customAbrRules[i].rulename === rulename) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Add a custom ABR Rule\n     * Rule will be apply on next stream if a stream is being played\n     *\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\n     * @param {object} rule - the rule object instance\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.\n     */\n    function addAbrCustomRule(type, rulename, rule) {\n        if (typeof type !== 'string' || (type !== ABRRulesCollection.ABANDON_FRAGMENT_RULES && type !== ABRRulesCollection.QUALITY_SWITCH_RULES) ||\n            typeof rulename !== 'string') {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        let index = _findAbrCustomRuleIndex(rulename);\n        if (index === -1) {\n            // add rule\n            customAbrRules.push({\n                type: type,\n                rulename: rulename,\n                rule: rule\n            });\n        } else {\n            // update rule\n            customAbrRules[index].type = type;\n            customAbrRules[index].rule = rule;\n        }\n    }\n\n    /**\n     * Remove a custom ABR Rule\n     *\n     * @param {string} rulename - name of the rule to be removed\n     */\n    function removeAbrCustomRule(rulename) {\n        if (rulename) {\n            let index = _findAbrCustomRuleIndex(rulename);\n            //if no rulename custom rule has been found, do nothing\n            if (index !== -1) {\n                // remove rule\n                customAbrRules.splice(index, 1);\n            }\n        } else {\n            //if no rulename is defined, remove all ABR custome rules\n            customAbrRules = [];\n        }\n    }\n\n    /**\n     * Remove all custom rules\n     */\n    function removeAllAbrCustomRule() {\n        customAbrRules = [];\n    }\n\n    /**\n     * Return all ABR custom rules\n     * @return {array}\n     */\n    function getAbrCustomRules() {\n        return customAbrRules;\n    }\n\n\n    /**\n     * Add a UTC timing source at the top of the list\n     * @param {string} schemeIdUri\n     * @param {string} value\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n        let vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        utcTimingSources.push(vo);\n    }\n\n    /**\n     * Return all UTC timing sources\n     * @return {array}\n     */\n    function getUTCTimingSources() {\n        return utcTimingSources;\n    }\n\n    /**\n     * Remove a specific timing source from the array\n     * @param {string} schemeIdUri\n     * @param {string} value\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        checkParameterType(schemeIdUri, 'string');\n        checkParameterType(value, 'string');\n        utcTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                utcTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    /**\n     * Remove all timing sources\n     */\n    function clearDefaultUTCTimingSources() {\n        utcTimingSources = [];\n    }\n\n    /**\n     * Add the default timing source to the list\n     */\n    function restoreDefaultUTCTimingSources() {\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n    }\n\n    instance = {\n        getCustomInitialTrackSelectionFunction,\n        setCustomInitialTrackSelectionFunction,\n        resetCustomInitialTrackSelectionFunction,\n        getLicenseResponseFilters,\n        getLicenseRequestFilters,\n        getCustomCapabilitiesFilters,\n        registerCustomCapabilitiesFilter,\n        registerLicenseResponseFilter,\n        registerLicenseRequestFilter,\n        unregisterCustomCapabilitiesFilter,\n        unregisterLicenseResponseFilter,\n        unregisterLicenseRequestFilter,\n        addAbrCustomRule,\n        removeAllAbrCustomRule,\n        removeAbrCustomRule,\n        getAbrCustomRules,\n        addUTCTimingSource,\n        removeUTCTimingSource,\n        getUTCTimingSources,\n        clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources,\n        setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nCustomParametersModel.__dashjs_factory_name = 'CustomParametersModel';\nexport default FactoryMaker.getSingletonFactory(CustomParametersModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport { modifyRequest } from '../utils/RequestModifier';\n\n/**\n * @module XHRLoader\n * @ignore\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependencies from parent\n */\nfunction XHRLoader(cfg) {\n\n    cfg = cfg || {};\n    const requestModifier = cfg.requestModifier;\n\n    let instance;\n\n    function load(httpRequest) {\n        if (requestModifier && requestModifier.modifyRequest) {\n            modifyRequest(httpRequest, requestModifier)\n                .then(() => request(httpRequest));\n        }\n        else {\n            request(httpRequest);\n        }\n    }\n\n    function request(httpRequest) {\n        // Variables will be used in the callback functions\n        const requestStartTime = new Date();\n        const request = httpRequest.request;\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(httpRequest.method, httpRequest.url, true);\n\n        if (request.responseType) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.range) {\n            xhr.setRequestHeader('Range', 'bytes=' + request.range);\n        }\n\n        if (!request.requestStartDate) {\n            request.requestStartDate = requestStartTime;\n        }\n\n        if (requestModifier && requestModifier.modifyRequestHeader) {\n            xhr = requestModifier.modifyRequestHeader(xhr, {\n                url: httpRequest.url\n            });\n        }\n\n        if (httpRequest.headers) {\n            for (let header in httpRequest.headers) {\n                let value = httpRequest.headers[header];\n                if (value) {\n                    xhr.setRequestHeader(header, value);\n                }\n            }\n        }\n\n        xhr.withCredentials = httpRequest.withCredentials;\n\n        xhr.onload = httpRequest.onload;\n        xhr.onloadend = httpRequest.onend;\n        xhr.onerror = httpRequest.onerror;\n        xhr.onprogress = httpRequest.progress;\n        xhr.onabort = httpRequest.onabort;\n        xhr.ontimeout = httpRequest.ontimeout;\n        xhr.timeout = httpRequest.timeout;\n\n        xhr.send();\n\n        httpRequest.response = xhr;\n    }\n\n    function abort(request) {\n        const x = request.response;\n        x.onloadend = x.onerror = x.onprogress = undefined; //Ignore events from aborted requests.\n        x.abort();\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    return instance;\n}\n\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\n\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\n    attributes: ['Laurl', 'laurl'],\n    prefixes: ['clearkey', 'dashif']\n};\n\n/**\n * @class\n * @ignore\n */\nclass CommonEncryption {\n    /**\n     * Find and return the ContentProtection element in the given array\n     * that indicates support for MPEG Common Encryption\n     *\n     * @param {Array} cpArray array of content protection elements\n     * @returns {Object|null} the Common Encryption content protection element or\n     * null if one was not found\n     */\n    static findCencContentProtection(cpArray) {\n        let retVal = null;\n        for (let i = 0; i < cpArray.length; ++i) {\n            let cp = cpArray[i];\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\n                retVal = cp;\n        }\n        return retVal;\n    }\n\n    /**\n     * Returns just the data portion of a single PSSH\n     *\n     * @param {ArrayBuffer} pssh - the PSSH\n     * @return {ArrayBuffer} data portion of the PSSH\n     */\n    static getPSSHData(pssh) {\n        let offset = 8; // Box size and type fields\n        let view = new DataView(pssh);\n\n        // Read version\n        let version = view.getUint8(offset);\n\n        offset += 20; // Version (1), flags (3), system ID (16)\n\n        if (version > 0) {\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\n        }\n\n        offset += 4; // Data size\n        return pssh.slice(offset);\n    }\n\n    /**\n     * Returns the PSSH associated with the given key system from the concatenated\n     * list of PSSH boxes in the given initData\n     *\n     * @param {KeySystem} keySystem the desired\n     * key system\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\n     * or null if a valid association could not be found.\n     */\n    static getPSSHForKeySystem(keySystem, initData) {\n        let psshList = CommonEncryption.parsePSSHList(initData);\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\n            return psshList[keySystem.uuid.toLowerCase()];\n        }\n        return null;\n    }\n\n    /**\n     * Parse a standard common encryption PSSH which contains a simple\n     * base64-encoding of the init data\n     *\n     * @param {Object} cpData the ContentProtection element\n     * @param {BASE64} BASE64 reference\n     * @returns {ArrayBuffer|null} the init data or null if not found\n     */\n    static parseInitDataFromContentProtection(cpData, BASE64) {\n        if ('pssh' in cpData) {\n\n            // Remove whitespaces and newlines from pssh text\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\n\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\n        }\n        return null;\n    }\n\n    /**\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\n     *\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\n     * CDM as initialization data when CommonEncryption content is detected\n     * @returns {Object|Array} an object that has a property named according to each of\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n     * and a ArrayBuffer (the entire PSSH box) as the property value\n     */\n    static parsePSSHList(data) {\n\n        if (data === null || data === undefined)\n            return [];\n\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\n        let done = false;\n        let pssh = {};\n\n        // TODO: Need to check every data read for end of buffer\n        let byteCursor = 0;\n        while (!done) {\n\n            let size,\n                nextBox,\n                version,\n                systemID;\n            let boxStart = byteCursor;\n\n            if (byteCursor >= dv.buffer.byteLength)\n                break;\n\n            /* Box size */\n            size = dv.getUint32(byteCursor);\n            nextBox = byteCursor + size;\n            byteCursor += 4;\n\n            /* Verify PSSH */\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor += 4;\n\n            /* Version must be 0 or 1 */\n            version = dv.getUint8(byteCursor);\n            if (version !== 0 && version !== 1) {\n                byteCursor = nextBox;\n                continue;\n            }\n            byteCursor++;\n\n            byteCursor += 3; /* skip flags */\n\n            // 16-byte UUID/SystemID\n            systemID = '';\n            let i, val;\n            for (i = 0; i < 4; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 4;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 2; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 2;\n            systemID += '-';\n            for (i = 0; i < 6; i++) {\n                val = dv.getUint8(byteCursor + i).toString(16);\n                systemID += (val.length === 1) ? '0' + val : val;\n            }\n            byteCursor += 6;\n\n            systemID = systemID.toLowerCase();\n\n            /* PSSH Data Size */\n            byteCursor += 4;\n\n            /* PSSH Data */\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\n            byteCursor = nextBox;\n        }\n\n        return pssh;\n    }\n\n    static getLicenseServerUrlFromMediaInfo(mediaInfo, schemeIdUri) {\n        try {\n\n            if (!mediaInfo || mediaInfo.length === 0) {\n                return null;\n            }\n\n            let i = 0;\n            let licenseServer = null;\n\n            while (i < mediaInfo.length && !licenseServer) {\n                const info = mediaInfo[i];\n\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\n                    const targetProtectionData = info.contentProtection.filter((cp) => {\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdUri;\n                    });\n\n                    if (targetProtectionData && targetProtectionData.length > 0) {\n                        let j = 0;\n                        while (j < targetProtectionData.length && !licenseServer) {\n                            const ckData = targetProtectionData[j];\n                            let k = 0;\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\n                                let l = 0;\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\n                                        licenseServer = ckData[attribute].__text;\n                                    }\n                                    l += 1;\n                                }\n                                k += 1;\n                            }\n                            j += 1;\n                        }\n                    }\n                }\n                i += 1;\n            }\n            return licenseServer;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n\nexport default CommonEncryption;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc A media capability\n * @ignore\n */\nclass MediaCapability {\n    /**\n     * @param {string} contentType MIME type and codecs (RFC6386)\n     * @param {string} robustness\n     * @class\n     * @ignore\n     */\n    constructor(contentType, robustness) {\n        this.contentType = contentType;\n        this.robustness = robustness;\n    }\n}\n\nexport default MediaCapability;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Represents a set of configurations that describe the capabilities desired for\n *  support by a given CDM\n * @ignore\n */\nclass KeySystemConfiguration {\n    /**\n     * @param {Array.<MediaCapability>} audioCapabilities array of\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {Array.<MediaCapability>} videoCapabilities array of\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\n     * in the array.\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\n     * One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {string} persistentState desired support for persistent storage of\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\n     * @param {Array.<string>} sessionTypes List of session types that must\n     * be supported by the key system\n     * @class\n     */\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\n        this.initDataTypes = [ 'cenc' ];\n        if (audioCapabilities && audioCapabilities.length) {\n            this.audioCapabilities = audioCapabilities;\n        }\n        if (videoCapabilities && videoCapabilities.length) {\n            this.videoCapabilities = videoCapabilities;\n        }\n        this.distinctiveIdentifier = distinctiveIdentifier;\n        this.persistentState = persistentState;\n        this.sessionTypes = sessionTypes;\n    }\n}\n\nexport default KeySystemConfiguration;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\n\n/**\n * @class\n */\nclass ProtectionErrors extends ErrorsBase {\n    constructor() {\n        super();\n\n        /**\n         *  Generid key Error code\n         */\n        this.MEDIA_KEYERR_CODE = 100;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n\n        /**\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n         */\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n        /**\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n         */\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n        /**\n         *  Error code returned when License server certificate has not been successfully updated\n         */\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n        /**\n         *  Error code returned when license validity has expired\n         */\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n        /**\n         *  Error code returned when no licenser url is defined\n         */\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n        /**\n         *  Error code returned when key system access is denied\n         */\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n        /**\n         *  Error code returned when key session has not been successfully created\n         */\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n        /**\n         *  Error code returned when license request failed after a keymessage event has been triggered\n         */\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    }\n}\n\nlet protectionErrors = new ProtectionErrors();\nexport default protectionErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license request\n * @ignore\n */\nclass LicenseRequest {\n    /**\n     * Defines a license request\n     *\n     * @class\n     */\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\n\n        /**\n         * The license request url\n         */\n        this.url = url;\n\n        /**\n         * The HTTP method\n         */\n        this.method = method;\n\n        /**\n         * The HTTP response type\n         */\n        this.responseType = responseType;\n\n        /**\n         * The HTP request headers\n         */\n        this.headers = headers;\n\n        /**\n         * Wether request is done using credentials (cross-site cookies)\n         */\n        this.withCredentials = withCredentials;\n\n        /**\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\n         */\n        this.messageType = messageType;\n\n        /**\n         * The corresponding EME session ID\n         */\n        this.sessionId = sessionId;\n\n        /**\n         * The license request data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Defines a license response\n */\nclass LicenseResponse {\n    /**\n     * Defines a license response\n     *\n     * @class\n     * @ignore\n     */\n    constructor(url, headers, data) {\n\n        /**\n         * The url that was loaded, that can be redirected from original request url\n         */\n        this.url = url;\n\n        /**\n         * The HTP response headers\n         */\n        this.headers = headers;\n\n        /**\n         * The license response data\n         */\n        this.data = data;\n    }\n}\n\nexport default LicenseResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport MediaCapability from '../vo/MediaCapability';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport LicenseRequest from '../vo/LicenseRequest';\nimport LicenseResponse from '../vo/LicenseResponse';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport Utils from '../../../core/Utils';\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\n\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\n\n/**\n * @module ProtectionController\n * @description Provides access to media protection information and functionality.  Each\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\n * which encapsulates a set of protection information (EME APIs, selected key system,\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\n * functionality provided in {@link ProtectionKeyController}.\n * @todo ProtectionController does almost all of its tasks automatically after init() is\n * called.  Applications might want more control over this process and want to go through\n * each step manually (key system selection, session creation, session maintenance).\n * This module can be accessed using the MediaPlayer API getProtectionController()\n * @param {Object} config\n */\n\nfunction ProtectionController(config) {\n\n    config = config || {};\n    const protectionKeyController = config.protectionKeyController;\n    let protectionModel = config.protectionModel;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const debug = config.debug;\n    const BASE64 = config.BASE64;\n    const constants = config.constants;\n    let needkeyRetries = [];\n    const cmcdModel = config.cmcdModel;\n    const settings = config.settings;\n    const customParametersModel = config.customParametersModel;\n\n    let instance,\n        logger,\n        pendingKeySessionsToHandle,\n        mediaInfoArr,\n        protDataSet,\n        sessionType,\n        robustnessLevel,\n        selectedKeySystem,\n        keySystemSelectionInProgress,\n        licenseXhrRequest,\n        licenseRequestRetryTimeout;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        pendingKeySessionsToHandle = [];\n        mediaInfoArr = [];\n        sessionType = 'temporary';\n        robustnessLevel = '';\n        licenseXhrRequest = null;\n        licenseRequestRetryTimeout = null;\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\n    }\n\n    function checkConfig() {\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    /**\n     * Initialize this protection system for a given media type.\n     *\n     * @param {StreamInfo} [mediaInfo] Media information\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function initializeForMedia(mediaInfo) {\n        // Not checking here if a session for similar KS/KID combination is already created\n        // because still don't know which keysystem will be selected.\n        // Once Keysystem is selected and before creating the session, we will do that check\n        // so we create the strictly necessary DRM sessions\n        if (!mediaInfo) {\n            throw new Error('mediaInfo can not be null or undefined');\n        }\n\n        checkConfig();\n\n        mediaInfoArr.push(mediaInfo);\n    }\n\n    /**\n     * Once all mediaInfo objects have been added to our mediaInfoArray we can select a key system or check if the kid has changed and we need to trigger a new license request\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function handleKeySystemFromManifest() {\n        if (!mediaInfoArr || mediaInfoArr.length === 0) {\n            return;\n        }\n\n        let supportedKeySystems = [];\n        mediaInfoArr.forEach((mInfo) => {\n            const currentKs = protectionKeyController.getSupportedKeySystemsFromContentProtection(mInfo.contentProtection, protDataSet, sessionType);\n            // We assume that the same key systems are signaled for each AS. We can use the first entry we found\n            if (currentKs.length > 0) {\n                if (supportedKeySystems.length === 0) {\n                    supportedKeySystems = currentKs;\n                }\n                // Save config for creating key session once we selected a key system\n                pendingKeySessionsToHandle.push(currentKs);\n            }\n        })\n\n        if (supportedKeySystems && supportedKeySystems.length > 0) {\n            _selectKeySystemOrUpdateKeySessions(supportedKeySystems, true);\n        }\n    }\n\n    /**\n     * Selects a key system if we dont have any one yet. Otherwise we use the existing key system and trigger a new license request if the initdata has changed\n     * @param {array} supportedKs\n     * @private\n     */\n    function _handleKeySystemFromPssh(supportedKs) {\n        pendingKeySessionsToHandle.push(supportedKs);\n        _selectKeySystemOrUpdateKeySessions(supportedKs, false);\n    }\n\n    /**\n     * Select the key system or update one of our existing key sessions\n     * @param {array} supportedKs\n     * @param {boolean} fromManifest\n     * @private\n     */\n    function _selectKeySystemOrUpdateKeySessions(supportedKs, fromManifest) {\n        // First time, so we need to select a key system\n        if (!selectedKeySystem && !keySystemSelectionInProgress) {\n            _selectInitialKeySystem(supportedKs, fromManifest);\n        }\n\n        // We already selected a key system. We only need to trigger a new license exchange if the init data has changed\n        else if (selectedKeySystem) {\n            _handleKeySessions();\n        }\n    }\n\n    /**\n     * We do not have a key system yet. Select one\n     * @param {array} supportedKs\n     * @param {boolean} fromManifest\n     * @private\n     */\n    function _selectInitialKeySystem(supportedKs, fromManifest) {\n        if (!keySystemSelectionInProgress) {\n            keySystemSelectionInProgress = true;\n            const requestedKeySystems = [];\n\n            // Reorder key systems according to priority order provided in protectionData\n            supportedKs = supportedKs.sort((ksA, ksB) => {\n                let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKs.length;\n                let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKs.length;\n                return indexA - indexB;\n            });\n\n            // Add all key systems to our request list since we have yet to select a key system\n            for (let i = 0; i < supportedKs.length; i++) {\n                const keySystemConfiguration = _getKeySystemConfiguration(supportedKs[i]);\n                requestedKeySystems.push({\n                    ks: supportedKs[i].ks,\n                    configs: [keySystemConfiguration],\n                    protData: supportedKs[i].protData\n                });\n            }\n\n            let keySystemAccess;\n\n            protectionModel.requestKeySystemAccess(requestedKeySystems)\n                .then((event) => {\n                    keySystemAccess = event.data;\n                    let selectedSystemString = keySystemAccess.mksa && keySystemAccess.mksa.selectedSystemString ? keySystemAccess.mksa.selectedSystemString : keySystemAccess.keySystem.systemString;\n                    logger.info('DRM: KeySystem Access Granted for system string (' + selectedSystemString + ')!  Selecting key system...');\n                    return protectionModel.selectKeySystem(keySystemAccess);\n                })\n                .then((keySystem) => {\n                    selectedKeySystem = keySystem;\n                    keySystemSelectionInProgress = false;\n\n                    if (!protectionModel) {\n                        return;\n                    }\n\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\n\n                    // Set server certificate from protData\n                    const protData = _getProtDataForKeySystem(selectedKeySystem);\n                    if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\n                        protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\n                    }\n\n                    _handleKeySessions();\n                })\n                .catch((event) => {\n                    selectedKeySystem = null;\n                    keySystemSelectionInProgress = false;\n                    if (!fromManifest) {\n                        eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\n                            data: null,\n                            error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\n                        });\n                    }\n                })\n        }\n    }\n\n    /**\n     * If we have already selected a key system we only need to create a new key session and issue a new license request if the init data has changed.\n     * @private\n     */\n    function _handleKeySessions() {\n        // Create key sessions for the different AdaptationSets\n        let ksIdx;\n        for (let i = 0; i < pendingKeySessionsToHandle.length; i++) {\n            for (ksIdx = 0; ksIdx < pendingKeySessionsToHandle[i].length; ksIdx++) {\n                if (selectedKeySystem === pendingKeySessionsToHandle[i][ksIdx].ks) {\n                    const current = pendingKeySessionsToHandle[i][ksIdx]\n                    _loadOrCreateKeySession(current)\n                    break;\n                }\n            }\n        }\n        pendingKeySessionsToHandle = [];\n    }\n\n    /**\n     * Loads an existing key session if we already have a session id. Otherwise we create a new key session\n     * @param {object} keySystemInfo\n     * @private\n     */\n    function _loadOrCreateKeySession(keySystemInfo) {\n        // Clearkey\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\n            // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\n            // initData and overwrite possible initData indicated in encrypted event (EME)\n            if (keySystemInfo.protData && keySystemInfo.protData.hasOwnProperty('clearkeys') && Object.keys(keySystemInfo.protData.clearkeys).length !== 0) {\n                const initData = { kids: Object.keys(keySystemInfo.protData.clearkeys) };\n                keySystemInfo.initData = new TextEncoder().encode(JSON.stringify(initData));\n            }\n        }\n\n        // Reuse existing KeySession\n        if (keySystemInfo.sessionId) {\n            // Load MediaKeySession with sessionId\n            loadKeySession(keySystemInfo);\n        }\n\n        // Create a new KeySession\n        else if (keySystemInfo.initData !== null) {\n            // Create new MediaKeySession with initData\n            createKeySession(keySystemInfo);\n        }\n    }\n\n    /**\n     * Loads a key session with the given session ID from persistent storage.  This essentially creates a new key session\n     *\n     * @param {object} ksInfo\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @ignore\n     */\n    function loadKeySession(keySystemInfo) {\n        checkConfig();\n        protectionModel.loadKeySession(keySystemInfo);\n    }\n\n    /**\n     * Create a new key session associated with the given initialization data from the MPD or from the PSSH box in the media\n     * For the latest version of the EME a request is generated. Once this request is ready we get notified via the INTERNAL_KEY_MESSAGE event\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionCreated\n     * @ignore\n     */\n    function createKeySession(keySystemInfo) {\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, keySystemInfo ? keySystemInfo.initData : null);\n\n        if (initDataForKS) {\n\n            // Check for duplicate key id\n            if (_isKeyIdDuplicate(keySystemInfo.keyId)) {\n                return;\n            }\n\n            // Check for duplicate initData\n            if (_isInitDataDuplicate(initDataForKS)) {\n                return;\n            }\n\n            try {\n                keySystemInfo.initData = initDataForKS;\n                protectionModel.createKeySession(keySystemInfo);\n            } catch (error) {\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\n                });\n            }\n        } else if (keySystemInfo && keySystemInfo.initData) {\n            protectionModel.createKeySession(keySystemInfo);\n        } else {\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (selectedKeySystem ? selectedKeySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\n            });\n        }\n    }\n\n    /**\n     * Returns the protectionData for a specific keysystem as specified by the application.\n     * @param {object} keySystem\n     * @return {object | null}\n     * @private\n     */\n    function _getProtDataForKeySystem(keySystem) {\n        if (keySystem) {\n            const keySystemString = keySystem.systemString;\n\n            if (protDataSet) {\n                return (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Removes all entries from the mediaInfoArr\n     */\n    function clearMediaInfoArray() {\n        mediaInfoArr = [];\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     * @ignore\n     */\n    function getSupportedKeySystemsFromContentProtection(cps) {\n        checkConfig();\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType);\n    }\n\n    /**\n     * Checks if a session has already created for the provided key id\n     * @param {string} keyId\n     * @return {boolean}\n     * @private\n     */\n    function _isKeyIdDuplicate(keyId) {\n\n        if (!keyId) {\n            return false;\n        }\n\n        try {\n            const sessions = protectionModel.getSessions();\n            for (let i = 0; i < sessions.length; i++) {\n                if (sessions[i].getKeyId() === keyId) {\n                    return true;\n                }\n            }\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the provided init data is equal to one of the existing init data values\n     * @param {any} initDataForKS\n     * @return {boolean}\n     * @private\n     */\n    function _isInitDataDuplicate(initDataForKS) {\n\n        if (!initDataForKS) {\n            return false;\n        }\n\n        try {\n            const currentInitData = protectionModel.getAllInitData();\n            for (let i = 0; i < currentInitData.length; i++) {\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\n                    return true;\n                }\n            }\n\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Removes the given key session from persistent storage and closes the session\n     * as if {@link ProtectionController#closeKeySession}\n     * was called\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionRemoved\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function removeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.removeKeySession(sessionToken);\n    }\n\n    /**\n     * Closes the key session and releases all associated decryption keys.  These\n     * keys will no longer be available for decrypting media\n     *\n     * @param {SessionToken} sessionToken the session\n     * token\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#KeySessionClosed\n     * @ignore\n     */\n    function closeKeySession(sessionToken) {\n        checkConfig();\n        protectionModel.closeKeySession(sessionToken);\n    }\n\n    /**\n     * Sets a server certificate for use by the CDM when signing key messages\n     * intended for a particular license server.  This will fire\n     * an error event if a key system has not yet been selected.\n     *\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\n     * certificate\n     * @memberof module:ProtectionController\n     * @instance\n     * @fires ProtectionController#ServerCertificateUpdated\n     */\n    function setServerCertificate(serverCertificate) {\n        checkConfig();\n        protectionModel.setServerCertificate(serverCertificate);\n    }\n\n    /**\n     * Associate this protection system with the given HTMLMediaElement.  This\n     * causes the system to register for needkey/encrypted events from the given\n     * element and provides a destination for setting of MediaKeys\n     *\n     * @param {HTMLMediaElement} element the media element to which the protection\n     * system should be associated\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setMediaElement(element) {\n        checkConfig();\n        if (element) {\n            protectionModel.setMediaElement(element);\n            eventBus.on(events.NEED_KEY, _onNeedKey, instance);\n        } else if (element === null) {\n            protectionModel.setMediaElement(element);\n            eventBus.off(events.NEED_KEY, _onNeedKey, instance);\n        }\n    }\n\n    /**\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\n     * \"persistent-license\".  Default is \"temporary\".\n     *\n     * @param {string} value the session type\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setSessionType(value) {\n        sessionType = value;\n    }\n\n    /**\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\n     *\n     * @param {string} level the robustness level\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function setRobustnessLevel(level) {\n        robustnessLevel = level;\n    }\n\n    /**\n     * Attach KeySystem-specific data to use for license acquisition with EME\n     *\n     * @param {Object} data an object containing property names corresponding to\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\n     * being instances of {@link ProtectionData}\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function setProtectionData(data) {\n        protDataSet = data;\n        protectionKeyController.setProtectionData(data);\n    }\n\n    /**\n     * Stop method is called when current playback is stopped/resetted.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     */\n    function stop() {\n        _abortLicenseRequest();\n        if (protectionModel) {\n            protectionModel.stop();\n        }\n    }\n\n    /**\n     * Destroys all protection data associated with this protection set.  This includes\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\n     * associated with a HTMLMediaElement, it will be detached from that element.\n     *\n     * @memberof module:ProtectionController\n     * @instance\n     * @ignore\n     */\n    function reset() {\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\n\n        checkConfig();\n\n        _abortLicenseRequest();\n\n        setMediaElement(null);\n\n        selectedKeySystem = null;\n        keySystemSelectionInProgress = false;\n\n        if (protectionModel) {\n            protectionModel.reset();\n            protectionModel = null;\n        }\n\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\n        needkeyRetries = [];\n\n        mediaInfoArr = [];\n        pendingKeySessionsToHandle = [];\n    }\n\n    /**\n     * Returns an object corresponding to the EME MediaKeySystemConfiguration dictionary\n     * @param {object} keySystem\n     * @return {KeySystemConfiguration}\n     * @private\n     */\n    function _getKeySystemConfiguration(keySystemData) {\n        const protData = keySystemData.protData;\n        const audioCapabilities = [];\n        const videoCapabilities = [];\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\n        const ksSessionType = keySystemData.sessionType;\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\n\n        mediaInfoArr.forEach((media) => {\n            if (media.type === constants.AUDIO) {\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\n            } else if (media.type === constants.VIDEO) {\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\n            }\n        });\n\n        return new KeySystemConfiguration(\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\n            persistentState,\n            [ksSessionType]);\n    }\n\n    /**\n     * Event handler for when the status of the key has changed\n     * @param {object} e\n     * @private\n     */\n    function _onKeyStatusChanged(e) {\n        if (e.error) {\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\n        } else {\n            logger.debug('DRM: key status = ' + e.status);\n        }\n    }\n\n    /**\n     * Event handler for the key message event. Once we have a key message we can issue a license request\n     * @param {object} e\n     * @private\n     */\n    function _onKeyMessage(e) {\n        logger.debug('DRM: onKeyMessage');\n\n        // Dispatch event to applications indicating we received a key message\n        const keyMessage = e.data;\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        const message = keyMessage.message;\n        const sessionToken = keyMessage.sessionToken;\n        const protData = _getProtDataForKeySystem(selectedKeySystem);\n        const licenseServerModelInstance = protectionKeyController.getLicenseServerModelInstance(selectedKeySystem, protData, messageType);\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\n\n        // Ensure message from CDM is not empty\n        if (!message || message.byteLength === 0) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\n            return;\n        }\n\n        // Message not destined for license server\n        if (!licenseServerModelInstance) {\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionId());\n            _sendLicenseRequestCompleteEvent(eventData);\n            return;\n        }\n\n        // Perform any special handling for ClearKey\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(selectedKeySystem, protData, message);\n            if (clearkeys && clearkeys.keyPairs && clearkeys.keyPairs.length > 0) {\n                logger.debug('DRM: ClearKey license request handled by application!');\n                _sendLicenseRequestCompleteEvent(eventData);\n                protectionModel.updateKeySession(sessionToken, clearkeys);\n                return;\n            }\n        }\n\n        // In all other cases we have to make a license request\n        _issueLicenseRequest(keyMessage, licenseServerModelInstance, protData);\n    }\n\n    /**\n     * Notify other classes that the license request was completed\n     * @param {object} data\n     * @param {object} error\n     * @private\n     */\n    function _sendLicenseRequestCompleteEvent(data, error) {\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\n    }\n\n    /**\n     * Start issuing a license request\n     * @param {object} keyMessage\n     * @param {object} licenseServerData\n     * @param {object} protData\n     * @private\n     */\n    function _issueLicenseRequest(keyMessage, licenseServerData, protData) {\n        const sessionToken = keyMessage.sessionToken;\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\n        const keySystemString = selectedKeySystem ? selectedKeySystem.systemString : null;\n\n        // Determine license server URL\n        let url = _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData);\n\n        // Ensure valid license server URL\n        if (!url) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\n            return;\n        }\n\n        // Set optional XMLHttpRequest headers from protection data and message\n        const reqHeaders = {};\n        let withCredentials = false;\n        if (protData) {\n            _updateHeaders(reqHeaders, protData.httpRequestHeaders);\n        }\n        const message = keyMessage.message;\n        const headersFromMessage = selectedKeySystem.getRequestHeadersFromMessage(message);\n        _updateHeaders(reqHeaders, headersFromMessage);\n\n        Object.keys(reqHeaders).forEach((key) => {\n            if ('authorization' === key.toLowerCase()) {\n                withCredentials = true;\n            }\n        });\n\n        // Overwrite withCredentials property from protData if present\n        if (protData && typeof protData.withCredentials == 'boolean') {\n            withCredentials = protData.withCredentials;\n        }\n\n        const onLoad = function (xhr) {\n            if (!protectionModel) {\n                return;\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                const responseHeaders = Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null);\n                let licenseResponse = new LicenseResponse(xhr.responseURL, responseHeaders, xhr.response);\n                const licenseResponseFilters = customParametersModel.getLicenseResponseFilters();\n                _applyFilters(licenseResponseFilters, licenseResponse)\n                    .then(() => {\n                        const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\n                        if (licenseMessage !== null) {\n                            _sendLicenseRequestCompleteEvent(eventData);\n                            protectionModel.updateKeySession(sessionToken, licenseMessage);\n                        } else {\n                            _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\n                        }\n                    });\n            } else {\n                _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\n            }\n        };\n\n        const onAbort = function (xhr) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const onError = function (xhr) {\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\n        };\n\n        const reqPayload = selectedKeySystem.getLicenseRequestFromMessage(message);\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\n        const sessionId = sessionToken.getSessionId() || null;\n\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\n        const licenseRequestFilters = customParametersModel.getLicenseRequestFilters();\n        _applyFilters(licenseRequestFilters, licenseRequest)\n            .then(() => {\n                _doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\n            });\n    }\n\n    /**\n     * Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\n     * @param {object} request\n     * @param {number} retriesCount\n     * @param {number} timeout\n     * @param {function} onLoad\n     * @param {function} onAbort\n     * @param {function} onError\n     * @private\n     */\n    function _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\n        const xhr = new XMLHttpRequest();\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\n                const cmcdParams = cmcdModel.getQueryParameter({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdParams) {\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\n                }\n            }\n        }\n\n        xhr.open(request.method, request.url, true);\n        xhr.responseType = request.responseType;\n        xhr.withCredentials = request.withCredentials;\n        if (timeout > 0) {\n            xhr.timeout = timeout;\n        }\n        for (const key in request.headers) {\n            xhr.setRequestHeader(key, request.headers[key]);\n        }\n\n        if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n            const cmcdMode = settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\n                    url: request.url,\n                    type: HTTPRequest.LICENSE\n                });\n\n                if (cmcdHeaders) {\n                    for (const header in cmcdHeaders) {\n                        let value = cmcdHeaders[header];\n                        if (value) {\n                            xhr.setRequestHeader(header, value);\n                        }\n                    }\n                }\n            }\n        }\n\n        const _retryRequest = function () {\n            // fail silently and retry\n            retriesCount--;\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\n            licenseRequestRetryTimeout = setTimeout(function () {\n                _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\n            }, retryInterval);\n        };\n\n        xhr.onload = function () {\n            licenseXhrRequest = null;\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\n                onLoad(this);\n            } else {\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\n                _retryRequest();\n            }\n        };\n\n        xhr.ontimeout = xhr.onerror = function () {\n            licenseXhrRequest = null;\n            if (retriesCount <= 0) {\n                onError(this);\n            } else {\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\n                _retryRequest();\n            }\n        };\n\n        xhr.onabort = function () {\n            onAbort(this);\n        };\n\n        // deprecated, to be removed\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\n            url: request.url,\n            headers: request.headers,\n            payload: request.data,\n            sessionId: request.sessionId\n        });\n\n        licenseXhrRequest = xhr;\n        xhr.send(request.data);\n    }\n\n    /**\n     * Aborts license request\n     * @private\n     */\n    function _abortLicenseRequest() {\n        if (licenseXhrRequest) {\n            licenseXhrRequest.onloadend = licenseXhrRequest.onerror = licenseXhrRequest.onprogress = undefined; //Ignore events from aborted requests.\n            licenseXhrRequest.abort();\n            licenseXhrRequest = null;\n        }\n\n        if (licenseRequestRetryTimeout) {\n            clearTimeout(licenseRequestRetryTimeout);\n            licenseRequestRetryTimeout = null;\n        }\n    }\n\n    /**\n     * Returns the url of the license server\n     * @param {object} protData\n     * @param {string} messageType\n     * @param {object} sessionToken\n     * @param {object} keyMessage\n     * @param {object} licenseServerData\n     * @return {*}\n     * @private\n     */\n    function _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData) {\n        let url = null;\n        const message = keyMessage.message;\n\n        // Check if the url is defined by the application\n        if (protData && protData.serverURL) {\n            const serverURL = protData.serverURL;\n            if (typeof serverURL === 'string' && serverURL !== '') {\n                url = serverURL;\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\n                url = serverURL[messageType];\n            }\n        }\n\n        // This is the old way of providing the url\n        else if (protData && protData.laURL && protData.laURL !== '') {\n            url = protData.laURL;\n        }\n\n        // No url provided by the app. Check the manifest and the pssh\n        else {\n            // Check for url defined in the manifest\n            url = CommonEncryption.getLicenseServerUrlFromMediaInfo(mediaInfoArr, selectedKeySystem.schemeIdURI);\n\n            // In case we are not using Clearky we can still get a url from the pssh.\n            if (!url && !protectionKeyController.isClearKey(selectedKeySystem)) {\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\n                url = selectedKeySystem.getLicenseServerURLFromInitData(psshData);\n\n                // Still no url, check the keymessage\n                if (!url) {\n                    url = keyMessage.laURL;\n                }\n            }\n        }\n        // Possibly update or override the URL based on the message\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\n\n        return url;\n    }\n\n    /**\n     * Add new headers to the existing ones\n     * @param {array} reqHeaders\n     * @param {object} headers\n     * @private\n     */\n    function _updateHeaders(reqHeaders, headers) {\n        if (headers) {\n            for (const key in headers) {\n                reqHeaders[key] = headers[key];\n            }\n        }\n    }\n\n    /**\n     * Reports an error that might have occured during the license request\n     * @param {object} xhr\n     * @param {object} eventData\n     * @param {string} keySystemString\n     * @param {string} messageType\n     * @param {object} licenseServerData\n     * @private\n     */\n    function _reportError(xhr, eventData, keySystemString, messageType, licenseServerData) {\n        let errorMsg = 'NONE';\n        let data = null;\n\n        if (xhr.response) {\n            errorMsg = licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType);\n            data = {\n                serverResponse: xhr.response || null,\n                responseCode: xhr.status || null,\n                responseText: xhr.statusText || null\n            }\n        }\n\n        _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\n            ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\n            xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg,\n            data\n        ));\n    }\n\n    /**\n     * Applies custom filters defined by the application\n     * @param {array} filters\n     * @param {object} param\n     * @return {Promise<void>|*}\n     * @private\n     */\n    function _applyFilters(filters, param) {\n        if (!filters) return Promise.resolve();\n        return filters.reduce((prev, next) => {\n            return prev.then(() => {\n                return next(param);\n            });\n        }, Promise.resolve());\n    }\n\n    /**\n     * Event handler for \"needkey\" and \"encrypted\" events\n     * @param {object} event\n     * @param {number} retry\n     * @private\n     */\n    function _onNeedKey(event, retry) {\n        if (!settings.get().streaming.protection.ignoreEmeEncryptedEvent) {\n            logger.debug('DRM: onNeedKey');\n\n            // Ignore non-cenc initData\n            if (event.key.initDataType !== 'cenc') {\n                logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\n                return;\n            }\n\n            if (mediaInfoArr.length === 0) {\n                logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\n                retry = typeof retry === 'undefined' ? 1 : retry + 1;\n                if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\n                    needkeyRetries.push(setTimeout(() => {\n                        _onNeedKey(event, retry);\n                    }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\n                    return;\n                }\n            }\n\n            // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\n            // Convert to ArrayBuffer\n            let abInitData = event.key.initData;\n            if (ArrayBuffer.isView(abInitData)) {\n                abInitData = abInitData.buffer;\n            }\n\n            // If key system has already been selected and initData already seen, then do nothing\n            if (selectedKeySystem) {\n                const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, abInitData);\n                if (initDataForKS) {\n                    // Check for duplicate initData\n                    if (_isInitDataDuplicate(initDataForKS)) {\n                        return;\n                    }\n                }\n            }\n\n            logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\n\n            const supportedKs = protectionKeyController.getSupportedKeySystemsFromSegmentPssh(abInitData, protDataSet, sessionType);\n            if (supportedKs.length === 0) {\n                logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\n                return;\n            }\n\n            _handleKeySystemFromPssh(supportedKs);\n        }\n    }\n\n    /**\n     * Returns all available key systems\n     * @return {array}\n     */\n    function getKeySystems() {\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\n    }\n\n    /**\n     * Sets all available key systems\n     * @param {array} keySystems\n     */\n    function setKeySystems(keySystems) {\n        if (protectionKeyController) {\n            protectionKeyController.setKeySystems(keySystems);\n        }\n    }\n\n    instance = {\n        initializeForMedia,\n        clearMediaInfoArray,\n        handleKeySystemFromManifest,\n        createKeySession,\n        loadKeySession,\n        removeKeySession,\n        closeKeySession,\n        setServerCertificate,\n        setMediaElement,\n        setSessionType,\n        setRobustnessLevel,\n        setProtectionData,\n        getSupportedKeySystemsFromContentProtection,\n        getKeySystems,\n        setKeySystems,\n        stop,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nProtectionController.__dashjs_factory_name = 'ProtectionController';\nexport default FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\n * @ignore\n */\nclass KeyPair {\n    /**\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\n     * @class\n     * @ignore\n     */\n    constructor(keyID, key) {\n        this.keyID = keyID;\n        this.key = key;\n    }\n}\n\nexport default KeyPair;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        let i;\n        let numKeys = this.keyPairs.length;\n        let jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            let key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        let jwkString = JSON.stringify(jwk);\n        const len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        let buf = new ArrayBuffer(len);\n        let bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Protection Constants declaration\n * @class\n * @ignore\n */\nclass ProtectionConstants {\n\n    init () {\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\n        this.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING = 'com.microsoft.playready.recommendation';\n        this.INITIALIZATION_DATA_TYPE_CENC = 'cenc';\n        this.INITIALIZATION_DATA_TYPE_KEYIDS = 'keyids'\n        this.INITIALIZATION_DATA_TYPE_WEBM = 'webm'\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new ProtectionConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp, cencContentProtection) {\n        try {\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n\n            if (!initData && cencContentProtection) {\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\n                const data = { kids: [cencDefaultKid] };\n                initData = new TextEncoder().encode(JSON.stringify(data));\n            }\n\n            return initData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\n        try {\n            let kid = cencDefaultKid.replace(/-/g, '');\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\n                return String.fromCharCode(parseInt(a, 16));\n            }).join(''));\n            return kid.replace(/=/g, '')\n                .replace(/\\//g, '_')\n                .replace(/\\+/g, '-');\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        // Set content type to application/json by default\n        return {\n            'Content-Type': 'application/json'\n        };\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message))));\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData,\n        getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemW3CClearKey(config) {\n    let instance;\n    const BASE64 = config.BASE64;\n    const logger = config.debug.getLogger(instance);\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionDataSet} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    function getCDMData(/*cdmData*/) {\n        return null;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Microsoft PlayReady DRM\n *\n * @class\n * @implements KeySystem\n */\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\n\nfunction KeySystemPlayReady(config) {\n\n    config = config || {};\n    let instance;\n    let messageFormat = 'utf-16';\n    const BASE64 = config.BASE64;\n    const settings = config.settings;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getRequestHeadersFromMessage(message) {\n        let msg,\n            xmlDoc;\n        const headers = {};\n        const parser = new DOMParser();\n\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\n                headers['Content-Type'] = 'text/xml; charset=utf-8';\n                return headers;\n            }\n        }\n\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        msg = String.fromCharCode.apply(null, dataview);\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        const headerNameList = xmlDoc.getElementsByTagName('name');\n        const headerValueList = xmlDoc.getElementsByTagName('value');\n        for (let i = 0; i < headerNameList.length; i++) {\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\n        }\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\n        // this is NOT w3c conform and license servers may reject the request!\n        // -> rename it to proper w3c definition!\n        if (headers.hasOwnProperty('Content')) {\n            headers['Content-Type'] = headers.Content;\n            delete headers.Content;\n        }\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\n        if (!headers.hasOwnProperty('Content-Type')) {\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\n        }\n        return headers;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        let licenseRequest = null;\n        const parser = new DOMParser();\n\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\n                return message;\n            }\n        }\n\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\n\n        checkConfig();\n        const msg = String.fromCharCode.apply(null, dataview);\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\n\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\n            if (Challenge) {\n                licenseRequest = BASE64.decode(Challenge);\n            }\n        } else {\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\n            // thus it contains direclty the challenge itself\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\n            return message;\n        }\n\n        return licenseRequest;\n    }\n\n    function getLicenseServerURLFromInitData(initData) {\n        if (initData) {\n            const data = new DataView(initData);\n            const numRecords = data.getUint16(4, true);\n            let offset = 6;\n            const parser = new DOMParser();\n\n            for (let i = 0; i < numRecords; i++) {\n                // Parse the PlayReady Record header\n                const recordType = data.getUint16(offset, true);\n                offset += 2;\n                const recordLength = data.getUint16(offset, true);\n                offset += 2;\n                if (recordType !== 0x0001) {\n                    offset += recordLength;\n                    continue;\n                }\n\n                const recordData = initData.slice(offset, offset + recordLength);\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\n\n                // First try <LA_URL>\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\n                    if (laurl) {\n                        return laurl;\n                    }\n                }\n\n                // Optionally, try <LUI_URL>\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\n                    if (luiurl) {\n                        return luiurl;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getInitData(cpData) {\n        // * desc@ getInitData\n        // *   generate PSSH data from PROHeader defined in MPD file\n        // *   PSSH format:\n        // *   size (4)\n        // *   box type(PSSH) (8)\n        // *   Protection SystemID (16)\n        // *   protection system data size (4) - length of decoded PROHeader\n        // *   decoded PROHeader data from MPD file\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\n\n        let byteCursor = 0;\n        let uint8arraydecodedPROHeader = null;\n\n        let PROSize,\n            PSSHSize,\n            PSSHBoxBuffer,\n            PSSHBox,\n            PSSHData;\n\n        checkConfig();\n        if (!cpData) {\n            return null;\n        }\n        // Handle common encryption PSSH\n        if ('pssh' in cpData) {\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\n        }\n        // Handle native MS PlayReady ContentProtection elements\n        if ('pro' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\n        }\n        else if ('prheader' in cpData) {\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\n        }\n        else {\n            return null;\n        }\n\n        PROSize = uint8arraydecodedPROHeader.length;\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\n\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\n\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\n        PSSHData = new DataView(PSSHBoxBuffer);\n\n        PSSHData.setUint32(byteCursor, PSSHSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(PSSHBoxType, byteCursor);\n        byteCursor += PSSHBoxType.length;\n\n        PSSHBox.set(playreadySystemID, byteCursor);\n        byteCursor += playreadySystemID.length;\n\n        PSSHData.setUint32(byteCursor, PROSize);\n        byteCursor += 0x4;\n\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\n        byteCursor += PROSize;\n\n        return PSSHBox.buffer;\n    }\n\n    /**\n     * It seems that some PlayReady implementations return their XML-based CDM\n     * messages using UTF16, while others return them as UTF8.  Use this function\n     * to modify the message format to expect when parsing CDM messages.\n     *\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\n     */\n    function setPlayReadyMessageFormat(format) {\n        if (format !== 'utf-8' && format !== 'utf-16') {\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\n        }\n        messageFormat = format;\n    }\n\n    /**\n     * Get Playready Custom data\n     */\n    function getCDMData(_cdmData) {\n        let customData,\n            cdmData,\n            cdmDataBytes,\n            i;\n\n        checkConfig();\n        if (!_cdmData) return null;\n\n        // Convert custom data into multibyte string\n        customData = [];\n        for (i = 0; i < _cdmData.length; ++i) {\n            customData.push(_cdmData.charCodeAt(i));\n            customData.push(0);\n        }\n        customData = String.fromCharCode.apply(null, customData);\n\n        // Encode in Base 64 the custom data string\n        customData = BASE64.encode(customData);\n\n        // Initialize CDM data with Base 64 encoded custom data\n        // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\n        cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\n\n        // Convert CDM data into multibyte characters\n        cdmDataBytes = [];\n        for (i = 0; i < cdmData.length; ++i) {\n            cdmDataBytes.push(cdmData.charCodeAt(i));\n            cdmDataBytes.push(0);\n        }\n\n        return new Uint8Array(cdmDataBytes).buffer;\n    }\n\n    instance = {\n        uuid,\n        schemeIdURI,\n        systemString,\n        getInitData,\n        getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData,\n        getCDMData,\n        setPlayReadyMessageFormat\n    };\n\n    return instance;\n}\n\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\n\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction DRMToday(config) {\n\n    config = config || {};\n    const BASE64 = config.BASE64;\n\n    const keySystems = {};\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\n        responseType: 'json',\n        getLicenseMessage: function (response) {\n            return BASE64.decodeArray(response.license);\n        },\n        getErrorResponse: function (response) {\n            return response;\n        }\n    };\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\n        responseType: 'arraybuffer',\n        getLicenseMessage: function (response) {\n            return response;\n        },\n        getErrorResponse: function (response) {\n            return String.fromCharCode.apply(null, new Uint8Array(response));\n        }\n    };\n\n    let instance;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        checkConfig();\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global escape: true */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n * @ignore\n */\n\nfunction PlayReady() {\n\n    let instance;\n\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\n\n    function uintToString(arrayBuffer) {\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n\n    function parseServerResponse(serverResponse) {\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n\n            if (fault) {\n                return null;\n            }\n        }\n        return serverResponse;\n    }\n\n    function parseErrorResponse(serverResponse) {\n        let faultstring = '';\n        let statusCode = '';\n        let message = '';\n        let idStart = -1;\n        let idEnd = -1;\n\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\n            let node = null;\n\n            if (fault === null) {\n                return stringResponse;\n            }\n\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\n            faultstring = node ? node.nodeValue : null;\n\n            if (exception !== null) {\n                node = exception.getElementsByTagName('StatusCode')[0];\n                statusCode = node ? node.firstChild.nodeValue : null;\n                node = exception.getElementsByTagName('Message')[0];\n                message = node ? node.firstChild.nodeValue : null;\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\n                idEnd = message ? message.indexOf(']') : -1;\n                message = message ? message.substring(idStart, idEnd) : '';\n            }\n        }\n\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\n        if (message) {\n            errorString += `, message: ${message}`;\n        }\n\n        return errorString;\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return parseServerResponse.call(this, serverResponse);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return parseErrorResponse.call(this, serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @ignore\n */\nfunction Widevine() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return serverResponse;\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nWidevine.__dashjs_factory_name = 'Widevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /* message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage,\n        getHTTPMethod,\n        getResponseType,\n        getLicenseMessage,\n        getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport CommonEncryption from './../CommonEncryption';\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\nimport DRMToday from './../servers/DRMToday';\nimport PlayReady from './../servers/PlayReady';\nimport Widevine from './../servers/Widevine';\nimport ClearKey from './../servers/ClearKey';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\n/**\n * @module ProtectionKeyController\n * @ignore\n * @description Media protection key system functionality that can be modified/overridden by applications\n */\nfunction ProtectionKeyController() {\n\n    let context = this.context;\n\n    let instance,\n        debug,\n        logger,\n        keySystems,\n        BASE64,\n        settings,\n        clearkeyKeySystem,\n        clearkeyW3CKeySystem;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.debug) {\n            debug = config.debug;\n            logger = debug.getLogger(instance);\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n\n        if(config.settings) {\n            settings = config.settings\n        }\n    }\n\n    function initialize() {\n        keySystems = [];\n\n        let keySystem;\n\n        // PlayReady\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64, settings: settings});\n        keySystems.push(keySystem);\n\n        // Widevine\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n\n        // ClearKey\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\n        keySystems.push(keySystem);\n        clearkeyKeySystem = keySystem;\n\n        // W3C ClearKey\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\n        keySystems.push(keySystem);\n        clearkeyW3CKeySystem = keySystem;\n    }\n\n    /**\n     * Returns a prioritized list of key systems supported\n     * by this player (not necessarily those supported by the\n     * user agent)\n     *\n     * @returns {Array.<KeySystem>} a prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystems() {\n        return keySystems;\n    }\n\n    /**\n     * Sets the prioritized list of key systems to be supported\n     * by this player.\n     *\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\n     * list of key systems\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function setKeySystems(newKeySystems) {\n        keySystems = newKeySystems;\n    }\n\n    /**\n     * Returns the key system associated with the given key system string\n     * name (i.e. 'org.w3.clearkey')\n     *\n     * @param {string} systemString the system string\n     * @returns {KeySystem|null} the key system\n     * or null if no supported key system is associated with the given key\n     * system string\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getKeySystemBySystemString(systemString) {\n        for (let i = 0; i < keySystems.length; i++) {\n            if (keySystems[i].systemString === systemString) {\n                return keySystems[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Determines whether the given key system is ClearKey.  This is\n     * necessary because the EME spec defines ClearKey and its method\n     * for providing keys to the key session; and this method has changed\n     * between the various API versions.  Our EME-specific ProtectionModels\n     * must know if the system is ClearKey so that it can format the keys\n     * according to the particular spec version.\n     *\n     * @param {Object} keySystem the key\n     * @returns {boolean} true if this is the ClearKey key system, false\n     * otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function isClearKey(keySystem) {\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\n    }\n\n    /**\n     * Check equality of initData array buffers.\n     *\n     * @param {ArrayBuffer} initData1 - first initData\n     * @param {ArrayBuffer} initData2 - second initData\n     * @returns {boolean} true if the initData arrays are equal in size and\n     * contents, false otherwise\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function initDataEquals(initData1, initData2) {\n        if (initData1.byteLength === initData2.byteLength) {\n            let data1 = new Uint8Array(initData1);\n            let data2 = new Uint8Array(initData2);\n\n            for (let j = 0; j < data1.length; j++) {\n                if (data1[j] !== data2[j]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a set of supported key systems and CENC initialization data\n     * from the given array of ContentProtection elements.  Only\n     * key systems that are supported by this player will be returned.\n     * Key systems are returned in priority order (highest first).\n     *\n     * @param {Array.<Object>} cps - array of content protection elements parsed\n     * from the manifest\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @param {string} default session type\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType) {\n        let cp, ks, ksIdx, cpIdx;\n        let supportedKS = [];\n\n        if (cps) {\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n                ks = keySystems[ksIdx];\n\n                // Get protection data that applies for current key system\n                const protData = _getProtDataForKeySystem(ks.systemString, protDataSet);\n\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\n                    cp = cps[cpIdx];\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\n                        // Look for DRM-specific ContentProtection\n                        let initData = ks.getInitData(cp, cencContentProtection);\n\n                        supportedKS.push({\n                            ks: keySystems[ksIdx],\n                            keyId: cp.keyId,\n                            initData: initData,\n                            protData: protData,\n                            cdmData: ks.getCDMData(protData ? protData.cdmData : null),\n                            sessionId: _getSessionId(protData, cp),\n                            sessionType: _getSessionType(protData, sessionType)\n                        });\n                    }\n                }\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns key systems supported by this player for the given PSSH\n     * initializationData. Key systems are returned in priority order\n     * (highest priority first)\n     *\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\n     * supported by the content\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\n     * supported by the content\n     * @param {string} default session type\n     * @returns {Array.<Object>} array of objects indicating which supported key\n     * systems were found.  Empty array is returned if no\n     * supported key systems were found\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function getSupportedKeySystemsFromSegmentPssh(initData, protDataSet, sessionType) {\n        let supportedKS = [];\n        let pssh = CommonEncryption.parsePSSHList(initData);\n        let ks, keySystemString;\n\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\n            ks = keySystems[ksIdx];\n            keySystemString = ks.systemString;\n\n            // Get protection data that applies for current key system\n            const protData = _getProtDataForKeySystem(keySystemString, protDataSet);\n\n            if (ks.uuid in pssh) {\n                supportedKS.push({\n                    ks: ks,\n                    initData: pssh[ks.uuid],\n                    protData: protData,\n                    cdmData: ks.getCDMData(protData ? protData.cdmData : null),\n                    sessionId: _getSessionId(protData),\n                    sessionType: _getSessionType(protData, sessionType)\n                });\n            }\n        }\n        return supportedKS;\n    }\n\n    /**\n     * Returns the license server implementation data that should be used for this request.\n     *\n     * @param {KeySystem} keySystem the key system\n     * associated with this license request\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\n     * request.  Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @returns {LicenseServer|null} the license server\n     * implementation that should be used for this request or null if the player should not\n     * pass messages of the given type to a license server\n     * @memberof module:ProtectionKeyController\n     * @instance\n     *\n     */\n    function getLicenseServerModelInstance(keySystem, protData, messageType) {\n\n        // Our default server implementations do not do anything with \"license-release\" or\n        // \"individualization-request\" messages, so we just send a success event\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\n            return null;\n        }\n\n        let licenseServerData = null;\n        if (protData && protData.hasOwnProperty('drmtoday')) {\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\n            licenseServerData = Widevine(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\n            licenseServerData = PlayReady(context).getInstance();\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\n            licenseServerData = ClearKey(context).getInstance();\n        }\n\n        return licenseServerData;\n    }\n\n    /**\n     * Allows application-specific retrieval of ClearKey keys.\n     *\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\n     * @param {ProtectionData} protData protection data to use for the\n     * request\n     * @param {ArrayBuffer} message the key message from the CDM\n     * @return {ClearKeyKeySet|null} the clear keys associated with\n     * the request or null if no keys can be returned by this function\n     * @memberof module:ProtectionKeyController\n     * @instance\n     */\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\n        try {\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\n        } catch (error) {\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\n            return null;\n        }\n    }\n\n    function setProtectionData(protectionDataSet) {\n        var getProtectionData = function (keySystemString) {\n            var protData = null;\n            if (protectionDataSet) {\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\n            }\n            return protData;\n        };\n\n        for (var i = 0; i < keySystems.length; i++) {\n            var keySystem = keySystems[i];\n            if (keySystem.hasOwnProperty('init')) {\n                keySystem.init(getProtectionData(keySystem.systemString));\n            }\n        }\n    }\n\n    function _getProtDataForKeySystem(systemString, protDataSet) {\n        if (!protDataSet) return null;\n        return (systemString in protDataSet) ? protDataSet[systemString] : null;\n    }\n\n    function _getSessionId(protData, cp) {\n        // Get sessionId from protectionData or from manifest (ContentProtection)\n        if (protData && protData.sessionId) {\n            return protData.sessionId;\n        } else if (cp && cp.sessionId) {\n            return cp.sessionId;\n        }\n        return null;\n    }\n\n    function _getSessionType(protData, sessionType) {\n        return (protData && protData.sessionType) ? protData.sessionType : sessionType;\n    }\n\n    instance = {\n        initialize,\n        setProtectionData,\n        isClearKey,\n        initDataEquals,\n        getKeySystems,\n        setKeySystems,\n        getKeySystemBySystemString,\n        getSupportedKeySystemsFromContentProtection,\n        getSupportedKeySystemsFromSegmentPssh,\n        getLicenseServerModelInstance,\n        processClearKeyLicenseRequest,\n        setConfig\n    };\n\n    return instance;\n}\n\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase';\n\n/**\n * @class\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\n     */\n    constructor() {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when the status of one decryption keys has changed\n         * @ignore\n         */\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @event ProtectionEvents#KEY_SYSTEM_ACCESS_COMPLETE\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Sending a license rquest\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\n         */\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n\n        /**\n         * Triggered when the key session has been updated successfully\n         * @ignore\n         */\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc NeedKey\n * @ignore\n */\nclass NeedKey {\n    /**\n     * @param {ArrayBuffer} initData the initialization data\n     * @param {string} initDataType initialization data type\n     * @class\n     */\n    constructor(initData, initDataType) {\n        this.initData = initData;\n        this.initDataType = initDataType;\n    }\n}\n\nexport default NeedKey;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc EME-independent KeyMessage\n * @ignore\n */\nclass KeyMessage {\n    /**\n     * @param {SessionToken} sessionToken the session\n     * to which the key message is associated\n     * @param {ArrayBuffer} message the key message\n     * @param {string} defaultURL license acquisition URL provided by the CDM\n     * @param {string} messageType Supported message types can be found\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n     * @class\n     */\n    constructor(sessionToken, message, defaultURL, messageType) {\n        this.sessionToken = sessionToken;\n        this.message = message;\n        this.defaultURL = defaultURL;\n        this.messageType = messageType ? messageType : 'license-request';\n    }\n}\n\nexport default KeyMessage;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Creates a new key system access token.  Represents a valid key system for\n * given piece of content and key system requirements.  Used to initialize license\n * acquisition operations.\n * @ignore\n */\nclass KeySystemAccess {\n    /**\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\n     * @param {KeySystemConfiguration} ksConfiguration the\n     * subset of configurations passed to the key system access request that are supported\n     * by this user agent\n     * @class\n     * @ignore\n     */\n    constructor(keySystem, ksConfiguration) {\n        this.keySystem = keySystem;\n        this.ksConfiguration = ksConfiguration;\n    }\n}\n\nexport default KeySystemAccess;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst SYSTEM_STRING_PRIORITY = {};\nSYSTEM_STRING_PRIORITY[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = [ProtectionConstants.PLAYREADY_KEYSTEM_STRING, ProtectionConstants.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING];\nSYSTEM_STRING_PRIORITY[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = [ProtectionConstants.WIDEVINE_KEYSTEM_STRING];\nSYSTEM_STRING_PRIORITY[ProtectionConstants.CLEARKEY_KEYSTEM_STRING] = [ProtectionConstants.CLEARKEY_KEYSTEM_STRING];\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        const numSessions = sessions.length;\n        let session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            const done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (let i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    _closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function stop() {\n        // Close and remove not usable sessions\n        let session;\n        for (let i = 0; i < sessions.length; i++) {\n            session = sessions[i];\n            if (!session.getUsable()) {\n                _closeKeySessionInternal(session).catch(function () {\n                    removeSession(session);\n                });\n            }\n        }\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i].initData) {\n                retVal.push(sessions[i].initData);\n            }\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            _requestKeySystemAccessInternal(ksConfigurations, 0, resolve, reject);\n        })\n    }\n\n    /**\n     * Initializes access to a key system. Once we found a valid configuration we get a mediaKeySystemAccess object\n     * @param ksConfigurations\n     * @param idx\n     * @param resolve\n     * @param reject\n     * @private\n     */\n    function _requestKeySystemAccessInternal(ksConfigurations, idx, resolve, reject) {\n\n        // In case requestMediaKeySystemAccess is not available we can not proceed and dispatch an error\n        if (navigator.requestMediaKeySystemAccess === undefined ||\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\n            const msg = 'Insecure origins are not allowed';\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: msg});\n            reject({error: msg});\n            return;\n        }\n\n        // If a systemStringPriority is defined by the application we use these values. Otherwise we use the default system string\n        // This is useful for DRM systems such as Playready for which multiple system strings are possible for instance com.microsoft.playready and com.microsoft.playready.recommendation\n        const protDataSystemStringPriority = ksConfigurations[idx].protData && ksConfigurations[idx].protData.systemStringPriority ? ksConfigurations[idx].protData.systemStringPriority : null;\n        const configs = ksConfigurations[idx].configs;\n        const currentKeySystem = ksConfigurations[idx].ks;\n        let systemString = currentKeySystem.systemString;\n\n        // Use the default values in case no values are provided by the application\n        const systemStringsToApply = protDataSystemStringPriority ? protDataSystemStringPriority : SYSTEM_STRING_PRIORITY[systemString] ? SYSTEM_STRING_PRIORITY[systemString] : [systemString];\n\n        // Check all the available system strings and the available configurations for support\n        _checkAccessForKeySystem(systemStringsToApply, configs)\n            .then((mediaKeySystemAccess) => {\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                    mediaKeySystemAccess.getConfiguration() : null;\n                const keySystemAccess = new KeySystemAccess(currentKeySystem, configuration);\n\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n                resolve({data: keySystemAccess});\n            })\n            .catch((e) => {\n                if (idx + 1 < ksConfigurations.length) {\n                    _requestKeySystemAccessInternal(ksConfigurations, idx + 1, resolve, reject);\n                } else {\n                    const errorMessage = 'Key system access denied! ';\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: errorMessage + e.message});\n                    reject({error: errorMessage + e.message});\n                }\n            })\n    }\n\n    /**\n     * For a specific key system: Iterate over the possible system strings and resolve once a valid configuration was found\n     * @param {array} systemStringsToApply\n     * @param {object} configs\n     * @return {Promise}\n     * @private\n     */\n    function _checkAccessForKeySystem(systemStringsToApply, configs) {\n        return new Promise((resolve, reject) => {\n            _checkAccessForSystemStrings(systemStringsToApply, configs, 0, resolve, reject);\n        })\n    }\n\n    /**\n     * Recursively iterate over the possible system strings until a supported configuration is found or we ran out of options\n     * @param {array} systemStringsToApply\n     * @param {object} configs\n     * @param {number} idx\n     * @param {function} resolve\n     * @param {function} reject\n     * @private\n     */\n    function _checkAccessForSystemStrings(systemStringsToApply, configs, idx, resolve, reject) {\n        const systemString = systemStringsToApply[idx];\n\n        logger.debug(`Requesting key system access for system string ${systemString}`);\n\n        navigator.requestMediaKeySystemAccess(systemString, configs)\n            .then((mediaKeySystemAccess) => {\n                mediaKeySystemAccess.selectedSystemString = systemString;\n                resolve(mediaKeySystemAccess);\n            })\n            .catch((e) => {\n                if (idx + 1 < systemStringsToApply.length) {\n                    _checkAccessForSystemStrings(systemStringsToApply, configs, idx + 1, resolve, reject);\n                } else {\n                    reject(e);\n                }\n            });\n    }\n\n    /**\n     * Selects a key system by creating the mediaKeys and adding them to the video element\n     * @param keySystemAccess\n     * @return {Promise<unknown>}\n     */\n    function selectKeySystem(keySystemAccess) {\n        return new Promise((resolve, reject) => {\n            keySystemAccess.mksa.createMediaKeys()\n                .then((mkeys) => {\n                    keySystem = keySystemAccess.keySystem;\n                    mediaKeys = mkeys;\n                    if (videoElement) {\n                        return videoElement.setMediaKeys(mediaKeys)\n                    } else {\n                        return Promise.resolve();\n                    }\n                })\n                .then(() => {\n                    resolve(keySystem);\n                })\n                .catch(function () {\n                    reject({error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n                });\n        })\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys) {\n                videoElement.setMediaKeys(null);\n            }\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys && mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            logger.info('DRM: License server certificate successfully updated.');\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, {error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name)});\n        });\n    }\n\n    /**\n     * Create a key session, a session token and initialize a request by calling generateRequest\n     * @param ksInfo\n     */\n    function createKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        const session = mediaKeys.createSession(ksInfo.sessionType);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n\n        // The \"keyids\" type is used for Clearkey when keys are provided directly in the protection data and a request to a license server is not needed\n        const dataType = keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (ksInfo.initData || (ksInfo.protData && ksInfo.protData.clearkeys)) ? ProtectionConstants.INITIALIZATION_DATA_TYPE_KEYIDS : ProtectionConstants.INITIALIZATION_DATA_TYPE_CENC;\n\n        session.generateRequest(dataType, ksInfo.initData).then(function () {\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\n            });\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message)\n            .then(() => {\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\n            })\n            .catch(function (error) {\n                eventBus.trigger(events.KEY_ERROR, {error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken)});\n            });\n    }\n\n    function loadKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        const sessionId = ksInfo.sessionId;\n\n        // Check if session Id is not already loaded or loading\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessionId === sessions[i].sessionId) {\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\n                return;\n            }\n        }\n\n        const session = mediaKeys.createSession(ksInfo.sessionType);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionId).then(function (success) {\n            if (success) {\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionId());\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                removeSession(sessionToken);\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\n                    data: null,\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionId + ')')\n                });\n            }\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\n                data: null,\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionId + ')! ' + error.name)\n            });\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        session.remove().then(function () {\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionId()});\n        }, function (error) {\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\n                data: null,\n                error: 'Error removing session (' + sessionToken.getSessionId() + '). ' + error.name\n            });\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        _closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\n                data: null,\n                error: 'Error closing session (' + sessionToken.getSessionId() + ') ' + error.name\n            });\n        });\n    }\n\n    function _closeKeySessionInternal(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'encrypted':\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    function parseKeyStatus(args) {\n        // Edge and Chrome implement different version of keystatues, param are not on same order\n        let status, keyId;\n        if (args && args.length > 0) {\n            if (args[0]) {\n                if (typeof args[0] === 'string') {\n                    status = args[0];\n                } else {\n                    keyId = args[0];\n                }\n            }\n\n            if (args[1]) {\n                if (typeof args[1] === 'string') {\n                    status = args[1];\n                } else {\n                    keyId = args[1];\n                }\n            }\n        }\n        return {\n            status: status,\n            keyId: keyId\n        };\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, ksInfo) {\n        const token = { // Implements SessionToken\n            session: session,\n            keyId: ksInfo.keyId,\n            initData: ksInfo.initData,\n            sessionId: ksInfo.sessionId,\n            sessionType: ksInfo.sessionType,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, {data: this});\n                        event.target.keyStatuses.forEach(function () {\n                            let keyStatus = parseKeyStatus(arguments);\n                            switch (keyStatus.status) {\n                                case 'expired':\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, {error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE)});\n                                    break;\n                                default:\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\n                                    break;\n                            }\n                        });\n                        break;\n\n                    case 'message':\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getKeyId: function () {\n                return this.keyId;\n            },\n\n            getSessionId: function () {\n                return session.sessionId;\n            },\n\n            getSessionType: function () {\n                return this.sessionType;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getUsable: function () {\n                let usable = false;\n                session.keyStatuses.forEach(function () {\n                    let keyStatus = parseKeyStatus(arguments);\n                    if (keyStatus.status === 'usable') {\n                        usable = true;\n                    }\n                });\n                return usable;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(() => {\n            removeSession(token);\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionId());\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: token.getSessionId()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        setServerCertificate,\n        createKeySession,\n        updateKeySession,\n        loadKeySession,\n        removeKeySession,\n        closeKeySession,\n        stop,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (let i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\n        }\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            // Try key systems in order, first one with supported key system configuration\n            // is used\n            let found = false;\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\n                const configs = ksConfigurations[ksIdx].configs;\n                let supportedAudio = null;\n                let supportedVideo = null;\n\n                // Try key system configs in order, first one with supported audio/video\n                // is used\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                    const audios = configs[configIdx].audioCapabilities;\n                    const videos = configs[configIdx].videoCapabilities;\n\n                    // Look for supported audio container/codecs\n                    if (audios && audios.length !== 0) {\n                        supportedAudio = []; // Indicates that we have a requested audio config\n                        for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                            if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                                supportedAudio.push(audios[audioIdx]);\n                            }\n                        }\n                    }\n\n                    // Look for supported video container/codecs\n                    if (videos && videos.length !== 0) {\n                        supportedVideo = []; // Indicates that we have a requested video config\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                            if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                                supportedVideo.push(videos[videoIdx]);\n                            }\n                        }\n                    }\n\n                    // No supported audio or video in this configuration OR we have\n                    // requested audio or video configuration that is not supported\n                    if ((!supportedAudio && !supportedVideo) ||\n                        (supportedAudio && supportedAudio.length === 0) ||\n                        (supportedVideo && supportedVideo.length === 0)) {\n                        continue;\n                    }\n\n                    // This configuration is supported\n                    found = true;\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig);\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n                    resolve({ data: keySystemAccess });\n                    break;\n                }\n            }\n            if (!found) {\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\n                reject({ error: errorMessage });\n            }\n        })\n    }\n\n    function selectKeySystem(ksAccess) {\n        return new Promise((resolve, reject) => {\n            try {\n                mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n                keySystem = ksAccess.keySystem;\n                keySystemAccess = ksAccess;\n                if (videoElement) {\n                    setMediaKeys();\n                }\n                resolve(keySystem);\n            } catch (error) {\n                reject({ error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n            }\n        })\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(ksInfo) {\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        let capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n        }\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n        }\n\n        if (capabilities === null) {\n            throw new Error('Can not create sessions for unknown content types.');\n        }\n\n        const contentType = capabilities.contentType;\n        const session = mediaKeys.createSession(contentType, new Uint8Array(ksInfo.initData), ksInfo.cdmData ? new Uint8Array(ksInfo.cdmData) : null);\n        const sessionToken = createSessionToken(session, ksInfo);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\n    }\n\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\n    }\n\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\n    }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        let boundDoSetKeys = null;\n        const doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, ksInfo) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            keyId: ksInfo.keyId,\n            initData: ksInfo.initData,\n\n            getKeyId: function () {\n                return this.keyId;\n            },\n\n            getSessionId: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case api.error:\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\n                        break;\n                    case api.message:\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        logger.debug('DRM: Key added.');\n                        eventBus.trigger(events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionId());\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionId() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        createKeySession,\n        updateKeySession,\n        closeKeySession,\n        setServerCertificate,\n        loadKeySession,\n        removeKeySession,\n        stop: reset,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Initial implementation of EME\n *\n * Implemented by Google Chrome prior to v36\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionErrors from '../errors/ProtectionErrors';\n\nfunction ProtectionModel_01b(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n    const errHandler = config.errHandler;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        protectionKeyController,\n\n        // With this version of the EME APIs, sessionIds are not assigned to\n        // sessions until the first key message is received.  We are assuming\n        // that in the case of multiple sessions, key messages will be received\n        // in the order that generateKeyRequest() is called.\n        // Holding spot for newly-created sessions until we determine whether or\n        // not the CDM supports sessionIds\n        pendingSessions,\n\n        // List of sessions that have been initialized.  Only the first position will\n        // be used in the case that the CDM does not support sessionIds\n        sessions,\n\n        // Not all CDMs support the notion of sessionIds.  Without sessionIds\n        // there is no way for us to differentiate between sessions, therefore\n        // we must only allow a single session.  Once we receive the first key\n        // message we can set this flag to determine if more sessions are allowed\n        moreSessionsAllowed,\n\n        // This is our main event handler for all desired HTMLMediaElement events\n        // related to EME.  These events are translated into our API-independent\n        // versions of the same events\n        eventHandler;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        pendingSessions = [];\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        if (videoElement) {\n            removeEventListeners();\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            closeKeySession(sessions[i]);\n        }\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < pendingSessions.length; i++) {\n            retVal.push(pendingSessions[i].initData);\n        }\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function getSessions() {\n        return sessions.concat(pendingSessions);\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        return new Promise((resolve, reject) => {\n            let ve = videoElement;\n            if (!ve) { // Must have a video element to do this capability tests\n                ve = document.createElement('video');\n            }\n\n            // Try key systems in order, first one with supported key system configuration\n            // is used\n            let found = false;\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\n                const configs = ksConfigurations[ksIdx].configs;\n                let supportedAudio = null;\n                let supportedVideo = null;\n\n                // Try key system configs in order, first one with supported audio/video\n                // is used\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                    //let audios = configs[configIdx].audioCapabilities;\n                    const videos = configs[configIdx].videoCapabilities;\n                    // Look for supported video container/codecs\n                    if (videos && videos.length !== 0) {\n                        supportedVideo = []; // Indicates that we have a requested video config\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                            if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\n                                supportedVideo.push(videos[videoIdx]);\n                            }\n                        }\n                    }\n\n                    // No supported audio or video in this configuration OR we have\n                    // requested audio or video configuration that is not supported\n                    if ((!supportedAudio && !supportedVideo) ||\n                        (supportedAudio && supportedAudio.length === 0) ||\n                        (supportedVideo && supportedVideo.length === 0)) {\n                        continue;\n                    }\n\n                    // This configuration is supported\n                    found = true;\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig)\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\n                    resolve({ data: keySystemAccess });\n                    break;\n                }\n            }\n            if (!found) {\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\n                reject({ error: errorMessage });\n            }\n        })\n\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystem = keySystemAccess.keySystem;\n        return Promise.resolve(keySystem);\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement) {\n            return;\n        }\n\n        // Replacing the previous element\n        if (videoElement) {\n            removeEventListeners();\n\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\n            for (var i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            sessions = [];\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.keyerror, eventHandler);\n            videoElement.addEventListener(api.needkey, eventHandler);\n            videoElement.addEventListener(api.keymessage, eventHandler);\n            videoElement.addEventListener(api.keyadded, eventHandler);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        }\n    }\n\n    function createKeySession(ksInfo) {\n        if (!keySystem) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Determine if creating a new session is allowed\n        if (moreSessionsAllowed || sessions.length === 0) {\n            const newSession = { // Implements SessionToken\n                sessionId: null,\n                keyId: ksInfo.keyId,\n                initData: ksInfo.initData,\n\n                getKeyId: function () {\n                    return this.keyId;\n                },\n\n                getSessionId: function () {\n                    return this.sessionId;\n                },\n\n                getExpirationTime: function () {\n                    return NaN;\n                },\n\n                getSessionType: function () {\n                    return 'temporary';\n                }\n            };\n            pendingSessions.push(newSession);\n\n            // Send our request to the CDM\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(ksInfo.initData));\n\n            return newSession;\n\n        } else {\n            throw new Error('Multiple sessions not allowed!');\n        }\n\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const sessionId = sessionToken.sessionId;\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the CDM\n            videoElement[api.addKey](keySystem.systemString,\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionId);\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            for (let i = 0; i < message.keyPairs.length; i++) {\n                videoElement[api.addKey](keySystem.systemString,\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionId);\n            }\n        }\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the CDM\n        try {\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionId);\n        } catch (error) {\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\n                data: null,\n                error: 'Error closing session (' + sessionToken.sessionId + ') ' + error.message\n            });\n        }\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\n    }\n\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\n    }\n\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\n    }\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                let sessionToken = null;\n                switch (event.type) {\n                    case api.needkey:\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        break;\n\n                    case api.keyerror:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\n                            let msg = '';\n                            switch (event.errorCode.code) {\n                                case 1:\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\n                                    break;\n                                case 2:\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\n                                    break;\n                                case 3:\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\n                                    break;\n                                case 4:\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\n                                    break;\n                                case 5:\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\n                                    break;\n                                case 6:\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\n                                    break;\n                            }\n                            msg += '  System Code = ' + event.systemCode;\n                            // TODO: Build error string based on key error\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\n                        } else {\n                            logger.error('No session token found for key error');\n                        }\n                        break;\n\n                    case api.keyadded:\n                        sessionToken = findSessionByID(sessions, event.sessionId);\n                        if (!sessionToken) {\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\n                        }\n\n                        if (sessionToken) {\n                            logger.debug('DRM: Key added.');\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\n                        } else {\n                            logger.debug('No session token found for key added');\n                        }\n                        break;\n\n                    case api.keymessage:\n                        // If this CDM does not support session IDs, we will be limited\n                        // to a single session\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\n\n                        // SessionIDs supported\n                        if (moreSessionsAllowed) {\n                            // Attempt to find an uninitialized token with this sessionId\n                            sessionToken = findSessionByID(sessions, event.sessionId);\n                            if (!sessionToken && pendingSessions.length > 0) {\n\n                                // This is the first message for our latest session, so set the\n                                // sessionId and add it to our list\n                                sessionToken = pendingSessions.shift();\n                                sessions.push(sessionToken);\n                                sessionToken.sessionId = event.sessionId;\n\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n                            }\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\n                            sessionToken = pendingSessions.shift();\n                            sessions.push(sessionToken);\n\n                            if (pendingSessions.length !== 0) {\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\n                            }\n                        }\n\n                        if (sessionToken) {\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n\n                            // For ClearKey, the spec mandates that you pass this message to the\n                            // addKey method, so we always save it to the token since there is no\n                            // way to tell which key system is in use\n                            sessionToken.keyMessage = message;\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\n\n                        } else {\n                            logger.warn('No session token found for key message');\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    /**\n     * Helper function to retrieve the stored session token based on a given\n     * sessionId value\n     *\n     * @param {Array} sessionArray - the array of sessions to search\n     * @param {*} sessionId - the sessionId to search for\n     * @returns {*} the session token with the given sessionId\n     */\n    function findSessionByID(sessionArray, sessionId) {\n        if (!sessionId || !sessionArray) {\n            return null;\n        } else {\n            const len = sessionArray.length;\n            for (let i = 0; i < len; i++) {\n                if (sessionArray[i].sessionId == sessionId) {\n                    return sessionArray[i];\n                }\n            }\n            return null;\n        }\n    }\n\n    function removeEventListeners() {\n        videoElement.removeEventListener(api.keyerror, eventHandler);\n        videoElement.removeEventListener(api.needkey, eventHandler);\n        videoElement.removeEventListener(api.keymessage, eventHandler);\n        videoElement.removeEventListener(api.keyadded, eventHandler);\n    }\n\n    instance = {\n        getAllInitData,\n        getSessions,\n        requestKeySystemAccess,\n        selectKeySystem,\n        setMediaElement,\n        createKeySession,\n        updateKeySession,\n        closeKeySession,\n        setServerCertificate,\n        loadKeySession,\n        removeKeySession,\n        stop: reset,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionErrors from './errors/ProtectionErrors';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n    let instance;\n    const context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n        let controller = null;\n\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64, settings: config.settings });\n        protectionKeyController.initialize();\n\n        let protectionModel = _getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                eventBus: config.eventBus,\n                debug: config.debug,\n                events: config.events,\n                BASE64: config.BASE64,\n                constants: config.constants,\n                cmcdModel: config.cmcdModel,\n                customParametersModel: config.customParametersModel,\n                settings: config.settings\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function _getProtectionModel(config) {\n        const debug = config.debug;\n        const logger = debug.getLogger(instance);\n        const eventBus = config.eventBus;\n        const errHandler = config.errHandler;\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\n\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                events: config.events\n            });\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                events: config.events,\n                api: _getAPI(videoElement, APIS_ProtectionModel_3Feb2014)\n            });\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_01b)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({\n                debug: debug,\n                eventBus: eventBus,\n                errHandler: errHandler,\n                events: config.events,\n                api: _getAPI(videoElement, APIS_ProtectionModel_01b)\n            });\n        } else {\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n        }\n    }\n\n    function _getAPI(videoElement, apis) {\n        for (let i = 0; i < apis.length; i++) {\n            const api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\nfactory.events = ProtectionEvents;\nfactory.errors = ProtectionErrors;\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst NO_CHANGE = -1;\nconst PRIORITY = {\n    DEFAULT: 0.5,\n    STRONG: 1,\n    WEAK: 0\n};\n\nfunction SwitchRequest(q, r, p) {\n    //TODO refactor all the calls to this to use config to be like everything else.\n    let instance,\n        quality,\n        priority,\n        reason;\n\n    // check priority value\n    function getPriority(p) {\n        let ret = PRIORITY.DEFAULT;\n\n        // check that p is one of declared priority value\n        if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\n            ret = p;\n        }\n        return ret;\n    }\n\n    // init attributes\n    quality = (q === undefined) ? NO_CHANGE : q;\n    priority = getPriority(p);\n    reason = (r === undefined) ? null : r;\n\n    instance = {\n        quality: quality,\n        reason: reason,\n        priority: priority\n    };\n\n    return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\nconst factory = FactoryMaker.getClassFactory(SwitchRequest);\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.PRIORITY = PRIORITY;\nFactoryMaker.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ThroughputRule from './ThroughputRule';\nimport InsufficientBufferRule from './InsufficientBufferRule';\nimport AbandonRequestsRule from './AbandonRequestsRule';\nimport DroppedFramesRule from './DroppedFramesRule';\nimport SwitchHistoryRule from './SwitchHistoryRule';\nimport BolaRule from './BolaRule';\nimport L2ARule from './L2ARule.js';\nimport LoLPRule from './lolp/LoLpRule.js';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Constants from '../../constants/Constants';\n\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\n\n\nfunction ABRRulesCollection(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const customParametersModel = config.customParametersModel;\n    const dashMetrics = config.dashMetrics;\n    const settings = config.settings;\n\n    let instance,\n        qualitySwitchRules,\n        abandonFragmentRules;\n\n    function initialize() {\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n\n        if (settings.get().streaming.abr.useDefaultABRRules) {\n\n            // If L2A is used we only need this one rule\n            if (settings.get().streaming.abr.ABRStrategy === Constants.ABR_STRATEGY_L2A) {\n                qualitySwitchRules.push(\n                    L2ARule(context).create({\n                        dashMetrics: dashMetrics,\n                        settings: settings\n                    })\n                );\n            }\n            // If LoLP is used we only need this one rule\n            else if (settings.get().streaming.abr.ABRStrategy === Constants.ABR_STRATEGY_LoLP) {\n                qualitySwitchRules.push(\n                    LoLPRule(context).create({\n                        dashMetrics: dashMetrics\n                    })\n                );\n            } else {\n                // Only one of BolaRule and ThroughputRule will give a switchRequest.quality !== SwitchRequest.NO_CHANGE.\n                // This is controlled by useBufferOccupancyABR mechanism in AbrController.\n                qualitySwitchRules.push(\n                    BolaRule(context).create({\n                        dashMetrics: dashMetrics,\n                        mediaPlayerModel: mediaPlayerModel,\n                        settings: settings\n                    })\n                );\n\n                qualitySwitchRules.push(\n                    ThroughputRule(context).create({\n                        dashMetrics: dashMetrics\n                    })\n                );\n\n                if (settings.get().streaming.abr.additionalAbrRules.insufficientBufferRule) {\n                    qualitySwitchRules.push(\n                        InsufficientBufferRule(context).create({\n                            dashMetrics: dashMetrics,\n                            settings\n                        })\n                    );\n                }\n\n                if (settings.get().streaming.abr.additionalAbrRules.switchHistoryRule) {\n                    qualitySwitchRules.push(\n                        SwitchHistoryRule(context).create()\n                    );\n                }\n\n                if (settings.get().streaming.abr.additionalAbrRules.droppedFramesRule) {\n                    qualitySwitchRules.push(\n                        DroppedFramesRule(context).create()\n                    );\n                }\n\n                if (settings.get().streaming.abr.additionalAbrRules.abandonRequestsRule) {\n                    abandonFragmentRules.push(\n                        AbandonRequestsRule(context).create({\n                            dashMetrics: dashMetrics,\n                            mediaPlayerModel: mediaPlayerModel,\n                            settings: settings\n                        })\n                    );\n                }\n            }\n        }\n\n        // add custom ABR rules if any\n        const customRules = customParametersModel.getAbrCustomRules();\n        customRules.forEach(function (rule) {\n            if (rule.type === QUALITY_SWITCH_RULES) {\n                qualitySwitchRules.push(rule.rule(context).create());\n            }\n\n            if (rule.type === ABANDON_FRAGMENT_RULES) {\n                abandonFragmentRules.push(rule.rule(context).create());\n            }\n        });\n    }\n\n    function _getRulesWithChange(srArray) {\n        return srArray.filter(sr => sr.quality > SwitchRequest.NO_CHANGE);\n    }\n\n    /**\n     *\n     * @param {array} srArray\n     * @return {object} SwitchRequest\n     */\n    function getMinSwitchRequest(srArray) {\n        const values = {};\n        let newSwitchReq = null;\n        let i,\n            len,\n            req,\n            quality,\n            reason;\n\n        if (srArray.length === 0) {\n            return;\n        }\n\n        values[SwitchRequest.PRIORITY.STRONG] = { quality: SwitchRequest.NO_CHANGE, reason: null };\n        values[SwitchRequest.PRIORITY.WEAK] = { quality: SwitchRequest.NO_CHANGE, reason: null };\n        values[SwitchRequest.PRIORITY.DEFAULT] = { quality: SwitchRequest.NO_CHANGE, reason: null };\n\n        for (i = 0, len = srArray.length; i < len; i += 1) {\n            req = srArray[i];\n            if (req.quality !== SwitchRequest.NO_CHANGE) {\n                // We only use the new quality in case it is lower than the already saved one or if no new quality has been selected for the respective priority\n                if (values[req.priority].quality === SwitchRequest.NO_CHANGE || values[req.priority].quality > req.quality) {\n                    values[req.priority].quality = req.quality;\n                    values[req.priority].reason = req.reason || null;\n                }\n            }\n        }\n\n        if (values[SwitchRequest.PRIORITY.WEAK].quality !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.WEAK];\n        }\n\n        if (values[SwitchRequest.PRIORITY.DEFAULT].quality !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.DEFAULT];\n        }\n\n        if (values[SwitchRequest.PRIORITY.STRONG].quality !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.STRONG];\n        }\n\n        if (newSwitchReq) {\n            quality = newSwitchReq.quality;\n            reason = newSwitchReq.reason;\n        }\n\n        return SwitchRequest(context).create(quality, reason);\n    }\n\n    function getMaxQuality(rulesContext) {\n        const switchRequestArray = qualitySwitchRules.map(rule => rule.getMaxIndex(rulesContext));\n        const activeRules = _getRulesWithChange(switchRequestArray);\n        const maxQuality = getMinSwitchRequest(activeRules);\n\n        return maxQuality || SwitchRequest(context).create();\n    }\n\n    function shouldAbandonFragment(rulesContext, streamId) {\n        const abandonRequestArray = abandonFragmentRules.map(rule => rule.shouldAbandon(rulesContext, streamId));\n        const activeRules = _getRulesWithChange(abandonRequestArray);\n        const shouldAbandon = getMinSwitchRequest(activeRules);\n\n        return shouldAbandon || SwitchRequest(context).create();\n    }\n\n    function reset() {\n        [qualitySwitchRules, abandonFragmentRules].forEach(rules => {\n            if (rules && rules.length) {\n                rules.forEach(rule => rule.reset && rule.reset());\n            }\n        });\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n    }\n\n    function getQualitySwitchRules() {\n        return qualitySwitchRules;\n    }\n\n    instance = {\n        initialize,\n        reset,\n        getMaxQuality,\n        getMinSwitchRequest,\n        shouldAbandonFragment,\n        getQualitySwitchRules\n    };\n\n    return instance;\n}\n\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\nconst factory = FactoryMaker.getClassFactory(ABRRulesCollection);\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\nFactoryMaker.updateSingletonFactory(ABRRulesCollection.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction AbandonRequestsRule(config) {\n\n    config = config || {};\n    const ABANDON_MULTIPLIER = 1.8;\n    const GRACE_TIME_THRESHOLD = 500;\n    const MIN_LENGTH_TO_AVERAGE = 5;\n\n    const context = this.context;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        fragmentDict,\n        abandonDict,\n        throughputArray;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    function setFragmentRequestDict(type, id) {\n        fragmentDict[type] = fragmentDict[type] || {};\n        fragmentDict[type][id] = fragmentDict[type][id] || {};\n    }\n\n    function storeLastRequestThroughputByType(type, throughput) {\n        throughputArray[type] = throughputArray[type] || [];\n        throughputArray[type].push(throughput);\n    }\n\n    function shouldAbandon(rulesContext) {\n        const switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, {name: AbandonRequestsRule.__dashjs_factory_name});\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('getCurrentRequest') ||\n            !rulesContext.hasOwnProperty('getRepresentationInfo') || !rulesContext.hasOwnProperty('getAbrController')) {\n            return switchRequest;\n        }\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const streamInfo = rulesContext.getStreamInfo();\n        const streamId = streamInfo ? streamInfo.id : null;\n        const req = rulesContext.getCurrentRequest();\n\n        if (!isNaN(req.index)) {\n            setFragmentRequestDict(mediaType, req.index);\n\n            const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n            if ( bufferLevel > stableBufferTime ) {\n                return switchRequest;\n            }\n\n            const fragmentInfo = fragmentDict[mediaType][req.index];\n            if (fragmentInfo === null || req.firstByteDate === null || abandonDict.hasOwnProperty(fragmentInfo.id)) {\n                return switchRequest;\n            }\n\n            //setup some init info based on first progress event\n            if (fragmentInfo.firstByteTime === undefined) {\n                throughputArray[mediaType] = [];\n                fragmentInfo.firstByteTime = req.firstByteDate.getTime();\n                fragmentInfo.segmentDuration = req.duration;\n                fragmentInfo.bytesTotal = req.bytesTotal;\n                fragmentInfo.id = req.index;\n            }\n            fragmentInfo.bytesLoaded = req.bytesLoaded;\n            fragmentInfo.elapsedTime = new Date().getTime() - fragmentInfo.firstByteTime;\n\n            if (fragmentInfo.bytesLoaded > 0 && fragmentInfo.elapsedTime > 0) {\n                storeLastRequestThroughputByType(mediaType, Math.round(fragmentInfo.bytesLoaded * 8 / fragmentInfo.elapsedTime));\n            }\n\n            if (throughputArray[mediaType].length >= MIN_LENGTH_TO_AVERAGE &&\n                fragmentInfo.elapsedTime > GRACE_TIME_THRESHOLD &&\n                fragmentInfo.bytesLoaded < fragmentInfo.bytesTotal) {\n\n                const totalSampledValue = throughputArray[mediaType].reduce((a, b) => a + b, 0);\n                fragmentInfo.measuredBandwidthInKbps = Math.round(totalSampledValue / throughputArray[mediaType].length);\n                fragmentInfo.estimatedTimeOfDownload = +((fragmentInfo.bytesTotal * 8 / fragmentInfo.measuredBandwidthInKbps) / 1000).toFixed(2);\n\n                if (fragmentInfo.estimatedTimeOfDownload < fragmentInfo.segmentDuration * ABANDON_MULTIPLIER || rulesContext.getRepresentationInfo().quality === 0 ) {\n                    return switchRequest;\n                } else if (!abandonDict.hasOwnProperty(fragmentInfo.id)) {\n\n                    const abrController = rulesContext.getAbrController();\n                    const bytesRemaining = fragmentInfo.bytesTotal - fragmentInfo.bytesLoaded;\n                    const bitrateList = abrController.getBitrateList(mediaInfo);\n                    const quality = abrController.getQualityForBitrate(mediaInfo, fragmentInfo.measuredBandwidthInKbps * settings.get().streaming.abr.bandwidthSafetyFactor, streamId);\n                    const minQuality = abrController.getMinAllowedIndexFor(mediaType, streamId);\n                    const newQuality = (minQuality !== undefined) ? Math.max(minQuality, quality) : quality;\n                    const estimateOtherBytesTotal = fragmentInfo.bytesTotal * bitrateList[newQuality].bitrate / bitrateList[abrController.getQualityFor(mediaType, streamId)].bitrate;\n\n                    if (bytesRemaining > estimateOtherBytesTotal) {\n                        switchRequest.quality = newQuality;\n                        switchRequest.reason.throughput = fragmentInfo.measuredBandwidthInKbps;\n                        switchRequest.reason.fragmentID = fragmentInfo.id;\n                        switchRequest.reason.rule = this.getClassName();\n                        abandonDict[fragmentInfo.id] = fragmentInfo;\n                        logger.debug('[' + mediaType + '] frag id',fragmentInfo.id,' is asking to abandon and switch to quality to ', newQuality, ' measured bandwidth was', fragmentInfo.measuredBandwidthInKbps);\n                        delete fragmentDict[mediaType][fragmentInfo.id];\n                    }\n                }\n            } else if (fragmentInfo.bytesLoaded === fragmentInfo.bytesTotal) {\n                delete fragmentDict[mediaType][fragmentInfo.id];\n            }\n        }\n\n        return switchRequest;\n    }\n\n    function reset() {\n        fragmentDict = {};\n        abandonDict = {};\n        throughputArray = [];\n    }\n\n    instance = {\n        shouldAbandon: shouldAbandon,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\n\nimport MetricsConstants from '../../constants/MetricsConstants';\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport Debug from '../../../core/Debug';\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\nimport Constants from '../../constants/Constants';\n\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\n// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\n// TODO: add BOLA_STATE_SEEK and tune BOLA behavior on seeking\nconst BOLA_STATE_ONE_BITRATE = 0;\nconst BOLA_STATE_STARTUP = 1;\nconst BOLA_STATE_STEADY = 2;\n\nconst MINIMUM_BUFFER_S = 10; // BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.\nconst MINIMUM_BUFFER_PER_BITRATE_LEVEL_S = 2;\n// E.g. if there are 5 bitrates, BOLA switches to top bitrate at buffer = 10 + 5 * 2 = 20s.\n// If Schedule Controller does not allow buffer to reach that level, it can be achieved through the placeholder buffer level.\n\nconst PLACEHOLDER_BUFFER_DECAY = 0.99; // Make sure placeholder buffer does not stick around too long.\n\nfunction BolaRule(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        bolaStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(MediaPlayerEvents.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, instance);\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\n\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n    }\n\n    function utilitiesFromBitrates(bitrates) {\n        return bitrates.map(b => Math.log(b));\n        // no need to worry about offset, utilities will be offset (uniformly) anyway later\n    }\n\n    // NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but bola should not stick to lowest bitrate by using a placeholder buffer level\n    function calculateBolaParameters(stableBufferTime, bitrates, utilities) {\n        const highestUtilityIndex = utilities.reduce((highestIndex, u, uIndex) => (u > utilities[highestIndex] ? uIndex : highestIndex), 0);\n\n        if (highestUtilityIndex === 0) {\n            // if highestUtilityIndex === 0, then always use lowest bitrate\n            return null;\n        }\n\n        const bufferTime = Math.max(stableBufferTime, MINIMUM_BUFFER_S + MINIMUM_BUFFER_PER_BITRATE_LEVEL_S * bitrates.length);\n\n        // TODO: Investigate if following can be better if utilities are not the default Math.log utilities.\n        // If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTarget.\n        // (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:\n        // Vp * (utilities[0] + gp - 1) === minimumBufferS and Vp * (utilities[max] + gp - 1) === bufferTarget\n        // giving:\n        const gp = (utilities[highestUtilityIndex] - 1) / (bufferTime / MINIMUM_BUFFER_S - 1);\n        const Vp = MINIMUM_BUFFER_S / gp;\n        // note that expressions for gp and Vp assume utilities[0] === 1, which is true because of normalization\n\n        return { gp: gp, Vp: Vp };\n    }\n\n    function getInitialBolaState(rulesContext) {\n        const initialState = {};\n        const mediaInfo = rulesContext.getMediaInfo();\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\n        let utilities = utilitiesFromBitrates(bitrates);\n        utilities = utilities.map(u => u - utilities[0] + 1); // normalize\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n        const params = calculateBolaParameters(stableBufferTime, bitrates, utilities);\n\n        if (!params) {\n            // only happens when there is only one bitrate level\n            initialState.state = BOLA_STATE_ONE_BITRATE;\n        } else {\n            initialState.state = BOLA_STATE_STARTUP;\n\n            initialState.bitrates = bitrates;\n            initialState.utilities = utilities;\n            initialState.stableBufferTime = stableBufferTime;\n            initialState.Vp = params.Vp;\n            initialState.gp = params.gp;\n\n            initialState.lastQuality = 0;\n            clearBolaStateOnSeek(initialState);\n        }\n\n        return initialState;\n    }\n\n    function clearBolaStateOnSeek(bolaState) {\n        bolaState.placeholderBuffer = 0;\n        bolaState.mostAdvancedSegmentStart = NaN;\n        bolaState.lastSegmentWasReplacement = false;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentDurationS = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n    }\n\n    // If the buffer target is changed (can this happen mid-stream?), then adjust BOLA parameters accordingly.\n    function checkBolaStateStableBufferTime(bolaState, mediaType) {\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n        if (bolaState.stableBufferTime !== stableBufferTime) {\n            const params = calculateBolaParameters(stableBufferTime, bolaState.bitrates, bolaState.utilities);\n            if (params.Vp !== bolaState.Vp || params.gp !== bolaState.gp) {\n                // correct placeholder buffer using two criteria:\n                // 1. do not change effective buffer level at effectiveBufferLevel === MINIMUM_BUFFER_S ( === Vp * gp )\n                // 2. scale placeholder buffer by Vp subject to offset indicated in 1.\n\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n                let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\n\n                effectiveBufferLevel -= MINIMUM_BUFFER_S;\n                effectiveBufferLevel *= params.Vp / bolaState.Vp;\n                effectiveBufferLevel += MINIMUM_BUFFER_S;\n\n                bolaState.stableBufferTime = stableBufferTime;\n                bolaState.Vp = params.Vp;\n                bolaState.gp = params.gp;\n                bolaState.placeholderBuffer = Math.max(0, effectiveBufferLevel - bufferLevel);\n            }\n        }\n    }\n\n    function getBolaState(rulesContext) {\n        const mediaType = rulesContext.getMediaType();\n        let bolaState = bolaStateDict[mediaType];\n        if (!bolaState) {\n            bolaState = getInitialBolaState(rulesContext);\n            bolaStateDict[mediaType] = bolaState;\n        } else if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n            checkBolaStateStableBufferTime(bolaState, mediaType);\n        }\n        return bolaState;\n    }\n\n    // The core idea of BOLA.\n    function getQualityFromBufferLevel(bolaState, bufferLevel) {\n        const bitrateCount = bolaState.bitrates.length;\n        let quality = NaN;\n        let score = NaN;\n        for (let i = 0; i < bitrateCount; ++i) {\n            let s = (bolaState.Vp * (bolaState.utilities[i] + bolaState.gp) - bufferLevel) / bolaState.bitrates[i];\n            if (isNaN(score) || s >= score) {\n                score = s;\n                quality = i;\n            }\n        }\n        return quality;\n    }\n\n    // maximum buffer level which prefers to download at quality rather than wait\n    function maxBufferLevelForQuality(bolaState, quality) {\n        return bolaState.Vp * (bolaState.utilities[quality] + bolaState.gp);\n    }\n\n    // the minimum buffer level that would cause BOLA to choose quality rather than a lower bitrate\n    function minBufferLevelForQuality(bolaState, quality) {\n        const qBitrate = bolaState.bitrates[quality];\n        const qUtility = bolaState.utilities[quality];\n\n        let min = 0;\n        for (let i = quality - 1; i >= 0; --i) {\n            // for each bitrate less than bitrates[quality], BOLA should prefer quality (unless other bitrate has higher utility)\n            if (bolaState.utilities[i] < bolaState.utilities[quality]) {\n                const iBitrate = bolaState.bitrates[i];\n                const iUtility = bolaState.utilities[i];\n\n                const level = bolaState.Vp * (bolaState.gp + (qBitrate * iUtility - iBitrate * qUtility) / (qBitrate - iBitrate));\n                min = Math.max(min, level); // we want min to be small but at least level(i) for all i\n            }\n        }\n        return min;\n    }\n\n    /*\n     * The placeholder buffer increases the effective buffer that is used to calculate the bitrate.\n     * There are two main reasons we might want to increase the placeholder buffer:\n     *\n     * 1. When a segment finishes downloading, we would expect to get a call on getMaxIndex() regarding the quality for\n     *    the next segment. However, there might be a delay before the next call. E.g. when streaming live content, the\n     *    next segment might not be available yet. If the call to getMaxIndex() does happens after a delay, we don't\n     *    want the delay to change the BOLA decision - we only want to factor download time to decide on bitrate level.\n     *\n     * 2. It is possible to get a call to getMaxIndex() without having a segment download. The buffer target in dash.js\n     *    is different for top-quality segments and lower-quality segments. If getMaxIndex() returns a lower-than-top\n     *    quality, then the buffer controller might decide not to download a segment. When dash.js is ready for the next\n     *    segment, getMaxIndex() will be called again. We don't want this extra delay to factor in the bitrate decision.\n     */\n    function updatePlaceholderBuffer(bolaState, mediaType) {\n        const nowMs = Date.now();\n\n        if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n            // compensate for non-bandwidth-derived delays, e.g., live streaming availability, buffer controller\n            const delay = 0.001 * (nowMs - bolaState.lastSegmentFinishTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        } else if (!isNaN(bolaState.lastCallTimeMs)) {\n            // no download after last call, compensate for delay between calls\n            const delay = 0.001 * (nowMs - bolaState.lastCallTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        }\n\n        bolaState.lastCallTimeMs = nowMs;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n\n        checkBolaStateStableBufferTime(bolaState, mediaType);\n    }\n\n    function onBufferEmpty(e) {\n        // if we rebuffer, we don't want the placeholder buffer to artificially raise BOLA quality\n        const mediaType = e.mediaType;\n        // if audio buffer runs empty (due to track switch for example) then reset placeholder buffer only for audio (to avoid decrease video BOLA quality)\n        const stateDict = mediaType === Constants.AUDIO ? [Constants.AUDIO] : bolaStateDict;\n        for (const mediaType in stateDict) {\n            if (bolaStateDict.hasOwnProperty(mediaType) && bolaStateDict[mediaType].state === BOLA_STATE_STEADY) {\n                bolaStateDict[mediaType].placeholderBuffer = 0;\n            }\n        }\n    }\n\n    function onPlaybackSeeking() {\n        // TODO: 1. Verify what happens if we seek mid-fragment.\n        // TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.\n        for (const mediaType in bolaStateDict) {\n            if (bolaStateDict.hasOwnProperty(mediaType)) {\n                const bolaState = bolaStateDict[mediaType];\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                    bolaState.state = BOLA_STATE_STARTUP; // TODO: BOLA_STATE_SEEK?\n                    clearBolaStateOnSeek(bolaState);\n                }\n            }\n        }\n    }\n\n    function onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.mediaInfo) {\n            const bolaState = bolaStateDict[e.chunk.mediaInfo.type];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                const start = e.chunk.start;\n                if (isNaN(bolaState.mostAdvancedSegmentStart) || start > bolaState.mostAdvancedSegmentStart) {\n                    bolaState.mostAdvancedSegmentStart = start;\n                    bolaState.lastSegmentWasReplacement = false;\n                } else {\n                    bolaState.lastSegmentWasReplacement = true;\n                }\n\n                bolaState.lastSegmentStart = start;\n                bolaState.lastSegmentDurationS = e.chunk.duration;\n                bolaState.lastQuality = e.chunk.quality;\n\n                checkNewSegment(bolaState, e.chunk.mediaInfo.type);\n            }\n        }\n    }\n\n    function onMetricAdded(e) {\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                bolaState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\n                bolaState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\n\n                checkNewSegment(bolaState, e.mediaType);\n            }\n        }\n    }\n\n    /*\n     * When a new segment is downloaded, we get two notifications: onMediaFragmentLoaded() and onMetricAdded(). It is\n     * possible that the quality for the downloaded segment was lower (not higher) than the quality indicated by BOLA.\n     * This might happen because of other rules such as the DroppedFramesRule. When this happens, we trim the\n     * placeholder buffer to make BOLA more stable. This mechanism also avoids inflating the buffer when BOLA itself\n     * decides not to increase the quality to avoid oscillations.\n     *\n     * We should also check for replacement segments (fast switching). In this case, a segment is downloaded but does\n     * not grow the actual buffer. Fast switching might cause the buffer to deplete, causing BOLA to drop the bitrate.\n     * We avoid this by growing the placeholder buffer.\n     */\n    function checkNewSegment(bolaState, mediaType) {\n        if (!isNaN(bolaState.lastSegmentStart) && !isNaN(bolaState.lastSegmentRequestTimeMs) && !isNaN(bolaState.placeholderBuffer)) {\n            bolaState.placeholderBuffer *= PLACEHOLDER_BUFFER_DECAY;\n\n            // Find what maximum buffer corresponding to last segment was, and ensure placeholder is not relatively larger.\n            if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n                const bufferAtLastSegmentRequest = bufferLevel + 0.001 * (bolaState.lastSegmentFinishTimeMs - bolaState.lastSegmentRequestTimeMs); // estimate\n                const maxEffectiveBufferForLastSegment = maxBufferLevelForQuality(bolaState, bolaState.lastQuality);\n                const maxPlaceholderBuffer = Math.max(0, maxEffectiveBufferForLastSegment - bufferAtLastSegmentRequest);\n                bolaState.placeholderBuffer = Math.min(maxPlaceholderBuffer, bolaState.placeholderBuffer);\n            }\n\n            // then see if we should grow placeholder buffer\n\n            if (bolaState.lastSegmentWasReplacement && !isNaN(bolaState.lastSegmentDurationS)) {\n                // compensate for segments that were downloaded but did not grow the buffer\n                bolaState.placeholderBuffer += bolaState.lastSegmentDurationS;\n            }\n\n            bolaState.lastSegmentStart = NaN;\n            bolaState.lastSegmentRequestTimeMs = NaN;\n        }\n    }\n\n    function onQualityChangeRequested(e) {\n        // Useful to store change requests when abandoning a download.\n        if (e) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                bolaState.abrQuality = e.newQuality;\n            }\n        }\n    }\n\n    function onFragmentLoadingAbandoned(e) {\n        if (e) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                // deflate placeholderBuffer - note that we want to be conservative when abandoning\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(e.mediaType);\n                let wantEffectiveBufferLevel;\n                if (bolaState.abrQuality > 0) {\n                    // deflate to point where BOLA just chooses newQuality over newQuality-1\n                    wantEffectiveBufferLevel = minBufferLevelForQuality(bolaState, bolaState.abrQuality);\n                } else {\n                    wantEffectiveBufferLevel = MINIMUM_BUFFER_S;\n                }\n                const maxPlaceholderBuffer = Math.max(0, wantEffectiveBufferLevel - bufferLevel);\n                bolaState.placeholderBuffer = Math.min(bolaState.placeholderBuffer, maxPlaceholderBuffer);\n            }\n        }\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') ||\n            !rulesContext.hasOwnProperty('getScheduleController') || !rulesContext.hasOwnProperty('getStreamInfo') ||\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('useBufferOccupancyABR')) {\n            return switchRequest;\n        }\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const scheduleController = rulesContext.getScheduleController();\n        const streamInfo = rulesContext.getStreamInfo();\n        const abrController = rulesContext.getAbrController();\n        const throughputHistory = abrController.getThroughputHistory();\n        const streamId = streamInfo ? streamInfo.id : null;\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\n        switchRequest.reason = switchRequest.reason || {};\n\n        if (!useBufferOccupancyABR) {\n            return switchRequest;\n        }\n\n        scheduleController.setTimeToLoadDelay(0);\n\n        const bolaState = getBolaState(rulesContext);\n\n        if (bolaState.state === BOLA_STATE_ONE_BITRATE) {\n            // shouldn't even have been called\n            return switchRequest;\n        }\n\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n        const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic);\n        const safeThroughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n        const latency = throughputHistory.getAverageLatency(mediaType);\n        let quality;\n\n        switchRequest.reason.state = bolaState.state;\n        switchRequest.reason.throughput = throughput;\n        switchRequest.reason.latency = latency;\n\n        if (isNaN(throughput)) { // isNaN(throughput) === isNaN(safeThroughput) === isNaN(latency)\n            // still starting up - not enough information\n            return switchRequest;\n        }\n\n        switch (bolaState.state) {\n            case BOLA_STATE_STARTUP:\n                quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\n\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = safeThroughput;\n\n                bolaState.placeholderBuffer = Math.max(0, minBufferLevelForQuality(bolaState, quality) - bufferLevel);\n                bolaState.lastQuality = quality;\n\n                if (!isNaN(bolaState.lastSegmentDurationS) && bufferLevel >= bolaState.lastSegmentDurationS) {\n                    bolaState.state = BOLA_STATE_STEADY;\n                }\n\n                break; // BOLA_STATE_STARTUP\n\n            case BOLA_STATE_STEADY:\n\n                // NB: The placeholder buffer is added to bufferLevel to come up with a bitrate.\n                //     This might lead BOLA to be too optimistic and to choose a bitrate that would lead to rebuffering -\n                //     if the real buffer bufferLevel runs out, the placeholder buffer cannot prevent rebuffering.\n                //     However, the InsufficientBufferRule takes care of this scenario.\n\n                updatePlaceholderBuffer(bolaState, mediaType);\n\n                quality = getQualityFromBufferLevel(bolaState, bufferLevel + bolaState.placeholderBuffer);\n\n                // we want to avoid oscillations\n                // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\n                const qualityForThroughput = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\n                if (quality > bolaState.lastQuality && quality > qualityForThroughput) {\n                    // only intervene if we are trying to *increase* quality to an *unsustainable* level\n                    // we are only avoid oscillations - do not drop below last quality\n\n                    quality = Math.max(qualityForThroughput, bolaState.lastQuality);\n                }\n\n                // We do not want to overfill buffer with low quality chunks.\n                // Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.\n                let delayS = Math.max(0, bufferLevel + bolaState.placeholderBuffer - maxBufferLevelForQuality(bolaState, quality));\n\n                // First reduce placeholder buffer, then tell schedule controller to pause.\n                if (delayS <= bolaState.placeholderBuffer) {\n                    bolaState.placeholderBuffer -= delayS;\n                    delayS = 0;\n                } else {\n                    delayS -= bolaState.placeholderBuffer;\n                    bolaState.placeholderBuffer = 0;\n\n                    if (quality < abrController.getMaxAllowedIndexFor(mediaType, streamId)) {\n                        // At top quality, allow schedule controller to decide how far to fill buffer.\n                        scheduleController.setTimeToLoadDelay(1000 * delayS);\n                    } else {\n                        delayS = 0;\n                    }\n                }\n\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = throughput;\n                switchRequest.reason.latency = latency;\n                switchRequest.reason.bufferLevel = bufferLevel;\n                switchRequest.reason.placeholderBuffer = bolaState.placeholderBuffer;\n                switchRequest.reason.delay = delayS;\n\n                bolaState.lastQuality = quality;\n                // keep bolaState.state === BOLA_STATE_STEADY\n\n                break; // BOLA_STATE_STEADY\n\n            default:\n                logger.debug('BOLA ABR rule invoked in bad state.');\n                // should not arrive here, try to recover\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\n                switchRequest.reason.state = bolaState.state;\n                switchRequest.reason.throughput = safeThroughput;\n                switchRequest.reason.latency = latency;\n                bolaState.state = BOLA_STATE_STARTUP;\n                clearBolaStateOnSeek(bolaState);\n        }\n\n        return switchRequest;\n    }\n\n    function resetInitialSettings() {\n        bolaStateDict = {};\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        eventBus.off(MediaPlayerEvents.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, instance);\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\n\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBolaRule.__dashjs_factory_name = 'BolaRule';\nexport default FactoryMaker.getClassFactory(BolaRule);\n","import FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Debug from '../../../core/Debug';\n\nfunction DroppedFramesRule() {\n\n    const context = this.context;\n    let instance,\n        logger;\n\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getDroppedFramesHistory')) {\n            return switchRequest;\n        }\n\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        const streamId = rulesContext.getStreamInfo().id;\n\n        if (droppedFramesHistory) {\n            const dfh = droppedFramesHistory.getFrameHistory(streamId);\n\n            if (!dfh || dfh.length === 0) {\n                return switchRequest;\n            }\n\n            let droppedFrames = 0;\n            let totalFrames = 0;\n            let maxIndex = SwitchRequest.NO_CHANGE;\n\n            //No point in measuring dropped frames for the zeroeth index.\n            for (let i = 1; i < dfh.length; i++) {\n                if (dfh[i]) {\n                    droppedFrames = dfh[i].droppedVideoFrames;\n                    totalFrames = dfh[i].totalVideoFrames;\n\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n                        maxIndex = i - 1;\n                        logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n                        break;\n                    }\n                }\n            }\n            return SwitchRequest(context).create(maxIndex, { droppedFrames: droppedFrames });\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\nimport Constants from '../../constants/Constants';\nimport MetricsConstants from '../../constants/MetricsConstants';\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\n\nfunction InsufficientBufferRule(config) {\n\n    config = config || {};\n    const INSUFFICIENT_BUFFER_SAFETY_FACTOR = 0.5;\n    const SEGMENT_IGNORE_COUNT = 2;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const dashMetrics = config.dashMetrics;\n\n    let instance,\n        logger,\n        bufferStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n    function checkConfig() {\n        if (!dashMetrics || !dashMetrics.hasOwnProperty('getCurrentBufferLevel') || !dashMetrics.hasOwnProperty('getCurrentBufferState')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n\n    /**\n     * If a BUFFER_EMPTY event happens, then InsufficientBufferRule returns switchRequest.quality=0 until BUFFER_LOADED happens.\n     * Otherwise InsufficientBufferRule gives a maximum bitrate depending on throughput and bufferLevel such that\n     * a whole fragment can be downloaded before the buffer runs out, subject to a conservative safety factor of 0.5.\n     * If the bufferLevel is low, then InsufficientBufferRule avoids rebuffering risk.\n     * If the bufferLevel is high, then InsufficientBufferRule give a high MaxIndex allowing other rules to take over.\n     * @param rulesContext\n     * @return {object}\n     */\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaType')) {\n            return switchRequest;\n        }\n\n        checkConfig();\n\n        const mediaType = rulesContext.getMediaType();\n        const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\n        const representationInfo = rulesContext.getRepresentationInfo();\n        const fragmentDuration = representationInfo.fragmentDuration;\n        const streamInfo = rulesContext.getStreamInfo();\n        const streamId = streamInfo ? streamInfo.id : null;\n        const scheduleController = rulesContext.getScheduleController();\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\n        const playbackController = scheduleController.getPlaybackController();\n\n\n        // Don't ask for a bitrate change if there is not info about buffer state or if fragmentDuration is not defined\n        const lowLatencyEnabled = playbackController.getLowLatencyModeEnabled();\n        if (shouldIgnore(lowLatencyEnabled, mediaType) || !fragmentDuration) {\n            return switchRequest;\n        }\n\n        if (currentBufferState && currentBufferState.state === MetricsConstants.BUFFER_EMPTY) {\n            logger.debug('[' + mediaType + '] Switch to index 0; buffer is empty.');\n            switchRequest.quality = 0;\n            switchRequest.reason = 'InsufficientBufferRule: Buffer is empty';\n        } else {\n            const mediaInfo = rulesContext.getMediaInfo();\n            const abrController = rulesContext.getAbrController();\n            const throughputHistory = abrController.getThroughputHistory();\n\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n            const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic);\n            const latency = throughputHistory.getAverageLatency(mediaType);\n            const bitrate = throughput * (bufferLevel / fragmentDuration) * INSUFFICIENT_BUFFER_SAFETY_FACTOR;\n\n            switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, bitrate, streamId, latency);\n            switchRequest.reason = 'InsufficientBufferRule: being conservative to avoid immediate rebuffering';\n        }\n\n        return switchRequest;\n\n    }\n\n    function shouldIgnore(lowLatencyEnabled, mediaType) {\n        return !lowLatencyEnabled && bufferStateDict[mediaType].ignoreCount > 0;\n    }\n\n    function resetInitialSettings() {\n        bufferStateDict = {};\n        bufferStateDict[Constants.VIDEO] = { ignoreCount: SEGMENT_IGNORE_COUNT };\n        bufferStateDict[Constants.AUDIO] = { ignoreCount: SEGMENT_IGNORE_COUNT };\n    }\n\n    function _onPlaybackSeeking() {\n        resetInitialSettings();\n    }\n\n    function _onBytesAppended(e) {\n        if (!isNaN(e.startTime) && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            if (bufferStateDict[e.mediaType].ignoreCount > 0) {\n                bufferStateDict[e.mediaType].ignoreCount--;\n            }\n        }\n    }\n\n    function reset() {\n        resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n    instance = {\n        getMaxIndex,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2020, Unified Streaming.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the Learn2Adapt-LowLatency (L2A-LL) bitrate adaptation algorithm, see https://github.com/unifiedstreaming/Learn2Adapt-LowLatency/blob/master/Online_learning_for_bitrate_adaptation_in_low_latency_live_streaming_CR.pdf\n\nimport MetricsConstants from '../../constants/MetricsConstants';\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport Debug from '../../../core/Debug';\nimport Constants from '../../constants/Constants';\n\nconst L2A_STATE_ONE_BITRATE = 0; // If there is only one bitrate (or initialization failed), always return NO_CHANGE.\nconst L2A_STATE_STARTUP = 1; // Set placeholder buffer such that we download fragments at most recently measured throughput.\nconst L2A_STATE_STEADY = 2; // Buffer primed, we switch to steady operation.\n\n\nfunction L2ARule(config) {\n    config = config || {};\n    const context = this.context;\n\n    const dashMetrics = config.dashMetrics;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        l2AStateDict,\n        l2AParameterDict,\n        logger;\n\n    /**\n     * Setup function to initialize L2ARule\n     */\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n\n        eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\n    }\n\n    /**\n     * Sets the initial state of the algorithm. Calls the initialize function for the paramteters.\n     * @param {object} rulesContext\n     * @return {object} initialState\n     * @private\n     */\n    function _getInitialL2AState(rulesContext) {\n        const initialState = {};\n        const mediaInfo = rulesContext.getMediaInfo();\n        const bitrates = mediaInfo.bitrateList.map((b) => {\n            return b.bandwidth / 1000;\n        });\n\n        initialState.state = L2A_STATE_STARTUP;\n        initialState.bitrates = bitrates;\n        initialState.lastQuality = 0;\n\n        _initializeL2AParameters(mediaInfo);\n        _clearL2AStateOnSeek(initialState);\n\n        return initialState;\n    }\n\n    /**\n     * Initializes the parameters of the algorithm. This will be done once for each media type.\n     * @param {object} mediaInfo\n     * @private\n     */\n    function _initializeL2AParameters(mediaInfo) {\n\n        if (!mediaInfo || !mediaInfo.type) {\n            return;\n        }\n        l2AParameterDict[mediaInfo.type] = {};\n        l2AParameterDict[mediaInfo.type].w = []; //Vector of probabilities associated with bitrate decisions\n        l2AParameterDict[mediaInfo.type].prev_w = []; //Vector of probabilities associated with bitrate decisions calculated in the previous step\n        l2AParameterDict[mediaInfo.type].Q = 0; //Initialization of Lagrangian multiplier (This keeps track of the buffer displacement)\n        l2AParameterDict[mediaInfo.type].segment_request_start_s = 0;\n        l2AParameterDict[mediaInfo.type].segment_download_finish_s = 0;\n        l2AParameterDict[mediaInfo.type].B_target = 1.5; //Target buffer level\n    }\n\n\n    /**\n     * Clears the state object\n     * @param {object} l2AState\n     * @private\n     */\n    function _clearL2AStateOnSeek(l2AState) {\n        l2AState.placeholderBuffer = 0;\n        l2AState.mostAdvancedSegmentStart = NaN;\n        l2AState.lastSegmentWasReplacement = false;\n        l2AState.lastSegmentStart = NaN;\n        l2AState.lastSegmentDurationS = NaN;\n        l2AState.lastSegmentRequestTimeMs = NaN;\n        l2AState.lastSegmentFinishTimeMs = NaN;\n        l2AState.lastSegmentUrl = '';\n    }\n\n\n    /**\n     * Returns the state object for a fiven media type. If the state object is not yet defined _getInitialL2AState is called\n     * @param {object} rulesContext\n     * @return {object} l2AState\n     * @private\n     */\n    function _getL2AState(rulesContext) {\n        const mediaType = rulesContext.getMediaType();\n        let l2AState = l2AStateDict[mediaType];\n\n        if (!l2AState) {\n            l2AState = _getInitialL2AState(rulesContext);\n            l2AStateDict[mediaType] = l2AState;\n        }\n\n        return l2AState;\n    }\n\n    /**\n     * Event handler for the seeking event.\n     * @private\n     */\n    function _onPlaybackSeeking() {\n        for (const mediaType in l2AStateDict) {\n            if (l2AStateDict.hasOwnProperty(mediaType)) {\n                const l2aState = l2AStateDict[mediaType];\n                if (l2aState.state !== L2A_STATE_ONE_BITRATE) {\n                    l2aState.state = L2A_STATE_STARTUP;\n                    _clearL2AStateOnSeek(l2aState);\n                }\n            }\n        }\n    }\n\n    /**\n     * Event handler for the mediaFragmentLoaded event\n     * @param {object} e\n     * @private\n     */\n    function _onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.mediaInfo) {\n            const l2AState = l2AStateDict[e.chunk.mediaInfo.type];\n            const l2AParameters = l2AParameterDict[e.chunk.mediaInfo.type];\n\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\n                const start = e.chunk.start;\n                if (isNaN(l2AState.mostAdvancedSegmentStart) || start > l2AState.mostAdvancedSegmentStart) {\n                    l2AState.mostAdvancedSegmentStart = start;\n                    l2AState.lastSegmentWasReplacement = false;\n                } else {\n                    l2AState.lastSegmentWasReplacement = true;\n                }\n\n                l2AState.lastSegmentStart = start;\n                l2AState.lastSegmentDurationS = e.chunk.duration;\n                l2AState.lastQuality = e.chunk.quality;\n\n                _checkNewSegment(l2AState, l2AParameters);\n            }\n        }\n    }\n\n    /**\n     * Event handler for the metricAdded event\n     * @param {object} e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\n            const l2AState = l2AStateDict[e.mediaType];\n            const l2AParameters = l2AParameterDict[e.mediaType];\n\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\n                l2AState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\n                l2AState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\n                _checkNewSegment(l2AState, l2AParameters);\n            }\n        }\n    }\n\n    /**\n     * When a new metric has been added or a media fragment has been loaded the state is adjusted accordingly\n     * @param {object} L2AState\n     * @param {object} l2AParameters\n     * @private\n     */\n    function _checkNewSegment(L2AState, l2AParameters) {\n        if (!isNaN(L2AState.lastSegmentStart) && !isNaN(L2AState.lastSegmentRequestTimeMs)) {\n            l2AParameters.segment_request_start_s = 0.001 * L2AState.lastSegmentRequestTimeMs;\n            l2AParameters.segment_download_finish_s = 0.001 * L2AState.lastSegmentFinishTimeMs;\n            L2AState.lastSegmentStart = NaN;\n            L2AState.lastSegmentRequestTimeMs = NaN;\n        }\n    }\n\n    /**\n     * Event handler for the qualityChangeRequested event\n     * @param {object} e\n     * @private\n     */\n    function _onQualityChangeRequested(e) {\n        // Useful to store change requests when abandoning a download.\n        if (e && e.mediaType) {\n            const L2AState = l2AStateDict[e.mediaType];\n            if (L2AState && L2AState.state !== L2A_STATE_ONE_BITRATE) {\n                L2AState.abrQuality = e.newQuality;\n            }\n        }\n    }\n\n    /**\n     * Dot multiplication of two arrays\n     * @param {array} arr1\n     * @param {array} arr2\n     * @return {number} sumdot\n     * @private\n     */\n\n    function _dotmultiplication(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n            return -1;\n        }\n        let sumdot = 0;\n        for (let i = 0; i < arr1.length; i++) {\n            sumdot = sumdot + arr1[i] * arr2[i];\n        }\n        return sumdot;\n    }\n\n    /**\n     * Project an n-dim vector y to the simplex Dn\n     * Dn = { x : x n-dim, 1 >= x >= 0, sum(x) = 1}\n     * Algorithm is explained at http://arxiv.org/abs/1101.6081\n     * @param {array} arr\n     * @return {array}\n     */\n    function euclideanProjection(arr) {\n        const m = arr.length;\n        let bget = false;\n        let arr2 = [];\n        for (let ii = 0; ii < m; ++ii) {\n            arr2[ii] = arr[ii];\n        }\n        let s = arr.sort(function (a, b) {\n            return b - a;\n        });\n        let tmpsum = 0;\n        let tmax = 0;\n        let x = [];\n        for (let ii = 0; ii < m - 1; ++ii) {\n            tmpsum = tmpsum + s[ii];\n            tmax = (tmpsum - 1) / (ii + 1);\n            if (tmax >= s[ii + 1]) {\n                bget = true;\n                break;\n            }\n        }\n        if (!bget) {\n            tmax = (tmpsum + s[m - 1] - 1) / m;\n        }\n        for (let ii = 0; ii < m; ++ii) {\n            x[ii] = Math.max(arr2[ii] - tmax, 0);\n        }\n        return x;\n    }\n\n    /**\n     * Returns a switch request object indicating which quality is to be played\n     * @param {object} rulesContext\n     * @return {object}\n     */\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n        const horizon = 4; // Optimization horizon (The amount of steps required to achieve convergence)\n        const vl = Math.pow(horizon, 0.99);// Cautiousness parameter, used to control aggressiveness of the bitrate decision process.\n        const alpha = Math.max(Math.pow(horizon, 1), vl * Math.sqrt(horizon));// Step size, used for gradient descent exploration granularity\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\n        const bitrateCount = bitrates.length;\n        const scheduleController = rulesContext.getScheduleController();\n        const streamInfo = rulesContext.getStreamInfo();\n        const abrController = rulesContext.getAbrController();\n        const throughputHistory = abrController.getThroughputHistory();\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\n        const useL2AABR = rulesContext.useL2AABR();\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n        const safeThroughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n        const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic); // In kbits/s\n        const react = 2; // Reactiveness to volatility (abrupt throughput drops), used to re-calibrate Lagrangian multiplier Q\n        const latency = throughputHistory.getAverageLatency(mediaType);\n        const videoModel = rulesContext.getVideoModel();\n        let quality;\n        let currentPlaybackRate = videoModel.getPlaybackRate();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') ||\n            !rulesContext.hasOwnProperty('getScheduleController') || !rulesContext.hasOwnProperty('getStreamInfo') ||\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('useL2AABR')) {\n            return switchRequest;\n        }\n\n        switchRequest.reason = switchRequest.reason || {};\n\n        if ((!useL2AABR) || (mediaType === Constants.AUDIO)) {// L2A decides bitrate only for video. Audio to be included in decision process in a later stage\n            return switchRequest;\n        }\n\n        scheduleController.setTimeToLoadDelay(0);\n\n        const l2AState = _getL2AState(rulesContext);\n\n        if (l2AState.state === L2A_STATE_ONE_BITRATE) {\n            // shouldn't even have been called\n            return switchRequest;\n        }\n\n        const l2AParameter = l2AParameterDict[mediaType];\n\n        if (!l2AParameter) {\n            return switchRequest;\n        }\n\n        switchRequest.reason.state = l2AState.state;\n        switchRequest.reason.throughput = throughput;\n        switchRequest.reason.latency = latency;\n\n        if (isNaN(throughput)) {\n            // still starting up - not enough information\n            return switchRequest;\n        }\n\n        switch (l2AState.state) {\n            case L2A_STATE_STARTUP:\n                quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamInfo.id, latency);//During strat-up phase abr.controller is responsible for bitrate decisions.\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = safeThroughput;\n                l2AState.lastQuality = quality;\n\n                if (!isNaN(l2AState.lastSegmentDurationS) && bufferLevel >= l2AParameter.B_target) {\n                    l2AState.state = L2A_STATE_STEADY;\n                    l2AParameter.Q = vl;// Initialization of Q langrangian multiplier\n                    // Update of probability vector w, to be used in main adaptation logic of L2A below (steady state)\n                    for (let i = 0; i < bitrateCount; ++i) {\n                        if (i === l2AState.lastQuality) {\n                            l2AParameter.prev_w[i] = 1;\n                        } else {\n                            l2AParameter.prev_w[i] = 0;\n                        }\n                    }\n                }\n\n                break; // L2A_STATE_STARTUP\n            case L2A_STATE_STEADY:\n                let diff1 = [];//Used to calculate the difference between consecutive decisions (w-w_prev)\n\n                // Manual calculation of latency and throughput during previous request\n                let throughputMeasureTime = dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce((a, b) => a + b.d, 0);\n                const downloadBytes = dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce((a, b) => a + b.b[0], 0);\n                let lastthroughput = Math.round((8 * downloadBytes) / throughputMeasureTime); // bits/ms = kbits/s\n                let currentHttpRequest = dashMetrics.getCurrentHttpRequest(mediaType);\n\n                if (lastthroughput < 1) {\n                    lastthroughput = 1;\n                }//To avoid division with 0 (avoid infinity) in case of an absolute network outage\n\n                // Note that for SegmentBase addressing the request url does not change.\n                // As this is not relevant for low latency streaming at this point the check below is sufficient\n                if (currentHttpRequest.url === l2AState.lastSegmentUrl ||\n                    currentHttpRequest.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                    // No change to inputs or init segment so use previously calculated quality\n                    quality = l2AState.lastQuality;\n\n                } else { // Recalculate Q\n\n                    let V = l2AState.lastSegmentDurationS;\n                    let sign = 1;\n\n                    //Main adaptation logic of L2A-LL\n                    for (let i = 0; i < bitrateCount; ++i) {\n                        bitrates[i] = bitrates[i] / 1000; // Originally in bps, now in Kbps\n                        if (currentPlaybackRate * bitrates[i] > lastthroughput) {// In this case buffer would deplete, leading to a stall, which increases latency and thus the particular probability of selsection of bitrate[i] should be decreased.\n                            sign = -1;\n                        }\n                        // The objective of L2A is to minimize the overall latency=request-response time + buffer length after download+ potential stalling (if buffer less than chunk downlad time)\n                        l2AParameter.w[i] = l2AParameter.prev_w[i] + sign * (V / (2 * alpha)) * ((l2AParameter.Q + vl) * (currentPlaybackRate * bitrates[i] / lastthroughput));//Lagrangian descent\n                    }\n\n                    // Apply euclidean projection on w to ensure w expresses a probability distribution\n                    l2AParameter.w = euclideanProjection(l2AParameter.w);\n\n                    for (let i = 0; i < bitrateCount; ++i) {\n                        diff1[i] = l2AParameter.w[i] - l2AParameter.prev_w[i];\n                        l2AParameter.prev_w[i] = l2AParameter.w[i];\n                    }\n\n                    // Lagrangian multiplier Q calculation:\n                    l2AParameter.Q = Math.max(0, l2AParameter.Q - V + V * currentPlaybackRate * ((_dotmultiplication(bitrates, l2AParameter.prev_w) + _dotmultiplication(bitrates, diff1)) / lastthroughput));\n\n                    // Quality is calculated as argmin of the absolute difference between available bitrates (bitrates[i]) and bitrate estimation (dotmultiplication(w,bitrates)).\n                    let temp = [];\n                    for (let i = 0; i < bitrateCount; ++i) {\n                        temp[i] = Math.abs(bitrates[i] - _dotmultiplication(l2AParameter.w, bitrates));\n                    }\n\n                    // Quality is calculated based on the probability distribution w (the output of L2A)\n                    quality = temp.indexOf(Math.min(...temp));\n\n                    // We employ a cautious -stepwise- ascent\n                    if (quality > l2AState.lastQuality) {\n                        if (bitrates[l2AState.lastQuality + 1] <= lastthroughput) {\n                            quality = l2AState.lastQuality + 1;\n                        }\n                    }\n\n                    // Provision against bitrate over-estimation, by re-calibrating the Lagrangian multiplier Q, to be taken into account for the next chunk\n                    if (bitrates[quality] >= lastthroughput) {\n                        l2AParameter.Q = react * Math.max(vl, l2AParameter.Q);\n                    }\n                    l2AState.lastSegment.url = currentHttpRequest.url;\n                }\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = throughput;\n                switchRequest.reason.latency = latency;\n                switchRequest.reason.bufferLevel = bufferLevel;\n                l2AState.lastQuality = switchRequest.quality;\n                break;\n            default:\n                // should not arrive here, try to recover\n                logger.debug('L2A ABR rule invoked in bad state.');\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamInfo.id, latency);\n                switchRequest.reason.state = l2AState.state;\n                switchRequest.reason.throughput = safeThroughput;\n                switchRequest.reason.latency = latency;\n                l2AState.state = L2A_STATE_STARTUP;\n                _clearL2AStateOnSeek(l2AState);\n        }\n        return switchRequest;\n    }\n\n    /**\n     * Reset objects to their initial state\n     * @private\n     */\n    function _resetInitialSettings() {\n        l2AStateDict = {};\n        l2AParameterDict = {};\n    }\n\n    /**\n     * Reset the rule\n     */\n    function reset() {\n        _resetInitialSettings();\n        eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.off(Events.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nL2ARule.__dashjs_factory_name = 'L2ARule';\nexport default FactoryMaker.getClassFactory(L2ARule);\n","\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction SwitchHistoryRule() {\n\n    const context = this.context;\n\n    let instance,\n        logger;\n\n    //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\n    const MAX_SWITCH = 0.075;\n\n    //Before this number of switch requests(no switch or actual), don't apply the rule.\n    //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\n    const SAMPLE_SIZE = 6;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\n        let drops = 0;\n        let noDrops = 0;\n        let dropSize = 0;\n        const switchRequest = SwitchRequest(context).create();\n\n        for (let i = 0; i < switchRequests.length; i++) {\n            if (switchRequests[i] !== undefined) {\n                drops += switchRequests[i].drops;\n                noDrops += switchRequests[i].noDrops;\n                dropSize += switchRequests[i].dropSize;\n\n                if (drops + noDrops >= SAMPLE_SIZE && (drops / noDrops > MAX_SWITCH)) {\n                    switchRequest.quality = (i > 0 && switchRequests[i].drops > 0) ? i - 1 : i;\n                    switchRequest.reason = {index: switchRequest.quality, drops: drops, noDrops: noDrops, dropSize: dropSize};\n                    logger.debug('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\n                    break;\n                }\n            }\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Constants from '../../constants/Constants';\nimport MetricsConstants from '../../constants/MetricsConstants';\n\nfunction ThroughputRule(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n\n    let instance;\n\n    function setup() {\n    }\n\n    function checkConfig() {\n        if (!dashMetrics || !dashMetrics.hasOwnProperty('getCurrentBufferState')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('useBufferOccupancyABR') ||\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('getScheduleController')) {\n            return switchRequest;\n        }\n\n        checkConfig();\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\n        const scheduleController = rulesContext.getScheduleController();\n        const abrController = rulesContext.getAbrController();\n        const streamInfo = rulesContext.getStreamInfo();\n        const streamId = streamInfo ? streamInfo.id : null;\n        const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\n        const throughputHistory = abrController.getThroughputHistory();\n        const throughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n        const latency = throughputHistory.getAverageLatency(mediaType);\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\n\n        if (isNaN(throughput) || !currentBufferState || useBufferOccupancyABR) {\n            return switchRequest;\n        }\n\n        if (abrController.getAbandonmentStateFor(streamId, mediaType) !== MetricsConstants.ABANDON_LOAD) {\n            if (currentBufferState.state === MetricsConstants.BUFFER_LOADED || isDynamic) {\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, throughput, streamId, latency);\n                scheduleController.setTimeToLoadDelay(0);\n                switchRequest.reason = {throughput: throughput, latency: latency};\n            }\n        }\n\n        return switchRequest;\n    }\n\n    function reset() {\n        // no persistent information to reset\n    }\n\n    instance = {\n        getMaxIndex,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\nexport default FactoryMaker.getClassFactory(ThroughputRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport Debug from '../../../../core/Debug';\n\nconst WEIGHT_SELECTION_MODES = {\n    MANUAL: 'manual_weight_selection',\n    RANDOM: 'random_weight_selection',\n    DYNAMIC: 'dynamic_weight_selection'\n};\n\nfunction LearningAbrController() {\n    const context = this.context;\n\n    let instance,\n        logger,\n        somBitrateNeurons,\n        bitrateNormalizationFactor,\n        latencyNormalizationFactor,\n        minBitrate,\n        weights,\n        sortedCenters,\n        weightSelectionMode;\n\n    /**\n     * Setup the class\n     */\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    /**\n     * Reset all values\n     */\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    /**\n     * Reset to initial settings\n     * @private\n     */\n    function _resetInitialSettings() {\n        somBitrateNeurons = null;\n        bitrateNormalizationFactor = 1;\n        latencyNormalizationFactor = 100;\n        minBitrate = 0;\n        weights = null;\n        sortedCenters = null;\n        weightSelectionMode = WEIGHT_SELECTION_MODES.DYNAMIC;\n    }\n\n    /**\n     * Returns the maximum throughput\n     * @return {number}\n     * @private\n     */\n    function _getMaxThroughput() {\n        let maxThroughput = 0;\n\n        if (somBitrateNeurons) {\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\n                let neuron = somBitrateNeurons[i];\n                if (neuron.state.throughput > maxThroughput) {\n                    maxThroughput = neuron.state.throughput;\n                }\n            }\n        }\n\n        return maxThroughput;\n    }\n\n    /**\n     *\n     * @param {array} w\n     * @return {number}\n     * @private\n     */\n    function _getMagnitude(w) {\n        const magnitude = w.map((x) => (Math.pow(x, 2))).reduce((sum, now) => sum + now);\n\n        return Math.sqrt(magnitude);\n    }\n\n    /**\n     *\n     * @param {array} a\n     * @param {array} b\n     * @param {array} w\n     * @return {number}\n     * @private\n     */\n    function _getDistance(a, b, w) {\n        let sum = a\n            .map((x, i) => (w[i] * (Math.pow(x - b[i], 2)))) // square the difference*w\n            .reduce((sum, now) => sum + now); // sum\n        let sign = (sum < 0) ? -1 : 1;\n\n        return sign * Math.sqrt(Math.abs(sum));\n    }\n\n    /**\n     *\n     * @param {object} a\n     * @param {object} b\n     * @return {number}\n     * @private\n     */\n    function _getNeuronDistance(a, b) {\n        let aState = [a.state.throughput, a.state.latency, a.state.rebuffer, a.state.switch];\n        let bState = [b.state.throughput, b.state.latency, b.state.rebuffer, b.state.switch];\n\n        return _getDistance(aState, bState, [1, 1, 1, 1]);\n    }\n\n    /**\n     *\n     * @param {object} winnerNeuron\n     * @param {array} somElements\n     * @param {array} x\n     * @private\n     */\n    function _updateNeurons(winnerNeuron, somElements, x) {\n        for (let i = 0; i < somElements.length; i++) {\n            let somNeuron = somElements[i];\n            let sigma = 0.1;\n            const neuronDistance = _getNeuronDistance(somNeuron, winnerNeuron);\n            let neighbourHood = Math.exp(-1 * Math.pow(neuronDistance, 2) / (2 * Math.pow(sigma, 2)));\n            _updateNeuronState(somNeuron, x, neighbourHood);\n        }\n    }\n\n    /**\n     *\n     * @param {object} neuron\n     * @param {array} x\n     * @param {object} neighbourHood\n     * @private\n     */\n    function _updateNeuronState(neuron, x, neighbourHood) {\n        let state = neuron.state;\n        let w = [0.01, 0.01, 0.01, 0.01]; // learning rate\n\n        state.throughput = state.throughput + (x[0] - state.throughput) * w[0] * neighbourHood;\n        state.latency = state.latency + (x[1] - state.latency) * w[1] * neighbourHood;\n        state.rebuffer = state.rebuffer + (x[2] - state.rebuffer) * w[2] * neighbourHood;\n        state.switch = state.switch + (x[3] - state.switch) * w[3] * neighbourHood;\n    }\n\n    /**\n     *\n     * @param {object} currentNeuron\n     * @param {number} currentThroughput\n     * @return {object}\n     * @private\n     */\n    function _getDownShiftNeuron(currentNeuron, currentThroughput) {\n        let maxSuitableBitrate = 0;\n        let result = currentNeuron;\n\n        if (somBitrateNeurons) {\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\n                let n = somBitrateNeurons[i];\n                if (n.bitrate < currentNeuron.bitrate && n.bitrate > maxSuitableBitrate && currentThroughput > n.bitrate) {\n                    // possible downshiftable neuron\n                    maxSuitableBitrate = n.bitrate;\n                    result = n;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *\n     * @param {object} mediaInfo\n     * @param {number} throughput\n     * @param {number} latency\n     * @param {number} bufferSize\n     * @param {number} playbackRate\n     * @param {number} currentQualityIndex\n     * @param {object} dynamicWeightsSelector\n     * @return {null|*}\n     */\n    function getNextQuality(mediaInfo, throughput, latency, bufferSize, playbackRate, currentQualityIndex, dynamicWeightsSelector) {\n        // For Dynamic Weights Selector\n        let currentLatency = latency;\n        let currentBuffer = bufferSize;\n        let currentThroughput = throughput;\n\n        let somElements = _getSomBitrateNeurons(mediaInfo);\n        // normalize throughput\n        let throughputNormalized = throughput / bitrateNormalizationFactor;\n        // saturate values higher than 1\n        if (throughputNormalized > 1) {\n            throughputNormalized = _getMaxThroughput();\n        }\n        // normalize latency\n        latency = latency / latencyNormalizationFactor;\n\n        const targetLatency = 0;\n        const targetRebufferLevel = 0;\n        const targetSwitch = 0;\n        // 10K + video encoding is the recommended throughput\n        const throughputDelta = 10000;\n\n        logger.debug(`getNextQuality called throughput:${throughputNormalized} latency:${latency} bufferSize:${bufferSize} currentQualityIndex:${currentQualityIndex} playbackRate:${playbackRate}`);\n\n        let currentNeuron = somElements[currentQualityIndex];\n        let downloadTime = (currentNeuron.bitrate * dynamicWeightsSelector.getSegmentDuration()) / currentThroughput;\n        let rebuffer = Math.max(0, (downloadTime - currentBuffer));\n\n        // check buffer for possible stall\n        if (currentBuffer - downloadTime < dynamicWeightsSelector.getMinBuffer()) {\n            logger.debug(`Buffer is low for bitrate= ${currentNeuron.bitrate} downloadTime=${downloadTime} currentBuffer=${currentBuffer} rebuffer=${rebuffer}`);\n            return _getDownShiftNeuron(currentNeuron, currentThroughput).qualityIndex;\n        }\n\n        switch (weightSelectionMode) {\n            case WEIGHT_SELECTION_MODES.MANUAL:\n                _manualWeightSelection();\n                break;\n            case WEIGHT_SELECTION_MODES.RANDOM:\n                _randomWeightSelection(somElements);\n                break;\n            case WEIGHT_SELECTION_MODES.DYNAMIC:\n                _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\n                break;\n            default:\n                _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\n\n        }\n\n        let minDistance = null;\n        let minIndex = null;\n        let winnerNeuron = null;\n\n        for (let i = 0; i < somElements.length; i++) {\n            let somNeuron = somElements[i];\n            let somNeuronState = somNeuron.state;\n            let somData = [somNeuronState.throughput,\n                somNeuronState.latency,\n                somNeuronState.rebuffer,\n                somNeuronState.switch];\n\n            let distanceWeights = weights.slice();\n            let nextBuffer = dynamicWeightsSelector.getNextBufferWithBitrate(somNeuron.bitrate, currentBuffer, currentThroughput);\n            let isBufferLow = nextBuffer < dynamicWeightsSelector.getMinBuffer();\n            if (isBufferLow) {\n                logger.debug(`Buffer is low for bitrate=${somNeuron.bitrate} downloadTime=${downloadTime} currentBuffer=${currentBuffer} nextBuffer=${nextBuffer}`);\n            }\n            // special condition downshift immediately\n            if (somNeuron.bitrate > throughput - throughputDelta || isBufferLow) {\n                if (somNeuron.bitrate !== minBitrate) {\n                    // encourage to pick smaller bitrates throughputWeight=100\n                    distanceWeights[0] = 100;\n                }\n            }\n\n            // calculate the distance with the target\n            let distance = _getDistance(somData, [throughputNormalized, targetLatency, targetRebufferLevel, targetSwitch], distanceWeights);\n            if (minDistance === null || distance < minDistance) {\n                minDistance = distance;\n                minIndex = somNeuron.qualityIndex;\n                winnerNeuron = somNeuron;\n            }\n        }\n\n        // update current neuron and the neighbourhood with the calculated QoE\n        // will punish current if it is not picked\n        let bitrateSwitch = Math.abs(currentNeuron.bitrate - winnerNeuron.bitrate) / bitrateNormalizationFactor;\n        _updateNeurons(currentNeuron, somElements, [throughputNormalized, latency, rebuffer, bitrateSwitch]);\n\n        // update bmu and  neighbours with targetQoE=1, targetLatency=0\n        _updateNeurons(winnerNeuron, somElements, [throughputNormalized, targetLatency, targetRebufferLevel, bitrateSwitch]);\n\n        return minIndex;\n    }\n\n    /**\n     * Option 1: Manual weights\n     * @private\n     */\n    function _manualWeightSelection() {\n        let throughputWeight = 0.4;\n        let latencyWeight = 0.4;\n        let bufferWeight = 0.4;\n        let switchWeight = 0.4;\n\n        weights = [throughputWeight, latencyWeight, bufferWeight, switchWeight]; // throughput, latency, buffer, switch\n    }\n\n    /**\n     * Option 2: Random (Xavier) weights\n     * @param {array} somElements\n     * @private\n     */\n    function _randomWeightSelection(somElements) {\n        weights = _getXavierWeights(somElements.length, 4);\n    }\n\n    /**\n     * Dynamic Weight Selector weights\n     * @param {object} dynamicWeightsSelector\n     * @param {array} somElements\n     * @param {number} currentLatency\n     * @param {number} currentBuffer\n     * @param {number} rebuffer\n     * @param {number} currentThroughput\n     * @param {number} playbackRate\n     * @private\n     */\n    function _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate) {\n        if (!weights) {\n            weights = sortedCenters[sortedCenters.length - 1];\n        }\n        // Dynamic Weights Selector (step 2/2: find weights)\n        let weightVector = dynamicWeightsSelector.findWeightVector(somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\n        if (weightVector !== null && weightVector !== -1) { // null: something went wrong, -1: constraints not met\n            weights = weightVector;\n        }\n    }\n\n    /**\n     *\n     * @param {number }neuronCount\n     * @param {number }weightCount\n     * @return {array}\n     * @private\n     */\n    function _getXavierWeights(neuronCount, weightCount) {\n        let W = [];\n        let upperBound = Math.sqrt((2 / neuronCount));\n\n        for (let i = 0; i < weightCount; i++) {\n            W.push(Math.random() * upperBound);\n        }\n\n        weights = W;\n\n        return weights;\n    }\n\n    /**\n     *\n     * @param {object} mediaInfo\n     * @return {array}\n     * @private\n     */\n    function _getSomBitrateNeurons(mediaInfo) {\n        if (!somBitrateNeurons) {\n            somBitrateNeurons = [];\n            const bitrateList = mediaInfo.bitrateList;\n            let bitrateVector = [];\n            minBitrate = bitrateList[0].bandwidth;\n\n            bitrateList.forEach(element => {\n                bitrateVector.push(element.bandwidth);\n                if (element.bandwidth < minBitrate) {\n                    minBitrate = element.bandwidth;\n                }\n            });\n            bitrateNormalizationFactor = _getMagnitude(bitrateVector);\n\n            for (let i = 0; i < bitrateList.length; i++) {\n                let neuron = {\n                    qualityIndex: i,\n                    bitrate: bitrateList[i].bandwidth,\n                    state: {\n                        // normalize throughputs\n                        throughput: bitrateList[i].bandwidth / bitrateNormalizationFactor,\n                        latency: 0,\n                        rebuffer: 0,\n                        switch: 0\n                    }\n                };\n                somBitrateNeurons.push(neuron);\n            }\n\n            sortedCenters = _getInitialKmeansPlusPlusCenters(somBitrateNeurons);\n        }\n\n        return somBitrateNeurons;\n    }\n\n    /**\n     *\n     * @param {number} size\n     * @return {array}\n     * @private\n     */\n    function _getRandomData(size) {\n        let dataArray = [];\n\n        for (let i = 0; i < size; i++) {\n            let data = [\n                Math.random() * _getMaxThroughput(), //throughput\n                Math.random(), //latency\n                Math.random(), //buffersize\n                Math.random() //switch\n            ];\n            dataArray.push(data);\n        }\n\n        return dataArray;\n    }\n\n    /**\n     *\n     * @param {array} somElements\n     * @return {array}\n     * @private\n     */\n    function _getInitialKmeansPlusPlusCenters(somElements) {\n        let centers = [];\n        let randomDataSet = _getRandomData(Math.pow(somElements.length, 2));\n        centers.push(randomDataSet[0]);\n        let distanceWeights = [1, 1, 1, 1];\n\n        for (let k = 1; k < somElements.length; k++) {\n            let nextPoint = null;\n            let maxDistance = null;\n            for (let i = 0; i < randomDataSet.length; i++) {\n                let currentPoint = randomDataSet[i];\n                let minDistance = null;\n                for (let j = 0; j < centers.length; j++) {\n                    let distance = _getDistance(currentPoint, centers[j], distanceWeights);\n                    if (minDistance === null || distance < minDistance) {\n                        minDistance = distance;\n                    }\n                }\n                if (maxDistance === null || minDistance > maxDistance) {\n                    nextPoint = currentPoint;\n                    maxDistance = minDistance;\n                }\n            }\n            centers.push(nextPoint);\n        }\n\n        // find the least similar center\n        let maxDistance = null;\n        let leastSimilarIndex = null;\n        for (let i = 0; i < centers.length; i++) {\n            let distance = 0;\n            for (let j = 0; j < centers.length; j++) {\n                if (i === j) continue;\n                distance += _getDistance(centers[i], centers[j], distanceWeights);\n            }\n            if (maxDistance === null || distance > maxDistance) {\n                maxDistance = distance;\n                leastSimilarIndex = i;\n            }\n        }\n\n        // move centers to sortedCenters\n        let sortedCenters = [];\n        sortedCenters.push(centers[leastSimilarIndex]);\n        centers.splice(leastSimilarIndex, 1);\n        while (centers.length > 0) {\n            let minDistance = null;\n            let minIndex = null;\n            for (let i = 0; i < centers.length; i++) {\n                let distance = _getDistance(sortedCenters[0], centers[i], distanceWeights);\n                if (minDistance === null || distance < minDistance) {\n                    minDistance = distance;\n                    minIndex = i;\n                }\n            }\n            sortedCenters.push(centers[minIndex]);\n            centers.splice(minIndex, 1);\n        }\n\n        return sortedCenters;\n    }\n\n    instance = {\n        getNextQuality,\n        reset\n    };\n\n    _setup();\n    return instance;\n}\n\nLearningAbrController.__dashjs_factory_name = 'LearningAbrController';\nexport default FactoryMaker.getClassFactory(LearningAbrController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport QoeInfo from './QoeInfo';\n\nfunction LoLpQoeEvaluator() {\n\n    let instance,\n        voPerSegmentQoeInfo,\n        segmentDuration,\n        maxBitrateKbps,\n        minBitrateKbps;\n\n    function _setup() {\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        voPerSegmentQoeInfo = null;\n        segmentDuration = null;\n        maxBitrateKbps = null;\n        minBitrateKbps = null;\n    }\n\n    function setupPerSegmentQoe(sDuration, maxBrKbps, minBrKbps) {\n        // Set up Per Segment QoeInfo\n        voPerSegmentQoeInfo = _createQoeInfo('segment', sDuration, maxBrKbps, minBrKbps);\n        segmentDuration = sDuration;\n        maxBitrateKbps = maxBrKbps;\n        minBitrateKbps = minBrKbps;\n    }\n\n    function _createQoeInfo(fragmentType, fragmentDuration, maxBitrateKbps, minBitrateKbps) {\n        /*\n         * [Weights][Source: Abdelhak Bentaleb, 2020 (last updated: 30 Mar 2020)]\n         * bitrateReward:           segment duration, e.g. 0.5s\n         * bitrateSwitchPenalty:    0.02s or 1s if the bitrate switch is too important\n         * rebufferPenalty:         max encoding bitrate, e.g. 1000kbps\n         * latencyPenalty:          if L ≤ 1.1 seconds then = min encoding bitrate * 0.05, otherwise = max encoding bitrate * 0.1\n         * playbackSpeedPenalty:    min encoding bitrate, e.g. 200kbps\n         */\n\n        // Create new QoeInfo object\n        let qoeInfo = new QoeInfo();\n        qoeInfo.type = fragmentType;\n\n        // Set weight: bitrateReward\n        // set some safe value, else consider throwing error\n        if (!fragmentDuration) {\n            qoeInfo.weights.bitrateReward = 1;\n        } else {\n            qoeInfo.weights.bitrateReward = fragmentDuration;\n        }\n\n        // Set weight: bitrateSwitchPenalty\n        // qoeInfo.weights.bitrateSwitchPenalty = 0.02;\n        qoeInfo.weights.bitrateSwitchPenalty = 1;\n\n        // Set weight: rebufferPenalty\n        // set some safe value, else consider throwing error\n        if (!maxBitrateKbps) {\n            qoeInfo.weights.rebufferPenalty = 1000;\n        } else {\n            qoeInfo.weights.rebufferPenalty = maxBitrateKbps;\n        }\n\n        // Set weight: latencyPenalty\n        qoeInfo.weights.latencyPenalty = [];\n        qoeInfo.weights.latencyPenalty.push({ threshold: 1.1, penalty: (minBitrateKbps * 0.05) });\n        qoeInfo.weights.latencyPenalty.push({ threshold: 100000000, penalty: (maxBitrateKbps * 0.1) });\n\n        // Set weight: playbackSpeedPenalty\n        if (!minBitrateKbps) qoeInfo.weights.playbackSpeedPenalty = 200; // set some safe value, else consider throwing error\n        else qoeInfo.weights.playbackSpeedPenalty = minBitrateKbps;\n\n        return qoeInfo;\n    }\n\n    function logSegmentMetrics(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\n        if (voPerSegmentQoeInfo) {\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, voPerSegmentQoeInfo);\n        }\n    }\n\n    function _logMetricsInQoeInfo(bitrate, rebufferTime, latency, playbackSpeed, qoeInfo) {\n        // Update: bitrate Weighted Sum value\n        qoeInfo.bitrateWSum += (qoeInfo.weights.bitrateReward * bitrate);\n\n        // Update: bitrateSwitch Weighted Sum value\n        if (qoeInfo.lastBitrate) {\n            qoeInfo.bitrateSwitchWSum += (qoeInfo.weights.bitrateSwitchPenalty * Math.abs(bitrate - qoeInfo.lastBitrate));\n        }\n        qoeInfo.lastBitrate = bitrate;\n\n        // Update: rebuffer Weighted Sum value\n        qoeInfo.rebufferWSum += (qoeInfo.weights.rebufferPenalty * rebufferTime);\n\n        // Update: latency Weighted Sum value\n        for (let i = 0; i < qoeInfo.weights.latencyPenalty.length; i++) {\n            let latencyRange = qoeInfo.weights.latencyPenalty[i];\n            if (latency <= latencyRange.threshold) {\n                qoeInfo.latencyWSum += (latencyRange.penalty * latency);\n                break;\n            }\n        }\n\n        // Update: playbackSpeed Weighted Sum value\n        qoeInfo.playbackSpeedWSum += (qoeInfo.weights.playbackSpeedPenalty * Math.abs(1 - playbackSpeed));\n\n        // Update: Total Qoe value\n        qoeInfo.totalQoe = qoeInfo.bitrateWSum - qoeInfo.bitrateSwitchWSum - qoeInfo.rebufferWSum - qoeInfo.latencyWSum - qoeInfo.playbackSpeedWSum;\n    }\n\n    // Returns current Per Segment QoeInfo\n    function getPerSegmentQoe() {\n        return voPerSegmentQoeInfo;\n    }\n\n    // For one-time use only\n    // Returns totalQoe based on a single set of metrics.\n    function calculateSingleUseQoe(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\n        let singleUseQoeInfo = null;\n\n        if (segmentDuration && maxBitrateKbps && minBitrateKbps) {\n            singleUseQoeInfo = _createQoeInfo('segment', segmentDuration, maxBitrateKbps, minBitrateKbps);\n        }\n\n        if (singleUseQoeInfo) {\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, singleUseQoeInfo);\n            return singleUseQoeInfo.totalQoe;\n        } else {\n            // Something went wrong..\n            return 0;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        setupPerSegmentQoe,\n        logSegmentMetrics,\n        getPerSegmentQoe,\n        calculateSingleUseQoe,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLpQoeEvaluator.__dashjs_factory_name = 'LoLpQoeEvaluator';\nexport default FactoryMaker.getClassFactory(LoLpQoeEvaluator);\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport Debug from '../../../../core/Debug';\nimport FactoryMaker from '../../../../core/FactoryMaker';\nimport LearningAbrController from './LearningAbrController';\nimport LoLpQoeEvaluator from './LoLpQoEEvaluator';\nimport SwitchRequest from '../../SwitchRequest';\nimport MetricsConstants from '../../../constants/MetricsConstants';\nimport LoLpWeightSelector from './LoLpWeightSelector';\nimport Constants from '../../../constants/Constants';\n\nconst DWS_TARGET_LATENCY = 1.5;\nconst DWS_BUFFER_MIN = 0.3;\n\nfunction LoLPRule(config) {\n\n    config = config || {};\n\n    let dashMetrics = config.dashMetrics;\n    let context = this.context;\n\n    let logger,\n        instance,\n        learningController,\n        qoeEvaluator;\n\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        learningController = LearningAbrController(context).create();\n        qoeEvaluator = LoLpQoeEvaluator(context).create();\n    }\n\n    function getMaxIndex(rulesContext) {\n        try {\n            let switchRequest = SwitchRequest(context).create();\n            let mediaType = rulesContext.getMediaInfo().type;\n            let abrController = rulesContext.getAbrController();\n            const streamInfo = rulesContext.getStreamInfo();\n            let currentQuality = abrController.getQualityFor(mediaType, streamInfo.id);\n            const mediaInfo = rulesContext.getMediaInfo();\n            const bufferStateVO = dashMetrics.getCurrentBufferState(mediaType);\n            const scheduleController = rulesContext.getScheduleController();\n            const currentBufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n            const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\n            const playbackController = scheduleController.getPlaybackController();\n            let latency = playbackController.getCurrentLiveLatency();\n\n            if (!rulesContext.useLoLPABR() || (mediaType === Constants.AUDIO)) {\n                return switchRequest;\n            }\n\n            if (!latency) {\n                latency = 0;\n            }\n\n            const playbackRate = playbackController.getPlaybackRate();\n            const throughputHistory = abrController.getThroughputHistory();\n            const throughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n            logger.debug(`Throughput ${Math.round(throughput)} kbps`);\n\n            if (isNaN(throughput) || !bufferStateVO) {\n                return switchRequest;\n            }\n\n            if (abrController.getAbandonmentStateFor(streamInfo.id, mediaType) === MetricsConstants.ABANDON_LOAD) {\n                return switchRequest;\n            }\n\n            // QoE parameters\n            let bitrateList = mediaInfo.bitrateList; // [{bandwidth: 200000, width: 640, height: 360}, ...]\n            let segmentDuration = rulesContext.getRepresentationInfo().fragmentDuration;\n            let minBitrateKbps = bitrateList[0].bandwidth / 1000.0; // min bitrate level\n            let maxBitrateKbps = bitrateList[bitrateList.length - 1].bandwidth / 1000.0; // max bitrate level\n            for (let i = 0; i < bitrateList.length; i++) { // in case bitrateList is not sorted as expected\n                let b = bitrateList[i].bandwidth / 1000.0;\n                if (b > maxBitrateKbps)\n                    maxBitrateKbps = b;\n                else if (b < minBitrateKbps) {\n                    minBitrateKbps = b;\n                }\n            }\n\n            // Learning rule pre-calculations\n            let currentBitrate = bitrateList[currentQuality].bandwidth;\n            let currentBitrateKbps = currentBitrate / 1000.0;\n            let httpRequest = dashMetrics.getCurrentHttpRequest(mediaType, true);\n            let lastFragmentDownloadTime = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) / 1000;\n            let segmentRebufferTime = lastFragmentDownloadTime > segmentDuration ? lastFragmentDownloadTime - segmentDuration : 0;\n            qoeEvaluator.setupPerSegmentQoe(segmentDuration, maxBitrateKbps, minBitrateKbps);\n            qoeEvaluator.logSegmentMetrics(currentBitrateKbps, segmentRebufferTime, latency, playbackRate);\n\n            /*\n            * Dynamic Weights Selector (step 1/2: initialization)\n            */\n            let dynamicWeightsSelector = LoLpWeightSelector(context).create({\n                targetLatency: DWS_TARGET_LATENCY,\n                bufferMin: DWS_BUFFER_MIN,\n                segmentDuration,\n                qoeEvaluator\n            });\n\n            /*\n             * Select next quality\n             */\n            switchRequest.quality = learningController.getNextQuality(mediaInfo, throughput * 1000, latency, currentBufferLevel, playbackRate, currentQuality, dynamicWeightsSelector);\n            switchRequest.reason = { throughput: throughput, latency: latency };\n            switchRequest.priority = SwitchRequest.PRIORITY.STRONG;\n\n            scheduleController.setTimeToLoadDelay(0);\n\n            if (switchRequest.quality !== currentQuality) {\n                logger.debug('[TgcLearningRule][' + mediaType + '] requesting switch to index: ', switchRequest.quality, 'Average throughput', Math.round(throughput), 'kbps');\n            }\n\n            return switchRequest;\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Reset objects to their initial state\n     * @private\n     */\n    function _resetInitialSettings() {\n        learningController.reset();\n        qoeEvaluator.reset();\n    }\n\n    /**\n     * Reset the rule\n     */\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getMaxIndex,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLPRule.__dashjs_factory_name = 'LoLPRule';\nexport default FactoryMaker.getClassFactory(LoLPRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker';\n\nfunction LoLpWeightSelector(config) {\n    let targetLatency = config.targetLatency;\n    let bufferMin = config.bufferMin;\n    let segmentDuration = config.segmentDuration;\n    let qoeEvaluator = config.qoeEvaluator;\n    let instance,\n        valueList,\n        weightTypeCount,\n        weightOptions,\n        previousLatency;\n\n    /**\n     *\n     * @private\n     */\n    function _setup() {\n        _resetInitialSettings();\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _resetInitialSettings() {\n        valueList = [0.2, 0.4, 0.6, 0.8, 1];\n        weightTypeCount = 4;\n        weightOptions = _getPermutations(valueList, weightTypeCount);\n        previousLatency = 0;\n    }\n\n    /**\n     * Next, at each segment boundary, ABR to input current neurons and target state (only used in Method II) to find the desired weight vector\n     * @param {array} neurons\n     * @param {number} currentLatency\n     * @param {number} currentBuffer\n     * @param {number} currentRebuffer\n     * @param {number} currentThroughput\n     * @param {number} playbackRate\n     * @return {number|null}\n     * @private\n     */\n    function findWeightVector(neurons, currentLatency, currentBuffer, currentRebuffer, currentThroughput, playbackRate) {\n        let maxQoE = null;\n        let winnerWeights = null;\n        let winnerBitrate = null;\n        let deltaLatency = Math.abs(currentLatency - previousLatency);\n\n        // For each neuron, m\n        neurons.forEach((neuron) => {\n\n            // For each possible weight vector, z\n            // E.g. For [ throughput, latency, buffer, playbackRate, QoE ]\n            //      Possible weightVector = [ 0.2, 0.4, 0.2, 0, 0.2 ]\n            weightOptions.forEach((weightVector) => {\n\n                // Apply weightVector to neuron, compute utility and determine winnerWeights\n                // Method I: Utility based on QoE given current state\n\n                let weightsObj = {\n                    throughput: weightVector[0],\n                    latency: weightVector[1],\n                    buffer: weightVector[2],\n                    switch: weightVector[3]\n                };\n\n                let downloadTime = (neuron.bitrate * segmentDuration) / currentThroughput;\n                let nextBuffer = getNextBuffer(currentBuffer, downloadTime);\n                let rebuffer = Math.max(0.00001, (downloadTime - nextBuffer));\n                let wt;\n                if (weightsObj.buffer === 0) {\n                    wt = 10;\n                } else {\n                    wt = (1 / weightsObj.buffer);\n                }\n                let weightedRebuffer = wt * rebuffer;\n\n                if (weightsObj.latency === 0) {\n                    wt = 10;\n                } else {\n                    wt = (1 / weightsObj.latency); // inverse the weight because wt and latency should have positive relationship, i.e., higher latency = higher wt\n                }\n                let weightedLatency = wt * neuron.state.latency;\n\n                let totalQoE = qoeEvaluator.calculateSingleUseQoe(neuron.bitrate, weightedRebuffer, weightedLatency, playbackRate);\n                if ((maxQoE === null || totalQoE > maxQoE) && _checkConstraints(currentLatency, nextBuffer, deltaLatency)) {\n                    maxQoE = totalQoE;\n                    winnerWeights = weightVector;\n                    winnerBitrate = neuron.bitrate;\n                }\n            });\n        });\n\n        // winnerWeights was found, check if constraints are satisfied\n        if (winnerWeights === null && winnerBitrate === null) {\n            winnerWeights = -1;\n        }\n\n        previousLatency = currentLatency;\n        return winnerWeights;\n    }\n\n    /**\n     *\n     * @param {number} nextLatency\n     * @param {number} nextBuffer\n     * @param {number} deltaLatency\n     * @return {boolean}\n     * @private\n     */\n    function _checkConstraints(nextLatency, nextBuffer, deltaLatency) {\n        // A1\n        // disabled till we find a better way of estimating latency\n        // fails for all with current value\n        if (nextLatency > targetLatency + deltaLatency) {\n            return false;\n        }\n\n        return nextBuffer >= bufferMin;\n    }\n\n    /**\n     *\n     * @param {array} list\n     * @param {number} length\n     * @return {*}\n     * @private\n     */\n    function _getPermutations(list, length) {\n        // Copy initial values as arrays\n        let perm = list.map(function (val) {\n            return [val];\n        });\n        // Our permutation generator\n        let generate = function (perm, length, currLen) {\n            // Reached desired length\n            if (currLen === length) {\n                return perm;\n            }\n            // For each existing permutation\n            let len = perm.length;\n            for (let i = 0; i < len; i++) {\n                let currPerm = perm.shift();\n                // Create new permutation\n                for (let k = 0; k < list.length; k++) {\n                    perm.push(currPerm.concat(list[k]));\n                }\n            }\n            // Recurse\n            return generate(perm, length, currLen + 1);\n        };\n        // Start with size 1 because of initial values\n        return generate(perm, length, 1);\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    function getMinBuffer() {\n        return bufferMin;\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    function getSegmentDuration() {\n        return segmentDuration;\n    }\n\n    /**\n     *\n     * @param {number} bitrateToDownload\n     * @param {number} currentBuffer\n     * @param {number} currentThroughput\n     * @return {number}\n     */\n    function getNextBufferWithBitrate(bitrateToDownload, currentBuffer, currentThroughput) {\n        let downloadTime = (bitrateToDownload * segmentDuration) / currentThroughput;\n        return getNextBuffer(currentBuffer, downloadTime);\n    }\n\n    /**\n     *\n     * @param {number} currentBuffer\n     * @param {number} downloadTime\n     * @return {number}\n     */\n    function getNextBuffer(currentBuffer, downloadTime) {\n        const segmentDuration = getSegmentDuration();\n        let nextBuffer;\n        if (downloadTime > segmentDuration) {\n            nextBuffer = currentBuffer - segmentDuration;\n        } else {\n            nextBuffer = currentBuffer + segmentDuration - downloadTime;\n        }\n        return nextBuffer;\n    }\n\n    instance = {\n        getMinBuffer,\n        getSegmentDuration,\n        getNextBufferWithBitrate,\n        getNextBuffer,\n        findWeightVector\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLpWeightSelector.__dashjs_factory_name = 'LoLpWeightSelector';\nexport default FactoryMaker.getClassFactory(LoLpWeightSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass QoeInfo {\n\n    constructor() {\n        // Type e.g. 'segment'\n        this.type = null;\n\n        // Store lastBitrate for calculation of bitrateSwitchWSum\n        this.lastBitrate = null;\n\n        // Weights for each Qoe factor\n        this.weights = {};\n        this.weights.bitrateReward = null;\n        this.weights.bitrateSwitchPenalty = null;\n        this.weights.rebufferPenalty = null;\n        this.weights.latencyPenalty = null;\n        this.weights.playbackSpeedPenalty = null;\n\n        // Weighted Sum for each Qoe factor\n        this.bitrateWSum = 0;// kbps\n        this.bitrateSwitchWSum = 0;// kbps\n        this.rebufferWSum = 0;// seconds\n        this.latencyWSum = 0;// seconds\n        this.playbackSpeedWSum = 0;// e.g. 0.95, 1.0, 1.05\n\n        // Store total Qoe value based on current Weighted Sum values\n        this.totalQoe = 0;\n    }\n}\n\nexport default QoeInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport DashConstants from '../../dash/constants/DashConstants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ThumbnailTrackInfo from '../vo/ThumbnailTrackInfo';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport {replaceIDForTemplate, getTimeBasedSegment} from '../../dash/utils/SegmentsUtils';\nimport BoxParser from '../../streaming/utils/BoxParser';\nimport XHRLoader from '../../streaming/net/XHRLoader';\nimport DashHandler from '../../dash/DashHandler';\nimport SegmentsController from '../../dash/controllers/SegmentsController';\n\nexport const THUMBNAILS_SCHEME_ID_URIS = ['http://dashif.org/thumbnail_tile',\n    'http://dashif.org/guidelines/thumbnail_tile'];\n\nfunction ThumbnailTracks(config) {\n    const context = this.context;\n    const adapter = config.adapter;\n    const baseURLController = config.baseURLController;\n    const streamInfo = config.streamInfo;\n    const timelineConverter = config.timelineConverter;\n    const debug = config.debug;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashConstants = config.dashConstants;\n\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        tracks,\n        dashHandler,\n        currentTrackIndex,\n        mediaInfo,\n        segmentsController,\n        loader,\n        boxParser;\n\n    function setup() {\n        reset();\n        loader = XHRLoader(context).create({});\n        boxParser = BoxParser(context).getInstance();\n\n        segmentsController = SegmentsController(context).create({\n            events,\n            eventBus,\n            streamInfo,\n            timelineConverter,\n            dashConstants,\n            dashMetrics: config.dashMetrics,\n            segmentBaseController: config.segmentBaseController,\n            type: Constants.IMAGE\n        });\n\n        dashHandler = DashHandler(context).create({\n            streamInfo,\n            type: Constants.IMAGE,\n            timelineConverter,\n            segmentsController,\n            baseURLController,\n            debug,\n            eventBus,\n            events,\n            dashConstants,\n            urlUtils\n        });\n\n        // initialize controllers\n        dashHandler.initialize(adapter ? adapter.getIsDynamic() : false);\n    }\n\n    function addTracks() {\n        if (!streamInfo || !adapter) {\n            return;\n        }\n\n        // Extract thumbnail tracks\n        mediaInfo = adapter.getMediaInfoForType(streamInfo, Constants.IMAGE);\n        if (!mediaInfo) {\n            return;\n        }\n\n        const voReps = adapter.getVoRepresentations(mediaInfo);\n\n        if (voReps && voReps.length > 0) {\n            voReps.forEach((rep) => {\n                if ((rep.segmentInfoType === DashConstants.SEGMENT_TEMPLATE && rep.segmentDuration > 0 && rep.media) ||\n                    rep.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                    _createTrack(rep);\n                }\n                if (rep.segmentInfoType === DashConstants.SEGMENT_BASE) {\n                    _createTrack(rep, true);\n                }\n            });\n        }\n\n        if (tracks.length > 0) {\n            // Sort bitrates and select the lowest bitrate rendition\n            tracks.sort((a, b) => a.bitrate - b.bitrate);\n        }\n    }\n\n    function _createTrack(representation, useSegmentBase) {\n        const track = new ThumbnailTrackInfo();\n        track.id = representation.id;\n        track.bitrate = representation.bandwidth;\n        track.width = representation.width;\n        track.height = representation.height;\n        track.tilesHor = 1;\n        track.tilesVert = 1;\n\n        if (representation.essentialProperties) {\n            representation.essentialProperties.forEach((p) => {\n                if (THUMBNAILS_SCHEME_ID_URIS.indexOf(p.schemeIdUri) >= 0 && p.value) {\n                    const vars = p.value.split('x');\n                    if (vars.length === 2 && !isNaN(vars[0]) && !isNaN(vars[1])) {\n                        track.tilesHor = parseInt(vars[0], 10);\n                        track.tilesVert = parseInt(vars[1], 10);\n                    }\n                }\n            });\n        }\n\n        if (useSegmentBase) {\n            segmentsController.updateSegmentData(representation)\n                .then((data) => {\n                    _handleUpdatedSegmentData(track, representation, data);\n                });\n\n        } else {\n            track.startNumber = representation.startNumber;\n            track.segmentDuration = representation.segmentDuration;\n            track.timescale = representation.timescale;\n            track.templateUrl = buildTemplateUrl(representation);\n        }\n\n        if (track.tilesHor > 0 && track.tilesVert > 0) {\n            // Precalculate width and heigth per tile for perf reasons\n            track.widthPerTile = track.width / track.tilesHor;\n            track.heightPerTile = track.height / track.tilesVert;\n            tracks.push(track);\n        }\n    }\n\n    function _handleUpdatedSegmentData(track, representation, data) {\n        let cache = [];\n        const segments = _normalizeSegments(data, representation);\n        representation.segments = segments;\n        track.segmentDuration = representation.segments[0].duration; //assume all segments have the same duration\n\n        track.readThumbnail = function (time, callback) {\n\n            let cached = null;\n            cache.some(el => {\n                if (el.start <= time && el.end > time) {\n                    cached = el.url;\n                    return true;\n                }\n            });\n            if (cached) {\n                callback(cached);\n            } else {\n                representation.segments.some((ss) => {\n                    if (ss.mediaStartTime <= time && ss.mediaStartTime + ss.duration > time) {\n                        const baseURL = baseURLController.resolve(representation.path);\n                        loader.load({\n                            method: 'get',\n                            url: baseURL.url,\n                            request: {\n                                range: ss.mediaRange,\n                                responseType: 'arraybuffer'\n                            },\n                            onload: function (e) {\n                                let info = boxParser.getSamplesInfo(e.target.response);\n                                let blob = new Blob([e.target.response.slice(info.sampleList[0].offset, info.sampleList[0].offset + info.sampleList[0].size)], { type: 'image/jpeg' });\n                                let imageUrl = window.URL.createObjectURL(blob);\n                                cache.push({\n                                    start: ss.mediaStartTime,\n                                    end: ss.mediaStartTime + ss.duration,\n                                    url: imageUrl\n                                });\n                                if (callback)\n                                    callback(imageUrl);\n                            }\n                        });\n                        return true;\n                    }\n                });\n            }\n        };\n    }\n\n    function _normalizeSegments(data, representation) {\n        const segments = [];\n        let count = 0;\n\n        let i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = data.segments.length; i < len; i++) {\n            s = data.segments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                adapter.getIsDynamic(),\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            if (seg) {\n                segments.push(seg);\n                seg = null;\n                count++;\n            }\n        }\n        return segments;\n    }\n\n    function buildTemplateUrl(representation) {\n        const templateUrl = urlUtils.isRelative(representation.media) ?\n            urlUtils.resolve(representation.media, baseURLController.resolve(representation.path).url) : representation.media;\n\n        if (!templateUrl) {\n            return '';\n        }\n\n        return replaceIDForTemplate(templateUrl, representation.id);\n    }\n\n    function getTracks() {\n        return tracks;\n    }\n\n    function getCurrentTrackIndex() {\n        return currentTrackIndex;\n    }\n\n    function getCurrentTrack() {\n        if (currentTrackIndex < 0) {\n            return null;\n        }\n        return tracks[currentTrackIndex];\n    }\n\n    function setTrackByIndex(index) {\n        if (!tracks || tracks.length === 0) {\n            return;\n        }\n        // select highest bitrate in case selected index is higher than bitrate list length\n        if (index >= tracks.length) {\n            index = tracks.length - 1;\n        }\n        currentTrackIndex = index;\n    }\n\n    function getThumbnailRequestForTime(time) {\n        let currentVoRep;\n        const voReps = adapter.getVoRepresentations(mediaInfo);\n        for (let i = 0; i < voReps.length; i++) {\n            if (tracks[currentTrackIndex].id === voReps[i].id) {\n                currentVoRep = voReps[i];\n                break;\n            }\n        }\n\n        return dashHandler.getSegmentRequestForTime(mediaInfo, currentVoRep, time);\n    }\n\n    function reset() {\n        tracks = [];\n        currentTrackIndex = -1;\n        mediaInfo = null;\n    }\n\n    instance = {\n        getTracks,\n        addTracks,\n        reset,\n        setTrackByIndex,\n        getCurrentTrack,\n        getCurrentTrackIndex,\n        getThumbnailRequestForTime\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailTracks.__dashjs_factory_name = 'ThumbnailTracks';\nexport default FactoryMaker.getClassFactory(ThumbnailTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Debug from '../../core/Debug';\nimport IsoFile from './IsoFile';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\n\nimport IsoBoxSearchInfo from '../vo/IsoBoxSearchInfo';\n\nfunction BoxParser(/*config*/) {\n\n    let logger,\n        instance;\n    let context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @returns {IsoFile|null}\n     * @memberof BoxParser#\n     */\n    function parse(data) {\n        if (!data) return null;\n\n        if (data.fileStart === undefined) {\n            data.fileStart = 0;\n        }\n\n        let parsedFile = ISOBoxer.parseBuffer(data);\n        let dashIsoFile = IsoFile(context).create();\n\n        dashIsoFile.setData(parsedFile);\n\n        return dashIsoFile;\n    }\n\n    /**\n     * From the list of type boxes to look for, returns the latest one that is fully completed (header + payload). This\n     * method only looks into the list of top boxes and doesn't analyze nested boxes.\n     * @param {string[]} types\n     * @param {ArrayBuffer|uint8Array} buffer\n     * @param {number} offset\n     * @returns {IsoBoxSearchInfo}\n     * @memberof BoxParser#\n     */\n    function findLastTopIsoBoxCompleted(types, buffer, offset) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n\n        // 8 = size (uint32) + type (4 characters)\n        if (!buffer || offset + 8 >= buffer.byteLength) {\n            return new IsoBoxSearchInfo(0, false);\n        }\n\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\n        let boxInfo;\n        let lastCompletedOffset = 0;\n        while (offset < data.byteLength) {\n            const boxSize = parseUint32(data, offset);\n            const boxType = parseIsoBoxType(data, offset + 4);\n\n            if (boxSize === 0) {\n                break;\n            }\n\n            if (offset + boxSize <= data.byteLength) {\n                if (types.indexOf(boxType) >= 0) {\n                    boxInfo = new IsoBoxSearchInfo(offset, true, boxSize);\n                } else {\n                    lastCompletedOffset = offset + boxSize;\n                }\n            }\n\n            offset += boxSize;\n        }\n\n        if (!boxInfo) {\n            return new IsoBoxSearchInfo(lastCompletedOffset, false);\n        }\n\n        return boxInfo;\n    }\n\n    function getSamplesInfo(ab) {\n        if (!ab || ab.byteLength === 0) {\n            return {sampleList: [], lastSequenceNumber: NaN, totalDuration: NaN, numSequences: NaN};\n        }\n        let isoFile = parse(ab);\n        // zero or more moofs\n        let moofBoxes = isoFile.getBoxes('moof');\n        // exactly one mfhd per moof\n        let mfhdBoxes = isoFile.getBoxes('mfhd');\n\n        let sampleDuration,\n            sampleCompositionTimeOffset,\n            sampleCount,\n            sampleSize,\n            sampleDts,\n            sampleList,\n            sample,\n            i, j, k, l, m, n,\n            dataOffset,\n            lastSequenceNumber,\n            numSequences,\n            totalDuration;\n\n        numSequences = isoFile.getBoxes('moof').length;\n        lastSequenceNumber = mfhdBoxes[mfhdBoxes.length - 1].sequence_number;\n        sampleCount = 0;\n\n        sampleList = [];\n        let subsIndex = -1;\n        let nextSubsSample = -1;\n        for (l = 0; l < moofBoxes.length; l++) {\n            let moofBox = moofBoxes[l];\n            // zero or more trafs per moof\n            let trafBoxes = moofBox.getChildBoxes('traf');\n            for (j = 0; j < trafBoxes.length; j++) {\n                let trafBox = trafBoxes[j];\n                // exactly one tfhd per traf\n                let tfhdBox = trafBox.getChildBox('tfhd');\n                // zero or one tfdt per traf\n                let tfdtBox = trafBox.getChildBox('tfdt');\n                sampleDts = tfdtBox.baseMediaDecodeTime;\n                // zero or more truns per traf\n                let trunBoxes = trafBox.getChildBoxes('trun');\n                // zero or more subs per traf\n                let subsBoxes = trafBox.getChildBoxes('subs');\n                for (k = 0; k < trunBoxes.length; k++) {\n                    let trunBox = trunBoxes[k];\n                    sampleCount = trunBox.sample_count;\n                    dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\n\n                    for (i = 0; i < sampleCount; i++) {\n                        sample = trunBox.samples[i];\n                        sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\n                        sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\n                        sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\n                        let sampleData = {\n                            'dts': sampleDts,\n                            'cts': (sampleDts + sampleCompositionTimeOffset),\n                            'duration': sampleDuration,\n                            'offset': moofBox.offset + dataOffset,\n                            'size': sampleSize,\n                            'subSizes': [sampleSize]\n                        };\n                        if (subsBoxes) {\n                            for (m = 0; m < subsBoxes.length; m++) {\n                                let subsBox = subsBoxes[m];\n                                if (subsIndex < (subsBox.entry_count - 1) && i > nextSubsSample) {\n                                    subsIndex++;\n                                    nextSubsSample += subsBox.entries[subsIndex].sample_delta;\n                                }\n                                if (i == nextSubsSample) {\n                                    sampleData.subSizes = [];\n                                    let entry = subsBox.entries[subsIndex];\n                                    for (n = 0; n < entry.subsample_count; n++) {\n                                        sampleData.subSizes.push(entry.subsamples[n].subsample_size);\n                                    }\n                                }\n                            }\n                        }\n                        sampleList.push(sampleData);\n                        dataOffset += sampleSize;\n                        sampleDts += sampleDuration;\n                    }\n                }\n                totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\n            }\n        }\n        return {sampleList: sampleList, lastSequenceNumber: lastSequenceNumber, totalDuration: totalDuration, numSequences: numSequences};\n    }\n\n    function getMediaTimescaleFromMoov(ab) {\n        let isoFile = parse(ab);\n        let mdhdBox = isoFile ? isoFile.getBox('mdhd') : undefined;\n\n        return mdhdBox ? mdhdBox.timescale : NaN;\n    }\n\n    function parseUint32(data, offset) {\n        return data[offset + 3] >>> 0 |\n            (data[offset + 2] << 8) >>> 0 |\n            (data[offset + 1] << 16) >>> 0 |\n            (data[offset] << 24) >>> 0;\n    }\n\n    function parseIsoBoxType(data, offset) {\n        return String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset]);\n    }\n\n    function findInitRange(data) {\n        let initRange = null;\n        let start,\n            end;\n\n        const isoFile = parse(data);\n\n        if (!isoFile) {\n            return initRange;\n        }\n\n        const ftyp = isoFile.getBox('ftyp');\n        const moov = isoFile.getBox('moov');\n\n        logger.debug('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            logger.debug('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    /**\n     * Real-time parsing (whenever data is loaded in the buffer payload) of the payload to capture the moof of a chunk\n     * @param {array} types\n     * @param {ArrayBuffer} buffer\n     * @param {number} offset\n     * @return {IsoBoxSearchInfo}\n     */\n    function parsePayload(types, buffer, offset) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n\n        if (!buffer || offset + 8 >= buffer.byteLength) {\n            return new IsoBoxSearchInfo(0, false);\n        }\n\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\n        let boxInfo;\n        let lastCompletedOffset = 0;\n        while (offset < data.byteLength) {\n            const boxSize = parseUint32(data, offset);\n            const boxType = parseIsoBoxType(data, offset + 4);\n\n            if (boxSize === 0) {\n                break;\n            }\n\n            if (offset + boxSize <= data.byteLength) {\n                if (types.indexOf(boxType) >= 0) {\n                    boxInfo = new IsoBoxSearchInfo(offset, true, boxSize, boxType);\n                } else {\n                    lastCompletedOffset = offset + boxSize;\n                }\n            }\n\n            offset += boxSize;\n        }\n\n        if (!boxInfo) {\n            return new IsoBoxSearchInfo(lastCompletedOffset, false);\n        }\n\n        return boxInfo;\n    }\n\n    instance = {\n        parse,\n        findLastTopIsoBoxCompleted,\n        getMediaTimescaleFromMoov,\n        getSamplesInfo,\n        findInitRange,\n        parsePayload\n    };\n\n    setup();\n\n    return instance;\n}\nBoxParser.__dashjs_factory_name = 'BoxParser';\nexport default FactoryMaker.getSingletonFactory(BoxParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../thumbnail/ThumbnailTracks';\nimport Constants from '../constants/Constants';\n\nconst codecCompatibilityTable = [\n    {\n        'codec': 'avc1',\n        'compatibleCodecs': ['avc3']\n    },\n    {\n        'codec': 'avc3',\n        'compatibleCodecs': ['avc1']\n    }\n];\n\nexport function supportsMediaSource() {\n    let hasWebKit = ('WebKitMediaSource' in window);\n    let hasMediaSource = ('MediaSource' in window);\n\n    return (hasWebKit || hasMediaSource);\n}\n\nfunction Capabilities() {\n\n    let instance,\n        settings,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    /**\n     * Check if a codec is supported by the MediaSource. We use the MediaCapabilities API or the MSE to check.\n     * @param {object} config\n     * @param {string} type\n     * @return {Promise<boolean>}\n     */\n    function supportsCodec(config, type) {\n\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) {\n            return Promise.resolve(true);\n        }\n\n        if (_canUseMediaCapabilitiesApi(config, type)) {\n            return _checkCodecWithMediaCapabilities(config, type);\n        }\n\n        return _checkCodecWithMse(config);\n    }\n\n    /**\n     * MediaCapabilitiesAPI throws an error if one of the attribute is missing. We only use it if we have all required information.\n     * @param {object} config\n     * @param {string} type\n     * @return {*|boolean|boolean}\n     * @private\n     */\n    function _canUseMediaCapabilitiesApi(config, type) {\n\n        return settings.get().streaming.capabilities.useMediaCapabilitiesApi && navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo && ((config.codec && type === Constants.AUDIO) || (type === Constants.VIDEO && config.codec && config.width && config.height && config.bitrate && config.framerate));\n    }\n\n    /**\n     * Check codec support using the MSE\n     * @param {object} config\n     * @return {Promise<void> | Promise<boolean>}\n     * @private\n     */\n    function _checkCodecWithMse(config) {\n        return new Promise((resolve) => {\n            if (!config || !config.codec) {\n                resolve(false);\n                return;\n            }\n\n            let codec = config.codec;\n            if (config.width && config.height) {\n                codec += ';width=\"' + config.width + '\";height=\"' + config.height + '\"';\n            }\n\n            if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n                resolve(true);\n                return;\n            } else if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n                resolve(true);\n                return;\n            }\n\n            resolve(false);\n        });\n\n    }\n\n    /**\n     * Check codec support using the MediaCapabilities API\n     * @param {object} config\n     * @param {string} type\n     * @return {Promise<boolean>}\n     * @private\n     */\n    function _checkCodecWithMediaCapabilities(config, type) {\n        return new Promise((resolve) => {\n\n            if (!config || !config.codec) {\n                resolve(false);\n                return;\n            }\n\n            const configuration = {\n                type: 'media-source'\n            };\n\n            configuration[type] = {};\n            configuration[type].contentType = config.codec;\n            configuration[type].width = config.width;\n            configuration[type].height = config.height;\n            configuration[type].bitrate = parseInt(config.bitrate);\n            configuration[type].framerate = parseFloat(config.framerate);\n\n            navigator.mediaCapabilities.decodingInfo(configuration)\n                .then((result) => {\n                    resolve(result.supported);\n                })\n                .catch(() => {\n                    resolve(false);\n                });\n        });\n    }\n\n    /**\n     * Check if a specific EssentialProperty is supported\n     * @param {object} ep\n     * @return {boolean}\n     */\n    function supportsEssentialProperty(ep) {\n        try {\n            return THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n     * @param {string} codec1\n     * @param {string} codec2\n     * @return {boolean}\n     */\n    function codecRootCompatibleWithCodec(codec1, codec2) {\n        const codecRoot = codec1.split('.')[0];\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\n        let compatTableCodec;\n        for (let i = 0; i < codecCompatibilityTable.length; i++) {\n            if (codecCompatibilityTable[i].codec === codecRoot) {\n                compatTableCodec = codecCompatibilityTable[i];\n                break;\n            }\n        }\n        if (compatTableCodec) {\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\n        }\n        return rootCompatible;\n    }\n\n    instance = {\n        setConfig,\n        supportsMediaSource,\n        supportsEncryptedMedia,\n        supportsCodec,\n        setEncryptedMediaSupported,\n        supportsEssentialProperty,\n        codecRootCompatibleWithCodec\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {checkInteger} from '../utils/SupervisorTools';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        let i;\n\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++) ;\n\n        this.customTimeRangeArray.splice(i, 0, { start: start, end: end });\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i, i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (let i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i, 1);\n                i--;\n\n            } else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, { start: end, end: this.customTimeRangeArray[i].end });\n                this.customTimeRangeArray[i].end = start;\n                break;\n            } else if (start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            } else if (end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        let range1 = this.customTimeRangeArray[rangeIndex1];\n        let range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <= range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1, 1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n        }\n        return false;\n    }\n\n    function start(index) {\n        checkInteger(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        checkInteger(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\n\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module DefaultURLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n * @ignore\n */\nfunction DefaultURLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-_.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const httpsUrlRegex = /^https:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-_.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        let baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        if (isSchemeRelative(url)) {\n            baseUrlParseFunc = parseScheme;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n            base.charAt(base.length - 1) !== '/' &&\n            url.charAt(0) !== '/' ?\n                '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); // eslint-disable-line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the fragment of a URL without scheme,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function removeHostname(url) {\n        let urlParts = /^(?:\\w+\\:\\/\\/)?([^\\/]+)(.*)$/.exec(url); //[1] = host / [2] = path\n        return urlParts[2].substring(1);\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        const matches = url.match(schemeRegex);\n\n        if (matches) {\n            return matches[0];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {boolean}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return url.indexOf('//') === 0;\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return httpsUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl: parseBaseUrl,\n        parseOrigin: parseOrigin,\n        parseScheme: parseScheme,\n        isRelative: isRelative,\n        isPathAbsolute: isPathAbsolute,\n        isSchemeRelative: isSchemeRelative,\n        isHTTPURL: isHTTPURL,\n        isHTTPS: isHTTPS,\n        removeHostname: removeHostname,\n        resolve: resolve\n    };\n\n    return instance;\n}\n\nDefaultURLUtils.__dashjs_factory_name = 'DefaultURLUtils';\nexport default FactoryMaker.getSingletonFactory(DefaultURLUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile;\n\n    /**\n    * @param {string} type\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n    * @param {string} type\n    * @returns {Array|null} array of {@link IsoBox}\n    * @memberof IsoFile#\n    */\n    function getBoxes(type) {\n        let boxes = [];\n\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\n            return boxes;\n        }\n\n        let boxData = parsedIsoFile.fetchAll(type);\n        let box;\n\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n    * @param {string} value\n    * @memberof IsoFile#\n    */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\n\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        let boxes = getBoxes(type);\n\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) return null;\n\n        let box = new IsoBox(boxData);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox\n    };\n\n    return instance;\n}\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nexport function modifyRequest(httpRequest, requestModifier) {\n    const request = {\n        url: httpRequest.url,\n        method: httpRequest.method,\n        headers: Object.assign({}, httpRequest.headers),\n        credentials: httpRequest.withCredentials ? 'include' : undefined,\n    };\n\n    return Promise.resolve(requestModifier.modifyRequest(request))\n        .then(() =>\n            Object.assign(httpRequest, request, { withCredentials: request.credentials === 'include' })\n        );\n}\n\nfunction RequestModifier() {\n\n    let instance;\n\n    function modifyRequestURL(url) {\n        return url;\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    function modifyRequestHeader(request, { url }) {\n        return request;\n    }\n\n    instance = {\n        modifyRequest: null,\n        modifyRequestURL: modifyRequestURL,\n        modifyRequestHeader: modifyRequestHeader\n    };\n\n    return instance;\n}\n\nRequestModifier.__dashjs_factory_name = 'RequestModifier';\nexport default FactoryMaker.getSingletonFactory(RequestModifier);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\n\nexport function checkParameterType(parameter, type) {\n    if (typeof parameter !== type) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}\n\nexport function checkInteger(parameter) {\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\n\n    if (!isInt) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\n    }\n}\n\nexport function checkRange(parameter, min, max) {\n    if (parameter < min || parameter > max) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\n    }\n}\n\nexport function checkIsVideoOrAudioType(type) {\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport DefaultURLUtils from './DefaultURLUtils';\n\n/**\n * @module URLUtils\n * @ignore\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let instance;\n    let defaultURLUtils;\n    let regexUtils = [];\n    const context = this.context;\n\n    function getUtils(url) {\n        let i;\n        for (i = 0; i < regexUtils.length; i++) {\n            let regex = regexUtils[i].regex;\n            if (regex.test(url)) {\n                return regexUtils[i].utils;\n            }\n        }\n        return defaultURLUtils;\n    }\n\n    function setup() {\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\n    }\n\n    /**\n     * Register a module to handle specific url.\n     * @param {regex} regex - url regex\n     * @param {object} utils - object that handles the regex\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function registerUrlRegex(regex, utils) {\n        regexUtils.push({regex: regex, utils: utils});\n    }\n\n    function internalCall(functionName, url, baseUrl) {\n        let utils = getUtils(baseUrl || url);\n        return utils && typeof (utils[functionName]) === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        return internalCall('parseBaseUrl', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        return internalCall('parseOrigin', url);\n    }\n\n    /**\n     * Returns a string that contains the fragment of a URL without scheme,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function removeHostname(url) {\n        return internalCall('removeHostname', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        return internalCall('parseScheme', url);\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {boolean}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return internalCall('isRelative', url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return internalCall('isPathAbsolute', url);\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return internalCall('isSchemeRelative', url);\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return internalCall('isHTTPURL', url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return internalCall('isHTTPS', url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return internalCall('resolve', url, baseUrl);\n    }\n\n    setup();\n    instance = {\n        registerUrlRegex:   registerUrlRegex,\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        removeHostname:     removeHostname,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nconst factory = FactoryMaker.getSingletonFactory(URLUtils);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor(boxData) {\n        this.offset = boxData._offset;\n        this.type = boxData.type;\n        this.size = boxData.size;\n        this.boxes = [];\n        if (boxData.boxes) {\n            for (let i = 0; i < boxData.boxes.length; i++) {\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\n            }\n        }\n        this.isComplete = true;\n\n        switch (boxData.type) {\n            case 'sidx':\n                this.timescale = boxData.timescale;\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\n                this.first_offset = boxData.first_offset;\n                this.references = boxData.references;\n                if (boxData.references) {\n                    this.references = [];\n                    for (let i = 0; i < boxData.references.length; i++) {\n                        let reference = {\n                            reference_type: boxData.references[i].reference_type,\n                            referenced_size: boxData.references[i].referenced_size,\n                            subsegment_duration: boxData.references[i].subsegment_duration\n                        };\n                        this.references.push(reference);\n                    }\n                }\n                break;\n            case 'emsg':\n                this.id = boxData.id;\n                this.version = boxData.version === 1 ? 1 : 0;\n                this.value = boxData.value;\n                this.timescale = boxData.timescale;\n                this.scheme_id_uri = boxData.scheme_id_uri;\n                this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\n                this.event_duration = boxData.event_duration;\n                this.message_data = boxData.message_data;\n                break;\n            case 'mdhd':\n                this.timescale = boxData.timescale;\n                break;\n            case 'mfhd':\n                this.sequence_number = boxData.sequence_number;\n                break;\n            case 'subs':\n                this.entry_count = boxData.entry_count;\n                this.entries = boxData.entries;\n                break;\n            case 'tfhd':\n                this.base_data_offset = boxData.base_data_offset;\n                this.sample_description_index = boxData.sample_description_index;\n                this.default_sample_duration = boxData.default_sample_duration;\n                this.default_sample_size = boxData.default_sample_size;\n                this.default_sample_flags = boxData.default_sample_flags;\n                this.flags = boxData.flags;\n                break;\n            case 'tfdt':\n                this.version = boxData.version;\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n                this.flags = boxData.flags;\n                break;\n            case 'trun':\n                this.sample_count = boxData.sample_count;\n                this.first_sample_flags = boxData.first_sample_flags;\n                this.data_offset = boxData.data_offset;\n                this.flags = boxData.flags;\n                this.samples = boxData.samples;\n                if (boxData.samples) {\n                    this.samples = [];\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\n                        let sample = {\n                            sample_size: boxData.samples[i].sample_size,\n                            sample_duration: boxData.samples[i].sample_duration,\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\n                        };\n                        this.samples.push(sample);\n                    }\n                }\n                break;\n            case 'prft':\n                this.version = boxData.version;\n                this.reference_track_ID = boxData.reference_track_ID;\n                this.ntp_timestamp_sec = boxData.ntp_timestamp_sec;\n                this.ntp_timestamp_frac = boxData.ntp_timestamp_frac;\n                this.media_time = boxData.media_time;\n                this.flags = boxData.flags;\n                break;\n        }\n    }\n\n    getChildBox(type) {\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                return this.boxes[i];\n            }\n        }\n    }\n\n    getChildBoxes(type) {\n        let boxes = [];\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                boxes.push(this.boxes[i]);\n            }\n        }\n        return boxes;\n    }\n\n}\n\nexport default IsoBox;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBoxSearchInfo {\n    constructor(lastCompletedOffset, found, size) {\n        this.lastCompletedOffset = lastCompletedOffset;\n        this.found = found;\n        this.size = size;\n    }\n}\n\nexport default IsoBoxSearchInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ThumbnailTrackInfo {\n    constructor() {\n        this.bitrate = 0;\n        this.width = 0;\n        this.height = 0;\n        this.tilesHor = 0;\n        this.tilesVert = 0;\n        this.widthPerTile = 0;\n        this.heightPerTile = 0;\n        this.startNumber = 0;\n        this.segmentDuration = 0;\n        this.timescale = 0;\n        this.templateUrl = '';\n        this.id = '';\n    }\n}\n\nexport default ThumbnailTrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n        /**\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\n         * @public\n         */\n        this.cmsd = null;\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","'use strict'\n\n// See https://tools.ietf.org/html/rfc4647#section-3.1\n// for more information on the algorithms.\n\nexports.basicFilter = factory(basic, true)\nexports.extendedFilter = factory(extended, true)\nexports.lookup = factory(lookup)\n\n// Basic Filtering (Section 3.3.1) matches a language priority list consisting\n// of basic language ranges (Section 2.1) to sets of language tags.\nfunction basic(tag, range) {\n  return range === '*' || tag === range || tag.indexOf(range + '-') > -1\n}\n\n// Extended Filtering (Section 3.3.2) matches a language priority list\n// consisting of extended language ranges (Section 2.2) to sets of language\n// tags.\nfunction extended(tag, range) {\n  // 3.3.2.1\n  var left = tag.split('-')\n  var right = range.split('-')\n  var leftIndex = 0\n  var rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}\n\n// Lookup (Section 3.4) matches a language priority list consisting of basic\n// language ranges to sets of language tags to find the one exact language tag\n// that best matches the range.\nfunction lookup(tag, range) {\n  var right = range\n  var index\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}\n\n// Factory to perform a filter or a lookup.\n// This factory creates a function that accepts a list of tags and a list of\n// ranges, and contains logic to exit early for lookups.\n// `check` just has to deal with one tag and one range.\n// This match function iterates over ranges, and for each range,\n// iterates over tags.  That way, earlier ranges matching any tag have\n// precedence over later ranges.\nfunction factory(check, filter) {\n  return match\n\n  function match(tags, ranges) {\n    var left = cast(tags, 'tag')\n    var right = cast(ranges == null ? '*' : ranges, 'range')\n    var matches = []\n    var rightIndex = -1\n    var range\n    var leftIndex\n    var next\n\n    while (++rightIndex < right.length) {\n      range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      leftIndex = -1\n      next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) return left[leftIndex]\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return filter ? matches : undefined\n  }\n}\n\n// Validate tags or ranges, and cast them to arrays.\nfunction cast(values, name) {\n  var value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar bcp47 = require('bcp-47')\nvar match = require('bcp-47-match')\nvar matches = require('./matches.json')\nvar fields = require('./fields.json')\nvar defaults = require('./defaults.json')\nvar many = require('./many.json')\n\nmodule.exports = normalize\n\nvar own = {}.hasOwnProperty\n\nvar collator = new Intl.Collator()\n\nvar emptyExtraFields = {\n  variants: [],\n  extensions: [],\n  privateuse: [],\n  irregular: null,\n  regular: null\n}\n\nfunction normalize(value, options) {\n  var settings = options || {}\n  // 1. normalize and lowercase the tag (`sgn-be-fr` -> `sfb`).\n  var schema = bcp47.parse(String(value || '').toLowerCase(), settings)\n  var tag = bcp47.stringify(schema)\n  var index = -1\n  var key\n\n  if (!tag) {\n    return tag\n  }\n\n  // 2. Do fancy, expensive replaces (`ha-latn-gh` -> `ha-gh`).\n  while (++index < matches.length) {\n    if (match.extendedFilter(tag, matches[index].from).length) {\n      replace(schema, matches[index].from, matches[index].to)\n      tag = bcp47.stringify(schema)\n    }\n  }\n\n  // 3. Do basic field replaces (`en-840` -> `en-us`).\n  index = -1\n\n  while (++index < fields.length) {\n    if (remove(schema, fields[index].from.field, fields[index].from.value)) {\n      add(schema, fields[index].to.field, fields[index].to.value)\n    }\n  }\n\n  // 4. Remove defaults (`nl-nl` -> `nl`).\n  tag = bcp47.stringify(Object.assign({}, schema, emptyExtraFields))\n  index = -1\n\n  while (++index < defaults.length) {\n    if (tag === defaults[index]) {\n      replace(\n        schema,\n        defaults[index],\n        defaults[index].split('-').slice(0, -1).join('-')\n      )\n      tag = bcp47.stringify(Object.assign({}, schema, emptyExtraFields))\n    }\n  }\n\n  // 5. Sort extensions on singleton.\n  schema.extensions.sort(compareSingleton)\n\n  // 6. Warn if fields (currently only regions) should be updated but have\n  // multiple choices.\n  if (settings.warning) {\n    for (key in many) {\n      if (own.call(many[key], schema[key])) {\n        settings.warning(\n          'Deprecated ' +\n            key +\n            ' `' +\n            schema[key] +\n            '`, expected one of `' +\n            many[key][schema[key]].join('`, `') +\n            '`',\n          null,\n          7\n        )\n      }\n    }\n  }\n\n  // 7. Add proper casing back.\n  // Format script (ISO 15924) as titlecase (example: `Latn`):\n  if (schema.script) {\n    schema.script =\n      schema.script.charAt(0).toUpperCase() + schema.script.slice(1)\n  }\n\n  // Format region (ISO 3166) as uppercase (note: this doesn’t affect numeric\n  // codes, which is fine):\n  if (schema.region) {\n    schema.region = schema.region.toUpperCase()\n  }\n\n  return bcp47.stringify(schema)\n}\n\nfunction replace(schema, from, to) {\n  var left = bcp47.parse(from)\n  var right = bcp47.parse(to)\n  var removed = []\n  var key\n\n  // Remove values from `from`:\n  for (key in left) {\n    if (left[key] && left[key].length && remove(schema, key, left[key])) {\n      removed.push(key)\n    }\n  }\n\n  // Add values from `to`:\n  for (key in right) {\n    // Only add values that are defined on `to`, and that were either removed by\n    // `from` or are currently empty.\n    if (\n      right[key] &&\n      right[key].length &&\n      (removed.indexOf(key) > -1 || !schema[key] || !schema[key].length)\n    ) {\n      add(schema, key, right[key])\n    }\n  }\n}\n\nfunction remove(object, key, value) {\n  var removed = false\n  var current\n  var result\n  var index\n  var item\n\n  /* istanbul ignore else - this is currently done by wrapping code, so else is\n   * never reached.\n   * However, that could change in the future, so leave this guard here. */\n  if (value) {\n    current = object[key]\n    result = current\n\n    if (current && typeof current === 'object') {\n      result = []\n      index = -1\n\n      while (++index < current.length) {\n        item = current[index]\n\n        if (value.indexOf(item) < 0) {\n          result.push(item)\n        } else {\n          removed = true\n        }\n      }\n    } else if (current === value) {\n      result = null\n      removed = true\n    }\n\n    object[key] = result\n  }\n\n  return removed\n}\n\nfunction add(object, key, value) {\n  var current = object[key]\n  var list\n  var index\n  var item\n\n  if (current && typeof current === 'object') {\n    list = [].concat(value)\n    index = -1\n\n    while (++index < list.length) {\n      item = list[index]\n\n      /* istanbul ignore else - this currently can’t happen, but guard for the\n       * future. */\n      if (current.indexOf(item) < 0) {\n        current.push(item)\n      }\n    }\n  } else {\n    object[key] = value\n  }\n}\n\nfunction compareSingleton(left, right) {\n  return collator.compare(left.singleton, right.singleton)\n}\n","'use strict'\n\nexports.parse = require('./lib/parse')\nexports.stringify = require('./lib/stringify')\n","'use strict'\n\nvar alphanumeric = require('is-alphanumerical')\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\nvar regular = require('./regular.json')\nvar normal = require('./normalize.json')\n\nmodule.exports = parse\n\nvar own = {}.hasOwnProperty\n\n// Parse a BCP 47 language tag.\n/* eslint-disable-next-line complexity */\nfunction parse(tag, options) {\n  var settings = options || {}\n  var result = empty()\n  var source = String(tag)\n  var value = source.toLowerCase()\n  var index = 0\n  var start\n  var groups\n  var offset\n\n  // Check input.\n  if (tag == null) {\n    throw new Error('Expected string, got `' + tag + '`')\n  }\n\n  // Let’s start.\n  // First: the edge cases.\n  if (own.call(normal, value)) {\n    if ((settings.normalize == null || settings.normalize) && normal[value]) {\n      return parse(normal[value])\n    }\n\n    result[regular.indexOf(value) === -1 ? 'irregular' : 'regular'] = source\n\n    return result\n  }\n\n  // Now, to actually parse, eat what could be a language.\n  while (alphabetical(value.charCodeAt(index)) && index < 9) index++\n\n  // A language.\n  if (index > 1 /* Min 639. */ && index < 9 /* Max subtag. */) {\n    // 5 and up is a subtag.\n    // 4 is the size of reserved languages.\n    // 3 an ISO 639-2 or ISO 639-3.\n    // 2 is an ISO 639-1.\n    // <https://github.com/wooorm/iso-639-2>\n    // <https://github.com/wooorm/iso-639-3>\n    result.language = source.slice(0, index)\n\n    if (index < 4 /* Max 639. */) {\n      groups = 0\n\n      while (\n        value.charCodeAt(index) === 45 /* `-` */ &&\n        alphabetical(value.charCodeAt(index + 1)) &&\n        alphabetical(value.charCodeAt(index + 2)) &&\n        alphabetical(value.charCodeAt(index + 3)) &&\n        !alphabetical(value.charCodeAt(index + 4))\n      ) {\n        if (groups > 2 /* Max extended language subtag count. */) {\n          return fail(\n            index,\n            3,\n            'Too many extended language subtags, expected at most 3 subtags'\n          )\n        }\n\n        // Extended language subtag.\n        result.extendedLanguageSubtags.push(source.slice(index + 1, index + 4))\n        index += 4\n        groups++\n      }\n    }\n\n    // ISO 15924 script.\n    // <https://github.com/wooorm/iso-15924>\n    if (\n      value.charCodeAt(index) === 45 /* `-` */ &&\n      alphabetical(value.charCodeAt(index + 1)) &&\n      alphabetical(value.charCodeAt(index + 2)) &&\n      alphabetical(value.charCodeAt(index + 3)) &&\n      alphabetical(value.charCodeAt(index + 4)) &&\n      !alphabetical(value.charCodeAt(index + 5))\n    ) {\n      result.script = source.slice(index + 1, index + 5)\n      index += 5\n    }\n\n    if (value.charCodeAt(index) === 45 /* `-` */) {\n      // ISO 3166-1 region.\n      // <https://github.com/wooorm/iso-3166>\n      if (\n        alphabetical(value.charCodeAt(index + 1)) &&\n        alphabetical(value.charCodeAt(index + 2)) &&\n        !alphabetical(value.charCodeAt(index + 3))\n      ) {\n        result.region = source.slice(index + 1, index + 3)\n        index += 3\n      }\n      // UN M49 region.\n      // <https://github.com/wooorm/un-m49>\n      else if (\n        decimal(value.charCodeAt(index + 1)) &&\n        decimal(value.charCodeAt(index + 2)) &&\n        decimal(value.charCodeAt(index + 3)) &&\n        !decimal(value.charCodeAt(index + 4))\n      ) {\n        result.region = source.slice(index + 1, index + 4)\n        index += 4\n      }\n    }\n\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      offset = start = index + 1\n\n      while (alphanumeric(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max variant. */) {\n          return fail(\n            offset,\n            1,\n            'Too long variant, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      if (\n        // Long variant.\n        offset - start > 4 /* Min alpha numeric variant. */ ||\n        // Short variant.\n        (offset - start > 3 /* Min variant. */ &&\n          decimal(value.charCodeAt(start)))\n      ) {\n        result.variants.push(source.slice(start, offset))\n        index = offset\n      }\n      // Something else.\n      else {\n        break\n      }\n    }\n\n    // Extensions.\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      // Exit if this isn’t an extension.\n      if (\n        value.charCodeAt(index + 1) === 120 /* `x` */ ||\n        !alphanumeric(value.charCodeAt(index + 1)) ||\n        value.charCodeAt(index + 2) !== 45 /* `-` */ ||\n        !alphanumeric(value.charCodeAt(index + 3))\n      ) {\n        break\n      }\n\n      offset = index + 2\n      groups = 0\n\n      while (\n        value.charCodeAt(offset) === 45 /* `-` */ &&\n        alphanumeric(value.charCodeAt(offset + 1)) &&\n        alphanumeric(value.charCodeAt(offset + 2))\n      ) {\n        start = offset + 1\n        offset = start + 2\n        groups++\n\n        while (alphanumeric(value.charCodeAt(offset))) {\n          if (offset - start > 7 /* Max extension. */) {\n            return fail(\n              offset,\n              2,\n              'Too long extension, expected at most 8 characters'\n            )\n          }\n\n          offset++\n        }\n      }\n\n      if (!groups) {\n        return fail(\n          offset,\n          4,\n          'Empty extension, extensions must have at least 2 characters of content'\n        )\n      }\n\n      result.extensions.push({\n        singleton: source.charAt(index + 1),\n        extensions: source.slice(index + 3, offset).split('-')\n      })\n\n      index = offset\n    }\n  }\n  // Not a language.\n  else {\n    index = 0\n  }\n\n  // Private use.\n  if (\n    (index === 0 && value.charCodeAt(index) === 120) /* `x` */ ||\n    (value.charCodeAt(index) === 45 /* `-` */ &&\n      value.charCodeAt(index + 1) === 120) /* `x` */\n  ) {\n    offset = index = index ? index + 2 : 1\n\n    while (\n      value.charCodeAt(offset) === 45 /* `-` */ &&\n      alphanumeric(value.charCodeAt(offset + 1))\n    ) {\n      offset = start = index + 1\n\n      while (alphanumeric(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max private use. */) {\n          return fail(\n            offset,\n            5,\n            'Too long private-use area, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      result.privateuse.push(source.slice(index + 1, offset))\n      index = offset\n    }\n  }\n\n  if (index !== source.length) {\n    return fail(index, 6, 'Found superfluous content after tag')\n  }\n\n  return result\n\n  function fail(offset, code, reason) {\n    if (settings.warning) settings.warning(reason, code, offset)\n    return settings.forgiving ? result : empty()\n  }\n}\n\n// Create an empty results object.\nfunction empty() {\n  return {\n    language: null,\n    extendedLanguageSubtags: [],\n    script: null,\n    region: null,\n    variants: [],\n    extensions: [],\n    privateuse: [],\n    irregular: null,\n    regular: null\n  }\n}\n","'use strict'\n\nmodule.exports = stringify\n\n// Compile a language schema to a BCP 47 language tag.\nfunction stringify(schema) {\n  var fields = schema || {}\n  var result = []\n  var values\n  var index\n  var value\n\n  if (fields.irregular || fields.regular) {\n    return fields.irregular || fields.regular\n  }\n\n  if (fields.language) {\n    result = result.concat(\n      fields.language,\n      fields.extendedLanguageSubtags || [],\n      fields.script || [],\n      fields.region || [],\n      fields.variants || []\n    )\n\n    values = fields.extensions || []\n    index = -1\n\n    while (++index < values.length) {\n      value = values[index]\n\n      if (value.singleton && value.extensions && value.extensions.length) {\n        result = result.concat(value.singleton, value.extensions)\n      }\n    }\n  }\n\n  if (fields.privateuse && fields.privateuse.length) {\n    result = result.concat('x', fields.privateuse)\n  }\n\n  return result.join('-')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*! codem-isoboxer v0.3.9 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    // Size zero indicates last box in the file. Consume remaining buffer.\n    this._raw = new DataView(this._raw.buffer, this._offset);\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1/2/3/4, hev1, hvc1, encv\nISOBox.prototype._boxProcessors['avc1'] =\nISOBox.prototype._boxProcessors['avc2'] =\nISOBox.prototype._boxProcessors['avc3'] =\nISOBox.prototype._boxProcessors['avc4'] =\nISOBox.prototype._boxProcessors['hvc1'] =\nISOBox.prototype._boxProcessors['hev1'] =\nISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // Codec-specific fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.3 Composition Time To Sample Box\nISOBox.prototype._boxProcessors['ctts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_offset', (this.version === 1) ? 'int' : 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  if (this.version == 1) {\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time',        'uint',   64);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n  } else {\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time_delta',  'uint',   32);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n  }\n  this._procField('message_data',             'data',   -1);\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.5 Producer Reference Time\nISOBox.prototype._boxProcessors['prft'] = function() {\n  this._procFullBox();\n  this._procField('reference_track_ID', 'uint', 32);\n  this._procField('ntp_timestamp_sec', 'uint', 32);\n  this._procField('ntp_timestamp_frac', 'uint', 32);\n  this._procField('media_time', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Settings Box.\nISOBox.prototype._boxProcessors['sttg'] = function() {\n    this._procField('settings', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.2 Decoding Time To Sample Box\nISOBox.prototype._boxProcessors['stts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","// This file can be required in Browserify and Node.js for automatic polyfill\n// To use it:  require('es6-promise/auto');\n'use strict';\nmodule.exports = require('./').polyfill();\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscDoc\r\n */\r\n\r\n;\r\n(function (imscDoc, sax, imscNames, imscStyles, imscUtils) {\r\n\r\n\r\n    /**\r\n     * Allows a client to provide callbacks to handle children of the <metadata> element\r\n     * @typedef {Object} MetadataHandler\r\n     * @property {?OpenTagCallBack} onOpenTag\r\n     * @property {?CloseTagCallBack} onCloseTag\r\n     * @property {?TextCallBack} onText\r\n     */\r\n\r\n    /**\r\n     * Called when the opening tag of an element node is encountered.\r\n     * @callback OpenTagCallBack\r\n     * @param {string} ns Namespace URI of the element\r\n     * @param {string} name Local name of the element\r\n     * @param {Object[]} attributes List of attributes, each consisting of a\r\n     *                              `uri`, `name` and `value`\r\n     */\r\n\r\n    /**\r\n     * Called when the closing tag of an element node is encountered.\r\n     * @callback CloseTagCallBack\r\n     */\r\n\r\n    /**\r\n     * Called when a text node is encountered.\r\n     * @callback TextCallBack\r\n     * @param {string} contents Contents of the text node\r\n     */\r\n\r\n    /**\r\n     * Parses an IMSC1 document into an opaque in-memory representation that exposes\r\n     * a single method <pre>getMediaTimeEvents()</pre> that returns a list of time\r\n     * offsets (in seconds) of the ISD, i.e. the points in time where the visual\r\n     * representation of the document change. `metadataHandler` allows the caller to\r\n     * be called back when nodes are present in <metadata> elements. \r\n     * \r\n     * @param {string} xmlstring XML document\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {?MetadataHandler} metadataHandler Callback for <Metadata> elements\r\n     * @returns {Object} Opaque in-memory representation of an IMSC1 document\r\n     */\r\n\r\n    imscDoc.fromXML = function (xmlstring, errorHandler, metadataHandler) {\r\n        var p = sax.parser(true, {xmlns: true});\r\n        var estack = [];\r\n        var xmllangstack = [];\r\n        var xmlspacestack = [];\r\n        var metadata_depth = 0;\r\n        var doc = null;\r\n\r\n        p.onclosetag = function (node) {\r\n\r\n            \r\n            if (estack[0] instanceof Region) {\r\n\r\n                /* merge referenced styles */\r\n\r\n                if (doc.head !== null && doc.head.styling !== null) {\r\n                    mergeReferencedStyles(doc.head.styling, estack[0].styleRefs, estack[0].styleAttrs, errorHandler);\r\n                }\r\n\r\n                delete estack[0].styleRefs;\r\n\r\n            } else if (estack[0] instanceof Styling) {\r\n\r\n                /* flatten chained referential styling */\r\n\r\n                for (var sid in estack[0].styles) {\r\n\r\n                    if (! estack[0].styles.hasOwnProperty(sid)) continue;\r\n\r\n                    mergeChainedStyles(estack[0], estack[0].styles[sid], errorHandler);\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof P || estack[0] instanceof Span) {\r\n\r\n                /* merge anonymous spans */\r\n\r\n                if (estack[0].contents.length > 1) {\r\n\r\n                    var cs = [estack[0].contents[0]];\r\n\r\n                    var c;\r\n\r\n                    for (c = 1; c < estack[0].contents.length; c++) {\r\n\r\n                        if (estack[0].contents[c] instanceof AnonymousSpan &&\r\n                                cs[cs.length - 1] instanceof AnonymousSpan) {\r\n\r\n                            cs[cs.length - 1].text += estack[0].contents[c].text;\r\n\r\n                        } else {\r\n\r\n                            cs.push(estack[0].contents[c]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    estack[0].contents = cs;\r\n\r\n                }\r\n\r\n                // remove redundant nested anonymous spans (9.3.3(1)(c))\r\n\r\n                if (estack[0] instanceof Span &&\r\n                        estack[0].contents.length === 1 &&\r\n                        estack[0].contents[0] instanceof AnonymousSpan) {\r\n\r\n                    estack[0].text = estack[0].contents[0].text;\r\n                    delete estack[0].contents;\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (estack[0].node.uri === imscNames.ns_tt &&\r\n                        estack[0].node.local === 'metadata') {\r\n\r\n                    /* leave the metadata element */\r\n\r\n                    metadata_depth--;\r\n\r\n                } else if (metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onCloseTag' in metadataHandler) {\r\n\r\n                    /* end of child of metadata element */\r\n\r\n                    metadataHandler.onCloseTag();\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // TODO: delete stylerefs?\r\n\r\n            // maintain the xml:space stack\r\n\r\n            xmlspacestack.shift();\r\n\r\n            // maintain the xml:lang stack\r\n\r\n            xmllangstack.shift();\r\n\r\n            // prepare for the next element\r\n\r\n            estack.shift();\r\n        };\r\n\r\n        p.ontext = function (str) {\r\n\r\n            if (estack[0] === undefined) {\r\n\r\n                /* ignoring text outside of elements */\r\n\r\n            } else if (estack[0] instanceof Span || estack[0] instanceof P) {\r\n\r\n                /* ignore children text nodes in ruby container spans */\r\n\r\n                if (estack[0] instanceof Span) {\r\n\r\n                    var ruby = estack[0].styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n                    if (ruby === 'container' || ruby === 'textContainer' || ruby === 'baseContainer') {\r\n\r\n                        return;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                /* create an anonymous span */\r\n\r\n                var s = new AnonymousSpan();\r\n\r\n                s.initFromText(doc, estack[0], str, xmllangstack[0], xmlspacestack[0], errorHandler);\r\n\r\n                estack[0].contents.push(s);\r\n\r\n            } else if (estack[0] instanceof ForeignElement &&\r\n                    metadata_depth > 0 &&\r\n                    metadataHandler &&\r\n                    'onText' in metadataHandler) {\r\n\r\n                /* text node within a child of metadata element */\r\n\r\n                metadataHandler.onText(str);\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        p.onopentag = function (node) {\r\n\r\n            // maintain the xml:space stack\r\n\r\n            var xmlspace = node.attributes[\"xml:space\"];\r\n\r\n            if (xmlspace) {\r\n\r\n                xmlspacestack.unshift(xmlspace.value);\r\n\r\n            } else {\r\n\r\n                if (xmlspacestack.length === 0) {\r\n\r\n                    xmlspacestack.unshift(\"default\");\r\n\r\n                } else {\r\n\r\n                    xmlspacestack.unshift(xmlspacestack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* maintain the xml:lang stack */\r\n\r\n\r\n            var xmllang = node.attributes[\"xml:lang\"];\r\n\r\n            if (xmllang) {\r\n\r\n                xmllangstack.unshift(xmllang.value);\r\n\r\n            } else {\r\n\r\n                if (xmllangstack.length === 0) {\r\n\r\n                    xmllangstack.unshift(\"\");\r\n\r\n                } else {\r\n\r\n                    xmllangstack.unshift(xmllangstack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            /* process the element */\r\n\r\n            if (node.uri === imscNames.ns_tt) {\r\n\r\n                if (node.local === 'tt') {\r\n\r\n                    if (doc !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Two <tt> elements at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    doc = new TT();\r\n\r\n                    doc.initFromNode(node, xmllangstack[0], errorHandler);\r\n\r\n                    estack.unshift(doc);\r\n\r\n                } else if (node.local === 'head') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n                        reportFatal(errorHandler, \"Parent of <head> element is not <tt> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    estack.unshift(doc.head);\r\n\r\n                } else if (node.local === 'styling') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n                        reportFatal(errorHandler, \"Parent of <styling> element is not <head> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    estack.unshift(doc.head.styling);\r\n\r\n                } else if (node.local === 'style') {\r\n\r\n                    var s;\r\n\r\n                    if (estack[0] instanceof Styling) {\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        /* ignore <style> element missing @id */\r\n\r\n                        if (!s.id) {\r\n\r\n                            reportError(errorHandler, \"<style> element missing @id attribute\");\r\n\r\n                        } else {\r\n\r\n                            doc.head.styling.styles[s.id] = s;\r\n\r\n                        }\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else if (estack[0] instanceof Region) {\r\n\r\n                        /* nested styles can be merged with specified styles\r\n                         * immediately, with lower priority\r\n                         * (see 8.4.4.2(3) at TTML1 )\r\n                         */\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        mergeStylesIfNotPresent(s.styleAttrs, estack[0].styleAttrs);\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <style> element is not <styling> or <region> at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                }  else if (node.local === 'initial') {\r\n\r\n                    var ini;\r\n\r\n                    if (estack[0] instanceof Styling) {\r\n\r\n                        ini = new Initial();\r\n\r\n                        ini.initFromNode(node, errorHandler);\r\n                        \r\n                        for (var qn in ini.styleAttrs) {\r\n\r\n                            if (! ini.styleAttrs.hasOwnProperty(qn)) continue;\r\n                            \r\n                            doc.head.styling.initials[qn] = ini.styleAttrs[qn];\r\n                            \r\n                        }\r\n                        \r\n                        estack.unshift(ini);\r\n\r\n                    } else {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <initial> element is not <styling> at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                } else if (node.local === 'layout') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <layout> element is not <head> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    estack.unshift(doc.head.layout);\r\n\r\n                } else if (node.local === 'region') {\r\n\r\n                    if (!(estack[0] instanceof Layout)) {\r\n                        reportFatal(errorHandler, \"Parent of <region> element is not <layout> at \" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    var r = new Region();\r\n\r\n                    r.initFromNode(doc, node, xmllangstack[0], errorHandler);\r\n\r\n                    if (!r.id || r.id in doc.head.layout.regions) {\r\n\r\n                        reportError(errorHandler, \"Ignoring <region> with duplicate or missing @id at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    } else {\r\n\r\n                        doc.head.layout.regions[r.id] = r;\r\n\r\n                    }\r\n\r\n                    estack.unshift(r);\r\n\r\n                } else if (node.local === 'body') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <body> element is not <tt> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    if (doc.body !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Second <body> element at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var b = new Body();\r\n\r\n                    b.initFromNode(doc, node, xmllangstack[0], errorHandler);\r\n\r\n                    doc.body = b;\r\n\r\n                    estack.unshift(b);\r\n\r\n                } else if (node.local === 'div') {\r\n\r\n                    if (!(estack[0] instanceof Div || estack[0] instanceof Body)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <div> element is not <body> or <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var d = new Div();\r\n\r\n                    d.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n                    \r\n                    /* transform smpte:backgroundImage to TTML2 image element */\r\n                    \r\n                    var bi = d.styleAttrs[imscStyles.byName.backgroundImage.qname];\r\n                    \r\n                    if (bi) {\r\n                        d.contents.push(new Image(bi));\r\n                        delete d.styleAttrs[imscStyles.byName.backgroundImage.qname];                  \r\n                    }\r\n\r\n                    estack[0].contents.push(d);\r\n\r\n                    estack.unshift(d);\r\n\r\n                } else if (node.local === 'image') {\r\n\r\n                    if (!(estack[0] instanceof Div)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <image> element is not <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var img = new Image();\r\n                    \r\n                    img.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n                    \r\n                    estack[0].contents.push(img);\r\n\r\n                    estack.unshift(img);\r\n\r\n                } else if (node.local === 'p') {\r\n\r\n                    if (!(estack[0] instanceof Div)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <p> element is not <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var p = new P();\r\n\r\n                    p.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(p);\r\n\r\n                    estack.unshift(p);\r\n\r\n                } else if (node.local === 'span') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <span> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var ns = new Span();\r\n\r\n                    ns.initFromNode(doc, estack[0], node, xmllangstack[0], xmlspacestack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(ns);\r\n\r\n                    estack.unshift(ns);\r\n\r\n                } else if (node.local === 'br') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <br> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var nb = new Br();\r\n\r\n                    nb.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(nb);\r\n\r\n                    estack.unshift(nb);\r\n\r\n                } else if (node.local === 'set') {\r\n\r\n                    if (!(estack[0] instanceof Span ||\r\n                            estack[0] instanceof P ||\r\n                            estack[0] instanceof Div ||\r\n                            estack[0] instanceof Body ||\r\n                            estack[0] instanceof Region ||\r\n                            estack[0] instanceof Br)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <set> element is not a content element or a region at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var st = new Set();\r\n\r\n                    st.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].sets.push(st);\r\n\r\n                    estack.unshift(st);\r\n\r\n                } else {\r\n\r\n                    /* element in the TT namespace, but not a content element */\r\n\r\n                    estack.unshift(new ForeignElement(node));\r\n                }\r\n\r\n            } else {\r\n\r\n                /* ignore elements not in the TTML namespace unless in metadata element */\r\n\r\n                estack.unshift(new ForeignElement(node));\r\n\r\n            }\r\n\r\n            /* handle metadata callbacks */\r\n\r\n            if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (node.uri === imscNames.ns_tt &&\r\n                        node.local === 'metadata') {\r\n\r\n                    /* enter the metadata element */\r\n\r\n                    metadata_depth++;\r\n\r\n                } else if (\r\n                        metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onOpenTag' in metadataHandler\r\n                        ) {\r\n\r\n                    /* start of child of metadata element */\r\n\r\n                    var attrs = [];\r\n\r\n                    for (var a in node.attributes) {\r\n                        attrs[node.attributes[a].uri + \" \" + node.attributes[a].local] =\r\n                                {\r\n                                    uri: node.attributes[a].uri,\r\n                                    local: node.attributes[a].local,\r\n                                    value: node.attributes[a].value\r\n                                };\r\n                    }\r\n\r\n                    metadataHandler.onOpenTag(node.uri, node.local, attrs);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // parse the document\r\n\r\n        p.write(xmlstring).close();\r\n\r\n        // all referential styling has been flatten, so delete styles\r\n\r\n        delete doc.head.styling.styles;\r\n       \r\n        // create default region if no regions specified\r\n\r\n        var hasRegions = false;\r\n\r\n        /* AFAIK the only way to determine whether an object has members */\r\n\r\n        for (var i in doc.head.layout.regions) {\r\n\r\n            if (doc.head.layout.regions.hasOwnProperty(i)) {\r\n                hasRegions = true;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasRegions) {\r\n\r\n            /* create default region */\r\n\r\n            var dr = Region.prototype.createDefaultRegion(doc.lang);\r\n\r\n            doc.head.layout.regions[dr.id] = dr;\r\n\r\n        }\r\n\r\n        /* resolve desired timing for regions */\r\n\r\n        for (var region_i in doc.head.layout.regions) {\r\n\r\n            if (! doc.head.layout.regions.hasOwnProperty(region_i)) continue;\r\n\r\n            resolveTiming(doc, doc.head.layout.regions[region_i], null, null);\r\n\r\n        }\r\n\r\n        /* resolve desired timing for content elements */\r\n\r\n        if (doc.body) {\r\n            resolveTiming(doc, doc.body, null, null);\r\n        }\r\n\r\n        /* remove undefined spans in ruby containers */\r\n\r\n        if (doc.body) {\r\n            cleanRubyContainers(doc.body);\r\n        }\r\n\r\n        return doc;\r\n    };\r\n\r\n    function cleanRubyContainers(element) {\r\n        \r\n        if (! ('contents' in element)) return;\r\n\r\n        var rubyval = 'styleAttrs' in element ? element.styleAttrs[imscStyles.byName.ruby.qname] : null;\r\n\r\n        var isrubycontainer = (element.kind === 'span' && (rubyval === \"container\" || rubyval === \"textContainer\" || rubyval === \"baseContainer\"));\r\n\r\n        for (var i = element.contents.length - 1; i >= 0; i--) {\r\n\r\n            if (isrubycontainer && !('styleAttrs' in element.contents[i] && imscStyles.byName.ruby.qname in element.contents[i].styleAttrs)) {\r\n\r\n                /* prune undefined <span> in ruby containers */\r\n\r\n                delete element.contents[i];\r\n\r\n            } else {\r\n\r\n                cleanRubyContainers(element.contents[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function resolveTiming(doc, element, prev_sibling, parent) {\r\n\r\n        /* are we in a seq container? */\r\n\r\n        var isinseq = parent && parent.timeContainer === \"seq\";\r\n\r\n        /* determine implicit begin */\r\n\r\n        var implicit_begin = 0; /* default */\r\n\r\n        if (parent) {\r\n\r\n            if (isinseq && prev_sibling) {\r\n\r\n                /*\r\n                 * if seq time container, offset from the previous sibling end\r\n                 */\r\n\r\n                implicit_begin = prev_sibling.end;\r\n\r\n\r\n            } else {\r\n\r\n                implicit_begin = parent.begin;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute desired begin */\r\n\r\n        element.begin = element.explicit_begin ? element.explicit_begin + implicit_begin : implicit_begin;\r\n\r\n\r\n        /* determine implicit end */\r\n\r\n        var implicit_end = element.begin;\r\n\r\n        var s = null;\r\n\r\n        if (\"sets\" in element) {\r\n\r\n            for (var set_i = 0; set_i < element.sets.length; set_i++) {\r\n\r\n                resolveTiming(doc, element.sets[set_i], s, element);\r\n\r\n                if (element.timeContainer === \"seq\") {\r\n\r\n                    implicit_end = element.sets[set_i].end;\r\n\r\n                } else {\r\n\r\n                    implicit_end = Math.max(implicit_end, element.sets[set_i].end);\r\n\r\n                }\r\n\r\n                s = element.sets[set_i];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!('contents' in element)) {\r\n\r\n            /* anonymous spans and regions and <set> and <br>s and spans with only children text nodes */\r\n\r\n            if (isinseq) {\r\n\r\n                /* in seq container, implicit duration is zero */\r\n\r\n                implicit_end = element.begin;\r\n\r\n            } else {\r\n\r\n                /* in par container, implicit duration is indefinite */\r\n\r\n                implicit_end = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n        } else if (\"contents\" in element) {\r\n \r\n            for (var content_i = 0; content_i < element.contents.length; content_i++) {\r\n\r\n                resolveTiming(doc, element.contents[content_i], s, element);\r\n\r\n                if (element.timeContainer === \"seq\") {\r\n\r\n                    implicit_end = element.contents[content_i].end;\r\n\r\n                } else {\r\n\r\n                    implicit_end = Math.max(implicit_end, element.contents[content_i].end);\r\n\r\n                }\r\n\r\n                s = element.contents[content_i];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine desired end */\r\n        /* it is never made really clear in SMIL that the explicit end is offset by the implicit begin */\r\n\r\n        if (element.explicit_end !== null && element.explicit_dur !== null) {\r\n\r\n            element.end = Math.min(element.begin + element.explicit_dur, implicit_begin + element.explicit_end);\r\n\r\n        } else if (element.explicit_end === null && element.explicit_dur !== null) {\r\n\r\n            element.end = element.begin + element.explicit_dur;\r\n\r\n        } else if (element.explicit_end !== null && element.explicit_dur === null) {\r\n\r\n            element.end = implicit_begin + element.explicit_end;\r\n\r\n        } else {\r\n\r\n            element.end = implicit_end;\r\n        }\r\n\r\n        delete element.explicit_begin;\r\n        delete element.explicit_dur;\r\n        delete element.explicit_end;\r\n\r\n        doc._registerEvent(element);\r\n\r\n    }\r\n\r\n    function ForeignElement(node) {\r\n        this.node = node;\r\n    }\r\n\r\n    function TT() {\r\n        this.events = [];\r\n        this.head = new Head();\r\n        this.body = null;\r\n    }\r\n\r\n    TT.prototype.initFromNode = function (node, xmllang, errorHandler) {\r\n\r\n        /* compute cell resolution */\r\n\r\n        var cr = extractCellResolution(node, errorHandler);\r\n        \r\n        this.cellLength = {\r\n                'h': new imscUtils.ComputedLength(0, 1/cr.h),\r\n                'w': new imscUtils.ComputedLength(1/cr.w, 0)\r\n            };\r\n\r\n        /* extract frame rate and tick rate */\r\n\r\n        var frtr = extractFrameAndTickRate(node, errorHandler);\r\n\r\n        this.effectiveFrameRate = frtr.effectiveFrameRate;\r\n\r\n        this.tickRate = frtr.tickRate;\r\n\r\n        /* extract aspect ratio */\r\n\r\n        this.aspectRatio = extractAspectRatio(node, errorHandler);\r\n\r\n        /* check timebase */\r\n\r\n        var attr = findAttribute(node, imscNames.ns_ttp, \"timeBase\");\r\n\r\n        if (attr !== null && attr !== \"media\") {\r\n\r\n            reportFatal(errorHandler, \"Unsupported time base\");\r\n\r\n        }\r\n\r\n        /* retrieve extent */\r\n\r\n        var e = extractExtent(node, errorHandler);\r\n\r\n        if (e === null) {\r\n\r\n            this.pxLength = {\r\n                'h': null,\r\n                'w': null\r\n            };\r\n\r\n        } else {\r\n\r\n            if (e.h.unit !== \"px\" || e.w.unit !== \"px\") {\r\n                reportFatal(errorHandler, \"Extent on TT must be in px or absent\");\r\n            }\r\n\r\n            this.pxLength = {\r\n                'h': new imscUtils.ComputedLength(0, 1 / e.h.value),\r\n                'w': new imscUtils.ComputedLength(1 / e.w.value, 0)\r\n            };\r\n        }\r\n        \r\n        /** set root container dimensions to (1, 1) arbitrarily\r\n          * the root container is mapped to actual dimensions at rendering\r\n        **/\r\n        \r\n        this.dimensions = {\r\n                'h': new imscUtils.ComputedLength(0, 1),\r\n                'w': new imscUtils.ComputedLength(1, 0)\r\n\r\n        };\r\n\r\n        /* xml:lang */\r\n\r\n        this.lang = xmllang;\r\n\r\n    };\r\n\r\n    /* register a temporal events */\r\n    TT.prototype._registerEvent = function (elem) {\r\n\r\n        /* skip if begin is not < then end */\r\n\r\n        if (elem.end <= elem.begin)\r\n            return;\r\n\r\n        /* index the begin time of the event */\r\n\r\n        var b_i = indexOf(this.events, elem.begin);\r\n\r\n        if (!b_i.found) {\r\n            this.events.splice(b_i.index, 0, elem.begin);\r\n        }\r\n\r\n        /* index the end time of the event */\r\n\r\n        if (elem.end !== Number.POSITIVE_INFINITY) {\r\n\r\n            var e_i = indexOf(this.events, elem.end);\r\n\r\n            if (!e_i.found) {\r\n                this.events.splice(e_i.index, 0, elem.end);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Retrieves the range of ISD times covered by the document\r\n     * \r\n     * @returns {Array} Array of two elements: min_begin_time and max_begin_time\r\n     * \r\n     */\r\n    TT.prototype.getMediaTimeRange = function () {\r\n\r\n        return [this.events[0], this.events[this.events.length - 1]];\r\n    };\r\n\r\n    /*\r\n     * Returns list of ISD begin times  \r\n     * \r\n     * @returns {Array}\r\n     */\r\n    TT.prototype.getMediaTimeEvents = function () {\r\n\r\n        return this.events;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Head element\r\n     */\r\n\r\n    function Head() {\r\n        this.styling = new Styling();\r\n        this.layout = new Layout();\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Styling element\r\n     */\r\n\r\n    function Styling() {\r\n        this.styles = {};\r\n        this.initials = {};\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Style element\r\n     */\r\n\r\n    function Style() {\r\n        this.id = null;\r\n        this.styleAttrs = null;\r\n        this.styleRefs = null;\r\n    }\r\n\r\n    Style.prototype.initFromNode = function (node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n        this.styleRefs = elementGetStyleRefs(node);\r\n    };\r\n    \r\n    /*\r\n     * Represents a TTML initial element\r\n     */\r\n\r\n    function Initial() {\r\n        this.styleAttrs = null;\r\n    }\r\n\r\n    Initial.prototype.initFromNode = function (node, errorHandler) {\r\n        \r\n        this.styleAttrs = {};\r\n        \r\n        for (var i in node.attributes) {\r\n\r\n            if (node.attributes[i].uri === imscNames.ns_itts ||\r\n                node.attributes[i].uri === imscNames.ns_ebutts ||\r\n                node.attributes[i].uri === imscNames.ns_tts) {\r\n                \r\n                var qname = node.attributes[i].uri + \" \" + node.attributes[i].local;\r\n                \r\n                this.styleAttrs[qname] = node.attributes[i].value;\r\n\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Layout element\r\n     * \r\n     */\r\n\r\n    function Layout() {\r\n        this.regions = {};\r\n    }\r\n    \r\n    /*\r\n     * Represents a TTML image element\r\n     */\r\n\r\n    function Image(src, type) {\r\n        ContentElement.call(this, 'image');\r\n        this.src = src;\r\n        this.type = type;\r\n    }\r\n\r\n    Image.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        this.src = 'src' in node.attributes ? node.attributes.src.value : null;\r\n        \r\n        if (! this.src) {\r\n            reportError(errorHandler, \"Invalid image@src attribute\");\r\n        }\r\n        \r\n        this.type = 'type' in node.attributes ? node.attributes.type.value : null;\r\n        \r\n        if (! this.type) {\r\n            reportError(errorHandler, \"Invalid image@type attribute\");\r\n        }\r\n        \r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * TTML element utility functions\r\n     * \r\n     */\r\n\r\n    function ContentElement(kind) {\r\n        this.kind = kind;\r\n    }\r\n\r\n    function IdentifiedElement(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    IdentifiedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n    };\r\n\r\n    function LayoutElement(id) {\r\n        this.regionID = id;\r\n    }\r\n\r\n    LayoutElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.regionID = elementGetRegionID(node);\r\n    };\r\n\r\n    function StyledElement(styleAttrs) {\r\n        this.styleAttrs = styleAttrs;\r\n    }\r\n\r\n    StyledElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n\r\n        if (doc.head !== null && doc.head.styling !== null) {\r\n            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);\r\n        }\r\n\r\n    };\r\n\r\n    function AnimatedElement(sets) {\r\n        this.sets = sets;\r\n    }\r\n\r\n    AnimatedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.sets = [];\r\n    };\r\n\r\n    function ContainerElement(contents) {\r\n        this.contents = contents;\r\n    }\r\n\r\n    ContainerElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.contents = [];\r\n    };\r\n\r\n    function TimedElement(explicit_begin, explicit_end, explicit_dur) {\r\n        this.explicit_begin = explicit_begin;\r\n        this.explicit_end = explicit_end;\r\n        this.explicit_dur = explicit_dur;\r\n    }\r\n\r\n    TimedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        var t = processTiming(doc, parent, node, errorHandler);\r\n        this.explicit_begin = t.explicit_begin;\r\n        this.explicit_end = t.explicit_end;\r\n        this.explicit_dur = t.explicit_dur;\r\n\r\n        this.timeContainer = elementGetTimeContainer(node, errorHandler);\r\n    };\r\n\r\n\r\n    /*\r\n     * Represents a TTML body element\r\n     */\r\n\r\n\r\n\r\n    function Body() {\r\n        ContentElement.call(this, 'body');\r\n    }\r\n\r\n\r\n    Body.prototype.initFromNode = function (doc, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML div element\r\n     */\r\n\r\n    function Div() {\r\n        ContentElement.call(this, 'div');\r\n    }\r\n\r\n    Div.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML p element\r\n     */\r\n\r\n    function P() {\r\n        ContentElement.call(this, 'p');\r\n    }\r\n\r\n    P.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML span element\r\n     */\r\n\r\n    function Span() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    Span.prototype.initFromNode = function (doc, parent, node, xmllang, xmlspace, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.space = xmlspace;\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML anonymous span element\r\n     */\r\n\r\n    function AnonymousSpan() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    AnonymousSpan.prototype.initFromText = function (doc, parent, text, xmllang, xmlspace, errorHandler) {\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, null, errorHandler);\r\n\r\n        this.text = text;\r\n        this.space = xmlspace;\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML br element\r\n     */\r\n\r\n    function Br() {\r\n        ContentElement.call(this, 'br');\r\n    }\r\n\r\n    Br.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Region element\r\n     * \r\n     */\r\n\r\n    function Region() {\r\n    }\r\n\r\n    Region.prototype.createDefaultRegion = function (xmllang) {\r\n        var r = new Region();\r\n\r\n        IdentifiedElement.call(r, '');\r\n        StyledElement.call(r, {});\r\n        AnimatedElement.call(r, []);\r\n        TimedElement.call(r, 0, Number.POSITIVE_INFINITY, null);\r\n\r\n        this.lang = xmllang;\r\n\r\n        return r;\r\n    };\r\n\r\n    Region.prototype.initFromNode = function (doc, node, xmllang, errorHandler) {\r\n        IdentifiedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n\r\n        /* add specified styles */\r\n\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n\r\n        /* remember referential styles for merging after nested styling is processed*/\r\n\r\n        this.styleRefs = elementGetStyleRefs(node);\r\n\r\n        /* xml:lang */\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Set element\r\n     * \r\n     */\r\n\r\n    function Set() {\r\n    }\r\n\r\n    Set.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        var styles = elementGetStyles(node, errorHandler);\r\n\r\n        this.qname = null;\r\n        this.value = null;\r\n\r\n        for (var qname in styles) {\r\n\r\n            if (! styles.hasOwnProperty(qname)) continue;\r\n\r\n            if (this.qname) {\r\n\r\n                reportError(errorHandler, \"More than one style specified on set\");\r\n                break;\r\n\r\n            }\r\n\r\n            this.qname = qname;\r\n            this.value = styles[qname];\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n     * Utility functions\r\n     * \r\n     */\r\n\r\n\r\n    function elementGetXMLID(node) {\r\n        return node && 'xml:id' in node.attributes ? node.attributes['xml:id'].value || null : null;\r\n    }\r\n\r\n    function elementGetRegionID(node) {\r\n        return node && 'region' in node.attributes ? node.attributes.region.value : '';\r\n    }\r\n\r\n    function elementGetTimeContainer(node, errorHandler) {\r\n\r\n        var tc = node && 'timeContainer' in node.attributes ? node.attributes.timeContainer.value : null;\r\n\r\n        if ((!tc) || tc === \"par\") {\r\n\r\n            return \"par\";\r\n\r\n        } else if (tc === \"seq\") {\r\n\r\n            return \"seq\";\r\n\r\n        } else {\r\n\r\n            reportError(errorHandler, \"Illegal value of timeContainer (assuming 'par')\");\r\n\r\n            return \"par\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function elementGetStyleRefs(node) {\r\n\r\n        return node && 'style' in node.attributes ? node.attributes.style.value.split(\" \") : [];\r\n\r\n    }\r\n\r\n    function elementGetStyles(node, errorHandler) {\r\n\r\n        var s = {};\r\n\r\n        if (node !== null) {\r\n\r\n            for (var i in node.attributes) {\r\n\r\n                var qname = node.attributes[i].uri + \" \" + node.attributes[i].local;\r\n\r\n                var sa = imscStyles.byQName[qname];\r\n\r\n                if (sa !== undefined) {\r\n\r\n                    var val = sa.parse(node.attributes[i].value);\r\n\r\n                    if (val !== null) {\r\n\r\n                        s[qname] = val;\r\n\r\n                        /* TODO: consider refactoring errorHandler into parse and compute routines */\r\n\r\n                        if (sa === imscStyles.byName.zIndex) {\r\n                            reportWarning(errorHandler, \"zIndex attribute present but not used by IMSC1 since regions do not overlap\");\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        reportError(errorHandler, \"Cannot parse styling attribute \" + qname + \" --> \" + node.attributes[i].value);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    function findAttribute(node, ns, name) {\r\n        for (var i in node.attributes) {\r\n\r\n            if (node.attributes[i].uri === ns &&\r\n                    node.attributes[i].local === name) {\r\n\r\n                return node.attributes[i].value;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function extractAspectRatio(node, errorHandler) {\r\n\r\n        var ar = findAttribute(node, imscNames.ns_ittp, \"aspectRatio\");\r\n\r\n        if (ar === null) {\r\n            \r\n            ar = findAttribute(node, imscNames.ns_ttp, \"displayAspectRatio\");\r\n            \r\n        }\r\n\r\n        var rslt = null;\r\n\r\n        if (ar !== null) {\r\n\r\n            var ASPECT_RATIO_RE = /(\\d+)\\s+(\\d+)/;\r\n\r\n            var m = ASPECT_RATIO_RE.exec(ar);\r\n\r\n            if (m !== null) {\r\n\r\n                var w = parseInt(m[1]);\r\n\r\n                var h = parseInt(m[2]);\r\n\r\n                if (w !== 0 && h !== 0) {\r\n\r\n                    rslt = w / h;\r\n\r\n                } else {\r\n\r\n                    reportError(errorHandler, \"Illegal aspectRatio values (ignoring)\");\r\n                }\r\n\r\n            } else {\r\n\r\n                reportError(errorHandler, \"Malformed aspectRatio attribute (ignoring)\");\r\n            }\r\n\r\n        }\r\n\r\n        return rslt;\r\n\r\n    }\r\n\r\n    /*\r\n     * Returns the cellResolution attribute from a node\r\n     * \r\n     */\r\n    function extractCellResolution(node, errorHandler) {\r\n\r\n        var cr = findAttribute(node, imscNames.ns_ttp, \"cellResolution\");\r\n\r\n        // initial value\r\n\r\n        var h = 15;\r\n        var w = 32;\r\n\r\n        if (cr !== null) {\r\n\r\n            var CELL_RESOLUTION_RE = /(\\d+) (\\d+)/;\r\n\r\n            var m = CELL_RESOLUTION_RE.exec(cr);\r\n\r\n            if (m !== null) {\r\n\r\n                w = parseInt(m[1]);\r\n\r\n                h = parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed cellResolution value (using initial value instead)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {'w': w, 'h': h};\r\n\r\n    }\r\n\r\n\r\n    function extractFrameAndTickRate(node, errorHandler) {\r\n\r\n        // subFrameRate is ignored per IMSC1 specification\r\n\r\n        // extract frame rate\r\n\r\n        var fps_attr = findAttribute(node, imscNames.ns_ttp, \"frameRate\");\r\n\r\n        // initial value\r\n\r\n        var fps = 30;\r\n\r\n        // match variable\r\n\r\n        var m;\r\n\r\n        if (fps_attr !== null) {\r\n\r\n            var FRAME_RATE_RE = /(\\d+)/;\r\n\r\n            m = FRAME_RATE_RE.exec(fps_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                fps = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        // extract frame rate multiplier\r\n\r\n        var frm_attr = findAttribute(node, imscNames.ns_ttp, \"frameRateMultiplier\");\r\n\r\n        // initial value\r\n\r\n        var frm = 1;\r\n\r\n        if (frm_attr !== null) {\r\n\r\n            var FRAME_RATE_MULT_RE = /(\\d+) (\\d+)/;\r\n\r\n            m = FRAME_RATE_MULT_RE.exec(frm_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                frm = parseInt(m[1]) / parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate multiplier attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        var efps = frm * fps;\r\n\r\n        // extract tick rate\r\n\r\n        var tr = 1;\r\n\r\n        var trattr = findAttribute(node, imscNames.ns_ttp, \"tickRate\");\r\n\r\n        if (trattr === null) {\r\n\r\n            if (fps_attr !== null)\r\n                tr = efps;\r\n\r\n        } else {\r\n\r\n            var TICK_RATE_RE = /(\\d+)/;\r\n\r\n            m = TICK_RATE_RE.exec(trattr);\r\n\r\n            if (m !== null) {\r\n\r\n                tr = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed tick rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        return {effectiveFrameRate: efps, tickRate: tr};\r\n\r\n    }\r\n\r\n    function extractExtent(node, errorHandler) {\r\n\r\n        var attr = findAttribute(node, imscNames.ns_tts, \"extent\");\r\n\r\n        if (attr === null)\r\n            return null;\r\n\r\n        var s = attr.split(\" \");\r\n\r\n        if (s.length !== 2) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        var w = imscUtils.parseLength(s[0]);\r\n\r\n        var h = imscUtils.parseLength(s[1]);\r\n\r\n        if (!h || !w) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent values (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        return {'h': h, 'w': w};\r\n\r\n    }\r\n\r\n    function parseTimeExpression(tickRate, effectiveFrameRate, str) {\r\n\r\n        var CLOCK_TIME_FRACTION_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d(?:\\.\\d+)?)$/;\r\n        var CLOCK_TIME_FRAMES_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d)\\:(\\d{2,})$/;\r\n        var OFFSET_FRAME_RE = /^(\\d+(?:\\.\\d+)?)f$/;\r\n        var OFFSET_TICK_RE = /^(\\d+(?:\\.\\d+)?)t$/;\r\n        var OFFSET_MS_RE = /^(\\d+(?:\\.\\d+)?)ms$/;\r\n        var OFFSET_S_RE = /^(\\d+(?:\\.\\d+)?)s$/;\r\n        var OFFSET_H_RE = /^(\\d+(?:\\.\\d+)?)h$/;\r\n        var OFFSET_M_RE = /^(\\d+(?:\\.\\d+)?)m$/;\r\n        var m;\r\n        var r = null;\r\n        if ((m = OFFSET_FRAME_RE.exec(str)) !== null) {\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / effectiveFrameRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_TICK_RE.exec(str)) !== null) {\r\n\r\n            if (tickRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / tickRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_MS_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) / 1000.0;\r\n\r\n        } else if ((m = OFFSET_S_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]);\r\n\r\n        } else if ((m = OFFSET_H_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 3600.0;\r\n\r\n        } else if ((m = OFFSET_M_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 60.0;\r\n\r\n        } else if ((m = CLOCK_TIME_FRACTION_RE.exec(str)) !== null) {\r\n\r\n            r = parseInt(m[1]) * 3600 +\r\n                    parseInt(m[2]) * 60 +\r\n                    parseFloat(m[3]);\r\n\r\n        } else if ((m = CLOCK_TIME_FRAMES_RE.exec(str)) !== null) {\r\n\r\n            /* this assumes that HH:MM:SS is a clock-time-with-fraction */\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseInt(m[1]) * 3600 +\r\n                        parseInt(m[2]) * 60 +\r\n                        parseInt(m[3]) +\r\n                        (m[4] === null ? 0 : parseInt(m[4]) / effectiveFrameRate);\r\n            }\r\n\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    function processTiming(doc, parent, node, errorHandler) {\r\n\r\n        /* determine explicit begin */\r\n\r\n        var explicit_begin = null;\r\n\r\n        if (node && 'begin' in node.attributes) {\r\n\r\n            explicit_begin = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.begin.value);\r\n\r\n            if (explicit_begin === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed begin value \" + node.attributes.begin.value + \" (using 0)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit duration */\r\n\r\n        var explicit_dur = null;\r\n\r\n        if (node && 'dur' in node.attributes) {\r\n\r\n            explicit_dur = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.dur.value);\r\n\r\n            if (explicit_dur === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed dur value \" + node.attributes.dur.value + \" (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit end */\r\n\r\n        var explicit_end = null;\r\n\r\n        if (node && 'end' in node.attributes) {\r\n\r\n            explicit_end = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.end.value);\r\n\r\n            if (explicit_end === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed end value (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {explicit_begin: explicit_begin,\r\n            explicit_end: explicit_end,\r\n            explicit_dur: explicit_dur};\r\n\r\n    }\r\n\r\n\r\n\r\n    function mergeChainedStyles(styling, style, errorHandler) {\r\n\r\n        while (style.styleRefs.length > 0) {\r\n\r\n            var sref = style.styleRefs.pop();\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeChainedStyles(styling, styling.styles[sref], errorHandler);\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, style.styleAttrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeReferencedStyles(styling, stylerefs, styleattrs, errorHandler) {\r\n\r\n        for (var i = stylerefs.length - 1; i >= 0; i--) {\r\n\r\n            var sref = stylerefs[i];\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, styleattrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeStylesIfNotPresent(from_styles, into_styles) {\r\n\r\n        for (var sname in from_styles) {\r\n\r\n            if (! from_styles.hasOwnProperty(sname)) continue;\r\n\r\n            if (sname in into_styles)\r\n                continue;\r\n\r\n            into_styles[sname] = from_styles[sname];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* TODO: validate style format at parsing */\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n    /*\r\n     * Binary search utility function\r\n     * \r\n     * @typedef {Object} BinarySearchResult\r\n     * @property {boolean} found Was an exact match found?\r\n     * @property {number} index Position of the exact match or insert position\r\n     * \r\n     * @returns {BinarySearchResult}\r\n     */\r\n\r\n    function indexOf(arr, searchval) {\r\n\r\n        var min = 0;\r\n        var max = arr.length - 1;\r\n        var cur;\r\n\r\n        while (min <= max) {\r\n\r\n            cur = Math.floor((min + max) / 2);\r\n\r\n            var curval = arr[cur];\r\n\r\n            if (curval < searchval) {\r\n\r\n                min = cur + 1;\r\n\r\n            } else if (curval > searchval) {\r\n\r\n                max = cur - 1;\r\n\r\n            } else {\r\n\r\n                return {found: true, index: cur};\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {found: false, index: min};\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscDoc = {} : exports,\r\n        typeof sax === 'undefined' ? require(\"sax\") : sax,\r\n        typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscHTML\r\n */\r\n\r\n;\r\n(function (imscHTML, imscNames, imscStyles) {\r\n\r\n    /**\r\n     * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource\r\n     * @callback IMGResolver\r\n     * @param {string} <pre>smpte:background</pre> URI\r\n     * @return {string} PNG resource URL\r\n     */\r\n\r\n\r\n    /**\r\n     * Renders an ISD object (returned by <pre>generateISD()</pre>) into a \r\n     * parent element, that must be attached to the DOM. The ISD will be rendered\r\n     * into a child <pre>div</pre>\r\n     * with heigh and width equal to the clientHeight and clientWidth of the element,\r\n     * unless explicitly specified otherwise by the caller. Images URIs specified \r\n     * by <pre>smpte:background</pre> attributes are mapped to image resource URLs\r\n     * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>\r\n     * attribute and an <code>img</code> DOM element as input, and is expected to\r\n     * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.\r\n     * <pre>displayForcedOnlyMode</pre> sets the (boolean)\r\n     * value of the IMSC1 displayForcedOnlyMode parameter. The function returns\r\n     * an opaque object that should passed in <code>previousISDState</code> when this function\r\n     * is called for the next ISD, otherwise <code>previousISDState</code> should be set to \r\n     * <code>null</code>.\r\n     * \r\n     * @param {Object} isd ISD to be rendered\r\n     * @param {Object} element Element into which the ISD is rendered\r\n     * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.\r\n     * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null \r\n     *                  to use clientHeight of the parent element\r\n     * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null\r\n     *                  to use clientWidth of the parent element\r\n     * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,\r\n     *                   or false if null         \r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call\r\n     * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)\r\n     * @return {Object} ISD state to be provided when this funtion is called for the next ISD\r\n     */\r\n\r\n    imscHTML.render = function (isd,\r\n            element,\r\n            imgResolver,\r\n            eheight,\r\n            ewidth,\r\n            displayForcedOnlyMode,\r\n            errorHandler,\r\n            previousISDState,\r\n            enableRollUp\r\n            ) {\r\n\r\n        /* maintain aspect ratio if specified */\r\n\r\n        var height = eheight || element.clientHeight;\r\n        var width = ewidth || element.clientWidth;\r\n\r\n        if (isd.aspectRatio !== null) {\r\n\r\n            var twidth = height * isd.aspectRatio;\r\n\r\n            if (twidth > width) {\r\n\r\n                height = Math.round(width / isd.aspectRatio);\r\n\r\n            } else {\r\n\r\n                width = twidth;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var rootcontainer = document.createElement(\"div\");\r\n\r\n        rootcontainer.style.position = \"relative\";\r\n        rootcontainer.style.width = width + \"px\";\r\n        rootcontainer.style.height = height + \"px\";\r\n        rootcontainer.style.margin = \"auto\";\r\n        rootcontainer.style.top = 0;\r\n        rootcontainer.style.bottom = 0;\r\n        rootcontainer.style.left = 0;\r\n        rootcontainer.style.right = 0;\r\n        rootcontainer.style.zIndex = 0;\r\n\r\n        var context = {\r\n            h: height,\r\n            w: width,\r\n            regionH: null,\r\n            regionW: null,\r\n            imgResolver: imgResolver,\r\n            displayForcedOnlyMode: displayForcedOnlyMode || false,\r\n            isd: isd,\r\n            errorHandler: errorHandler,\r\n            previousISDState: previousISDState,\r\n            enableRollUp: enableRollUp || false,\r\n            currentISDState: {},\r\n            flg: null, /* current fillLineGap value if active, null otherwise */\r\n            lp: null, /* current linePadding value if active, null otherwise */\r\n            mra: null, /* current multiRowAlign value if active, null otherwise */\r\n            ipd: null, /* inline progression direction (lr, rl, tb) */\r\n            bpd: null, /* block progression direction (lr, rl, tb) */\r\n            ruby: null, /* is ruby present in a <p> */\r\n            textEmphasis: null, /* is textEmphasis present in a <p> */\r\n            rubyReserve: null /* is rubyReserve applicable to a <p> */\r\n        };\r\n\r\n        element.appendChild(rootcontainer);\r\n\r\n        if (\"contents\" in isd) {\r\n\r\n            for (var i = 0; i < isd.contents.length; i++) {\r\n\r\n                processElement(context, rootcontainer, isd.contents[i], isd);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return context.currentISDState;\r\n\r\n    };\r\n\r\n    function processElement(context, dom_parent, isd_element, isd_parent) {\r\n\r\n        var e;\r\n\r\n        if (isd_element.kind === 'region') {\r\n\r\n            e = document.createElement(\"div\");\r\n            e.style.position = \"absolute\";\r\n\r\n        } else if (isd_element.kind === 'body') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'div') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'image') {\r\n\r\n            e = document.createElement(\"img\");\r\n\r\n            if (context.imgResolver !== null && isd_element.src !== null) {\r\n\r\n                var uri = context.imgResolver(isd_element.src, e);\r\n\r\n                if (uri)\r\n                    e.src = uri;\r\n\r\n                e.height = context.regionH;\r\n                e.width = context.regionW;\r\n\r\n            }\r\n\r\n        } else if (isd_element.kind === 'p') {\r\n\r\n            e = document.createElement(\"p\");\r\n\r\n        } else if (isd_element.kind === 'span') {\r\n\r\n            if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"container\") {\r\n\r\n                e = document.createElement(\"ruby\");\r\n\r\n                context.ruby = true;\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"base\") {\r\n\r\n                e = document.createElement(\"rb\");\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\r\n\r\n                e = document.createElement(\"rt\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"baseContainer\") {\r\n\r\n                e = document.createElement(\"rbc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n\r\n                e = document.createElement(\"rtc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"delimiter\") {\r\n\r\n                /* ignore rp */\r\n\r\n                return;\r\n\r\n            } else {\r\n\r\n                e = document.createElement(\"span\");\r\n\r\n            }\r\n\r\n            //e.textContent = isd_element.text;\r\n\r\n        } else if (isd_element.kind === 'br') {\r\n\r\n            e = document.createElement(\"br\");\r\n\r\n        }\r\n\r\n        if (!e) {\r\n\r\n            reportError(context.errorHandler, \"Error processing ISD element kind: \" + isd_element.kind);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /* set language */\r\n\r\n        if (isd_element.lang) {\r\n\r\n            if (isd_element.kind === 'region' || isd_element.lang !== isd_parent.lang) {\r\n                e.lang = isd_element.lang;\r\n            }\r\n\r\n        }\r\n\r\n        /* add to parent */\r\n\r\n        dom_parent.appendChild(e);\r\n\r\n        /* override UA default margin */\r\n        /* TODO: should apply to <p> only */\r\n\r\n        e.style.margin = \"0\";\r\n\r\n        /* determine ipd and bpd */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n            if (wdir === \"lrtb\" || wdir === \"lr\") {\r\n\r\n                context.ipd = \"lr\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"rltb\" || wdir === \"rl\") {\r\n\r\n                context.ipd = \"rl\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"tblr\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"lr\";\r\n\r\n            } else if (wdir === \"tbrl\" || wdir === \"tb\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"rl\";\r\n\r\n            }\r\n \r\n        } else if (isd_element.kind === \"p\" && context.bpd === \"tb\") {\r\n\r\n            var pdir = isd_element.styleAttrs[imscStyles.byName.direction.qname];\r\n\r\n            context.ipd = pdir === \"ltr\" ? \"lr\" : \"rl\"; \r\n \r\n        }\r\n\r\n        /* tranform TTML styles to CSS styles */\r\n\r\n        for (var i = 0; i < STYLING_MAP_DEFS.length; i++) {\r\n\r\n            var sm = STYLING_MAP_DEFS[i];\r\n\r\n            var attr = isd_element.styleAttrs[sm.qname];\r\n\r\n            if (attr !== undefined && sm.map !== null) {\r\n\r\n                sm.map(context, e, isd_element, attr);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var proc_e = e;\r\n\r\n        /* do we have linePadding ? */\r\n\r\n        var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];\r\n\r\n        if (lp && (! lp.isZero())) {\r\n\r\n            var plength = lp.toUsedLength(context.w, context.h);\r\n\r\n\r\n            if (plength > 0) {\r\n                \r\n                /* apply padding to the <p> so that line padding does not cause line wraps */\r\n\r\n                var padmeasure = Math.ceil(plength) + \"px\";\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    proc_e.style.paddingLeft = padmeasure;\r\n                    proc_e.style.paddingRight = padmeasure;\r\n\r\n                } else {\r\n\r\n                    proc_e.style.paddingTop = padmeasure;\r\n                    proc_e.style.paddingBottom = padmeasure;\r\n\r\n                }\r\n\r\n                context.lp = lp;\r\n            }\r\n        }\r\n\r\n        // do we have multiRowAlign?\r\n\r\n        var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];\r\n\r\n        if (mra && mra !== \"auto\") {\r\n\r\n            /* create inline block to handle multirowAlign */\r\n\r\n            var s = document.createElement(\"span\");\r\n\r\n            s.style.display = \"inline-block\";\r\n\r\n            s.style.textAlign = mra;\r\n\r\n            e.appendChild(s);\r\n\r\n            proc_e = s;\r\n\r\n            context.mra = mra;\r\n\r\n        }\r\n\r\n        /* do we have rubyReserve? */\r\n\r\n        var rr = isd_element.styleAttrs[imscStyles.byName.rubyReserve.qname];\r\n\r\n        if (rr && rr[0] !== \"none\") {\r\n            context.rubyReserve = rr;\r\n        }\r\n\r\n\r\n        /* remember we are filling line gaps */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {\r\n            context.flg = true;\r\n        }\r\n\r\n\r\n        if (isd_element.kind === \"span\" && isd_element.text) {\r\n\r\n            var te = isd_element.styleAttrs[imscStyles.byName.textEmphasis.qname];\r\n\r\n            if (te && te.style !== \"none\") {\r\n\r\n                context.textEmphasis = true;\r\n\r\n            }\r\n\r\n            if (imscStyles.byName.textCombine.qname in isd_element.styleAttrs &&\r\n                    isd_element.styleAttrs[imscStyles.byName.textCombine.qname] === \"all\") {\r\n\r\n                /* ignore tate-chu-yoku since line break cannot happen within */\r\n                e.textContent = isd_element.text;\r\n\r\n                if (te) {\r\n\r\n                    applyTextEmphasis(context, e, isd_element, te);\r\n\r\n                };\r\n\r\n            } else {\r\n\r\n                // wrap characters in spans to find the line wrap locations\r\n\r\n                var cbuf = '';\r\n\r\n                for (var j = 0; j < isd_element.text.length; j++) {\r\n\r\n                    cbuf += isd_element.text.charAt(j);\r\n\r\n                    var cc = isd_element.text.charCodeAt(j);\r\n\r\n                    if (cc < 0xD800 || cc > 0xDBFF || j === isd_element.text.length - 1) {\r\n\r\n                        /* wrap the character(s) in a span unless it is a high surrogate */\r\n\r\n                        var span = document.createElement(\"span\");\r\n\r\n                        span.textContent = cbuf;\r\n\r\n                        /* apply textEmphasis */\r\n                        \r\n                        if (te) {\r\n\r\n                            applyTextEmphasis(context, span, isd_element, te);\r\n\r\n                        };\r\n    \r\n                        e.appendChild(span);\r\n\r\n                        cbuf = '';\r\n\r\n                        //For the sake of merging these back together, record what isd element generated it.\r\n                        span._isd_element = isd_element;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* process the children of the ISD element */\r\n\r\n        if (\"contents\" in isd_element) {\r\n\r\n            for (var k = 0; k < isd_element.contents.length; k++) {\r\n\r\n                processElement(context, proc_e, isd_element.contents[k], isd_element);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* list of lines */\r\n\r\n        var linelist = [];\r\n\r\n\r\n        /* paragraph processing */\r\n        /* TODO: linePadding only supported for horizontal scripts */\r\n\r\n        if (isd_element.kind === \"p\") {\r\n\r\n            constructLineList(context, proc_e, linelist, null);\r\n\r\n            /* apply rubyReserve */\r\n\r\n            if (context.rubyReserve) {\r\n\r\n                applyRubyReserve(linelist, context);\r\n\r\n                context.rubyReserve = null;\r\n\r\n            }\r\n\r\n            /* apply tts:rubyPosition=\"outside\" */\r\n\r\n            if (context.ruby || context.rubyReserve) {\r\n\r\n                applyRubyPosition(linelist, context);\r\n\r\n                context.ruby = null;\r\n\r\n            }\r\n\r\n            /* apply text emphasis \"outside\" position */\r\n\r\n            if (context.textEmphasis) {\r\n\r\n                applyTextEmphasisOutside(linelist, context);\r\n\r\n                context.textEmphasis = null;\r\n\r\n            }\r\n\r\n            /* insert line breaks for multirowalign */\r\n\r\n            if (context.mra) {\r\n\r\n                applyMultiRowAlign(linelist);\r\n\r\n                context.mra = null;\r\n\r\n            }\r\n\r\n            /* add linepadding */\r\n\r\n            if (context.lp) {\r\n\r\n                applyLinePadding(linelist, context.lp.toUsedLength(context.w, context.h), context);\r\n\r\n                context.lp = null;\r\n\r\n            }\r\n\r\n            mergeSpans(linelist); // The earlier we can do this the less processing there will be.\r\n\r\n            /* fill line gaps linepadding */\r\n\r\n            if (context.flg) {\r\n\r\n                var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);\r\n\r\n                applyFillLineGap(linelist, par_edges.before, par_edges.after, context, proc_e);\r\n\r\n                context.flg = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* region processing */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            /* perform roll up if needed */\r\n            if ((context.bpd === \"tb\") &&\r\n                    context.enableRollUp &&\r\n                    isd_element.contents.length > 0 &&\r\n                    isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {\r\n\r\n                /* build line list */\r\n                constructLineList(context, proc_e, linelist, null);\r\n\r\n                /* horrible hack, perhaps default region id should be underscore everywhere? */\r\n\r\n                var rid = isd_element.id === '' ? '_' : isd_element.id;\r\n\r\n                var rb = new RegionPBuffer(rid, linelist);\r\n\r\n                context.currentISDState[rb.id] = rb;\r\n\r\n                if (context.previousISDState &&\r\n                        rb.id in context.previousISDState &&\r\n                        context.previousISDState[rb.id].plist.length > 0 &&\r\n                        rb.plist.length > 1 &&\r\n                        rb.plist[rb.plist.length - 2].text ===\r\n                        context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {\r\n\r\n                    var body_elem = e.firstElementChild;\r\n\r\n                    var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;\r\n\r\n                    body_elem.style.bottom = \"-\" + h + \"px\";\r\n                    body_elem.style.transition = \"transform 0.4s\";\r\n                    body_elem.style.position = \"relative\";\r\n                    body_elem.style.transform = \"translateY(-\" + h + \"px)\";\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function mergeSpans(lineList) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var line = lineList[i];\r\n\r\n            for (var j = 1; j < line.elements.length;) {\r\n\r\n                var previous = line.elements[j - 1];\r\n                var span = line.elements[j];\r\n\r\n                if (spanMerge(previous.node, span.node)) {\r\n\r\n                    //removed from DOM by spanMerge(), remove from the list too.\r\n                    line.elements.splice(j, 1);\r\n                    continue;\r\n\r\n                } else {\r\n\r\n                    j++;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Copy backgroundColor to each span so that fillLineGap will apply padding to elements with the right background\r\n        var thisNode, ancestorBackgroundColor;\r\n        var clearTheseBackgrounds = [];\r\n\r\n        for (var l = 0; l < lineList.length; l++) {\r\n\r\n            for (var el = 0; el < lineList[l].elements.length; el++) {\r\n\r\n                thisNode = lineList[l].elements[el].node;\r\n                ancestorBackgroundColor = getSpanAncestorColor(thisNode, clearTheseBackgrounds, false);\r\n\r\n                if (ancestorBackgroundColor) {\r\n\r\n                    thisNode.style.backgroundColor = ancestorBackgroundColor;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var bi = 0; bi < clearTheseBackgrounds.length; bi++) {\r\n\r\n            clearTheseBackgrounds[bi].style.backgroundColor = \"\";\r\n\r\n        }\r\n    }\r\n\r\n    function getSpanAncestorColor(element, ancestorList, isAncestor) {\r\n\r\n        if (element.style.backgroundColor) {\r\n\r\n            if (isAncestor && !ancestorList.includes(element)) {\r\n\r\n                ancestorList.push(element);\r\n\r\n            }\r\n            return element.style.backgroundColor;\r\n\r\n        } else {\r\n\r\n            if (element.parentElement.nodeName === \"SPAN\") {\r\n\r\n                return getSpanAncestorColor(element.parentElement, ancestorList, true);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function spanMerge(first, second) {\r\n\r\n        if (first.tagName === \"SPAN\" &&\r\n            second.tagName === \"SPAN\" &&\r\n            first._isd_element === second._isd_element) {\r\n\r\n                first.textContent += second.textContent;\r\n\r\n                for (var i = 0; i < second.style.length; i++) {\r\n\r\n                    var styleName = second.style[i];\r\n                    if (styleName.indexOf(\"border\") >= 0 || \r\n                        styleName.indexOf(\"padding\") >= 0 ||\r\n                        styleName.indexOf(\"margin\") >= 0) {\r\n\r\n                        first.style[styleName] = second.style[styleName];\r\n\r\n                    }\r\n                }\r\n\r\n                second.parentElement.removeChild(second);\r\n\r\n                return true;\r\n            }\r\n\r\n        return false;\r\n    }\r\n\r\n    function applyLinePadding(lineList, lp, context) {\r\n\r\n        if (lineList === null) return;\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            var pospadpxlen = Math.ceil(lp) + \"px\";\r\n\r\n            var negpadpxlen = \"-\" + Math.ceil(lp) + \"px\";\r\n\r\n            if (l !== 0) {\r\n\r\n                var se = lineList[i].elements[lineList[i].start_elem];\r\n\r\n                var ee = lineList[i].elements[lineList[i].end_elem];\r\n\r\n                if (se === ee) {\r\n\r\n                    // Check to see if there's any background at all\r\n                    elementBoundingRect = se.node.getBoundingClientRect();\r\n                    \r\n                    if (elementBoundingRect.width == 0 || elementBoundingRect.height == 0) {\r\n\r\n                        // There's no background on this line, move on.\r\n                        continue;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // Start element\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    se.node.style.marginLeft = negpadpxlen;\r\n                    se.node.style.paddingLeft = pospadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    se.node.style.paddingRight = pospadpxlen;\r\n                    se.node.style.marginRight = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    se.node.style.paddingTop = pospadpxlen;\r\n                    se.node.style.marginTop = negpadpxlen;\r\n\r\n                }\r\n\r\n                // End element\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    ee.node.style.marginRight = negpadpxlen;\r\n                    ee.node.style.paddingRight = pospadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    ee.node.style.paddingLeft = pospadpxlen;\r\n                    ee.node.style.marginLeft = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    ee.node.style.paddingBottom = pospadpxlen;\r\n                    ee.node.style.marginBottom = negpadpxlen;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyMultiRowAlign(lineList) {\r\n\r\n        /* apply an explicit br to all but the last line */\r\n\r\n        for (var i = 0; i < lineList.length - 1; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            if (l !== 0 && lineList[i].br === false) {\r\n                var br = document.createElement(\"br\");\r\n\r\n                var lastnode = lineList[i].elements[l - 1].node;\r\n\r\n                lastnode.parentElement.insertBefore(br, lastnode.nextSibling);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyTextEmphasisOutside(lineList, context) {\r\n\r\n        /* supports \"outside\" only */\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].te.length; j++) {\r\n\r\n                /* skip if position already set */\r\n\r\n                if (lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] &&\r\n                    lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] !== \"none\")\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"left over\" : \"left under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"right under\" : \"left under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"left under\" : \"right under\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyPosition(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                /* skip if ruby-position already set */\r\n\r\n                if (lineList[i].rbc[j].style[RUBYPOSITION_PROP])\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (RUBYPOSITION_ISWK) {\r\n\r\n                    /* WebKit exception */\r\n\r\n                    pos = (i === 0) ? \"before\" : \"after\";\r\n\r\n                } else if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"under\" : \"over\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].rbc[j].style[RUBYPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyReserve(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var ruby = document.createElement(\"ruby\");\r\n\r\n            var rb = document.createElement(\"rb\");\r\n            rb.textContent = \"\\u200B\";\r\n\r\n            ruby.appendChild(rb);\r\n\r\n            var rt1;\r\n            var rt2;\r\n\r\n            var fs = context.rubyReserve[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n            if (context.rubyReserve[0] === \"both\" || (context.rubyReserve[0] === \"outside\" && lineList.length == 1)) {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"after\" : \"under\";\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                rt2 = document.createElement(\"rtc\");\r\n                rt2.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"before\" : \"over\";\r\n                rt2.textContent = \"\\u200B\";\r\n                rt2.style.fontSize = fs;\r\n\r\n                ruby.appendChild(rt1);\r\n                ruby.appendChild(rt2);\r\n\r\n            } else {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                var pos;\r\n\r\n                if (context.rubyReserve[0] === \"after\" || (context.rubyReserve[0] === \"outside\" && i > 0)) {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"after\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"under\" : \"over\");\r\n\r\n                } else {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"before\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"over\" : \"under\");\r\n\r\n                }\r\n\r\n                rt1.style[RUBYPOSITION_PROP] = pos;\r\n\r\n                ruby.appendChild(rt1);\r\n\r\n            }\r\n\r\n            /* add in front of the first ruby element of the line, if it exists */\r\n\r\n            var sib = null;\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                if (lineList[i].rbc[j].localName === 'ruby') {\r\n\r\n                    sib = lineList[i].rbc[j];\r\n\r\n                    /* copy specified style properties from the sibling ruby container */\r\n                    \r\n                    for (var k = 0; k < sib.style.length; k++) {\r\n\r\n                        ruby.style.setProperty(sib.style.item(k), sib.style.getPropertyValue(sib.style.item(k)));\r\n\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            /* otherwise add before first span */\r\n\r\n            sib = sib || lineList[i].elements[0].node;\r\n\r\n            sib.parentElement.insertBefore(ruby, sib);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyFillLineGap(lineList, par_before, par_after, context, element) {\r\n\r\n        /* positive for BPD = lr and tb, negative for BPD = rl */\r\n        var s = Math.sign(par_after - par_before);\r\n\r\n        for (var i = 0; i <= lineList.length; i++) {\r\n\r\n            /* compute frontier between lines */\r\n\r\n            var frontier;\r\n\r\n            if (i === 0) {\r\n\r\n                frontier = Math.round(par_before);\r\n\r\n            } else if (i === lineList.length) {\r\n\r\n                frontier = Math.round(par_after);\r\n\r\n            } else {\r\n\r\n                frontier = Math.round((lineList[i - 1].after + lineList[i].before) / 2);\r\n\r\n            }\r\n\r\n            var padding;\r\n            var l,thisNode;\r\n\r\n            /* before line */\r\n            if (i > 0) {\r\n\r\n                if (lineList[i-1]) {\r\n\r\n                    for (l = 0; l < lineList[i - 1].elements.length; l++) {\r\n\r\n                        thisNode=lineList[i - 1].elements[l];\r\n                        padding = s*(frontier-thisNode.after) + \"px\";\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            thisNode.node.style.paddingRight = padding;\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            thisNode.node.style.paddingLeft = padding;\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            thisNode.node.style.paddingBottom = padding;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* after line */\r\n            if (i < lineList.length) {\r\n\r\n                for (l = 0; l < lineList[i].elements.length; l++) {\r\n\r\n                    thisNode = lineList[i].elements[l];\r\n                    padding = s * (thisNode.before - frontier) + \"px\";\r\n\r\n                    if (context.bpd === \"lr\") {\r\n\r\n                        thisNode.node.style.paddingLeft = padding;\r\n\r\n                    } else if (context.bpd === \"rl\") {\r\n\r\n                        thisNode.node.style.paddingRight = padding;\r\n\r\n                    } else if (context.bpd === \"tb\") {\r\n\r\n                        thisNode.node.style.paddingTop = padding;\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function RegionPBuffer(id, lineList) {\r\n\r\n        this.id = id;\r\n\r\n        this.plist = lineList;\r\n\r\n    }\r\n\r\n    function rect2edges(rect, context) {\r\n\r\n        var edges = {before: null, after: null, start: null, end: null};\r\n\r\n        if (context.bpd === \"tb\") {\r\n\r\n            edges.before = rect.top;\r\n            edges.after = rect.bottom;\r\n\r\n            if (context.ipd === \"lr\") {\r\n\r\n                edges.start = rect.left;\r\n                edges.end = rect.right;\r\n\r\n            } else {\r\n\r\n                edges.start = rect.right;\r\n                edges.end = rect.left;\r\n            }\r\n\r\n        } else if (context.bpd === \"lr\") {\r\n\r\n            edges.before = rect.left;\r\n            edges.after = rect.right;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        } else if (context.bpd === \"rl\") {\r\n\r\n            edges.before = rect.right;\r\n            edges.after = rect.left;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        }\r\n\r\n        return edges;\r\n\r\n    }\r\n\r\n    function constructLineList(context, element, llist, bgcolor) {\r\n\r\n        if (element.localName === \"rt\" || element.localName === \"rtc\") {\r\n\r\n            /* skip ruby annotations */\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var curbgcolor = element.style.backgroundColor || bgcolor;\r\n\r\n        if (element.childElementCount === 0) {\r\n\r\n            if (element.localName === 'span' || element.localName === 'rb') {\r\n\r\n                var r = element.getBoundingClientRect();\r\n\r\n                var edges = rect2edges(r, context);\r\n\r\n                if (llist.length === 0 ||\r\n                        (!isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after))\r\n                        ) {\r\n                    llist.push({\r\n                        before: edges.before,\r\n                        after: edges.after,\r\n                        start: edges.start,\r\n                        end: edges.end,\r\n                        start_elem: 0,\r\n                        end_elem: 0,\r\n                        elements: [],\r\n                        rbc: [],\r\n                        te: [],\r\n                        text: \"\",\r\n                        br: false\r\n                    });\r\n\r\n                } else {\r\n\r\n                    /* positive for BPD = lr and tb, negative for BPD = rl */\r\n                    var bpd_dir = Math.sign(edges.after - edges.before);\r\n\r\n                    /* positive for IPD = lr and tb, negative for IPD = rl */\r\n                    var ipd_dir = Math.sign(edges.end - edges.start);\r\n\r\n                    /* check if the line height has increased */\r\n\r\n                    if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {\r\n                        llist[llist.length - 1].before = edges.before;\r\n                    }\r\n\r\n                    if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {\r\n                        llist[llist.length - 1].after = edges.after;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {\r\n                        llist[llist.length - 1].start = edges.start;\r\n                        llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {\r\n                        llist[llist.length - 1].end = edges.end;\r\n                        llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                }\r\n\r\n                llist[llist.length - 1].text += element.textContent;\r\n\r\n                llist[llist.length - 1].elements.push(\r\n                        {\r\n                            node: element,\r\n                            bgcolor: curbgcolor,\r\n                            before: edges.before,\r\n                            after: edges.after\r\n                        }\r\n                );\r\n\r\n            } else if (element.localName === 'br' && llist.length !== 0) {\r\n\r\n                llist[llist.length - 1].br = true;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            var child = element.firstChild;\r\n\r\n            while (child) {\r\n\r\n                if (child.nodeType === Node.ELEMENT_NODE) {\r\n\r\n                    constructLineList(context, child, llist, curbgcolor);\r\n\r\n                    if (child.localName === 'ruby' || child.localName === 'rtc') {\r\n\r\n                        /* remember non-empty ruby and rtc elements so that tts:rubyPosition can be applied */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].rbc.push(child);\r\n\r\n                        }\r\n\r\n                    } else if (child.localName === 'span' &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] !== \"none\") {\r\n\r\n                        /* remember non-empty span elements with textEmphasis */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].te.push(child);\r\n\r\n                        }\r\n\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n                child = child.nextSibling;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isSameLine(before1, after1, before2, after2) {\r\n\r\n        return ((after1 < after2) && (before1 > before2)) || ((after2 <= after1) && (before2 >= before1));\r\n\r\n    }\r\n\r\n    function applyTextEmphasis(context, dom_element, isd_element, attr) {\r\n\r\n        /* ignore color (not used in IMSC 1.1) */\r\n\r\n        if (attr.style === \"none\") {\r\n\r\n            /* text-emphasis is not inherited and the default is none, so nothing to do */\r\n            \r\n            return;\r\n        \r\n        } else if (attr.style === \"auto\") {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] = \"filled\";\r\n        \r\n        } else {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] =  attr.style + \" \" + attr.symbol;\r\n        }\r\n\r\n        /* ignore \"outside\" position (set in postprocessing) */\r\n\r\n        if (attr.position === \"before\" || attr.position === \"after\") {\r\n\r\n            var pos;\r\n\r\n            if (context.bpd === \"tb\") {\r\n\r\n                pos = (attr.position === \"before\") ? \"left over\" : \"left under\";\r\n\r\n\r\n            } else {\r\n\r\n                if (context.bpd === \"rl\") {\r\n\r\n                    pos = (attr.position === \"before\") ? \"right under\" : \"left under\";\r\n\r\n                } else {\r\n\r\n                    pos = (attr.position === \"before\") ? \"left under\" : \"right under\";\r\n\r\n                }\r\n\r\n            }\r\n\r\n            dom_element.style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n        }\r\n    }\r\n\r\n    function HTMLStylingMapDefinition(qName, mapFunc) {\r\n        this.qname = qName;\r\n        this.map = mapFunc;\r\n    }\r\n\r\n    var STYLING_MAP_DEFS = [\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling backgroundColor\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if transparent */\r\n                    if (attr[3] === 0)\r\n                        return;\r\n\r\n                    dom_element.style.backgroundColor = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling color\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.color = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling direction\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.direction = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling display\",\r\n                function (context, dom_element, isd_element, attr) {}\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling displayAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */\r\n\r\n                    /* TODO: is this affected by writing direction? */\r\n\r\n                    dom_element.style.display = \"flex\";\r\n                    dom_element.style.flexDirection = \"column\";\r\n\r\n\r\n                    if (attr === \"before\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-start\";\r\n\r\n                    } else if (attr === \"center\") {\r\n\r\n                        dom_element.style.justifyContent = \"center\";\r\n\r\n                    } else if (attr === \"after\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-end\";\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling extent\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    /* TODO: this is super ugly */\r\n\r\n                    context.regionH = attr.h.toUsedLength(context.w, context.h);\r\n                    context.regionW = attr.w.toUsedLength(context.w, context.h);\r\n\r\n                    /* \r\n                     * CSS height/width are measured against the content rectangle,\r\n                     * whereas TTML height/width include padding\r\n                     */\r\n\r\n                    var hdelta = 0;\r\n                    var wdelta = 0;\r\n\r\n                    var p = isd_element.styleAttrs[\"http://www.w3.org/ns/ttml#styling padding\"];\r\n\r\n                    if (!p) {\r\n\r\n                        /* error */\r\n\r\n                    } else {\r\n\r\n                        hdelta = p[0].toUsedLength(context.w, context.h) + p[2].toUsedLength(context.w, context.h);\r\n                        wdelta = p[1].toUsedLength(context.w, context.h) + p[3].toUsedLength(context.w, context.h);\r\n\r\n                    }\r\n\r\n                    dom_element.style.height = (context.regionH - hdelta) + \"px\";\r\n                    dom_element.style.width = (context.regionW - wdelta) + \"px\";\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontFamily\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var rslt = [];\r\n\r\n                    /* per IMSC1 */\r\n\r\n                    for (var i = 0; i < attr.length; i++) {\r\n\r\n                        if (attr[i] === \"monospaceSerif\") {\r\n\r\n                            rslt.push(\"Courier New\");\r\n                            rslt.push('\"Liberation Mono\"');\r\n                            rslt.push(\"Courier\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSansSerif\") {\r\n\r\n                            rslt.push(\"Arial\");\r\n                            rslt.push(\"Helvetica\");\r\n                            rslt.push('\"Liberation Sans\"');\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"monospace\") {\r\n\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"sansSerif\") {\r\n\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"serif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else if (attr[i] === \"monospaceSansSerif\") {\r\n\r\n                            rslt.push(\"Consolas\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSerif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else {\r\n\r\n                            rslt.push(attr[i]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    // prune later duplicates we may have inserted \r\n                    if (rslt.length > 0) {\r\n\r\n                        var unique=[rslt[0]];\r\n\r\n                        for (var fi = 1; fi < rslt.length; fi++) {\r\n\r\n                            if (unique.indexOf(rslt[fi]) == -1) {\r\n\r\n                                unique.push(rslt[fi]);\r\n\r\n                            }\r\n                        }\r\n\r\n                        rslt = unique;\r\n                    }\r\n\r\n                    dom_element.style.fontFamily = rslt.join(\",\");\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling shear\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* return immediately if tts:shear is 0% since CSS transforms are not inherited*/\r\n\r\n                    if (attr === 0)\r\n                        return;\r\n\r\n                    var angle = attr * -0.9;\r\n\r\n                    /* context.bpd is needed since writing mode is not inherited and sets the inline progression */\r\n\r\n                    if (context.bpd === \"tb\") {\r\n\r\n                        dom_element.style.transform = \"skewX(\" + angle + \"deg)\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.transform = \"skewY(\" + angle + \"deg)\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontSize\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontSize = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontStyle\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontStyle = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontWeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontWeight = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling lineHeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    if (attr === \"normal\") {\r\n\r\n                        dom_element.style.lineHeight = \"normal\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.lineHeight = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling opacity\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.opacity = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling origin\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling overflow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.overflow = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling padding\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* attr: top,left,bottom,right*/\r\n\r\n                    /* style: top right bottom left*/\r\n\r\n                    var rslt = [];\r\n\r\n                    rslt[0] = attr[0].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[1] = attr[3].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[2] = attr[2].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[3] = attr[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n                    dom_element.style.padding = rslt.join(\" \");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling position\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.rubyAlign = attr === \"spaceAround\" ? \"space-around\" : \"center\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyPosition\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if \"outside\", which is handled by applyRubyPosition() */\r\n\r\n                    if (attr === \"before\" || attr === \"after\") {\r\n\r\n                        var pos;\r\n\r\n                        if (RUBYPOSITION_ISWK) {\r\n\r\n                            /* WebKit exception */\r\n        \r\n                            pos = attr;\r\n        \r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n\r\n                        } else {\r\n\r\n                            if (context.bpd === \"rl\") {\r\n\r\n                                pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n                            } else {\r\n\r\n                                pos = (attr === \"before\") ? \"under\" : \"over\";\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        /* apply position to the parent dom_element, i.e. ruby or rtc */\r\n\r\n                        dom_element.parentElement.style[RUBYPOSITION_PROP] = pos;\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling showBackground\",\r\n                null\r\n                ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ta;\r\n\r\n                    /* handle UAs that do not understand start or end */\r\n\r\n                    if (attr === \"start\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"right\" : \"left\";\r\n\r\n                    } else if (attr === \"end\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"left\" : \"right\";\r\n\r\n                    } else {\r\n\r\n                        ta = attr;\r\n\r\n                    }\r\n\r\n                    dom_element.style.textAlign = ta;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textDecoration\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.textDecoration = attr.join(\" \").replace(\"lineThrough\", \"line-through\");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textOutline\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* defer to tts:textShadow */\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textShadow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var txto = isd_element.styleAttrs[imscStyles.byName.textOutline.qname];\r\n\r\n                    if (attr === \"none\" && txto === \"none\") {\r\n\r\n                        dom_element.style.textShadow = \"\";\r\n\r\n                    } else {\r\n\r\n                        var s = [];\r\n\r\n                        if (txto !== \"none\") {\r\n\r\n                            /* emulate text outline */\r\n\r\n                            var to_color = \"rgba(\" +\r\n                                                txto.color[0].toString() + \",\" +\r\n                                                txto.color[1].toString() + \",\" +\r\n                                                txto.color[2].toString() + \",\" +\r\n                                                (txto.color[3] / 255).toString() +\r\n                                                \")\";\r\n\r\n                            s.push(  \"1px 1px 1px \" + to_color);\r\n                            s.push(  \"-1px 1px 1px \" + to_color);\r\n                            s.push(  \"1px -1px 1px \" + to_color);\r\n                            s.push(  \"-1px -1px 1px \" + to_color);\r\n\r\n                        }\r\n\r\n                        /* add text shadow */\r\n\r\n                        if (attr !== \"none\") {\r\n\r\n                            for (var i = 0; i < attr.length; i++) {\r\n\r\n\r\n                                s.push(attr[i].x_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].y_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].b_radius.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        \"rgba(\" +\r\n                                        attr[i].color[0].toString() + \",\" +\r\n                                        attr[i].color[1].toString() + \",\" +\r\n                                        attr[i].color[2].toString() + \",\" +\r\n                                        (attr[i].color[3] / 255).toString() +\r\n                                        \")\"\r\n                                        );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        dom_element.style.textShadow = s.join(\",\");\r\n\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textCombine\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.textCombineUpright = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textEmphasis\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* applied as part of HTML document construction */\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling unicodeBidi\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ub;\r\n\r\n                    if (attr === 'bidiOverride') {\r\n                        ub = \"bidi-override\";\r\n                    } else {\r\n                        ub = attr;\r\n                    }\r\n\r\n                    dom_element.style.unicodeBidi = ub;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling visibility\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.visibility = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling wrapOption\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (attr === \"wrap\") {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n                            dom_element.style.whiteSpace = \"pre-wrap\";\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"normal\";\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n\r\n                            dom_element.style.whiteSpace = \"pre\";\r\n\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"noWrap\";\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling writingMode\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var wm;\r\n\r\n                    if (attr === \"lrtb\" || attr === \"lr\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"rltb\" || attr === \"rl\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"tblr\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-lr\";\r\n\r\n                    } else if (attr === \"tbrl\" || attr === \"tb\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-rl\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling zIndex\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.zIndex = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (context.displayForcedOnlyMode && attr === false) {\r\n                        dom_element.style.visibility = \"hidden\";\r\n                    }\r\n\r\n                }\r\n        )\r\n    ];\r\n\r\n    var STYLMAP_BY_QNAME = {};\r\n\r\n    for (var i = 0; i < STYLING_MAP_DEFS.length; i++) {\r\n\r\n        STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];\r\n    }\r\n\r\n    /* CSS property names */\r\n\r\n    var RUBYPOSITION_ISWK = \"webkitRubyPosition\" in window.getComputedStyle(document.documentElement);\r\n\r\n    var RUBYPOSITION_PROP = RUBYPOSITION_ISWK ? \"webkitRubyPosition\" : \"rubyPosition\";\r\n\r\n    var TEXTEMPHASISSTYLE_PROP = \"webkitTextEmphasisStyle\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisStyle\" : \"textEmphasisStyle\";\r\n\r\n    var TEXTEMPHASISPOSITION_PROP = \"webkitTextEmphasisPosition\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisPosition\" : \"textEmphasisPosition\";\r\n\r\n    /* error utilities */\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n})(typeof exports === 'undefined' ? this.imscHTML = {} : exports,\r\n        typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscISD\r\n */\r\n\r\n\r\n;\r\n(function (imscISD, imscNames, imscStyles, imscUtils) { // wrapper for non-node envs\r\n\r\n    /** \r\n     * Creates a canonical representation of an IMSC1 document returned by <pre>imscDoc.fromXML()</pre>\r\n     * at a given absolute offset in seconds. This offset does not have to be one of the values returned\r\n     * by <pre>getMediaTimeEvents()</pre>.\r\n     * \r\n     * @param {Object} tt IMSC1 document\r\n     * @param {number} offset Absolute offset (in seconds)\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @returns {Object} Opaque in-memory representation of an ISD\r\n     */\r\n\r\n    imscISD.generateISD = function (tt, offset, errorHandler) {\r\n\r\n        /* TODO check for tt and offset validity */\r\n\r\n        /* create the ISD object from the IMSC1 doc */\r\n\r\n        var isd = new ISD(tt);\r\n\r\n        /* context */\r\n\r\n        var context = {\r\n\r\n            /*rubyfs: []*/ /* font size of the nearest textContainer or container */\r\n\r\n        };\r\n\r\n        /* Filter body contents - Only process what we need within the offset and discard regions not applicable to the content */\r\n        var body = {};\r\n        var activeRegions = {};\r\n\r\n        /* gather any regions that might have showBackground=\"always\" and show a background */\r\n        var initialShowBackground = tt.head.styling.initials[imscStyles.byName.showBackground.qname];\r\n        var initialbackgroundColor = tt.head.styling.initials[imscStyles.byName.backgroundColor.qname];\r\n        for (var layout_child in tt.head.layout.regions)\r\n        {\r\n            if (tt.head.layout.regions.hasOwnProperty(layout_child)) {\r\n                var region = tt.head.layout.regions[layout_child];\r\n                var showBackground = region.styleAttrs[imscStyles.byName.showBackground.qname] || initialShowBackground;\r\n                var backgroundColor = region.styleAttrs[imscStyles.byName.backgroundColor.qname] || initialbackgroundColor;\r\n                activeRegions[region.id] = (\r\n                    (showBackground === 'always' || showBackground === undefined) &&\r\n                    backgroundColor !== undefined &&\r\n                    !(offset < region.begin || offset >= region.end)\r\n                    );\r\n            }\r\n        }\r\n\r\n        /* If the body specifies a region, catch it, since no filtered content will */\r\n        /* likely specify the region. */\r\n        if (tt.body && tt.body.regionID) {\r\n            activeRegions[tt.body.regionID] = true;\r\n        }\r\n\r\n        function filter(offset, element) {\r\n            function offsetFilter(element) {\r\n                return !(offset < element.begin || offset >= element.end);    \r\n            }    \r\n        \r\n            if (element.contents) {\r\n                var clone = {};\r\n                for (var prop in element) {\r\n                    if (element.hasOwnProperty(prop)) {\r\n                        clone[prop] = element[prop];\r\n                    }\r\n                }\r\n                clone.contents = [];\r\n\r\n                element.contents.filter(offsetFilter).forEach(function (el) {\r\n                    var filteredElement = filter(offset, el);\r\n                    if (filteredElement.regionID) {\r\n                        activeRegions[filteredElement.regionID] = true;\r\n                    }\r\n        \r\n                    if (filteredElement !== null) {\r\n                        clone.contents.push(filteredElement);\r\n                    }\r\n                });\r\n                return clone;\r\n            } else {\r\n                return element;\r\n            }\r\n        }\r\n\r\n        if (tt.body !== null) {\r\n            body = filter(offset, tt.body);\r\n        } else {\r\n            body = null;\r\n        }\r\n\r\n        /* rewritten TTML will always have a default - this covers it. because the region is defaulted to \"\" */\r\n        if (activeRegions[\"\"] !== undefined) {\r\n            activeRegions[\"\"] = true;\r\n        }\r\n\r\n        /* process regions */      \r\n        for (var regionID in activeRegions) {\r\n            if (activeRegions[regionID]) {\r\n                /* post-order traversal of the body tree per [construct intermediate document] */\r\n\r\n                var c = isdProcessContentElement(tt, offset, tt.head.layout.regions[regionID], body, null, '', tt.head.layout.regions[regionID], errorHandler, context);\r\n\r\n                if (c !== null) {\r\n\r\n                    /* add the region to the ISD */\r\n\r\n                    isd.contents.push(c.element);\r\n                }\r\n            }\r\n        }\r\n\r\n        return isd;\r\n    };\r\n\r\n    /* set of styles not applicable to ruby container spans */\r\n\r\n    var _rcs_na_styles = [\r\n        imscStyles.byName.color.qname,\r\n        imscStyles.byName.textCombine.qname,\r\n        imscStyles.byName.textDecoration.qname,\r\n        imscStyles.byName.textEmphasis.qname,\r\n        imscStyles.byName.textOutline.qname,\r\n        imscStyles.byName.textShadow.qname\r\n    ];\r\n\r\n    function isdProcessContentElement(doc, offset, region, body, parent, inherited_region_id, elem, errorHandler, context) {\r\n\r\n        /* prune if temporally inactive */\r\n\r\n        if (offset < elem.begin || offset >= elem.end) {\r\n            return null;\r\n        }\r\n\r\n        /* \r\n         * set the associated region as specified by the regionID attribute, or the \r\n         * inherited associated region otherwise\r\n         */\r\n\r\n        var associated_region_id = 'regionID' in elem && elem.regionID !== '' ? elem.regionID : inherited_region_id;\r\n\r\n        /* prune the element if either:\r\n         * - the element is not terminal and the associated region is neither the default\r\n         *   region nor the parent region (this allows children to be associated with a \r\n         *   region later on)\r\n         * - the element is terminal and the associated region is not the parent region\r\n         */\r\n\r\n        /* TODO: improve detection of terminal elements since <region> has no contents */\r\n\r\n        if (parent !== null /* are we in the region element */ &&\r\n            associated_region_id !== region.id &&\r\n            (\r\n                (!('contents' in elem)) ||\r\n                ('contents' in elem && elem.contents.length === 0) ||\r\n                associated_region_id !== ''\r\n                )\r\n            )\r\n            return null;\r\n\r\n        /* create an ISD element, including applying specified styles */\r\n\r\n        var isd_element = new ISDContentElement(elem);\r\n\r\n        /* apply set (animation) styling */\r\n\r\n        if (\"sets\" in elem) {\r\n            for (var i = 0; i < elem.sets.length; i++) {\r\n\r\n                if (offset < elem.sets[i].begin || offset >= elem.sets[i].end)\r\n                    continue;\r\n\r\n                isd_element.styleAttrs[elem.sets[i].qname] = elem.sets[i].value;\r\n\r\n            }\r\n        }\r\n\r\n        /* \r\n         * keep track of specified styling attributes so that we\r\n         * can compute them later\r\n         */\r\n\r\n        var spec_attr = {};\r\n\r\n        for (var qname in isd_element.styleAttrs) {\r\n\r\n            if (! isd_element.styleAttrs.hasOwnProperty(qname)) continue;\r\n\r\n            spec_attr[qname] = true;\r\n\r\n            /* special rule for tts:writingMode (section 7.29.1 of XSL)\r\n             * direction is set consistently with writingMode only\r\n             * if writingMode sets inline-direction to LTR or RTL  \r\n             */\r\n\r\n            if (isd_element.kind === 'region' &&\r\n                qname === imscStyles.byName.writingMode.qname &&\r\n                !(imscStyles.byName.direction.qname in isd_element.styleAttrs)) {\r\n\r\n                var wm = isd_element.styleAttrs[qname];\r\n\r\n                if (wm === \"lrtb\" || wm === \"lr\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"ltr\";\r\n\r\n                } else if (wm === \"rltb\" || wm === \"rl\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"rtl\";\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* inherited styling */\r\n\r\n        if (parent !== null) {\r\n\r\n            for (var j = 0; j < imscStyles.all.length; j++) {\r\n\r\n                var sa = imscStyles.all[j];\r\n\r\n                /* textDecoration has special inheritance rules */\r\n\r\n                if (sa.qname === imscStyles.byName.textDecoration.qname) {\r\n\r\n                    /* handle both textDecoration inheritance and specification */\r\n\r\n                    var ps = parent.styleAttrs[sa.qname];\r\n                    var es = isd_element.styleAttrs[sa.qname];\r\n                    var outs = [];\r\n\r\n                    if (es === undefined) {\r\n\r\n                        outs = ps;\r\n\r\n                    } else if (es.indexOf(\"none\") === -1) {\r\n\r\n                        if ((es.indexOf(\"noUnderline\") === -1 &&\r\n                            ps.indexOf(\"underline\") !== -1) ||\r\n                            es.indexOf(\"underline\") !== -1) {\r\n\r\n                            outs.push(\"underline\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noLineThrough\") === -1 &&\r\n                            ps.indexOf(\"lineThrough\") !== -1) ||\r\n                            es.indexOf(\"lineThrough\") !== -1) {\r\n\r\n                            outs.push(\"lineThrough\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noOverline\") === -1 &&\r\n                            ps.indexOf(\"overline\") !== -1) ||\r\n                            es.indexOf(\"overline\") !== -1) {\r\n\r\n                            outs.push(\"overline\");\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        outs.push(\"none\");\r\n\r\n                    }\r\n\r\n                    isd_element.styleAttrs[sa.qname] = outs;\r\n\r\n                } else if (sa.qname === imscStyles.byName.fontSize.qname &&\r\n                    !(sa.qname in isd_element.styleAttrs) &&\r\n                    isd_element.kind === 'span' &&\r\n                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n                    \r\n                    /* special inheritance rule for ruby text container font size */\r\n                    \r\n                    var ruby_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];\r\n\r\n                    isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(\r\n                        0.5 * ruby_fs.rw,\r\n                        0.5 * ruby_fs.rh);\r\n\r\n                } else if (sa.qname === imscStyles.byName.fontSize.qname &&\r\n                    !(sa.qname in isd_element.styleAttrs) &&\r\n                    isd_element.kind === 'span' &&\r\n                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\r\n                    \r\n                    /* special inheritance rule for ruby text font size */\r\n                    \r\n                    var parent_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];\r\n                    \r\n                    if (parent.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n                        \r\n                        isd_element.styleAttrs[sa.qname] = parent_fs;\r\n                        \r\n                    } else {\r\n                        \r\n                        isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(\r\n                            0.5 * parent_fs.rw,\r\n                            0.5 * parent_fs.rh);\r\n                    }\r\n                    \r\n                } else if (sa.inherit &&\r\n                    (sa.qname in parent.styleAttrs) &&\r\n                    !(sa.qname in isd_element.styleAttrs)) {\r\n\r\n                    isd_element.styleAttrs[sa.qname] = parent.styleAttrs[sa.qname];\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* initial value styling */\r\n\r\n        for (var k = 0; k < imscStyles.all.length; k++) {\r\n            \r\n            var ivs = imscStyles.all[k];\r\n\r\n            /* skip if value is already specified */\r\n\r\n            if (ivs.qname in isd_element.styleAttrs) continue;\r\n\r\n            /* skip tts:position if tts:origin is specified */\r\n\r\n            if (ivs.qname === imscStyles.byName.position.qname &&\r\n                imscStyles.byName.origin.qname in isd_element.styleAttrs)\r\n                continue;\r\n\r\n            /* skip tts:origin if tts:position is specified */\r\n\r\n            if (ivs.qname === imscStyles.byName.origin.qname &&\r\n                imscStyles.byName.position.qname in isd_element.styleAttrs)\r\n                continue;\r\n            \r\n            /* determine initial value */\r\n            \r\n            var iv = doc.head.styling.initials[ivs.qname] || ivs.initial;\r\n\r\n            if (iv === null) {\r\n                /* skip processing if no initial value defined */\r\n\r\n                continue;\r\n            }\r\n\r\n            /* apply initial value to elements other than region only if non-inherited */\r\n\r\n            if (isd_element.kind === 'region' || (ivs.inherit === false && iv !== null)) {\r\n\r\n                var piv = ivs.parse(iv);\r\n\r\n                if (piv !== null) {\r\n\r\n                    isd_element.styleAttrs[ivs.qname] = piv;\r\n\r\n                    /* keep track of the style as specified */\r\n\r\n                    spec_attr[ivs.qname] = true;\r\n\r\n                } else {\r\n\r\n                    reportError(errorHandler, \"Invalid initial value for '\" + ivs.qname + \"' on element '\" + isd_element.kind);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute styles (only for non-inherited styles) */\r\n        /* TODO: get rid of spec_attr */\r\n\r\n        for (var z = 0; z < imscStyles.all.length; z++) {\r\n            \r\n            var cs = imscStyles.all[z];\r\n\r\n            if (!(cs.qname in spec_attr)) continue;\r\n\r\n            if (cs.compute !== null) {\r\n\r\n                var cstyle = cs.compute(\r\n                    /*doc, parent, element, attr, context*/\r\n                    doc,\r\n                    parent,\r\n                    isd_element,\r\n                    isd_element.styleAttrs[cs.qname],\r\n                    context\r\n                    );\r\n\r\n                if (cstyle !== null) {\r\n\r\n                    isd_element.styleAttrs[cs.qname] = cstyle;\r\n                    \r\n                } else {\r\n                    /* if the style cannot be computed, replace it by its initial value */\r\n\r\n                    isd_element.styleAttrs[cs.qname] = cs.compute(\r\n                        /*doc, parent, element, attr, context*/\r\n                        doc,\r\n                        parent,\r\n                        isd_element,\r\n                        cs.parse(cs.initial),\r\n                        context\r\n                    );\r\n\r\n                    reportError(errorHandler, \"Style '\" + cs.qname + \"' on element '\" + isd_element.kind + \"' cannot be computed\");\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        /* prune if tts:display is none */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.display.qname] === \"none\")\r\n            return null;\r\n\r\n        /* process contents of the element */\r\n\r\n        var contents = null;\r\n\r\n        if (parent === null) {\r\n\r\n            /* we are processing the region */\r\n\r\n            if (body === null) {\r\n\r\n                /* if there is no body, still process the region but with empty content */\r\n\r\n                contents = [];\r\n\r\n            } else {\r\n\r\n                /*use the body element as contents */\r\n\r\n                contents = [body];\r\n\r\n            }\r\n\r\n        } else if ('contents' in elem) {\r\n\r\n            contents = elem.contents;\r\n\r\n        }\r\n\r\n        for (var x = 0; contents !== null && x < contents.length; x++) {\r\n\r\n            var c = isdProcessContentElement(doc, offset, region, body, isd_element, associated_region_id, contents[x], errorHandler, context);\r\n\r\n            /* \r\n             * keep child element only if they are non-null and their region match \r\n             * the region of this element\r\n             */\r\n\r\n            if (c !== null) {\r\n\r\n                isd_element.contents.push(c.element);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* remove styles that are not applicable */\r\n\r\n        for (var qnameb in isd_element.styleAttrs) {\r\n            if (!isd_element.styleAttrs.hasOwnProperty(qnameb)) continue;\r\n\r\n            /* true if not applicable */\r\n\r\n            var na = false;\r\n\r\n            /* special applicability of certain style properties to ruby container spans */\r\n            /* TODO: in the future ruby elements should be translated to elements instead of kept as spans */\r\n\r\n            if (isd_element.kind === 'span') {\r\n\r\n                var rsp = isd_element.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n                na = ( rsp === 'container' || rsp === 'textContainer' || rsp === 'baseContainer' ) && \r\n                    _rcs_na_styles.indexOf(qnameb) !== -1;\r\n\r\n                if (! na) {\r\n\r\n                    na = rsp !== 'container' &&\r\n                        qnameb === imscStyles.byName.rubyAlign.qname;\r\n\r\n                }\r\n\r\n                if (! na) {\r\n\r\n                    na =  (! (rsp === 'textContainer' || rsp === 'text')) &&\r\n                        qnameb === imscStyles.byName.rubyPosition.qname;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* normal applicability */\r\n            \r\n            if (! na) {\r\n\r\n                var da = imscStyles.byQName[qnameb];\r\n\r\n                if (\"applies\" in da){\r\n\r\n                    na = da.applies.indexOf(isd_element.kind) === -1;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            if (na) {\r\n                delete isd_element.styleAttrs[qnameb];\r\n            }\r\n\r\n        }\r\n\r\n        /* trim whitespace around explicit line breaks */\r\n\r\n        var ruby = isd_element.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n        if (isd_element.kind === 'p' ||\r\n            (isd_element.kind === 'span' && (ruby === \"textContainer\" || ruby === \"text\"))\r\n            ) {\r\n\r\n            var elist = [];\r\n\r\n            constructSpanList(isd_element, elist);\r\n\r\n            collapseLWSP(elist);\r\n\r\n            pruneEmptySpans(isd_element);\r\n\r\n        }\r\n\r\n        /* keep element if:\r\n         * * contains a background image\r\n         * * <br/>\r\n         * * if there are children\r\n         * * if it is an image\r\n         * * if <span> and has text\r\n         * * if region and showBackground = always\r\n         */\r\n\r\n        if ((isd_element.kind === 'div' && imscStyles.byName.backgroundImage.qname in isd_element.styleAttrs) ||\r\n            isd_element.kind === 'br' ||\r\n            isd_element.kind === 'image' ||\r\n            ('contents' in isd_element && isd_element.contents.length > 0) ||\r\n            (isd_element.kind === 'span' && isd_element.text !== null) ||\r\n            (isd_element.kind === 'region' &&\r\n                isd_element.styleAttrs[imscStyles.byName.showBackground.qname] === 'always')) {\r\n\r\n            return {\r\n                region_id: associated_region_id,\r\n                element: isd_element\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function collapseLWSP(elist) {\r\n\r\n        function isPrevCharLWSP(prev_element) {\r\n            return prev_element.kind === 'br' || /[\\r\\n\\t ]$/.test(prev_element.text);\r\n        }\r\n\r\n        function isNextCharLWSP(next_element) {\r\n            return next_element.kind === 'br' || (next_element.space === \"preserve\" && /^[\\r\\n]/.test(next_element.text));\r\n        }\r\n\r\n        /* collapse spaces and remove leading LWSPs */\r\n\r\n        var element;\r\n\r\n        for (var i = 0; i < elist.length;) {\r\n\r\n            element = elist[i];\r\n\r\n            if (element.kind === \"br\" || element.space === \"preserve\") {\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            var trimmed_text = element.text.replace(/[\\t\\r\\n ]+/g, ' ');\r\n\r\n            if (/^[ ]/.test(trimmed_text)) {\r\n\r\n                if (i === 0 || isPrevCharLWSP(elist[i - 1])) {\r\n                    trimmed_text = trimmed_text.substring(1);\r\n                }\r\n\r\n            }\r\n\r\n            element.text = trimmed_text;\r\n\r\n            if (trimmed_text.length === 0) {\r\n                elist.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n\r\n        }\r\n\r\n        /* remove trailing LWSPs */\r\n\r\n        for (i = 0; i < elist.length; i++) {\r\n\r\n            element = elist[i];\r\n\r\n            if (element.kind === \"br\" || element.space === \"preserve\") {\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            if (/[ ]$/.test(element.text)) {\r\n\r\n                if (i === (elist.length - 1) || isNextCharLWSP(elist[i + 1])) {\r\n                    element.text = element.text.slice(0, -1);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function constructSpanList(element, elist) {\r\n\r\n        if (! (\"contents\" in element)) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < element.contents.length; i++) {\r\n\r\n            var child = element.contents[i];\r\n            var ruby = child.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n            if (child.kind === 'span' && (ruby === \"textContainer\" || ruby === \"text\")) {\r\n\r\n                /* skip ruby text and text containers, which are handled on their own */\r\n            \r\n                continue;\r\n\r\n            } else if ('contents' in child) {\r\n    \r\n                constructSpanList(child, elist);\r\n    \r\n            } else if ((child.kind === 'span' && child.text.length !== 0) || child.kind === 'br') {\r\n\r\n                /* skip empty spans */\r\n\r\n                elist.push(child);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function pruneEmptySpans(element) {\r\n\r\n        if (element.kind === 'br') {\r\n\r\n            return false;\r\n\r\n        } else if ('text' in element) {\r\n\r\n            return  element.text.length === 0;\r\n\r\n        } else if ('contents' in element) {\r\n\r\n            var i = element.contents.length;\r\n\r\n            while (i--) {\r\n\r\n                if (pruneEmptySpans(element.contents[i])) {\r\n                    element.contents.splice(i, 1);\r\n                }\r\n\r\n            }\r\n\r\n            return element.contents.length === 0;\r\n\r\n        }\r\n    }\r\n\r\n    function ISD(tt) {\r\n        this.contents = [];\r\n        this.aspectRatio = tt.aspectRatio;\r\n        this.lang = tt.lang;\r\n    }\r\n\r\n    function ISDContentElement(ttelem) {\r\n\r\n        /* assume the element is a region if it does not have a kind */\r\n\r\n        this.kind = ttelem.kind || 'region';\r\n\r\n        /* copy lang */\r\n\r\n        this.lang = ttelem.lang;\r\n\r\n        /* copy id */\r\n\r\n        if (ttelem.id) {\r\n            this.id = ttelem.id;\r\n        }\r\n\r\n        /* deep copy of style attributes */\r\n        this.styleAttrs = {};\r\n\r\n        for (var sname in ttelem.styleAttrs) {\r\n\r\n            if (! ttelem.styleAttrs.hasOwnProperty(sname)) continue;\r\n\r\n            this.styleAttrs[sname] =\r\n                ttelem.styleAttrs[sname];\r\n        }\r\n        \r\n        /* copy src and type if image */\r\n        \r\n        if ('src' in ttelem) {\r\n            \r\n            this.src = ttelem.src;\r\n            \r\n        }\r\n        \r\n         if ('type' in ttelem) {\r\n            \r\n            this.type = ttelem.type;\r\n            \r\n        }\r\n\r\n        /* TODO: clean this! \r\n         * TODO: ISDElement and document element should be better tied together */\r\n\r\n        if ('text' in ttelem) {\r\n\r\n            this.text = ttelem.text;\r\n\r\n        } else if (this.kind === 'region' || 'contents' in ttelem) {\r\n\r\n            this.contents = [];\r\n        }\r\n\r\n        if ('space' in ttelem) {\r\n\r\n            this.space = ttelem.space;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscISD = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n    typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n    typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils\r\n    );\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nexports.generateISD = require('./isd').generateISD;\r\nexports.fromXML = require('./doc').fromXML;\r\nexports.renderHTML = require('./html').render;","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscNames\r\n */\r\n\r\n;\r\n(function (imscNames) { // wrapper for non-node envs\r\n\r\n    imscNames.ns_tt = \"http://www.w3.org/ns/ttml\";\r\n    imscNames.ns_tts = \"http://www.w3.org/ns/ttml#styling\";\r\n    imscNames.ns_ttp = \"http://www.w3.org/ns/ttml#parameter\";\r\n    imscNames.ns_xml = \"http://www.w3.org/XML/1998/namespace\";\r\n    imscNames.ns_itts = \"http://www.w3.org/ns/ttml/profile/imsc1#styling\";\r\n    imscNames.ns_ittp = \"http://www.w3.org/ns/ttml/profile/imsc1#parameter\";\r\n    imscNames.ns_smpte = \"http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt\";\r\n    imscNames.ns_ebutts = \"urn:ebu:tt:style\";\r\n    \r\n})(typeof exports === 'undefined' ? this.imscNames = {} : exports);\r\n\r\n\r\n\r\n\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscStyles\r\n */\r\n\r\n;\r\n(function (imscStyles, imscNames, imscUtils) { // wrapper for non-node envs\r\n\r\n    function StylingAttributeDefinition(ns, name, initialValue, appliesTo, isInherit, isAnimatable, parseFunc, computeFunc) {\r\n        this.name = name;\r\n        this.ns = ns;\r\n        this.qname = ns + \" \" + name;\r\n        this.inherit = isInherit;\r\n        this.animatable = isAnimatable;\r\n        this.initial = initialValue;\r\n        this.applies = appliesTo;\r\n        this.parse = parseFunc;\r\n        this.compute = computeFunc;\r\n    }\r\n\r\n    imscStyles.all = [\r\n\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"backgroundColor\",\r\n            \"transparent\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            false,\r\n            true,\r\n            imscUtils.parseColor,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"color\",\r\n            \"white\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            imscUtils.parseColor,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"direction\",\r\n            \"ltr\",\r\n            ['p', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"display\",\r\n            \"auto\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"displayAlign\",\r\n            \"before\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"extent\",\r\n            \"auto\",\r\n            ['tt', 'region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                if (str === \"auto\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var s = str.split(\" \");\r\n                    if (s.length !== 2)\r\n                        return null;\r\n                    var w = imscUtils.parseLength(s[0]);\r\n                    var h = imscUtils.parseLength(s[1]);\r\n                    if (!h || !w)\r\n                        return null;\r\n                    return {'h': h, 'w': w};\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var h;\r\n                var w;\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    h = new imscUtils.ComputedLength(0, 1);\r\n\r\n                } else {\r\n\r\n                    h = imscUtils.toComputedLength(\r\n                        attr.h.value,\r\n                        attr.h.unit,\r\n                        null,\r\n                        doc.dimensions.h,\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n\r\n                    if (h === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n                }\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    w = new imscUtils.ComputedLength(1, 0);\r\n\r\n                } else {\r\n\r\n                    w = imscUtils.toComputedLength(\r\n                        attr.w.value,\r\n                        attr.w.unit,\r\n                        null,\r\n                        doc.dimensions.w,\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (w === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontFamily\",\r\n            \"default\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var ffs = str.split(\",\");\r\n                var rslt = [];\r\n\r\n                for (var i = 0; i < ffs.length; i++) {\r\n\r\n                    if (ffs[i].charAt(0) !== \"'\" && ffs[i].charAt(0) !== '\"') {\r\n\r\n                        if (ffs[i] === \"default\") {\r\n\r\n                            /* per IMSC1 */\r\n\r\n                            rslt.push(\"monospaceSerif\");\r\n\r\n                        } else {\r\n\r\n                            rslt.push(ffs[i]);\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        rslt.push(ffs[i]);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"shear\",\r\n            \"0%\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr) {\r\n\r\n                var fs;\r\n\r\n                if (attr.unit === \"%\") {\r\n\r\n                    fs = Math.abs(attr.value) > 100 ? Math.sign(attr.value) * 100 : attr.value;\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                return fs;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontSize\",\r\n            \"1c\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var fs;\r\n\r\n                fs = imscUtils.toComputedLength(\r\n                    attr.value,\r\n                    attr.unit,\r\n                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,\r\n                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,\r\n                    doc.cellLength.h,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                return fs;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontStyle\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                /* TODO: handle font style */\r\n\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontWeight\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                /* TODO: handle font weight */\r\n\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"lineHeight\",\r\n            \"normal\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                if (str === \"normal\") {\r\n                    return str;\r\n                } else {\r\n                    return imscUtils.parseLength(str);\r\n                }\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var lh;\r\n\r\n                if (attr === \"normal\") {\r\n\r\n                    /* inherit normal per https://github.com/w3c/ttml1/issues/220 */\r\n\r\n                    lh = attr;\r\n\r\n                } else {\r\n\r\n                    lh = imscUtils.toComputedLength(\r\n                        attr.value,\r\n                        attr.unit,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        doc.cellLength.h,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (lh === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                /* TODO: create a Length constructor */\r\n\r\n                return lh;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"opacity\",\r\n            1.0,\r\n            ['region'],\r\n            false,\r\n            true,\r\n            parseFloat,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"origin\",\r\n            \"auto\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                if (str === \"auto\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var s = str.split(\" \");\r\n                    if (s.length !== 2)\r\n                        return null;\r\n                    var w = imscUtils.parseLength(s[0]);\r\n                    var h = imscUtils.parseLength(s[1]);\r\n                    if (!h || !w)\r\n                        return null;\r\n                    return {'h': h, 'w': w};\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var h;\r\n                var w;\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    h = new imscUtils.ComputedLength(0,0);\r\n\r\n                } else {\r\n\r\n                    h = imscUtils.toComputedLength(\r\n                        attr.h.value,\r\n                        attr.h.unit,\r\n                        null,\r\n                        doc.dimensions.h,\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (h === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    w = new imscUtils.ComputedLength(0,0);\r\n\r\n                } else {\r\n\r\n                    w = imscUtils.toComputedLength(\r\n                        attr.w.value,\r\n                        attr.w.unit,\r\n                        null,\r\n                        doc.dimensions.w,\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (w === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"overflow\",\r\n            \"hidden\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"padding\",\r\n            \"0px\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                var s = str.split(\" \");\r\n                if (s.length > 4)\r\n                    return null;\r\n                var r = [];\r\n                for (var i = 0; i < s.length; i++) {\r\n\r\n                    var l = imscUtils.parseLength(s[i]);\r\n                    if (!l)\r\n                        return null;\r\n                    r.push(l);\r\n                }\r\n\r\n                return r;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var padding;\r\n\r\n                /* TODO: make sure we are in region */\r\n\r\n                /*\r\n                 * expand padding shortcuts to \r\n                 * [before, end, after, start]\r\n                 * \r\n                 */\r\n\r\n                if (attr.length === 1) {\r\n\r\n                    padding = [attr[0], attr[0], attr[0], attr[0]];\r\n\r\n                } else if (attr.length === 2) {\r\n\r\n                    padding = [attr[0], attr[1], attr[0], attr[1]];\r\n\r\n                } else if (attr.length === 3) {\r\n\r\n                    padding = [attr[0], attr[1], attr[2], attr[1]];\r\n\r\n                } else if (attr.length === 4) {\r\n\r\n                    padding = [attr[0], attr[1], attr[2], attr[3]];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                /* TODO: take into account tts:direction */\r\n\r\n                /* \r\n                 * transform [before, end, after, start] according to writingMode to \r\n                 * [top,left,bottom,right]\r\n                 * \r\n                 */\r\n\r\n                var dir = element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n                if (dir === \"lrtb\" || dir === \"lr\") {\r\n\r\n                    padding = [padding[0], padding[3], padding[2], padding[1]];\r\n\r\n                } else if (dir === \"rltb\" || dir === \"rl\") {\r\n\r\n                    padding = [padding[0], padding[1], padding[2], padding[3]];\r\n\r\n                } else if (dir === \"tblr\") {\r\n\r\n                    padding = [padding[3], padding[0], padding[1], padding[2]];\r\n\r\n                } else if (dir === \"tbrl\" || dir === \"tb\") {\r\n\r\n                    padding = [padding[3], padding[2], padding[1], padding[0]];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                var out = [];\r\n\r\n                for (var i = 0 ; i < padding.length; i++) {\r\n\r\n                    if (padding[i].value === 0) {\r\n\r\n                        out[i] = new imscUtils.ComputedLength(0,0);\r\n\r\n                    } else {\r\n\r\n                        out[i] = imscUtils.toComputedLength(\r\n                            padding[i].value,\r\n                            padding[i].unit,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                            i === 0 || i === 2 ? element.styleAttrs[imscStyles.byName.extent.qname].h : element.styleAttrs[imscStyles.byName.extent.qname].w,\r\n                            i === 0 || i === 2 ? doc.cellLength.h : doc.cellLength.w,\r\n                            i === 0 || i === 2 ? doc.pxLength.h: doc.pxLength.w\r\n                            );\r\n\r\n                        if (out[i] === null) return null;\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                return out;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"position\",\r\n            \"top left\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                return imscUtils.parsePosition(str);\r\n\r\n            },\r\n            function (doc, parent, element, attr) {\r\n                var h;\r\n                var w;\r\n                \r\n                h = imscUtils.toComputedLength(\r\n                    attr.v.offset.value,\r\n                    attr.v.offset.unit,\r\n                    null,\r\n                    new imscUtils.ComputedLength(\r\n                        - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,\r\n                        doc.dimensions.h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh \r\n                    ),\r\n                    null,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                if (h === null) return null;\r\n\r\n\r\n                if (attr.v.edge === \"bottom\") {\r\n\r\n                    h = new imscUtils.ComputedLength(\r\n                        - h.rw - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,\r\n                        doc.dimensions.h.rh - h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh\r\n                    );\r\n            \r\n                }\r\n\r\n                w = imscUtils.toComputedLength(\r\n                    attr.h.offset.value,\r\n                    attr.h.offset.unit,\r\n                    null,\r\n                    new imscUtils.ComputedLength(\r\n                        doc.dimensions.w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,\r\n                        - element.styleAttrs[imscStyles.byName.extent.qname].w.rh\r\n                    ),\r\n                    null,\r\n                    doc.pxLength.w\r\n                    );\r\n\r\n                if (h === null) return null;\r\n\r\n                if (attr.h.edge === \"right\") {\r\n                    \r\n                    w = new imscUtils.ComputedLength(\r\n                        doc.dimensions.w.rw - w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,\r\n                        - w.rh - element.styleAttrs[imscStyles.byName.extent.qname].w.rh\r\n                    );\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"ruby\",\r\n            \"none\",\r\n            ['span'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyAlign\",\r\n            \"center\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                \r\n                if (! (str === \"center\" || str === \"spaceAround\")) {\r\n                    return null;\r\n                }\r\n                \r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyPosition\",\r\n            \"outside\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyReserve\",\r\n            \"none\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var s = str.split(\" \");\r\n\r\n                var r = [null, null];\r\n\r\n                if (s.length === 0 || s.length > 2)\r\n                    return null;\r\n\r\n                if (s[0] === \"none\" ||\r\n                    s[0] === \"both\" ||\r\n                    s[0] === \"after\" ||\r\n                    s[0] === \"before\" ||\r\n                    s[0] === \"outside\") {\r\n\r\n                    r[0] = s[0];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                if (s.length === 2 && s[0] !== \"none\") {\r\n\r\n                    var l = imscUtils.parseLength(s[1]);\r\n\r\n                    if (l) {\r\n\r\n                        r[1] = l;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                return r;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                if (attr[0] === \"none\") {\r\n\r\n                    return attr;\r\n\r\n                }\r\n\r\n                var fs = null;\r\n\r\n                if (attr[1] === null) {\r\n\r\n                    fs = new imscUtils.ComputedLength(\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname].rw * 0.5,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname].rh * 0.5\r\n                    );\r\n\r\n                } else {\r\n\r\n                    fs = imscUtils.toComputedLength(attr[1].value,\r\n                        attr[1].unit,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        doc.cellLength.h,\r\n                        doc.pxLength.h\r\n                        );\r\n                \r\n                }\r\n\r\n                if (fs === null) return null;\r\n\r\n                return [attr[0], fs];\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"showBackground\",\r\n            \"always\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textAlign\",\r\n            \"start\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n                /* Section 7.16.9 of XSL */\r\n\r\n                if (attr === \"left\") {\r\n\r\n                    return \"start\";\r\n\r\n                } else if (attr === \"right\") {\r\n\r\n                    return \"end\";\r\n\r\n                } else {\r\n\r\n                    return attr;\r\n\r\n                }\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textCombine\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                if (str === \"none\" || str === \"all\") {\r\n\r\n                    return str;\r\n                }\r\n\r\n                return null;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textDecoration\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str.split(\" \");\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textEmphasis\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var e = str.split(\" \");\r\n\r\n                var rslt = {style: null, symbol: null, color: null, position: null};\r\n\r\n                for (var i = 0; i < e.length; i++) {\r\n\r\n                    if (e[i] === \"none\" || e[i] === \"auto\") {\r\n\r\n                        rslt.style = e[i];\r\n\r\n                    } else if (e[i] === \"filled\" ||\r\n                        e[i] === \"open\") {\r\n\r\n                        rslt.style = e[i];\r\n\r\n                    } else if (e[i] === \"circle\" ||\r\n                        e[i] === \"dot\" ||\r\n                        e[i] === \"sesame\") {\r\n\r\n                        rslt.symbol = e[i];\r\n\r\n                    } else if (e[i] === \"current\") {\r\n\r\n                        rslt.color = e[i];\r\n\r\n                    } else if (e[i] === \"outside\" || e[i] === \"before\" || e[i] === \"after\") {\r\n\r\n                        rslt.position = e[i];\r\n\r\n                    } else {\r\n\r\n                        rslt.color = imscUtils.parseColor(e[i]);\r\n\r\n                        if (rslt.color === null)\r\n                            return null;\r\n\r\n                    }\r\n                }\r\n\r\n                if (rslt.style == null && rslt.symbol == null) {\r\n\r\n                    rslt.style = \"auto\";\r\n\r\n                } else {\r\n\r\n                    rslt.symbol = rslt.symbol || \"circle\";\r\n                    rslt.style = rslt.style || \"filled\";\r\n\r\n                }\r\n\r\n                rslt.position = rslt.position || \"outside\";\r\n                rslt.color = rslt.color || \"current\";\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textOutline\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n\r\n                /*\r\n                 * returns {c: <color>?, thichness: <length>} | \"none\"\r\n                 * \r\n                 */\r\n\r\n                if (str === \"none\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var r = {};\r\n                    var s = str.split(\" \");\r\n                    if (s.length === 0 || s.length > 2)\r\n                        return null;\r\n                    var c = imscUtils.parseColor(s[0]);\r\n\r\n                    r.color = c;\r\n\r\n                    if (c !== null)\r\n                        s.shift();\r\n\r\n                    if (s.length !== 1)\r\n                        return null;\r\n\r\n                    var l = imscUtils.parseLength(s[0]);\r\n\r\n                    if (!l)\r\n                        return null;\r\n\r\n                    r.thickness = l;\r\n\r\n                    return r;\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                /*\r\n                 * returns {color: <color>, thickness: <norm length>}\r\n                 * \r\n                 */\r\n\r\n                if (attr === \"none\")\r\n                    return attr;\r\n\r\n                var rslt = {};\r\n\r\n                if (attr.color === null) {\r\n\r\n                    rslt.color = element.styleAttrs[imscStyles.byName.color.qname];\r\n\r\n                } else {\r\n\r\n                    rslt.color = attr.color;\r\n\r\n                }\r\n\r\n                rslt.thickness = imscUtils.toComputedLength(\r\n                    attr.thickness.value,\r\n                    attr.thickness.unit,\r\n                    element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                    element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                    doc.cellLength.h,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                if (rslt.thickness === null)\r\n                    return null;\r\n\r\n                return rslt;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textShadow\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            imscUtils.parseTextShadow,\r\n            function (doc, parent, element, attr) {\r\n\r\n                /*\r\n                 * returns [{x_off: <length>, y_off: <length>, b_radius: <length>, color: <color>}*] or \"none\"\r\n                 * \r\n                 */\r\n\r\n                if (attr === \"none\")\r\n                    return attr;\r\n\r\n                var r = [];\r\n\r\n                for (var i = 0; i < attr.length; i++) {\r\n\r\n                    var shadow = {};\r\n\r\n                    shadow.x_off = imscUtils.toComputedLength(\r\n                        attr[i][0].value,\r\n                        attr[i][0].unit,\r\n                        null,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (shadow.x_off === null)\r\n                        return null;\r\n\r\n                    shadow.y_off = imscUtils.toComputedLength(\r\n                        attr[i][1].value,\r\n                        attr[i][1].unit,\r\n                        null,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (shadow.y_off === null)\r\n                        return null;\r\n\r\n                    if (attr[i][2] === null) {\r\n\r\n                        shadow.b_radius = 0;\r\n\r\n                    } else {\r\n\r\n                        shadow.b_radius = imscUtils.toComputedLength(\r\n                            attr[i][2].value,\r\n                            attr[i][2].unit,\r\n                            null,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                            null,\r\n                            doc.pxLength.h\r\n                            );\r\n\r\n                        if (shadow.b_radius === null)\r\n                            return null;\r\n\r\n                    }\r\n\r\n                    if (attr[i][3] === null) {\r\n\r\n                        shadow.color = element.styleAttrs[imscStyles.byName.color.qname];\r\n\r\n                    } else {\r\n\r\n                        shadow.color = attr[i][3];\r\n\r\n                    }\r\n\r\n                    r.push(shadow);\r\n\r\n                }\r\n\r\n                return r;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"unicodeBidi\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"visibility\",\r\n            \"visible\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"wrapOption\",\r\n            \"wrap\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"writingMode\",\r\n            \"lrtb\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"zIndex\",\r\n            \"auto\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                var rslt;\r\n\r\n                if (str === 'auto') {\r\n\r\n                    rslt = str;\r\n\r\n                } else {\r\n\r\n                    rslt = parseInt(str);\r\n\r\n                    if (isNaN(rslt)) {\r\n                        rslt = null;\r\n                    }\r\n\r\n                }\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_ebutts,\r\n            \"linePadding\",\r\n            \"0c\",\r\n            ['p'],\r\n            true,\r\n            false,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                return imscUtils.toComputedLength(attr.value, attr.unit, null, null, doc.cellLength.w, null);\r\n\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_ebutts,\r\n            \"multiRowAlign\",\r\n            \"auto\",\r\n            ['p'],\r\n            true,\r\n            false,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_smpte,\r\n            \"backgroundImage\",\r\n            null,\r\n            ['div'],\r\n            false,\r\n            false,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_itts,\r\n            \"forcedDisplay\",\r\n            \"false\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str === 'true' ? true : false;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_itts,\r\n            \"fillLineGap\",\r\n            \"false\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str === 'true' ? true : false;\r\n            },\r\n            null\r\n            )\r\n    ];\r\n\r\n    /* TODO: allow null parse function */\r\n\r\n    imscStyles.byQName = {};\r\n    for (var i in imscStyles.all) {\r\n\r\n        imscStyles.byQName[imscStyles.all[i].qname] = imscStyles.all[i];\r\n    }\r\n\r\n    imscStyles.byName = {};\r\n    for (var j in imscStyles.all) {\r\n\r\n        imscStyles.byName[imscStyles.all[j].name] = imscStyles.all[j];\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscStyles = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n    typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscUtils\r\n */\r\n\r\n;\r\n(function (imscUtils) { // wrapper for non-node envs\r\n\r\n    /* Documents the error handler interface */\r\n\r\n    /**\r\n     * @classdesc Generic interface for handling events. The interface exposes four\r\n     * methods:\r\n     * * <pre>info</pre>: unusual event that does not result in an inconsistent state\r\n     * * <pre>warn</pre>: unexpected event that should not result in an inconsistent state\r\n     * * <pre>error</pre>: unexpected event that may result in an inconsistent state\r\n     * * <pre>fatal</pre>: unexpected event that results in an inconsistent state\r\n     *   and termination of processing\r\n     * Each method takes a single <pre>string</pre> describing the event as argument,\r\n     * and returns a single <pre>boolean</pre>, which terminates processing if <pre>true</pre>.\r\n     *\r\n     * @name ErrorHandler\r\n     * @class\r\n     */\r\n\r\n\r\n    /*\r\n     * Parses a TTML color expression\r\n     * \r\n     */\r\n\r\n    var HEX_COLOR_RE = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/;\r\n    var DEC_COLOR_RE = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\r\n    var DEC_COLORA_RE = /rgba\\(\\s*(\\d+),\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\r\n    var NAMED_COLOR = {\r\n        transparent: [0, 0, 0, 0],\r\n        black: [0, 0, 0, 255],\r\n        silver: [192, 192, 192, 255],\r\n        gray: [128, 128, 128, 255],\r\n        white: [255, 255, 255, 255],\r\n        maroon: [128, 0, 0, 255],\r\n        red: [255, 0, 0, 255],\r\n        purple: [128, 0, 128, 255],\r\n        fuchsia: [255, 0, 255, 255],\r\n        magenta: [255, 0, 255, 255],\r\n        green: [0, 128, 0, 255],\r\n        lime: [0, 255, 0, 255],\r\n        olive: [128, 128, 0, 255],\r\n        yellow: [255, 255, 0, 255],\r\n        navy: [0, 0, 128, 255],\r\n        blue: [0, 0, 255, 255],\r\n        teal: [0, 128, 128, 255],\r\n        aqua: [0, 255, 255, 255],\r\n        cyan: [0, 255, 255, 255]\r\n    };\r\n\r\n    imscUtils.parseColor = function (str) {\r\n\r\n        var m;\r\n        \r\n        var r = null;\r\n        \r\n        var nc = NAMED_COLOR[str.toLowerCase()];\r\n        \r\n        if (nc !== undefined) {\r\n\r\n            r = nc;\r\n\r\n        } else if ((m = HEX_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1], 16),\r\n                parseInt(m[2], 16),\r\n                parseInt(m[3], 16),\r\n                (m[4] !== undefined ? parseInt(m[4], 16) : 255)];\r\n            \r\n        } else if ((m = DEC_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                255];\r\n            \r\n        } else if ((m = DEC_COLORA_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                parseInt(m[4])];\r\n            \r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    var LENGTH_RE = /^((?:\\+|\\-)?\\d*(?:\\.\\d+)?)(px|em|c|%|rh|rw)$/;\r\n\r\n    imscUtils.parseLength = function (str) {\r\n\r\n        var m;\r\n\r\n        var r = null;\r\n\r\n        if ((m = LENGTH_RE.exec(str)) !== null) {\r\n\r\n            r = {value: parseFloat(m[1]), unit: m[2]};\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    imscUtils.parseTextShadow = function (str) {\r\n\r\n        var shadows = str.match(/([^\\(,\\)]|\\([^\\)]+\\))+/g);\r\n        \r\n        var r = [];\r\n\r\n        for (var i = 0; i < shadows.length; i++) {\r\n\r\n            var shadow = shadows[i].split(\" \");\r\n\r\n            if (shadow.length === 1 && shadow[0] === \"none\") {\r\n\r\n                return \"none\";\r\n\r\n            } else if (shadow.length > 1 && shadow.length < 5) {\r\n\r\n                var out_shadow = [null, null, null, null];\r\n\r\n                /* x offset */\r\n\r\n                var l = imscUtils.parseLength(shadow.shift());\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                out_shadow[0] = l;\r\n\r\n                /* y offset */\r\n\r\n                l = imscUtils.parseLength(shadow.shift());\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                out_shadow[1] = l;\r\n\r\n                /* is there a third component */\r\n\r\n                if (shadow.length === 0) {\r\n                    r.push(out_shadow);\r\n                    continue;\r\n                }\r\n\r\n                l = imscUtils.parseLength(shadow[0]);\r\n\r\n                if (l !== null) {\r\n\r\n                    out_shadow[2] = l;\r\n\r\n                    shadow.shift();\r\n\r\n                }\r\n\r\n                if (shadow.length === 0) {\r\n                    r.push(out_shadow);\r\n                    continue;\r\n                }\r\n\r\n                var c = imscUtils.parseColor(shadow[0]);\r\n\r\n                if (c === null)\r\n                    return null;\r\n\r\n                out_shadow[3] = c;\r\n\r\n                r.push(out_shadow);\r\n            }\r\n\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    imscUtils.parsePosition = function (str) {\r\n\r\n        /* see https://www.w3.org/TR/ttml2/#style-value-position */\r\n\r\n        var s = str.split(\" \");\r\n\r\n        var isKeyword = function (str) {\r\n\r\n            return str === \"center\" ||\r\n                    str === \"left\" ||\r\n                    str === \"top\" ||\r\n                    str === \"bottom\" ||\r\n                    str === \"right\";\r\n\r\n        };\r\n\r\n        if (s.length > 4) {\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n        /* initial clean-up pass */\r\n\r\n        for (var j = 0 ; j < s.length; j++) {\r\n\r\n            if (!isKeyword(s[j])) {\r\n\r\n                var l = imscUtils.parseLength(s[j]);\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                s[j] = l;\r\n            }\r\n\r\n        }\r\n\r\n        /* position default */\r\n\r\n        var pos = {\r\n            h: {edge: \"left\", offset: {value: 50, unit: \"%\"}},\r\n            v: {edge: \"top\", offset: {value: 50, unit: \"%\"}}\r\n        };\r\n\r\n        /* update position */\r\n\r\n        for (var i = 0; i < s.length; ) {\r\n\r\n            /* extract the current component */\r\n\r\n            var comp = s[i++];\r\n\r\n            if (isKeyword(comp)) {\r\n\r\n                /* we have a keyword */\r\n\r\n                var offset = {value: 0, unit: \"%\"};\r\n\r\n                /* peek at the next component */\r\n\r\n                if (s.length !== 2 && i < s.length && (!isKeyword(s[i]))) {\r\n\r\n                    /* followed by an offset */\r\n\r\n                    offset = s[i++];\r\n\r\n                }\r\n\r\n                /* skip if center */\r\n\r\n                if (comp === \"right\") {\r\n\r\n                    pos.h.edge = comp;\r\n\r\n                    pos.h.offset = offset;\r\n\r\n                } else if (comp === \"bottom\") {\r\n\r\n                    pos.v.edge = comp;\r\n\r\n\r\n                    pos.v.offset = offset;\r\n\r\n\r\n                } else if (comp === \"left\") {\r\n\r\n                    pos.h.offset = offset;\r\n\r\n\r\n                } else if (comp === \"top\") {\r\n\r\n                    pos.v.offset = offset;\r\n\r\n\r\n                }\r\n\r\n            } else if (s.length === 1 || s.length === 2) {\r\n\r\n                /* we have a bare value */\r\n\r\n                if (i === 1) {\r\n\r\n                    /* assign it to left edge if first bare value */\r\n\r\n                    pos.h.offset = comp;\r\n\r\n                } else {\r\n\r\n                    /* assign it to top edge if second bare value */\r\n\r\n                    pos.v.offset = comp;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                /* error condition */\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return pos;\r\n    };\r\n\r\n\r\n    imscUtils.ComputedLength = function (rw, rh) {\r\n        this.rw = rw;\r\n        this.rh = rh;\r\n    };\r\n\r\n    imscUtils.ComputedLength.prototype.toUsedLength = function (width, height) {\r\n        return width * this.rw + height * this.rh;\r\n    };\r\n\r\n    imscUtils.ComputedLength.prototype.isZero = function () {\r\n        return this.rw === 0 && this.rh === 0;\r\n    };\r\n\r\n    /**\r\n     * Computes a specified length to a root container relative length\r\n     * \r\n     * @param {number} lengthVal Length value to be computed\r\n     * @param {string} lengthUnit Units of the length value\r\n     * @param {number} emScale length of 1em, or null if em is not allowed\r\n     * @param {number} percentScale length to which , or null if perecentage is not allowed\r\n     * @param {number} cellScale length of 1c, or null if c is not allowed\r\n     * @param {number} pxScale length of 1px, or null if px is not allowed\r\n     * @param {number} direction 0 if the length is computed in the horizontal direction, 1 if the length is computed in the vertical direction\r\n     * @return {number} Computed length\r\n     */\r\n    imscUtils.toComputedLength = function(lengthVal, lengthUnit, emLength, percentLength, cellLength, pxLength) {\r\n\r\n        if (lengthUnit === \"%\" && percentLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    percentLength.rw * lengthVal / 100,\r\n                    percentLength.rh * lengthVal / 100\r\n                    );\r\n\r\n        } else if (lengthUnit === \"em\" && emLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    emLength.rw * lengthVal,\r\n                    emLength.rh * lengthVal\r\n                    );\r\n\r\n        } else if (lengthUnit === \"c\" && cellLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal * cellLength.rw,\r\n                    lengthVal * cellLength.rh\r\n                    );\r\n\r\n        } else if (lengthUnit === \"px\" && pxLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal * pxLength.rw,\r\n                    lengthVal * pxLength.rh\r\n                    );\r\n\r\n        } else if (lengthUnit === \"rh\") {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    0,\r\n                    lengthVal / 100\r\n                    );\r\n\r\n        } else if (lengthUnit === \"rw\") {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal / 100,\r\n                    0                    \r\n                    );\r\n\r\n        } else {\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscUtils = {} : exports);\r\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.2\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.2',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 255;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK   = 'Facebook';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY).replace(/\\s\\s*$/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /\\bqbcore\\/([\\w\\.]+)/i                                              // WeChat Desktop for Windows Built-in Browser\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.]+) .*mobile\\/\\w+ (safari)/i                        // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w\\.]+) .*(mobile ?safari|safari)/i                     // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\w ]*);/i                                         // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}-[atu]?[ln][01259x][012359][an]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ ([c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)( bui|\\))/i,                                         // Kindle Fire without Silk\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic|sony)[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i               // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2)?)/i                                                     // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| safari)|pda(?=.+windows ce))/i              // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i                                       // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86)/i                              // Android-x86\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+ ([\\w\\.]+\\w)/i                                         // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = majorize(_browser.version);\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import MediaPlayer from './MediaPlayer';\n\nfunction MediaPlayerFactory() {\n    /**\n     * mime-type identifier for any source content to be accepted as a dash manifest by the create() method.\n     * @type {string}\n     */\n    const SUPPORTED_MIME_TYPE = 'application/dash+xml';\n\n    let logger;\n\n    /**\n     *  A new MediaPlayer is instantiated for the supplied videoElement and optional source and context.  If no context is provided,\n     *  a default DashContext is used. If no source is provided, the videoElement is interrogated to extract the first source whose\n     *  type is application/dash+xml.\n     * The autoplay property of the videoElement is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.\n     * @param {HTMLMediaElement} video\n     * @param {HTMLSourceElement} source\n     * @param {Object} context\n     * @returns {MediaPlayer|null}\n     */\n    function create(video, source, context) {\n        if (!video || !(/^VIDEO$/i).test(video.nodeName)) return null;\n\n        if (video._dashjs_player) return video._dashjs_player;\n\n        let player;\n        let videoID = (video.id || video.name || 'video element');\n\n        source = source || [].slice.call(video.querySelectorAll('source')).filter(function (s) {\n            return s.type == SUPPORTED_MIME_TYPE;\n        })[0];\n        if (!source && video.src) {\n            source = document.createElement('source');\n            source.src = video.src;\n        } else if (!source && !video.src) {\n            return null;\n        }\n\n        context = context || {};\n        player = MediaPlayer(context).create();\n        player.initialize(video, source.src, video.autoplay);\n\n        if (!logger) {\n            logger = player.getDebug().getLogger();\n        }\n        logger.debug('Converted ' + videoID + ' to dash.js player and added content: ' + source.src);\n\n        // Store a reference to the player on the video element so it can be gotten at for debugging and so we know its\n        // already been setup.\n        video._dashjs_player = player;\n\n        return player;\n    }\n\n    /**\n     * Searches the provided scope for all instances of the indicated selector. If no scope is provided, document is used. If no selector is\n     * specified, [data-dashjs-player] is used. The declarative setup also looks for source elements with the type attribute set to 'application/dash+xml'.\n     * It then looks for those video elements which have a source element defined with a type matching 'application/dash+xml'.\n     * A new MediaPlayer is instantiated for each matching video element and the appropriate source is assigned.\n     * The autoplay property of the video element is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.\n     * Returns an array holding all the MediaPlayer instances that were added by this method.\n     * @param {string} selector - CSS selector\n     * @param {Object} scope\n     * @returns {Array} an array of MediaPlayer objects\n     */\n    function createAll(selector, scope) {\n        let aPlayers = [];\n        selector = selector || '[data-dashjs-player]';\n        scope = scope || document;\n        let videos = scope.querySelectorAll(selector);\n        for (let i = 0; i < videos.length; i++) {\n            let player = create(videos[i], null);\n            aPlayers.push(player);\n        }\n\n        let sources = scope.querySelectorAll('source[type=\"' + SUPPORTED_MIME_TYPE + '\"]');\n        for (let i = 0; i < sources.length; i++) {\n            let video = findVideo(sources[i]);\n            let player = create(video, null);\n            aPlayers.push(player);\n        }\n\n        return aPlayers;\n    }\n\n    function findVideo(el) {\n        if ((/^VIDEO$/i).test(el.nodeName)) {\n            return el;\n        } else {\n            return findVideo(el.parentNode);\n        }\n    }\n\n    return {\n        create: create,\n        createAll: createAll\n    };\n}\n\nlet instance = MediaPlayerFactory();\nlet loadInterval;\n\nfunction loadHandler() {\n    window.removeEventListener('load', loadHandler);\n    instance.createAll();\n}\n\nfunction loadIntervalHandler() {\n    if (window.dashjs) {\n        window.clearInterval(loadInterval);\n        instance.createAll();\n    }\n}\n\nlet avoidAutoCreate = typeof window !== 'undefined' && window && window.dashjs && window.dashjs.skipAutoCreate;\n\nif (!avoidAutoCreate && typeof window !== 'undefined' && window && window.addEventListener) {\n    if (window.document.readyState === 'complete') {\n        if (window.dashjs) {\n            instance.createAll();\n        } else {\n            // If loaded asynchronously, window.readyState may be 'complete' even if dashjs hasn't loaded yet\n            loadInterval = window.setInterval(loadIntervalHandler, 500);\n        }\n    } else {\n        window.addEventListener('load', loadHandler);\n    }\n}\n\nexport default instance;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { MediaPlayer } from './index_mediaplayerOnly';\n\nimport { supportsMediaSource } from './src/streaming/utils/Capabilities';\nimport MetricsReporting from './src/streaming/metrics/MetricsReporting';\nimport Protection from './src/streaming/protection/Protection';\nimport MediaPlayerFactory from './src/streaming/MediaPlayerFactory';\nimport Debug from './src/core/Debug';\n\ndashjs.Protection = Protection;\ndashjs.MetricsReporting = MetricsReporting;\ndashjs.MediaPlayerFactory = MediaPlayerFactory;\ndashjs.Debug = Debug;\ndashjs.supportsMediaSource = supportsMediaSource;\n\nexport default dashjs;\nexport { MediaPlayer, Protection, MetricsReporting, MediaPlayerFactory, Debug, supportsMediaSource };\n"],"names":["root","factory","exports","module","define","amd","self","T","encodeArray","R","decodeArray","ASCII","UTF8","s","u","i","length","c","charCodeAt","push","a","v","String","fromCharCode","join","BASE64","n","charAt","pop","Uint8Array","encodeASCII","encode","decodeASCII","decode","specialCea608CharsCodes","getCharForByte","byte","charCode","hasOwnProperty","NR_ROWS","NR_COLS","rowsLowCh1","rowsHighCh1","rowsLowCh2","rowsHighCh2","backgroundColors","logger","verboseFilter","time","verboseLevel","setTime","newTime","this","log","severity","msg","minLevel","console","numArrayToHexArray","numArray","hexArray","j","toString","PenState","foreground","underline","italics","background","flash","prototype","reset","setStyles","styles","attribs","style","isDefault","equals","other","copy","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","Row","chars","pos","currPenState","equal","empty","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","char","clearFromPos","startPos","clear","clearToEndOfRow","getTextString","setPenStyles","CaptionScreen","rows","currRow","nrRollUpRows","setPen","setPAC","pacData","JSON","stringify","newRow","row","indent","prevPos","Math","max","color","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRowIndex","topRow","splice","asOneRow","displayText","text","rowNr","rowText","trim","getTextAndFormat","Cea608Channel","channelNumber","outputFilter","chNr","mode","verbose","displayedMemory","nonDisplayedMemory","lastOutputScreen","currRollUpRow","writeScreen","cueStartTime","modes","lastCueEndTime","getHandler","setHandler","newHandler","setMode","newMode","insertChars","screen","outputDataUpdate","cc_RCL","cc_BS","cc_AOF","cc_AON","cc_DER","cc_RU","cc_FON","cc_RDC","cc_TR","cc_RTD","cc_EDM","cc_CR","cc_ENM","cc_EOC","tmp","cc_TO","nrCols","cc_MIDROW","secondByte","colorIndex","floor","t","updateData","newCue","cueSplitAtTime","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","startTime","lastTime","dataCounters","index","addData","byteList","cmdFound","b","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","cmd","padding","channel","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","hexCodes","findCea608Nalus","raw","size","nalSize","cursor","cea608NaluRanges","isCEA608SEI","payloadType","payloadSize","countryCode","getUint8","providerCode","getUint16","userIdentifier","getUint32","userDataTypeCode","extractCea608DataFromRange","cea608Range","fieldData","ccCount","ccValid","ccType","ccData1","ccData2","context","window","global","dashjs","MediaPlayer","FactoryMaker","Debug","Version","getVersionString","LOG_LEVEL_FATAL","LOG_LEVEL_ERROR","LOG_LEVEL_WARNING","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","config","instance","showLogTimestamp","showCalleeName","eventBus","EventBus","getInstance","settings","logFn","getLogFn","fn","bind","fatal","params","doLog","error","warn","info","debug","level","_this","message","logTime","Date","getTime","getClassName","getType","Array","apply","forEach","item","get","logLevel","dispatchEvent","trigger","Events","getLogger","setLogTimestampVisible","value","setCalleeNameVisible","__dashjs_factory_name","LOG_LEVEL_NONE","handlers","getHandlerIdx","type","listener","scope","idx","some","callback","on","options","Error","priority","handler","getStreamId","streamId","mediaType","inserted","off","payload","filters","filter","MediaPlayerEvents","call","EVENT_PRIORITY_LOW","EVENT_PRIORITY_HIGH","singletonContexts","singletonFactories","classFactories","getSingletonInstance","className","obj","name","getFactoryByName","factoriesArray","updateFactory","merge","classConstructor","args","classInstance","extensionObject","extension","override","prop","parent","extend","childInstance","setSingletonInstance","deleteSingletonInstances","x","getSingletonFactory","undefined","arguments","getSingletonFactoryByName","updateSingletonFactory","getClassFactory","create","getClassFactoryByName","updateClassFactory","Settings","DISPATCH_KEY_MAP","defaultSettings","streaming","abandonLoadTimeout","wallclockTimeUpdateInterval","manifestUpdateRetryInterval","cacheInitSegments","applyServiceDescription","applyProducerReferenceTime","applyContentSteering","eventControllerRefreshDelay","enableManifestDurationMismatchFix","parseInbandPrft","enableManifestTimescaleMismatchFix","capabilities","filterUnsupportedEssentialProperties","useMediaCapabilitiesApi","timeShiftBuffer","calcFromSegmentTimeline","fallbackToSegmentTimeline","metrics","maxListDepth","delay","liveDelayFragmentCount","NaN","liveDelay","useSuggestedPresentationDelay","protection","keepProtectionMediaKeys","ignoreEmeEncryptedEvent","detectPlayreadyMessageFormat","buffer","enableSeekDecorrelationFix","fastSwitchEnabled","flushBufferAtTrackSwitch","reuseExistingSourceBuffers","bufferPruningInterval","bufferToKeep","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","initialBufferLevel","stableBufferTime","longFormContentDurationThreshold","stallThreshold","useAppendWindow","setStallState","avoidCurrentTimeRangePruning","useChangeTypeForTrackSwitch","gaps","jumpGaps","jumpLargeGaps","smallGapLimit","threshold","enableSeekFix","enableStallFix","stallSeek","utcSynchronization","enabled","useManifestDateHeaderTimeSource","backgroundAttempts","timeBetweenSyncAttempts","maximumTimeBetweenSyncAttempts","minimumTimeBetweenSyncAttempts","timeBetweenSyncAttemptsAdjustmentFactor","maximumAllowedDrift","enableBackgroundSyncAfterSegmentDownloadError","defaultTimingSource","scheme","scheduling","defaultTimeout","lowLatencyTimeout","scheduleWhilePaused","defaultEnabled","extendSegmentedCues","webvtt","customRenderingEnabled","liveCatchup","maxDrift","playbackRate","min","playbackBufferMin","Constants","lastBitrateCachingInfo","ttl","lastMediaSettingsCachingInfo","cacheLoadThresholds","video","audio","trackSwitchMode","selectionModeForInitialTrack","fragmentRequestTimeout","fragmentRequestProgressTimeout","manifestRequestTimeout","retryIntervals","HTTPRequest","retryAttempts","abr","movingAverageMethod","ABRStrategy","additionalAbrRules","insufficientBufferRule","switchHistoryRule","droppedFramesRule","abandonRequestsRule","bandwidthSafetyFactor","useDefaultABRRules","useDeadTimeLatency","limitBitrateByPortal","usePixelRatioInLimitBitrateByPortal","maxBitrate","minBitrate","maxRepresentationRatio","initialBitrate","initialRepresentationRatio","autoSwitchBitrate","fetchThroughputCalculationMode","cmcd","sid","cid","rtp","rtpSafetyFactor","enabledKeys","cmsd","applyMb","etpWeightRatio","errors","recoverAttempts","mediaErrorDecode","Utils","mixinSettings","source","dest","path","slice","update","settingsObj","mixin","src","r","l","clone","url","modifiedUrl","URL","param","key","searchParams","set","href","e","headerStr","headers","headerPairs","split","ilen","headerPair","indexOf","substring","dt","replace","random","string","hash","originalUrl","targetUrl","original","target","protocol","origin","relativePath","pathname","substr","lastIndexOf","startIndexOffset","ua","uaString","navigator","userAgent","toLowerCase","UAParser","test","ErrorsBase","publicOnly","err","CoreEvents","ATTEMPT_BACKGROUND_SYNC","BUFFERING_COMPLETED","BUFFER_CLEARED","BYTES_APPENDED_END_FRAGMENT","BUFFER_REPLACEMENT_STARTED","CHECK_FOR_EXISTENCE_COMPLETED","CMSD_STATIC_HEADER","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","INBAND_EVENTS","INITIAL_STREAM_SWITCH","INIT_FRAGMENT_LOADED","INIT_FRAGMENT_NEEDED","INTERNAL_MANIFEST_LOADED","ORIGINAL_MANIFEST_LOADED","LOADING_COMPLETED","LOADING_PROGRESS","LOADING_DATA_PROGRESS","LOADING_ABANDONED","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","MEDIA_FRAGMENT_NEEDED","QUOTA_EXCEEDED","SEGMENT_LOCATION_BLACKLIST_ADD","SEGMENT_LOCATION_BLACKLIST_CHANGED","SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD","SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED","SERVICE_LOCATION_LOCATION_BLACKLIST_ADD","SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED","SET_FRAGMENTED_TEXT_AFTER_DISABLED","SET_NON_FRAGMENTED_TEXT","SOURCE_BUFFER_ERROR","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_REQUESTING_COMPLETED","TEXT_TRACKS_QUEUE_INITIALIZED","TIME_SYNCHRONIZATION_COMPLETED","UPDATE_TIME_SYNC_OFFSET","URL_RESOLUTION_FAILED","VIDEO_CHUNK_RECEIVED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","SEEK_TARGET","SETTING_UPDATED_LIVE_DELAY","SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT","SETTING_UPDATED_CATCHUP_ENABLED","SETTING_UPDATED_PLAYBACK_RATE_MIN","SETTING_UPDATED_PLAYBACK_RATE_MAX","EventsBase","events","evt","DashHandler","lastSegment","isDynamicManifest","mediaHasFinished","urlUtils","streamInfo","segmentsController","timelineConverter","baseURLController","resetInitialSettings","_setRequestUrl","request","destination","representation","serviceLocation","baseURL","resolve","queryParams","isRelative","_getRequestForSegment","mediaInfo","segment","FragmentRequest","bandwidth","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","Representation_asArray","media","replaceTokenForTemplate","replacementNumber","replacementTime","replaceIDForTemplate","id","unescapeDollarsInTemplate","range","mediaRange","presentationStartTime","mediaStartTime","duration","timescale","availabilityStartTime","availabilityEndTime","availabilityTimeComplete","wallStartTime","quality","adaptationIndex","representationId","getSegmentRequestForTime","segmentInfoType","getSegmentByTime","_onDynamicToStatic","initialize","isDynamic","getStreamInfo","getInitRequest","start","calcAvailabilityStartTimeFromPresentationTime","calcAvailabilityEndTimeFromPresentationTime","initialization","_generateInitRequest","getCurrentIndex","getNextSegmentRequest","indexToRequest","getSegmentByIndex","isLastSegmentRequested","bufferingTime","isFinite","mediaFinishedInformation","isNaN","numberOfSegments","DashConstants","nextPeriodId","mediaTimeOfLastSignaledSegment","getNextSegmentRequestIdempotent","getValidTimeAheadOfTargetTime","targetThreshold","end","currentUpperTime","adjustedTime","targetRequest","upperRequest","requestEndTime","init","BASE_URL","SEGMENT_BASE","SEGMENT_TEMPLATE","SEGMENT_LIST","SEGMENT_URL","SEGMENT_TIMELINE","SEGMENT_PROFILES","ADAPTATION_SET","REPRESENTATION","REPRESENTATION_INDEX","SUB_REPRESENTATION","INITIALIZATION","INITIALIZATION_MINUS","MPD","PERIOD","ASSET_IDENTIFIER","EVENT_STREAM","ID","PROFILES","SERVICE_LOCATION","RANGE","INDEX","MEDIA","BYTE_RANGE","INDEX_RANGE","MEDIA_RANGE","VALUE","CONTENT_TYPE","MIME_TYPE","BITSTREAM_SWITCHING","BITSTREAM_SWITCHING_MINUS","CODECS","DEPENDENCY_ID","MEDIA_STREAM_STRUCTURE_ID","METRICS","METRICS_MINUS","REPORTING","WIDTH","HEIGHT","SAR","FRAMERATE","AUDIO_SAMPLING_RATE","MAXIMUM_SAP_PERIOD","START_WITH_SAP","MAX_PLAYOUT_RATE","CODING_DEPENDENCY","SCAN_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","SUPPLEMENTAL_PROPERTY_ASARRAY","INBAND_EVENT_STREAM","PRODUCER_REFERENCE_TIME","INBAND","TYPE","ACCESSIBILITY","ROLE","RATING","CONTENT_COMPONENT","SUBSET","LANG","VIEWPOINT","VIEWPOINT_ASARRAY","ROLE_ASARRAY","REPRESENTATION_ASARRAY","PRODUCERREFERENCETIME_ASARRAY","ACCESSIBILITY_ASARRAY","AUDIOCHANNELCONFIGURATION_ASARRAY","CONTENTPROTECTION_ASARRAY","MAIN","DYNAMIC","STATIC","MEDIA_PRESENTATION_DURATION","MINIMUM_UPDATE_PERIOD","CODEC_PRIVATE_DATA","BANDWITH","SOURCE_URL","TIMESCALE","DURATION","START_NUMBER","PRESENTATION_TIME_OFFSET","AVAILABILITY_START_TIME","AVAILABILITY_END_TIME","TIMESHIFT_BUFFER_DEPTH","MAX_SEGMENT_DURATION","PRESENTATION_TIME","MIN_BUFFER_TIME","MAX_SUBSEGMENT_DURATION","START","AVAILABILITY_TIME_OFFSET","AVAILABILITY_TIME_COMPLETE","CENC_DEFAULT_KID","DVB_PRIORITY","DVB_WEIGHT","SUGGESTED_PRESENTATION_DELAY","SERVICE_DESCRIPTION","SERVICE_DESCRIPTION_SCOPE","SERVICE_DESCRIPTION_LATENCY","SERVICE_DESCRIPTION_PLAYBACK_RATE","SERVICE_DESCRIPTION_OPERATING_QUALITY","SERVICE_DESCRIPTION_OPERATING_BANDWIDTH","PATCH_LOCATION","PATCH_LOCATION_AS_ARRAY","LOCATION","LOCATION_AS_ARRAY","PUBLISH_TIME","ORIGINAL_PUBLISH_TIME","ORIGINAL_MPD_ID","WALL_CLOCK_TIME","LABEL","GROUP_LABEL","CONTENT_STEERING","CONTENT_STEERING_AS_ARRAY","DEFAULT_SERVICE_LOCATION","QUERY_BEFORE_START","CLIENT_REQUIREMENT","TTL","CONTENT_STEERING_RESPONSE","VERSION","RELOAD_URI","PATHWAY_PRIORITY","PATHWAY_CLONES","BASE_ID","URI_REPLACEMENT","HOST","PARAMS","PRODUCER_REFERENCE_TIME_TYPE","ENCODER","CAPTURED","APPLICATION","SEGMENT_ALIGNMENT","SUB_SEGMENT_ALIGNMENT","SegmentsController","getters","dashConstants","segmentBaseController","getSegmentsGetter","segments","TimelineSegmentsGetter","TemplateSegmentsGetter","ListSegmentsGetter","SegmentBaseGetter","updateInitData","voRepresentation","hasInitialization","Promise","getSegmentBaseInitSegment","updateSegmentData","hasSegments","getSegmentList","mimeType","lastSegmentTime","getter","getMediaFinishedInformation","checkConfig","list","SegmentList","len","SegmentURL_asArray","startNumber","offsetToSubtract","relativeIndex","getIndexBasedSegment","segmentDuration","indexRange","requestedTime","periodTime","calcPeriodRelativeTimeFromMpdRelativeTime","offset","seg","epsilon","ft","fd","ln","getIndexByTime","zeroPadToLength","numStr","minStrLength","token","endPos","formatTagPos","specifier","width","paddedValue","tokenLen","formatTagLen","parseInt","toUpperCase","getSegment","presentationEndTime","segmentIndex","Segment","calcWallTimeForSegment","isSegmentAvailable","voPeriod","availabilityTimeOffset","refTime","getClientReferenceTime","parseFloat","toFixed","calcMediaTimeFromPresentationTime","getTimeBasedSegment","fTimescale","tManifest","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","template","SegmentTemplate","round","ceil","dashMetrics","iterateSegments","iterFunc","fragments","frag","repeat","base","timeline","SegmentTimeline","relativeIdx","breakIterator","S_asArray","_calculateRepeatCountForNegativeR","d","nextFrag","repeatEndTime","availabilityEnd","dvrWindow","getCurrentDVRInfo","found","requiredMediaTime","scaledMediaTime","toPrecision","availableSegments","schemeIdUri","PlaybackController","streamController","serviceDescriptionController","adapter","videoModel","wallclockTimeIntervalId","originalLiveDelay","playOnceInitialized","lastLivePlaybackTime","lowLatencyModeEnabled","seekTarget","internalSeek","playbackStalled","manifestUpdateInProgress","initialCatchupModeActivated","pause","_onDataUpdateCompleted","_onFragmentLoadProgress","_onManifestUpdated","_onStreamsComposed","_onPlaybackEnded","_onStreamInitializing","_onRepresentationSwitch","_onBufferLevelStateChanged","stopUpdatingWallclockTime","removeEventListener","_onCanPlay","_onCanPlayThrough","_onPlaybackStart","_onPlaybackWaiting","_onPlaybackPlaying","_onPlaybackPaused","_onPlaybackError","_onPlaybackSeeking","_onPlaybackSeeked","_onPlaybackTimeUpdated","_onPlaybackProgress","_onPlaybackRateChanged","_onPlaybackMetaDataLoaded","_onPlaybackLoadedData","onPlaybackStalled","_onNativePlaybackEnded","_onVolumeChanged","getTimeToStreamEnd","sInfo","getStreamEndTime","refInfo","play","adjustLiveDelay","getElement","_adjustLiveDelayAfterUserInteraction","seek","stickToBuffered","internal","currentTime","setCurrentTime","_getDvrWindowEnd","hasVideoTrack","dvrInfo","now","getRegularPeriods","nowAsPresentationTime","calcPresentationTimeFromWallTime","isPaused","isSeeking","isStalled","getPlaybackRate","getEnded","getIsDynamic","updateCurrentTime","getReadyState","actualTime","_getAdjustedPresentationTime","timeChanged","mediatype","DVRMetrics","DVRWindow","abs","startUpdatingWallclockTime","setInterval","addDVRMetric","clearInterval","representationInfo","convertRepresentationToRepresentationInfo","currentRepresentation","getActiveStreamInfo","state","MetricsConstants","playingTime","ended","seekTime","timeToEnd","rate","isLast","event","srcElement","stream","minDelay","supplementalProperties","activeStreamInfo","periodSwitch","addEventListener","manifestInfo","setConfig","getBufferLevel","filterList","bufferLevel","getActiveStreamProcessors","p","bl","getPlaybackStalled","getLowLatencyModeEnabled","getInitialCatchupModeActivated","getIsManifestUpdateInProgress","getPlayedRanges","getStreamController","computeAndSetLiveDelay","fragmentDuration","ret","adjustedFragmentDuration","suggestedPresentationDelay","getSuggestedPresentationDelay","serviceDescriptionSettings","getServiceDescriptionSettings","minBufferTime","getAvailabilityStartTime","dvrWindowSize","getLiveDelay","getOriginalLiveDelay","getCurrentLiveLatency","getClientTimeOffset","seekToOriginalLive","dvrWindowEnd","seektime","seekToCurrentLive","FRAGMENT_MODEL_LOADING","FRAGMENT_MODEL_EXECUTED","FRAGMENT_MODEL_FAILED","FragmentModel","executedRequests","loadingRequests","fragmentLoader","isFragmentLoaded","isLoaded","req","req1","req2","isEqualInit","action","isEqualComplete","getRequestThreshold","removeExecutedRequestsBeforeTime","removeExecutedRequestsInTimeRange","getRequestForTime","arr","addSchedulingInfoMetrics","addSchedulingInfo","addRequestsQueue","onLoadingCompleted","sender","response","FRAGMENT_LOADING_COMPLETED","onLoadingInProgress","FRAGMENT_LOADING_PROGRESS","onLoadingAborted","FRAGMENT_LOADING_ABANDONED","getRequests","states","filteredRequests","requests","getRequestsForState","concat","filterRequests","isFragmentLoadedOrPending","removeExecutedRequestsAfterTime","syncExecutedRequestsWithBufferedRange","bufferedRanges","streamDuration","abortRequests","abort","executeRequest","FRAGMENT_LOADING_STARTED","load","loadCurrentFragment","addExecutedRequest","FRAGMENT_MODEL_CANCELED","Errors","MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE","XLINK_LOADER_LOADING_FAILURE_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_CODE","TIME_SYNC_FAILED_ERROR_CODE","FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","APPEND_ERROR_CODE","REMOVE_ERROR_CODE","DATA_UPDATE_FAILED_ERROR_CODE","CAPABILITY_MEDIASOURCE_ERROR_CODE","CAPABILITY_MEDIAKEYS_ERROR_CODE","DOWNLOAD_ERROR_ID_MANIFEST_CODE","DOWNLOAD_ERROR_ID_SIDX_CODE","DOWNLOAD_ERROR_ID_CONTENT_CODE","DOWNLOAD_ERROR_ID_INITIALIZATION_CODE","DOWNLOAD_ERROR_ID_XLINK_CODE","MANIFEST_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_NOSTREAMS_CODE","TIMED_TEXT_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_MULTIPLEXED_CODE","MEDIASOURCE_TYPE_UNSUPPORTED_CODE","MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE","XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE","SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE","SEGMENTS_UNAVAILABLE_ERROR_MESSAGE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","TIME_SYNC_FAILED_ERROR_MESSAGE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","APPEND_ERROR_MESSAGE","REMOVE_ERROR_MESSAGE","DATA_UPDATE_FAILED_ERROR_MESSAGE","CAPABILITY_MEDIASOURCE_ERROR_MESSAGE","CAPABILITY_MEDIAKEYS_ERROR_MESSAGE","TIMED_TEXT_ERROR_MESSAGE_PARSE","MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE","SourceBufferSink","intervalId","textController","callbacks","appendQueue","isAppendingInProgress","mediaSource","lastRequestAppended","changeType","codec","_waitForUpdateEnd","_initializeForText","getTextSourceBuffer","_addEventListeners","_updateEndHandler","_errHandler","updateAppendWindow","appendWindowEnd","appendWindowStart","updateTimestampOffset","MSETimeOffset","timestampOffset","_appendNextInQueue","nextChunk","afterSuccess","data","segmentType","bytes","promise","chunk","byteLength","appendBuffer","append","reject","DashJSError","code","_executeCallback","updating","shift","cb","eventType","getAllBufferRanges","buffered","getBuffer","remove","from","to","unintended","readyState","setTextTrack","_removeEventListeners","removeSourceBuffer","initializeForStreamSwitch","mInfo","selectedRepresentation","oldSourceBufferSink","_copyPreviousSinkData","promises","all","initializeForFirstUse","match","addSourceBuffer","constants","isFragmented","PreBufferSink","onAppendedCallback","outstandingInit","chunks","onAppended","ranges","timeranges","Object","defineProperty","sort","discharge","result","getChunksAt","waitForUpdateEnd","InitCache","save","extract","BUFFER_RANGE_CALCULATION_THRESHOLD","BUFFER_CONTROLLER_TYPE","BufferController","isBufferingCompleted","criticalBufferLevel","maxAppendedIndex","maximumIndex","sourceBufferSink","dischargeBuffer","isPrebuffering","dischargeFragments","bufferState","appendedBytesInfo","wallclockTicked","isPruningInProgress","isQuotaExceeded","initCache","pendingPruningRanges","replacingBuffer","errHandler","fragmentModel","representationController","abrController","playbackController","setMediaSource","createBufferSink","then","_getRepresentationInfo","getRepresentationForQuality","oldBufferSinks","_initializeSinkForMseBuffering","sink","_initializeSinkForPrebuffering","requiredQuality","getQualityFor","_onAppended","updateBufferTimestampOffset","_initializeSink","_onInitFragmentLoaded","_appendToBuffer","_onMediaFragmentLoaded","_triggerEvent","_showBufferRanges","getTotalBufferedTime","bufferAhead","_handleQuotaExceededError","hasEnoughSpaceToAppend","quotaExceededTime","clearBuffers","getClearRanges","_updateBufferLevel","endFragment","_checkIfBufferingCompleted","_onPlaybackProgression","rangeAtCurrenTime","getRangeAt","rangeAtSeekTarget","getCurrentRepresentation","_adjustSeekTarget","suppressAppendedEvent","pruneAllSafely","getAllRangesWithSafetyFactor","clearRanges","behindPruningRange","targetTime","bufferToKeepBehind","startOfBuffer","rangeEnd","currentTimeRequest","_getRangeBehindForPruning","aheadPruningRange","endOfBuffer","continuousBufferTime","getContinuousBufferTimeForTargetTime","bufferToKeepAhead","rangeStart","oldRangeStart","_getRangeAheadForPruning","isTextEnabled","_onPlaybackStalled","checkIfSufficientBuffer","tolerance","firstStart","lastEnd","gap","toler","referenceTime","getBufferLength","isLastIdxAppended","periodBuffered","setIsBufferingCompleted","_notifyBufferStateChanged","pruneBuffer","startRangeToKeep","behindRange","_addClearRangeWithPromise","clearNextRange","sourceBuffer","_onRemoved","quotaExceeded","_onWallclockTimeUpdated","Number","POSITIVE_INFINITY","totalBufferedTime","errored","keepBuffers","tmpSourceBufferSinkToReset","getBufferControllerType","dischargePreBuffer","rangeStr","lastInit","initChunk","hasBufferAtTime","getMediaSource","appendInitSegmentFromCache","getIsBufferingCompleted","getIsPruningInProgress","prepareForPlaybackSeek","prepareForReplacementTrackSwitch","prepareForNonReplacementTrackSwitch","prepareForForceReplacementQualitySwitch","setSeekTarget","segmentRequestingCompleted","NotFragmentedTextBufferController","initialized","ScheduleController","timeToLoadDelay","scheduleTimeout","lastFragmentRequest","topQualityIndex","lastInitializedQuality","switchTrack","initSegmentRequired","checkPlaybackQuality","mediaPlayerModel","bufferController","startScheduleTimer","clearScheduleTimer","timeoutValue","setTimeout","schedule","clearTimeout","getInitialPlayback","getAutoPlay","_shouldClearScheduleTimer","getCurrentRepresentationInfo","newTopQualityIndex","getMaxAllowedIndexFor","currentRepresentationInfo","getCurrentBufferLevel","getBufferTarget","_shouldBuffer","_shouldScheduleNextRequest","qualityChange","bufferTarget","schedulingInfo","getCurrentSchedulingInfo","_getBufferTargetForFragmentedText","videoBufferLevel","_getBufferTargetForAudio","isPlayingAtTopQuality","getStableBufferTime","_getGenericBufferTarget","_completeQualityChange","oldMediaInfo","newMediaInfo","oldQuality","newQuality","_onURLResolutionFailed","_onPlaybackStarted","updatePlayListTraceMetrics","playbackspeed","_hasVideoTrack","setTimeToLoadDelay","getTimeToLoadDelay","setSwitchTrack","getSwitchTrack","getPlaybackController","setCheckPlaybackQuality","setInitSegmentRequired","setLastInitializedQuality","RepresentationController","realAdaptation","voAvailableRepresentations","currentVoRepresentation","isUpdating","_updateRepresentation","currentRep","_onInitLoaded","count","_onSegmentsLoaded","repInfo","manifestUpdateInfo","getCurrentManifestUpdate","alreadyAdded","addManifestUpdateRepresentationInfo","isAllRepresentationsUpdated","setPlaybackQuality","updateManifestUpdateInfo","latency","getCurrentRepresentationSwitch","_addRepresentationSwitch","endDataUpdate","_onRepresentationUpdated","currentVideoTimeMs","addRepresentationSwitch","numberOfRepresentations","_setCurrentVoRepresentation","onManifestValidityChanged","newDuration","getData","newRealAdaptation","availableRepresentations","prepareQualityChange","PlayList","mstart","starttype","trace","INITIAL_PLAYOUT_START_REASON","SEEK_START_REASON","RESUME_FROM_PAUSE_START_REASON","METRICS_COLLECTION_START_REASON","PlayListTrace","representationid","subreplevel","stopreason","REPRESENTATION_SWITCH_STOP_REASON","REBUFFERING_REASON","USER_REQUEST_STOP_REASON","END_OF_PERIOD_STOP_REASON","END_OF_CONTENT_STOP_REASON","METRICS_COLLECTION_STOP_REASON","FAILURE_STOP_REASON","TimeUtils","ntpToUTC","ntpTimeStamp","UTC","StreamProcessor","mediaInfoArr","scheduleController","shouldUseExplicitTimeForRequest","qualityChangeInProgress","dashHandler","pendingSwitchToRepresentationInfo","manifestModel","mediaController","boxParser","segmentBlacklistController","getIsTextTrack","_shouldSetBufferingComplete","_onInitFragmentNeeded","rescheduleIfNoRequest","_noValidRequest","rep","_onMediaFragmentNeeded","_getFragmentRequest","_mediaRequestGenerated","_noMediaRequestGenerated","delayLoadingTime","blacklistUrl","contains","_shouldIgnoreRequest","setExplicitBufferingTime","getRepresentationInfo","addBufferState","pushPlayListTraceMetrics","_onBufferCleared","_onSourceBufferError","add","_onBytesAppended","_prepareForDefaultQualitySwitch","ongoingRequests","segmentAlignment","subSegmentAlignment","_bufferClearedForNonReplacement","_onFragmentLoadingAbandoned","isInitializationRequest","_onFragmentLoadingCompleted","_handleFragmentLoadingError","_onSetFragmentedTextAfterDisabled","getScheduleController","_onSetNonFragmentedText","currentTrackInfo","find","lang","selectMediaInfo","_onQuotaExceeded","getRealAdaptation","voRepresentations","getVoRepresentations","maxQuality","minIdx","getMinAllowedIndexFor","bitrate","getThroughputHistory","getAverageThroughput","getInitialBitrateFor","getQualityForBitrate","checkInteger","getMediaTimescaleFromMoov","isoFile","prfts","prftBoxes","getBoxes","prft","flags","ntpTimestamp","ntp_timestamp_sec","ntp_timestamp_frac","mediaTime","media_time","_parsePrftBox","_handleInbandPrfts","parse","eventStreamMedia","getEventsFor","eventStreamTrack","mediaInbandEvents","trackInbandEvents","eventStreams","inbandEvents","eventBoxes","sidx","getBox","mediaAnchorTime","earliest_presentation_time","fragmentMediaStartTime","getEvent","_handleInbandEvents","_bufferClearedForReplacement","_onSeekTarget","requestModifier","RequestModifier","URLUtils","registerStreamType","_createBufferControllerForType","getBufferController","getFragmentModel","getRepresentationController","createBufferSinks","previousBufferSinks","updateStreamInfo","newStreamInfo","clearMediaInfoArray","addMediaInfo","prepareTrackSwitch","shouldReplace","warning","reason","forceReplace","_prepareForForceReplacementQualitySwitch","safeBufferLevel","abandonmentState","getAbandonmentStateFor","_prepareForFastQualitySwitch","createPlaylistTraceMetrics","getMediaInfo","finalisePlayList","probeNextRequest","prepareInnerPeriodPlaybackSeeking","prepareOuterPeriodPlaybackSeeking","unRegisterStreamType","FetchLoader","cfg","lowLatencyThroughputModel","httpRequest","abortController","requestStartTime","Headers","header","requestStartDate","modifyRequestHeader","setRequestHeader","AbortController","signal","onabort","reqOptions","method","credentials","withCredentials","calculationMode","requestTime","throughputCapacityDelayMS","getThroughputCapacityDelayMS","markBeforeFetch","fetch","status","statusText","responseURL","ok","onerror","responseHeaders","keys","body","arrayBuffer","loaded","total","progress","onload","onend","reader","measurement","totalBytes","bytesReceived","signaledFirstByte","remaining","markA","markB","tee","forMeasure","forConsumer","getReader","read","processFetch","done","chunkDownloadDurationMS","chunkBytes","chunkDownloadTimeRelativeMS","kbps","fetchDuration","bytesAllChunks","reduce","prev","curr","addMeasurement","lengthComputable","getEstimatedDownloadDurationMS","downloadedData","startTimeData","endTimeData","lastChunkWasFinished","processResult","calculatedThroughput","calculatedTime","datum","datumE","dataE","chunkThroughputs","shortDurationBytesReceived","shortDurationStartTime","chunkDownloadTime","ts","cumulatedChunkDownloadTime","calculateThroughputByChunkData","calculateDownloadedTime","concatTypedArray","findLastTopIsoBoxCompleted","performance","boxesInfo","lastCompletedOffset","subarray","noTrace","avgTimeDistance","next","distance","modifyRequest","cancel","setup","Representation","codecs","codecPrivateData","presentationTimeOffset","height","scanType","maxPlayoutRate","frameRate","Period","DEFAULT_ID","timeShiftBufferDepth","maxSegmentDuration","publishTime","minimumUpdatePeriod","mediaPresentationDuration","presentationTime","messageData","eventStream","presentationTimeDelta","BaseURL","weight","dvb_priority","dvb_weight","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","adaptionSet","inband","applicationScheme","wallClockTime","UTCTiming","defaultServiceLocation","defaultServiceLocationArray","queryBeforeStart","serverUrl","clientRequirement","DescriptorType","ObjectUtils","areEqual","obj1","obj2","deepEqual","DashManifestModel","isInteger","getIsTypeOf","essentialProperties","getEssentialPropertiesForRepresentation","THUMBNAILS_SCHEME_ID_URIS","ContentComponent_asArray","contentType","mimeTypeRegEx","RegExp","getIsFragmented","getIsVideo","getIsText","getIsImage","processAdaptation","isArray","getRealAdaptations","periodIndex","getRealPeriods","realRepresentation","EssentialProperty_asArray","map","calcSegmentDuration","segmentTimeline","s0","s1","getPeriodId","realPeriod","getEventStreams","inbandStreams","EventStream","getBaseURLsFromElement","node","baseUrls","entries","BaseURL_asArray","baseUri","earlyReturn","entry","baseUrl","__text","_createContentSteeringInstance","element","ContentSteering","getProducerReferenceTimesForAdaptation","prtArray","prtsForAdaptation","prt","ProducerReferenceTime","getLanguageForAdaptation","getViewpointForAdaptation","viewpoint","getRolesForAdaptation","role","getAccessibilityForAdaptation","accessibility","getAudioChannelConfigurationForAdaptation","audioChanCfg","getAudioChannelConfigurationForRepresentation","getAdaptationForIndex","realAdaptations","getIndexForAdaptation","getAdaptationForId","getAdaptationsForType","adaptations","getRealPeriodForIndex","realPeriods","getCodec","addResolutionInfo","getSelectionPriority","realAdaption","selectionPriority","getMimeType","getKID","getLabelsForAdaptation","Label_asArray","labelArray","getContentProtectionData","ContentProtection_asArray","getId","hasProfile","profile","has","profiles","getDuration","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","getManifestUpdatePeriod","latencyOfLastUpdate","getPublishTime","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","getRepresentationFor","getRepresentationsForAdaptation","voAdaptation","segmentInfo","presentationOffset","periodArray","getRealAdaptationFor","SegmentBase","Initialization","sourceURL","getAdaptationsForPeriod","voAdaptationSet","realAdaptationSet","voAdaptations","AdaptationSet","voPeriods","realPreviousPeriod","voPreviousPeriod","periodEnd","getEndTimeForLastPeriod","getMpd","Mpd","loadedTime","getEventsForPeriod","EventStream_asArray","Event_asArray","currentMpdEvent","Event","calculatedPresentationTime","Signal","Binary","__cdata","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","utcTiming","getRepresentationSortFunction","getContentSteering","getLocation","MpdLocation","getPatchLocation","PatchLocation","getServiceDescriptions","serviceDescriptions","ServiceDescription_asArray","sd","operatingQuality","operatingBandwidth","contentSteering","referenceId","maxQualityDifference","getSegmentAlignment","getSubSegmentAlignment","getSupplementalPropertiesForAdaptation","SupplementalProperty_asArray","sp","getSupplementalPropertiesAsArrayForAdaptation","supp","getSupplementalPropertiesForRepresentation","getSupplementalPropertiesAsArrayForRepresentation","CmcdModel","dashManifestModel","internalData","streamProcessors","_isStartup","_bufferLevelStarved","_initialMediaRequestsDone","_resetInitialSettings","pr","nor","st","sf","_updateStreamProcessors","_onPeriodSwitchComplete","getActiveStream","activeStream","getProcessors","_copyParameters","parameterNames","copiedData","_applyWhitelistByKeys","enabledCMCDKeys","includes","_getCmcdData","_getGenericCmcdData","ot","encodedBitrate","bitrateList","_getBitrateByRequest","_getObjectDurationByRequest","mtp","getSafeAverageThroughput","_getMeasuredThroughputByType","dl","_getDeadlineByType","_getBufferLevelByType","tb","getTopBitrateInfoFor","_getTopBitrateByType","nextRequest","streamProcessor","_probeNextRequest","currentBufferLevel","minBandwidth","_calculateRtp","encodeURIComponent","nrr","br","bs","su","_getCmcdDataForMediaSegment","_getCmcdDataForInitSegment","_getCmcdDataForOther","_getCmcdDataForLicense","_onManifestLoaded","_buildFinalString","cmcdData","localeCompare","cmcdString","acc","getQueryParameter","filteredCmcdData","_applyWhitelist","finalPayloadString","MetricsReportingEvents","getHeaderParameters","cmcdObjectHeader","cmcdRequestHeader","cmcdStatusHeader","cmcdSessionHeader","CMSD_STATIC","CMSD_DYNAMIC","CMSD_RESPONSE_FIELD_BASENAME","CMSD_STATIC_RESPONSE_FIELD_NAME","CMSD_DYNAMIC_RESPONSE_FIELD_NAME","OBJECT_TYPES","PERSISTENT_PARAMS","MEDIATYPE_TO_OBJECTTYPE","integerRegex","CmsdModel","_staticParamsDict","_dynamicParamsDict","_clearParams","_parseParameterValue","_parseCMSDStatic","items","substrs","_parseCMSDDynamic","_mediaTypetoObjectType","_getParamValueForObjectType","paramsType","otParams","streamParams","parseResponseHeaders","staticParams","dynamicParams","m","groups","assign","static","dynamic","getMaxBitrate","getEstimatedThroughput","getResponseDelay","getRoundTripTime","LowLatencyThroughputModel","measurements","createBufferLevelTrendFunction","chunkMeasurements","sumX","sumY","sumXY","sumXSq","N","isBufferSafeAndStable","lastMeasurements","lastBitrate","aveBufferLevelLastSegements","bufferLevelAtSegmentEnd","bufferLevelAtSegmentStart","fetchDownloadDurationMS","requestTimeMS","bitrateEntry","repId","adjustedAvailabilityStartTimeMS","segDurationMS","chunksDurationMS","segmentBytes","getEstimatedBufferLevel","currentBufferLevelMS","lastThreeMeasurements","lastMeasurement","lastChunkRelativeTimeMS","isBufferStable","selectedOptimisticFactor","chunkAvailablePeriod","chunkBytesBBLE","chunkDownloadtimeMSBBLE","chunkCount","downloadThroughput","estimatedDownloadtimeMS","nextHigherBitrate","HTTPLoader","delayedRequests","retryRequests","downloadErrorToRequestTypeMap","cmcdModel","cmsdModel","customParametersModel","requestTimeout","internalLoad","remainingAttempts","traces","firstProgress","needFailureReport","lastTraceTime","lastTraceReceivedCount","progressTimeout","fileLoaderType","loader","addHttpRequestMetric","success","requestEndDate","firstByteDate","responseUrl","responseStatus","getAllResponseHeaders","addHttpRequest","handleLoaded","addManifestUpdate","onloadend","getRetryAttemptsForType","retryRequest","timeout","getRetryIntervalsForType","complete","responseType","XHRLoader","modifyRequestURL","cmcdMode","additionalQueryParameter","cmcdQueryParameter","_getAdditionalQueryParameter","getXHRWithCredentialsForType","bytesLoaded","bytesTotal","ontimeout","timeoutMessage","percentageComplete","delayedRequest","delayTimeout","onprogress","CustomParametersModel","SchemeLoaderFactory","schemeLoaderMap","unregisterAllLoader","getLoader","startsWith","registerLoader","unregisterLoader","URLLoader","schemeLoaderFactory","loaderFactory","HeadRequest","checkForExistenceOnly","FragmentLoader","urlLoader","checkForExistence","report","exists","headRequest","errorText","SegmentResponseModifier","modifyResponseAsync","FragmentController","fragmentModels","segmentResponseModifier","model","onFragmentLoadingCompleted","isInit","strInfo","DataChunk","createDataChunk","modifiedChunk","getModel","y","qualityIndex","ThumbnailController","thumbnailTracks","setTrackByIndex","addTracks","tracks","getTracks","provide","track","getCurrentTrack","getThumbnailRequestForTime","thumbIndex","tilesHor","tilesVert","thumbnail","Thumbnail","widthPerTile","heightPerTile","readThumbnail","seq","seqIdx","templateUrl","_buildUrlFromTemplate","getCurrentTrackIndex","getBitrateList","bitrateInfo","BitrateInfo","ThumbnailTracks","BlackListController","blacklist","updateEventName","addBlacklistEventName","query","MEDIA_TYPES","Stream","isInitialized","isActive","hasFinishedBuffering","hasAudioTrack","updateError","fragmentController","thumbnailController","preloaded","isEndedEventSignaled","trackChangedEvents","manifestUpdater","eventController","protectionController","_commonMediaInitialization","_addInlineEvents","nodeName","_initializeMediaForType","previousBuffersSinks","buffers","bufferSinks","getValue","_checkIfInitializationCompleted","createTracks","initialMediaInfo","allMediaForType","getAllMediaInfoForType","embeddedMediaInfos","isEmbedded","addEmbeddedTrack","_isMediaSupported","addTrack","setInitialMediaSettingsForType","addMediaInfosToBuffer","_createStreamProcessor","getCurrentTrackFor","updateTopQualityIndex","contentProtection","supportsEncryptedMedia","deactivate","deactivateStream","setPreloaded","setIsEndedEventSignaled","getStartTime","onProtectionError","addInlineEvents","initializeForMedia","handleKeySystemFromManifest","waitForReadyState","onBufferingCompleted","processors","onDataUpdateCompleted","onInbandEvents","addInbandEvents","getProcessorForMediaInfo","_getProcessorByType","processor","_compareProtectionConfig","newStream","currentStreamInfo","newAdaptation","getAdaptationForType","currentAdaptation","_isAdaptationDrmProtected","ContentProtection","compareCodecs","previousStream","sameMimeType","oldCodecs","newCodecs","codecMatch","newCodec","partialCodecMatch","oldCodec","codecRootCompatibleWithCodec","getPreloaded","initializeForStream","activate","_initializeMedia","getIsActive","getHasAudioTrack","getHasVideoTrack","startPreloading","previousBuffers","initializeForTextWithMediaSource","getThumbnailController","getBitrateListFor","updatedStreamInfo","currentMediaInfo","areMediaInfosEqual","trackChangedEvent","clearDataForStream","isMediaCodecCompatible","isProtectionCompatible","getIsEndedEventSignaled","getAdapter","getHasFinishedBuffering","startScheduleControllers","prepareTrackChange","setCurrentMediaInfo","refreshManifestOnSwitchTrack","getIsUpdating","refreshManifest","BoxParser","BlacklistController","version","reloadUri","pathwayPriority","pathwayClones","ContentSteeringController","currentSteeringResponseData","serviceLocationList","throughputList","nextRequestTimer","_onFragmentLoadingStarted","_addToServiceLocationList","_onManifestLoadingStarted","_onManifestLoadingFinished","elapsedTime","_storeThroughputForServiceLocation","_onThroughputMeasurementStored","_serviceLocation","throughput","current","getSteeringDataFromManifest","contentSteeringData","loadSteeringData","steeringDataFromManifest","serviceLocations","location","_calculateThroughputForServiceLocation","pathwayString","throughputString","_getSteeringServerUrl","ContentSteeringRequest","ContentSteeringResponse","pathwayClone","_isValidPathwayClone","_startSteeringRequestTimer","_handleSteeringResponse","retryAfter","getResponseHeader","_handleSteeringResponseError","_getClearedServiceLocationListAfterSteeringRequest","_getSynthesizedElements","referenceElements","synthesizedElements","baseElements","reference","referenceUrl","host","synthesizedElement","synthesizedUrl","stopSteeringRequestTimer","getCurrentSteeringResponseData","shouldQueryBeforeStart","getSynthesizedBaseUrlElements","synthesizedBaseUrl","getSynthesizedLocationElements","synthesizedLocation","LocationSelector","blacklistController","contentSteeringController","select","mpdLocations","mpdLocation","findIndex","elem","_findMpdLocation","_selectByContentSteering","_selectByDefault","ManifestUpdater","refreshDelay","refreshTimer","isStopped","manifestLoader","locationSelector","stopManifestRefreshTimer","startManifestRefreshTimer","onRefreshTimer","ignorePatch","availablePatchLocations","patchLocation","availableMpdLocations","_getAvailableMpdLocations","manifestLocations","getIsPatch","patch","isPatchValid","patchSuccessful","applyPatchToManifest","updatedPublishTime","setValue","date","onManifestLoaded","onPlaybackStarted","onPlaybackPaused","onStreamsComposed","setManifest","TimeSyncController","isSynchronizing","isBackgroundSynchronizing","backgroundSyncTimeOffsets","timingSources","timeOfLastSync","timeOfLastBackgroundSync","lastOffset","lastTimingSource","internalTimeBetweenSyncAttempts","_onAttemptBackgroundSync","_attemptBackgroundSync","attempts","_completeBackgroundTimeSyncSequence","deviceTimeBeforeSync","serverTime","deviceTimeAfterSync","_calculateOffset","_attemptRecursiveSync","sourceIndex","_onComplete","failed","_checkForDateHeader","_completeTimeSyncSequence","_xsdatetimeDecoder","xsdatetimeStr","parsedDate","utcDate","timezoneOffset","exec","_alternateXsdatetimeDecoder","_iso8601Decoder","isoStr","_rfc1123Decoder","dateStr","_notSupportedHandler","onSuccessCB","onFailureCB","_directHandler","_httpHandler","decoder","isHeadRequest","oncomplete","XMLHttpRequest","verb","urls","open","send","_httpHeadHandler","dateHeaderValue","getLatestMPDRequestHeaderValueByID","dateHeaderTime","adjustedTimeBetweenSyncAttempts","isOffsetDriftWithinThreshold","_isOffsetDriftWithinThreshold","_adjustTimeBetweenSyncAttempts","shouldAttemptBackgroundSync","averageOffset","maxAllowedDrift","attemptSync","tSources","_shouldPerformSynchronization","HTTP_TIMEOUT_MS","MediaSourceController","createMediaSource","hasWebKit","MediaSource","WebKitMediaSource","attachMediaSource","objectURL","createObjectURL","setSource","detachMediaSource","setDuration","sourceBuffers","isBufferUpdating","setSeekable","setLiveSeekableRange","clearLiveSeekableRange","signalEndOfStream","endOfStream","EventController","inlineEvents","eventInterval","lastEventTimerCall","eventHandlingInProgress","isStarted","MPD_RELOAD_SCHEME","EVENT_HANDLED_STATES","_onEventTimer","currentVideoTime","presentationTimeThreshold","_triggerEvents","_removeOutdatedEventObjects","_iterateAndTriggerCallback","_startEvent","_eventHasExpired","periodEndTime","_eventIsInvalid","periodId","_removeEvent","_addOrUpdateEvent","shouldOverwriteExistingEvents","eventState","indexOfExistingEvent","triggeredReceivedEvent","triggeredStartEvent","oldEvent","_handleManifestReloadEvent","validUntil","newManifestValidAfter","_triggerRemainingEvents","periodDuration","periodStart","calculatedPresentationTimeInSeconds","periodIds","currentPeriod","schemeIdUris","eventId","_refreshManifest","_sendCallbackRequest","values","getInbandEvents","getInlineEvents","_onStopEventController","_stop","LEVELS","SUGGESTION","WARNING","ERROR","EVENTS","NO_UTC_TIMING_ELEMENT","NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE","INVALID_DVR_WINDOW","StreamController","capabilitiesFilter","mediaSourceController","timeSyncController","uriFragmentModel","streams","protectionData","autoPlay","isStreamSwitchingInProgress","hasMediaError","hasInitialisationError","initialPlayback","initialSteeringRequest","playbackEndedTimerInterval","preloadingStreams","supportsChangeType","firstLicenseIsFetched","waitForPlaybackStartTimeout","providedStartTime","errorInformation","_checkConfig","_checkInitialize","_onTimeSyncCompleted","streamsInfo","getStreamsInfo","getBufferRange","clientTimeOffset","shouldKeepStream","_filterOutdatedStreams","_initializeOrUpdateStream","addManifestUpdateStreamInfo","_initializeForFirstStream","_checkIfPrebufferingCanStart","_composeStreams","_onKeySessionUpdated","getStreamById","dvrRange","waitingTime","calculateProducerReferenceTimeOffsets","_getFragmentDurationForLiveDelayCalculation","_calculateStartTimeAndSwitchStream","startTimeFromUri","_getStartTimeFromUriParameters","providedStartTimeAsPresentationTime","_getStartTimeFromProvidedData","getStreams","_getInitialStartTime","initialStream","getStreamForTime","startStream","_switchStream","fromStreamInfo","toStreamInfo","_canSourceBuffersBeReused","_openMediaSource","_activateStream","sourceUrl","streamActivated","_onMediaSourceOpen","revokeObjectURL","_setMediaDuration","_open","sinks","seekToStream","_cancelPreloading","_handleOuterPeriodSeek","_flushPlaylistMetrics","_handleInnerPeriodSeek","_createPlaylistMetrics","_deactivateAllPreloadingStreams","_onCurrentTrackChanged","nextStream","_onStreamCanLoadNext","seamlessPeriodSwitch","calcTimeShiftBufferWindow","activeStreamProcessors","addDVRInfo","_onBufferLevelUpdated","getInitialBufferLevel","excludedStreamProcessors","addBufferLevel","_onQualityChanged","_onLiveDelaySettingUpdated","playbackQuality","getPlaybackQuality","addDroppedFrames","_onStreamBufferingCompleted","upcomingStreams","refStream","refStreamInfo","_getNextStreams","_stopPlaybackEndedTimerInterval","targetIndex","lastDiff","diff","_getNextStream","manifestDuration","fragData","getURIFragmentData","_getStartTimeFromString","targetValue","targetString","posix","streamInfos","maxFragmentDuration","fragmentDurations","getMediaInfoForType","updatePeriods","manifestUTCTimingSources","ConformanceViolationConstants","allUTCTimingSources","filterUnsupportedFeatures","addPlayList","startReason","createPlaylistMetrics","counts","_handleMediaErrorDecode","msExtendedCode","_onManifestValidityChanged","_onMetricAdded","clearAllCurrentMetrics","metric","targetMediaType","autoPl","protData","controller","setMediaElement","setProtectionData","getTimeRelativeToStreamId","baseStart","streamStart","streamDur","loadWithManifest","getIsStreamSwitchInProgress","switchToVideoElement","getHasMediaOrInitialisationError","GapController","lastPlaybackTime","gapHandlerInterval","lastGapJumpPosition","jumpTimeoutHandler","trackSwitchByMediaType","_onInitialStreamSwitch","_onBufferReplacementStarted","_onBufferReplacementEnded","_unregisterEvents","_shouldCheckForGaps","_jumpGap","_startGapHandler","checkSeekingState","trackSwitchInProgress","shouldIgnoreSeekingState","_shouldIgnoreSeekingState","streamEnd","_getNextRangeIndex","nextRangeIndex","_isTimeBuffered","seekToPosition","jumpToStreamEnd","timeToStreamEnd","timeUntilGapEnd","timeToWait","_registerEvents","CatchupController","isCatchupSeekInProgress","isSafari","browser","_onCatchupSettingUpdated","getCatchupModeEnabled","setPlaybackRate","getCatchupPlaybackRates","_getCatchupMode","currentBuffer","_getLatencyDrift","_lolpNeedToCatchUpCustom","_defaultNeedToCatchUp","_shouldStartCatchUp","newRate","currentPlaybackRate","liveCatchupPlaybackRates","deltaLatency","getCatchupMaxDrift","currentLiveLatency","targetLiveDelay","liveCatchUpPlaybackRates","cpr","pow","E","_calculateNewPlaybackRateLolP","_calculateNewPlaybackRateDefault","minPlaybackRateChange","_startPlaybackCatchUp","_checkPlaybackRates","SUPPORTED_SCHEMES","ServiceDescriptionController","prftOffsets","_updateBandwidthSetting","getProducerReferenceTimeOffsets","timeOffsets","mediaTypes","astInSeconds","offsets","getProducerReferenceTimes","voRep","prt0","supportedServiceDescriptions","allClientsServiceDescriptions","_getDvbServiceDescriptionLatencyParameters","sdLatency","_calculateTimeOffset","_applyServiceDescriptionLatency","_applyServiceDescriptionPlaybackRate","maxBandwidth","targetBandwidth","mediaTypesToApply","_applyServiceDescriptionOperatingBandwidth","_applyServiceDescriptionContentSteering","MediaController","initialSettings","lastSelectedTracks","domStorage","getTracksFor","setTrack","noSettingsSave","isTracksEqual","switchMode","extractSettings","storeLastSettings","roles","audioChannelConfiguration","setSavedMediaSettings","setInitialSettings","getInitialSettings","t1","t2","sameId","sameViewpoint","sameViewpointDescriptors","viewpointsWithSchemeIdUri","sameLang","sameCodec","sameRoles","sameRoleDescriptors","rolesWithSchemeIdUri","sameAccessibility","sameAccessibilityDescriptors","accessibilitiesWithSchemeIdUri","sameAudioChannelConfiguration","sameAudioChannelConfigurationDescriptors","audioChannelConfigurationsWithSchemeIdUri","filterTracksBySettings","filterFn","tracksAfterMatcher","matchSettingsLang","extendedFilter","bcp47Normalize","matchSettingsIndex","matchSettingsViewPoint","matchSettingsRole","isTrackActive","matchRole","matchSettingsAccessibility","matchSettingsAudioChannelConfig","getTracksWithHighestBitrate","trackArr","getTracksWithHighestEfficiency","Infinity","sum","resolution","getTracksWithWidestRange","representationCount","selectInitialTrack","tmpArr","customInitialTrackSelectionFunction","getCustomInitialTrackSelectionFunction","_trackSelectionModeHighestSelectionPriority","_trackSelectionModeHighestBitrate","_trackSelectionModeFirstTrack","_trackSelectionModeHighestEfficiency","_trackSelectionModeWidestRange","tracksForType","getSavedMediaSettings","image","mediaTracks","isCurrentTrack","matchSettings","matchLang","normalizedSettingsLang","matchIndex","matchViewPoint","matchAccessibility","matchAudioChannelConfiguration","saveTextSettingsDisabled","DEFAULT_INDEX","Node","_baseUrls","_selectedIdx","selectedIdx","children","BaseURLTreeModel","objectUtils","updateChildData","_getAvailableBaseUrls","targetBaseUrls","synthesizedBaseUrls","walk","child","pi","ai","ri","getBaseURLCollectionsFromManifest","getForPath","nodes","invalidateSelectedIndexes","getBaseUrls","DVBSelector","availableUrls","rn","totalWeight","cumulWeights","every","limit","selectByWeight","removedPriorities","el","BasicSelector","selectedBaseUrl","ContentSteeringSelector","_findexIndexOfServiceLocation","steeringIndex","selectBaseUrlIndex","steeringDataFromMpd","BaseURLSelector","serviceLocationBlacklistController","basicSelector","dvbSelector","contentSteeringSelector","selector","chooseSelector","isDVB","checkParameterType","BaseURLController","baseURLTreeModel","baseURLSelector","getIsDVB","TextRequest","XlinkLoader","resolveObject","content","resolveToZero","resolved","resolvedContent","escapeMode","attributePrefix","arrayAccessForm","emptyNodeForm","enableToStringFunc","arrayAccessFormPaths","skipEmptyTextNodesForObj","stripWhitespaces","datetimeAccessFormPaths","useDoubleQuotes","xmlElementsFilter","jsonPropertiesFilter","keepCData","ignoreRoot","getNodeLocalName","nodeLocalName","localName","baseName","escapeXmlChars","str","checkInStdFiltersArrayForm","stdFiltersArrayForm","filterPath","toArrayAccessForm","childName","fromXmlDateTime","bits","secondBits","setHours","setMilliseconds","offsetMinutes","setMinutes","getMinutes","getTimezoneOffset","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","checkXmlElementsFilter","childType","childPath","parseDOMChildren","nodeType","nodeChildren","childNodes","cidx","__cnt","o","__children","aidx","attributes","attr","value2","ml","matchers","matchobj","converter","nodePrefix","prefix","getNodePrefix","__prefix","fullPath","checkFromXmlDateTimePaths","nodeValue","startTag","jsonObj","attrList","closed","resultStr","attrName","attrVal","endTag","elementName","jsonXmlSpecialElem","jsonObjField","suffix","Function","jsonXmlElemCount","elementsCnt","it","checkJsonObjPropertiesFilter","propertyName","jsonObjPath","parseJSONAttributes","ait","parseJSONTextObject","jsonTxtObj","parseJSONTextAttrs","getJsonPropertyPath","jsonPropName","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","toISOString","parseXmlString","xmlDocStr","xmlDoc","ActiveXObject","DOMParser","parser","parseFromString","getElementsByTagNameNS","async","loadXML","asArray","toXmlDateTime","asDateTime","xml2json","xml_str2json","json2xml_str","json2xml","getVersion","RESOLVE_TYPE_ONLOAD","XlinkController","iron","xlinkLoader","elements","resolveType","onXlinkAllElementsLoaded","isHTTPURL","originalContent","onXlinkElementLoaded","mergedContent","elementsToResolve","isResolvingFinished","k","resolvedElements","parentElement","run","mergeElementsBack","getElementsToResolve","xlinkObject","toResolve","createXlinkObject","resolveManifestOnLoad","X2JS","setMatchers","setIron","ObjectIron","mappers","mergeValues","parentItem","childItem","mapProperties","properties","property","parentValue","childValue","mapItem","array","len2","childNode","periodMapper","periods","adaptationSets","adaptationSetMapper","adaptationset","BaseMatcher","_test","_converter","StringMatcher","stringAttrsInElements","attrNames","durationRegex","DurationMatcher","attributeList","datetimeRegex","DateTimeMatcher","numericRegex","NumericMatcher","LangMatcher","CommonProperty","_name","_merge","MapNode","_properties","_children","RepresentationBaseValuesMap","commonProperties","SegmentValuesMap","DashParser","objectIron","jsonTime","Patch","add_asArray","operand","replace_asArray","ironedTime","getMatchers","getIron","ManifestLoader","xlinkController","mssHandler","onXlinkReady","createParser","createMssParser","createMssFragmentProcessor","registerEvents","textStatus","actualUrl","parseBaseUrl","sumPeriodDurations","totalDuration","originalManifest","ErrorHandler","CapabilitiesFilter","_filterUnsupportedCodecs","as","configurations","framerate","_createVideoConfiguration","samplerate","audioSamplingRate","_createAudioConfiguration","_createConfiguration","supportsCodec","supported","_","_filterUnsupportedRepresentationsOfAdaptation","adaptationSet","_filterUnsupportedAdaptationSetsOfPeriod","supportsEssentialProperty","_filterUnsupportedEssentialProperties","customCapabilitiesFilters","getCustomCapabilitiesFilters","customFilter","_applyCustomFilters","xywh","URIFragmentModel","URIFragmentDataVO","uri","URIFragmentData","hashIndex","fragment","equalIndex","ManifestModel","CATCHUP_PLAYBACK_RATE_MIN_LIMIT","MediaPlayerModel","_checkMinPlaybackRate","_checkMaxPlaybackRate","lowLatencyMultiplyFactor","lowLatencyReductionFactor","settingsPlaybackRate","sdPlaybackRate","getAbrBitrateParameter","setting","RulesContext","switchHistory","droppedFramesHistory","currentRequest","bufferOccupancyABR","useBufferOccupancyABR","l2AABR","useL2AABR","loLP","useLoLPABR","getMediaType","getDroppedFramesHistory","getCurrentRequest","getSwitchHistory","getAbrController","getVideoModel","SwitchRequestHistory","switchRequests","srHistory","switchRequest","newValue","SwitchRequest","oldValue","noDrops","drops","dropSize","indexDiff","drop","noDrop","srHistoryFirst","getSwitchRequests","DroppedFramesHistory","lastDroppedFrames","lastTotalFrames","droppedVideoFrames","totalVideoFrames","intervalDroppedFrames","intervalTotalFrames","getFrameHistory","clearForStream","ThroughputHistory","throughputDict","latencyDict","ewmaThroughputDict","ewmaLatencyDict","ewmaHalfLife","updateEwmaEstimate","ewmaObj","halfLife","fastAlpha","fast","fastEstimate","slowAlpha","slow","slowEstimate","getAverage","isThroughput","throughputHalfLife","latencyHalfLife","getAverageEwma","sampleSize","ratio","getSampleSize","getAverageSlidingWindow","checkSettingsForMediaType","throughputMeasureTime","latencyTimeInMilliseconds","tresponse","trequest","downloadTimeInMilliseconds","_tfinish","downloadBytes","_fileLoaderType","etp","latencyMs","downloadTimeMs","isCachedResponse","hasCachedEntries","clearSettingsForMediaType","average","getAverageLatency","AbrController","abrRulesCollection","topQualities","qualityDict","streamProcessorDict","abandonmentStateDict","abandonmentTimeout","windowResizeEventCalled","elementWidth","elementHeight","playbackIndex","switchHistoryDict","throughputHistory","isUsingBufferOccupancyAbrDict","isUsingL2AAbrDict","isUsingLoLPAbrDict","rulesContext","shouldAbandonFragment","confidence","_onQualityChangeRendered","switchOnThreshold","switchOffThreshold","useBufferABR","newUseBufferABR","_updateDynamicAbrStrategy","newIdx","maxIdx","_getMaxIndexBasedOnBitrateFor","_checkMaxBitrate","_checkMaxRepresentationRatio","setElementSize","_checkPortalSize","maxCmsdBitrate","audioBitrate","_getBitrateInfoForQuality","_checkCmsdMaxBitrate","_getMinIndexBasedOnBitrateFor","topQualityIdx","_changeQuality","setSavedBitrateSettings","bitrates","deadTimeRatio","infoList","pixelRatio","devicePixelRatio","getClientWidth","getClientHeight","ABRRulesCollection","audioQuality","videoQuality","savedBitrate","getSavedBitrateSettings","configBitrate","configRatio","currentValue","getMaxQuality","setWindowResizeEventCalled","strategy","_initializeAbrStrategy","QUALITY_DEFAULT","READY_STATES_TO_EVENT_NAMES","Map","VideoModel","_currentTime","TTMLRenderingDiv","vttRenderingDiv","stalledStreams","onPlaybackCanPlay","onPlaying","document","createEvent","initEvent","eventName","eventCallBack","getTextTrack","kind","label","isTTML","textTracks","language","targetReadyState","func","_listenOnce","closestTime","closestDistance","distanceToStart","distanceToEnd","stickTimeToBuffered","INVALID_STATE_ERR","autoplay","paused","seeking","ignoreReadyState","played","addStalledStream","removeStalledStream","stallStream","setElement","preload","removeAttribute","getSource","getTTMLRenderingDiv","setTTMLRenderingDiv","div","position","display","overflow","pointerEvents","top","left","getVttRenderingDiv","setVttRenderingDiv","getVideoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","creationTime","clientWidth","clientHeight","getTextTracks","addTextTrack","appendChild","childElement","removeChild","getVideoWidth","videoWidth","getVideoHeight","videoHeight","getVideoRelativeOffsetTop","parentNode","getBoundingClientRect","getVideoRelativeOffsetLeft","legacyKeysAndReplacements","oldKey","newKey","LOCAL_STORAGE_BITRATE_KEY_TEMPLATE","LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE","STORAGE_TYPE_LOCAL","LAST_BITRATE","LAST_MEDIA_SETTINGS","DOMStorage","isSupported","storage","setItem","removeItem","getTimestamp","ten_minutes_ms","canStore","storageType","localStorage","getItem","isExpired","timestamp","mediaSettings","SegmentBaseLoader","_loadInitializationRecursively","loadingInfo","initRange","searching","bytesToLoad","getFragmentRequest","findInitRange","_loadSegmentsRecursively","parts","onLoaded","hasRange","extraBytes","loadedLength","isComplete","loadMultiSidx","ref","references","reference_type","ss","se","segs","tmpCallback","referenced_size","refs","first_offset","subsegment_duration","getSegmentsForSidx","lastBox","getLastBox","setInfo","loadInitialization","loadSegments","EBMLParser","DataView","consumeTag","tag","bytesConsumed","required","getMatroskaCodedNum","retainMSB","bytesUsed","mask","num","ch","getPos","setPos","consumeTagAndSize","parseTag","skipOverElement","headerSize","getMatroskaFloat","outFloat","getFloat32","getFloat64","getMatroskaUint","val","getMatroskaUintLarge","moreData","WebmSegmentBaseLoader","WebM","theRange","segmentEnd","segmentStart","ebmlParser","EBML","Info","SeekHead","Tracks","Cues","Void","infoTag","infoElementSize","Duration","parsed","ab","cue","cueTrack","cues","CuePoint","CueTime","CueTracks","CueTrackPositions","cueTrackPositionSize","Track","CueTrack","ClusterPosition","CueClusterPosition","parseCues","parseSegments","parseEbmlHeader","TimecodeScale","SegmentBaseController","segmentBaseLoader","webmSegmentBaseLoader","isWebM","labels","isText","KID","supplementalPropertiesAsArray","availableFrom","SimpleXPath","valid","component","qualifierPoint","qualifier","equalityPoint","attribute","findsAttribute","isSiblingOperation","leaf","elm","PatchOperation","xpath","getMpdTarget","PatchManifestModel","getOriginalPublishTime","getMpdId","getPatchOperations","nodeContainer","sel","isValid","operation","DashAdapter","patchManifestModel","cea608parser","allMediaInfoForType","mInfoOne","mInfoTwo","sameViewpointWithSchemeIdUri","sameRolesWithSchemeIdUri","sameAccessibilityWithSchemeIdUri","sameAudioChannelConfigurationWithSchemeIdUri","_getAllMediaInfo","embeddedText","mediaArr","convertAdaptationToMediaInfo","accessibilityLength","convertVideoInfoToEmbeddedTextInfo","CC1","IMAGE","externalManifest","voLocalPeriods","selectedVoPeriod","getPeriodForStreamInfo","adaptationsForType","TEXT","VIDEO","getManifest","getAdaptationForMediaInfo","voPeriodsArray","acc_rep","MediaInfo","convertPeriodToStreamInfo","accessibilityValue","accessibilityData","search","embeddedCaptions","keyIds","cp","kid","keyId","repr","StreamInfo","ManifestInfo","getPeriod","periodIdx","findRepresentation","returnIndex","adaptationSetArray","adaptationSetArrayIndex","representationArrayIndex","getBandwidthForRepresentation","getIndexForRepresentation","findRepresentationIndex","getMaxIndexForBufferType","bufferType","findMaxBufferIndex","RepresentationInfo","maxStreamsInfo","getRealPeriodByIndex","eventBox","scheme_id_uri","presentation_time_delta","event_duration","message_data","newManifest","patchLocations","getPeriodById","manifestId","patchManifestId","manifestPublishTime","patchPublishTime","originalManifestPublishTime","relativePosition","insertBefore","targetArray","insert","insertNodes","updatedNodes","Round10","exp","_decimalAdjust","TcpList","HttpList","RepSwitchList","BufferLevel","BufferState","DroppedFrames","SchedulingInfo","DVRInfo","ManifestUpdate","RequestsQueue","DVBErrors","mt","lto","droppedFrames","fetchTime","ManifestUpdateStreamInfo","ManifestUpdateRepresentationInfo","streamIndex","fragmentInfoType","MetricsModel","streamMetrics","metricsChanged","metricChanged","metricUpdated","metricType","vo","metricAdded","getMetricsFor","readOnly","MetricsList","pushMetrics","pushAndNotify","metricObject","clearCurrentMetricsForType","tcpid","actualurl","tfinish","responsecode","mediaduration","_stream","_mediaduration","_quality","_responseHeaders","HTTPRequestTrace","interval","appendHttpTrace","TrackSwitch","manifestUpdate","updatedFields","addDVBErrors","DashMetrics","playListTraceMetricsClosed","playListTraceMetrics","playListMetrics","metricsModel","getCurrentHttpRequest","httpListLastIndex","httpList","currentHttpList","getHttpRequests","getCurrent","metricName","getCurrentBufferState","round10","getCurrentDroppedFrames","getLatestFragmentRequestHeaderValueByID","httpRequestList","speed","traceToUpdate","endTime","TimelineConverter","timelineAnchorAvailabilityOffset","clientServerTimeShift","setClientTimeOffset","_calcAvailabilityTimeFromPresentationTime","calculateAvailabilityEndTime","availabilityTime","wallTime","_calcTimeShiftBufferWindowForDynamicTimelineManifest","periodRange","segmentTime","hasValidSegmentTime","enhancedSegmentTime","_calcRangeForTimeline","currentVoPeriod","adjustedEndTime","_adjustTimeBasedOnPeriodRanges","_adjustTimelineAnchorAvailabilityOffset","isEndOfDvrWindow","_onUpdateTimeSyncOffset","mpdRelativeTime","displayStartTime","_calcTimeshiftBufferForStaticManifest","timelineRefData","_calcTimeShiftBufferWindowForDynamicManifest","TextTrackInfo","captionData","defaultTrack","EmbeddedTextHtmlRender","captionId","checkIndent","line","getRegionProperties","region","y1","y2","createRGB","getStyle","videoElement","fontSize","ltrim","rtrim","createHTMLCaptionsFromScreen","captionScreen","currRegion","lastRowHasText","lastRowIndentL","currP","spans","currentStyle","seenRegions","styleStates","regions","prevPenState","rowIndent","contat","uc","currPenStateString","captionsArray","cueID","finalDiv","createElement","cueRegionProperties","cssText","bodyDiv","cueUniWrapper","ptag","lastSpanRow","span","brElement","sameRow","spanStyle","spanElement","textContent","cueHTMLElement","cellResolution","isFromCEA608","lineHeight","linePadding","TextSourceBuffer","mediaInfos","initializationSegmentReceived","fragmentedTracks","firstFragmentedSubtitleStart","currFragmentedTrackIdx","embeddedTracks","embeddedTimescale","embeddedLastSequenceNumber","embeddedCea608FieldParsers","embeddedTextHtmlRender","vttParser","vttCustomRenderingParser","ttmlParser","embeddedInitialized","_createTextTrackFromMediaInfo","textTrackInfo","getIsDefault","_checkTtml","trackKindMap","caption","subtitle","_getKind","_onVideoChunkReceived","setCurrentFragmentedTrackIdx","codecType","sampleList","getSamplesInfo","cts","_getParser","sample","sampleStart","_getTimestampOffset","dataView","subSizes","ccContent","ISOBoxer","images","subOffset","inData","offsetTime","ttmlTimeIsRelative","addCaptions","_appendFragmentedSttp","captionArray","sampleData","sampleBoxes","boxes","box1","box2","cue_text","stylings","getCaptionStyles","_appendFragmentedWebVtt","_appendFragmentedText","samplesInfo","sequenceNumber","lastSequenceNumber","trackIdx","getTrackIdxForId","_makeCueAdderForIndex","_setupCeaParser","numSequences","allCcData","samples","splits","fields","cea608Ranges","lastSampleTime","ccData","_extractCea608Data","fieldNr","fieldParser","_appendEmbeddedText","getCurrentTrackIdx","_appendText","trackIndex","onVideoBufferCleared","deleteCuesFromTrackIdx","addMediaInfos","mInfos","fModel","CustomTimeRanges","currFragTrack","resetMediaInfos","resetEmbedded","deleteAllTextTracks","getConfig","CUE_PROPS_TO_COMPARE","TextTracks","Cue","textTrackQueue","nativeTrackElementArr","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","vttCaptionContainer","videoSizeCheckInterval","fullscreenAttribute","displayCCOnTop","previousISDState","topZIndex","resizeObserver","getVideoVisibleVideoSize","viewWidth","viewHeight","aspectRatio","use80Percent","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","w","h","checkVideoSize","forceDrawing","videoOffsetTop","videoOffsetLeft","realVideoSize","newVideoWidth","newVideoHeight","newVideoLeft","newVideoTop","containerStyle","zIndex","activeCues","scaleCue","_scaleCue","activeCue","replaceValue","valueFontSize","valueLineHeight","cellUnit","elementsSpan","getElementsByClassName","isd","htmlCaptionDiv","getElementById","_renderCaption","_resolveImageSrc","imsc1ImgUrnTester","smpteImgUrnTester","imageId","btoa","embeddedImages","finalCue","renderHTML","captionDiv","_extendLastCue","prevCue","cue1","cue2","props","_cuesContentAreEqual","_resolveImagesInContents","contents","timeOffset","getTrackByIdx","currentItem","_handleHtmlCaption","_handleNonHtmlCaption","cueInTrack","manualCueList","addCue","deleteTrackCues","onenter","onexit","divs","align","snapToLines","_getManualActiveTracks","activeTracks","manualMode","setCurrentTrackIdx","setCueStyleOnTrack","renderingType","ResizeObserver","observe","clearCaptionContainer","setNativeCueStyle","removeNativeCueStyle","cueInRange","strict","lastIdx","removeCue","styleElement","head","stylesheet","sheet","insertRule","classList","firstChild","VTTCue","TextTrackCue","fullscreenElement","webkitIsFullScreen","msFullscreenElement","mozFullScreen","textTrackInfoVO","defaultIndex","textTrack","onMetadataLoaded","videoTextTrack","trackId","getCurrentTrackInfo","setModeForTrackIdx","unobserve","deleteTextTrack","manualCueProcessing","WebVTT","processCues","disableManualTracks","VTTParser","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","convertCuePointTimes","timeArray","parseItemAttributes","vttCuePoints","cuePoints","styleObject","isPercentage","getSublines","lineCount","subline","lineData","lastStartTime","VttCustomRenderingParser","vttjs","oncue","Parser","StringDecoder","TTMLParser","cueCounter","startTimeSegment","endTimeSegment","errorMsg","currentImageId","accumulated_image_data","metadataHandler","onOpenTag","ns","attrs","onCloseTag","onText","imsc1doc","fromXML","ttmlString","ttmlDoc","mediaTimeEvents","getMediaTimeEvents","generateISD","topLevelContents","TextController","streamData","textSourceBuffers","allTracksAreDisabled","forceTextStreaming","textTracksAdded","disableTextBeforeTextTracksAdded","_onTextTracksAdded","currentTrack","lastEnabledIndex","oldTrackIdx","currentFragTrack","_setFragmentedTextTrack","_setNonFragmentedTextTrack","textSourceBuffer","getAllTracksAreDisabled","enableText","enable","enableForcedTextStreaming","mediaPlayerInitialized","streamingInitialized","playbackInitialized","metricsReportingController","offlineController","gapController","catchupController","STREAMING_NOT_INITIALIZED_ERROR","PLAYBACK_NOT_INITIALIZED_ERROR","ELEMENT_NOT_ATTACHED_ERROR","SOURCE_NOT_ATTACHED_ERROR","MEDIA_PLAYER_NOT_INITIALIZED_ERROR","attachSource","attachView","isReady","getDVRSeekOffset","getVideoElement","setAutoPlay","restoreDefaultUTCTimingSources","getDashMetrics","_detectProtection","MetricsReporting","metricsReporting","createMetricsReporting","mediaElement","metricsConstants","_detectMetricsReporting","MssHandler","initSegmentType","_detectMss","_resetPlaybackControllers","_initializePlayback","urlOrManifest","stop","_createPlaybackControllers","_createManifestLoader","Protection","Capabilities","createProtectionSystem","_detectOffline","OfflineController","_getAsUTC","valToConvert","resetRecords","view","supportsMediaSource","parentNameString","setMute","muted","isMuted","setVolume","volume","getVolume","timeAsUTC","durationAsUTC","getDVRWindowSize","getAvailableBaseUrls","getAvailableLocations","getTargetLiveDelay","convertToTimeCode","formatUTC","locales","hour12","withDate","toLocaleDateString","toLocaleTimeString","getDebug","types","updateSource","setQualityFor","updatePortalSize","getBitrateInfoListFor","getStreamsFromManifest","getTracksForTypeFromManifest","setInitialMediaSettingsFor","getInitialMediaSettingsFor","setCurrentTrack","addABRCustomRule","rulename","rule","addAbrCustomRule","removeABRCustomRule","removeAbrCustomRule","removeAllABRCustomRule","removeAllAbrCustomRule","getABRCustomRules","getAbrCustomRules","retrieveManifest","addUTCTimingSource","removeUTCTimingSource","clearDefaultUTCTimingSources","setXHRWithCredentialsForType","getProtectionController","attachProtectionController","registerLicenseRequestFilter","registerLicenseResponseFilter","unregisterLicenseRequestFilter","unregisterLicenseResponseFilter","registerCustomCapabilitiesFilter","unregisterCustomCapabilitiesFilter","setCustomInitialTrackSelectionFunction","customFunc","resetCustomInitialTrackSelectionFunction","attachTTMLRenderingDiv","attachVttRenderingDiv","getCurrentTextTrackIndex","provideThumbnail","getDashAdapter","getOfflineController","triggerSteeringRequest","getSettings","updateSettings","resetSettings","destroy","AST_IN_FUTURE","BASE_URLS_UPDATED","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","LOG","MANIFEST_LOADING_STARTED","MANIFEST_LOADING_FINISHED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","THROUGHPUT_MEASUREMENT_STORED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_VOLUME_CHANGED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","CONTENT_STEERING_REQUEST_COMPLETED","INBAND_PRFT","STREAM","AUDIO","MUXED","STPP","TTML","VTT","WVTT","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC3","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_DVB_LL_SCHEME","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","FILE_LOADER_TYPES","FETCH","XHR","TCP_CONNECTION","HTTP_REQUEST","TRACK_SWITCH","BUFFER_LEVEL","ABANDON_LOAD","ALLOW_LOAD","BUFFER_STATE","DVR_INFO","DROPPED_FRAMES","SCHEDULING_INFO","REQUESTS_QUEUE","MANIFEST_UPDATE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","HTTP_REQUEST_DVB_REPORTING_TYPE","mpdurl","errorcode","terror","ipaddress","servicelocation","SSL_CONNECTION_FAILED_PREFIX","DNS_RESOLUTION_FAILED","HOST_UNREACHABLE","CONNECTION_REFUSED","CONNECTION_ERROR","CORRUPT_MEDIA_ISOBMFF","CORRUPT_MEDIA_OTHER","BASE_URL_CHANGED","BECAME_REPORTER","DVBErrorsTranslator","onManifestUpdate","onServiceLocationChanged","onBecameReporter","onMetricEvent","onPlaybackError","MediaError","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","RangeController","useWallClockTime","rs","starttime","_useWallClockTime","isEnabled","numRanges","MetricSerialiser","serialise","pairs","isBuiltIn","RNG","randomNumbers","crypto","msCrypto","ArrayType","Uint32Array","BYTES_PER_ELEMENT","getRandomValues","DVBReporting","metricSerialiser","randomNumberGenerator","reportingPlayerStatusDecided","isReportingPlayer","reportingUrl","rangeController","pendingRequests","vos","successCB","failureCB","reqIndex","doGetRequest","rc","probability","dvb_reportingUrl","dvb_probability","ReportingFactory","knownReportingSchemeIdUris","reporting","register","moduleName","unregister","ReportingController","reporters","reportingFactory","reporter","HandlerHelpers","reconstructFullMetricName","mn","validateN","n_ms","BufferLevelHandler","reportingController","lastReportedTime","handlerHelpers","storedVOs","intervalCallback","getLowestBufferLevelVO","basename","handleNewMetric","onInitialisationComplete","unused","HttpListHandler","storedVos","requestType","GenericMetricHandler","MetricsHandlerFactory","keyRegex","knownFactoryProducts","listType","matches","MetricsHandlersController","metricsHandlerFactory","handle","midx","ms","nextm","MetricsController","metricsHandlersController","metricsEntry","Range","Reporting","ManifestParsing","getMetrics","Metrics_asArray","metricEntry","Metrics","Range_asArray","rangeEntry","reportingStartTime","getMetricsRangeStartTime","Reporting_asArray","reportingEntry","MetricsCollectionController","metricsControllers","controllersToRemove","resetMetricsControllers","getReportingFactory","getMetricsHandlerFactory","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","CMCD_DATA_GENERATED","utcTimingSources","xhrWithCredentials","licenseRequestFilters","licenseResponseFilters","customAbrRules","_unregisterFilter","_findAbrCustomRuleIndex","getLicenseResponseFilters","getLicenseRequestFilters","defaultUtcTimingSource","useCreds","default","xhr","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","prefixes","CommonEncryption","cpArray","retVal","pssh","keySystem","initData","psshList","parsePSSHList","uuid","cpData","dv","byteCursor","nextBox","systemID","boxStart","licenseServer","targetProtectionData","ckData","robustness","audioCapabilities","videoCapabilities","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","ProtectionErrors","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","KEY_SESSION_CREATED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","messageType","sessionId","ProtectionController","pendingKeySessionsToHandle","protDataSet","sessionType","robustnessLevel","selectedKeySystem","keySystemSelectionInProgress","licenseXhrRequest","licenseRequestRetryTimeout","protectionKeyController","protectionModel","needkeyRetries","_selectKeySystemOrUpdateKeySessions","supportedKs","fromManifest","_handleKeySessions","keySystemAccess","requestedKeySystems","ksA","ksB","ks","systemString","keySystemConfiguration","_getKeySystemConfiguration","configs","requestKeySystemAccess","selectedSystemString","mksa","selectKeySystem","KEY_SYSTEM_SELECTED","_getProtDataForKeySystem","serverCertificate","setServerCertificate","_selectInitialKeySystem","ksIdx","_loadOrCreateKeySession","keySystemInfo","isClearKey","clearkeys","kids","TextEncoder","loadKeySession","createKeySession","initDataForKS","sessions","getSessions","getKeyId","_isKeyIdDuplicate","_isInitDataDuplicate","KEY_SESSION_CREATED","keySystemString","currentInitData","getAllInitData","initDataEquals","NEED_KEY","_onNeedKey","keySystemData","audioRobustness","videoRobustness","ksSessionType","MediaCapability","KeySystemConfiguration","_onKeyStatusChanged","KEY_STATUSES_CHANGED","_onKeyMessage","keyMessage","KEY_MESSAGE","sessionToken","licenseServerModelInstance","getLicenseServerModelInstance","eventData","getSessionId","_sendLicenseRequestCompleteEvent","processClearKeyLicenseRequest","keyPairs","updateKeySession","licenseServerData","serverURL","laURL","schemeIdURI","psshData","getLicenseServerURLFromInitData","getServerURLFromMessage","_getLicenseServerUrl","reqHeaders","_updateHeaders","httpRequestHeaders","getRequestHeadersFromMessage","onLoad","licenseResponse","LicenseResponse","_applyFilters","licenseMessage","getLicenseMessage","_reportError","onAbort","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","getResponseType","httpTimeout","licenseRequest","LicenseRequest","_doLicenseRequest","_issueLicenseRequest","LICENSE_REQUEST_COMPLETE","retriesCount","cmcdParams","cmcdHeaders","_retryRequest","retryInterval","LICENSE_REQUEST_SENDING","_abortLicenseRequest","getErrorResponse","serverResponse","responseCode","responseText","retry","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystemsFromSegmentPssh","_handleKeySystemFromPssh","supportedKeySystems","currentKs","getSupportedKeySystemsFromContentProtection","removeKeySession","closeKeySession","setSessionType","setRobustnessLevel","cps","getKeySystems","setKeySystems","keySystems","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_STATUS_CHANGED","retryTimeout","keyID","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","buf","bView","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","PLAYREADY_RECOMMENDATION_KEYSTEM_STRING","INITIALIZATION_DATA_TYPE_CENC","INITIALIZATION_DATA_TYPE_KEYIDS","INITIALIZATION_DATA_TYPE_WEBM","KeySystemClearKey","getInitData","cencContentProtection","cencDefaultKid","cencDefaultKidToBase64Representation","getCDMData","getClearKeysFromProtectionData","clearkeySet","jsonMsg","clearkeyID","clearkey","KeyPair","KeySystemW3CClearKey","KeySystemWidevine","KeySystemPlayReady","messageFormat","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","dataview","Uint16Array","headerNameList","getElementsByTagName","headerValueList","Content","Challenge","numRecords","recordType","recordLength","recordData","record","laurl","luiurl","_cdmData","customData","cdmData","cdmDataBytes","setPlayReadyMessageFormat","format","DRMToday","license","keySystemStr","PlayReady","soap","uintToString","encodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","parseErrorResponse","faultstring","statusCode","idStart","idEnd","fault","detail","exception","errorString","Widevine","ClearKey","keypair","keyid","ProtectionKeyController","clearkeyKeySystem","clearkeyW3CKeySystem","_getSessionId","_getSessionType","protectionDataSet","initData1","initData2","data1","data2","newKeySystems","getKeySystemBySystemString","cpIdx","supportedKS","ProtectionEvents","KEY_ADDED","KEY_ERROR","KEY_SESSION_CLOSED","KEY_SESSION_REMOVED","KEY_SYSTEM_ACCESS_COMPLETE","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","defaultURL","ksConfiguration","SYSTEM_STRING_PRIORITY","ProtectionModel_21Jan2015","mediaKeys","eventHandler","_requestKeySystemAccessInternal","ksConfigurations","requestMediaKeySystemAccess","protDataSystemStringPriority","systemStringPriority","currentKeySystem","systemStringsToApply","_checkAccessForSystemStrings","_checkAccessForKeySystem","mediaKeySystemAccess","configuration","getConfiguration","KeySystemAccess","errorMessage","_closeKeySessionInternal","session","close","removeSession","parseKeyStatus","createSessionToken","ksInfo","handleEvent","keyStatuses","keyStatus","KeyMessage","getSessionType","getExpirationTime","expiration","getKeyStatuses","getUsable","usable","createMediaKeys","mkeys","setMediaKeys","createSession","dataType","generateRequest","toJWK","numSessions","NeedKey","ProtectionModel_3Feb2014","api","needkey","ready","release","boundDoSetKeys","doSetKeys","supportedAudio","supportedVideo","configIdx","audios","videos","audioIdx","MediaKeys","isTypeSupported","videoIdx","ksConfig","ksAccess","keySession","destinationURL","ProtectionModel_01b","pendingSessions","moreSessionsAllowed","removeEventListeners","cancelKeyRequest","findSessionByID","sessionArray","keyerror","keymessage","keyadded","ve","canPlayType","newSession","generateKeyRequest","addKey","errorCode","systemCode","APIS_ProtectionModel_01b","APIS_ProtectionModel_3Feb2014","_getAPI","apis","onencrypted","_getProtectionModel","setEncryptedMediaSupported","PRIORITY","DEFAULT","STRONG","WEAK","q","getPriority","NO_CHANGE","QUALITY_SWITCH_RULES","ABANDON_FRAGMENT_RULES","qualitySwitchRules","abandonFragmentRules","_getRulesWithChange","srArray","sr","getMinSwitchRequest","newSwitchReq","L2ARule","LoLPRule","BolaRule","ThroughputRule","InsufficientBufferRule","SwitchHistoryRule","DroppedFramesRule","AbandonRequestsRule","rules","getMaxIndex","shouldAbandon","getQualitySwitchRules","fragmentDict","abandonDict","throughputArray","fragmentInfo","firstByteTime","storeLastRequestThroughputByType","totalSampledValue","measuredBandwidthInKbps","estimatedTimeOfDownload","bytesRemaining","minQuality","fragmentID","MINIMUM_BUFFER_S","bolaStateDict","calculateBolaParameters","utilities","highestUtilityIndex","highestIndex","uIndex","bufferTime","gp","Vp","clearBolaStateOnSeek","bolaState","placeholderBuffer","mostAdvancedSegmentStart","lastSegmentWasReplacement","lastSegmentStart","lastSegmentDurationS","lastSegmentRequestTimeMs","lastSegmentFinishTimeMs","checkBolaStateStableBufferTime","effectiveBufferLevel","maxBufferLevelForQuality","minBufferLevelForQuality","qBitrate","qUtility","iBitrate","iUtility","onBufferEmpty","stateDict","onPlaybackSeeking","onMediaFragmentLoaded","lastQuality","checkNewSegment","onMetricAdded","bufferAtLastSegmentRequest","maxEffectiveBufferForLastSegment","maxPlaceholderBuffer","onQualityChangeRequested","abrQuality","onFragmentLoadingAbandoned","wantEffectiveBufferLevel","initialState","utilitiesFromBitrates","getInitialBolaState","getBolaState","safeThroughput","nowMs","lastCallTimeMs","updatePlaceholderBuffer","bitrateCount","score","getQualityFromBufferLevel","qualityForThroughput","delayS","dfh","totalFrames","maxIndex","bufferStateDict","ignoreCount","currentBufferState","lowLatencyEnabled","shouldIgnore","l2AStateDict","l2AParameterDict","_clearL2AStateOnSeek","l2AState","lastSegmentUrl","l2aState","l2AParameters","_checkNewSegment","L2AState","segment_request_start_s","segment_download_finish_s","_onQualityChangeRequested","_dotmultiplication","arr1","arr2","sumdot","vl","alpha","sqrt","prev_w","Q","B_target","_initializeL2AParameters","_getInitialL2AState","_getL2AState","l2AParameter","diff1","lastthroughput","currentHttpRequest","V","sign","bget","ii","tmpsum","tmax","euclideanProjection","temp","switchRequestHistory","LearningAbrController","somBitrateNeurons","bitrateNormalizationFactor","latencyNormalizationFactor","weights","sortedCenters","weightSelectionMode","_getMaxThroughput","maxThroughput","neuron","_getDistance","_getNeuronDistance","rebuffer","_updateNeurons","winnerNeuron","somElements","somNeuron","neuronDistance","_updateNeuronState","neighbourHood","getNextQuality","bufferSize","currentQualityIndex","dynamicWeightsSelector","currentLatency","currentThroughput","bitrateVector","magnitude","switch","centers","randomDataSet","dataArray","_getRandomData","distanceWeights","nextPoint","maxDistance","currentPoint","minDistance","leastSimilarIndex","minIndex","_getInitialKmeansPlusPlusCenters","_getSomBitrateNeurons","throughputNormalized","currentNeuron","downloadTime","getSegmentDuration","getMinBuffer","maxSuitableBitrate","_getDownShiftNeuron","neuronCount","weightCount","W","upperBound","_getXavierWeights","_randomWeightSelection","weightVector","findWeightVector","_dynamicWeightSelection","somNeuronState","somData","nextBuffer","getNextBufferWithBitrate","isBufferLow","bitrateSwitch","LoLpQoeEvaluator","voPerSegmentQoeInfo","maxBitrateKbps","minBitrateKbps","_createQoeInfo","fragmentType","qoeInfo","QoeInfo","bitrateReward","bitrateSwitchPenalty","rebufferPenalty","latencyPenalty","penalty","playbackSpeedPenalty","_logMetricsInQoeInfo","rebufferTime","playbackSpeed","bitrateWSum","bitrateSwitchWSum","rebufferWSum","latencyRange","latencyWSum","playbackSpeedWSum","totalQoe","setupPerSegmentQoe","sDuration","maxBrKbps","minBrKbps","logSegmentMetrics","segmentBitrate","segmentRebufferTime","currentPlaybackSpeed","getPerSegmentQoe","calculateSingleUseQoe","singleUseQoeInfo","learningController","qoeEvaluator","currentQuality","bufferStateVO","currentBitrateKbps","lastFragmentDownloadTime","LoLpWeightSelector","targetLatency","bufferMin","weightOptions","previousLatency","getNextBuffer","bitrateToDownload","neurons","currentRebuffer","maxQoE","winnerWeights","winnerBitrate","weightsObj","weightedRebuffer","weightedLatency","totalQoE","nextLatency","_checkConstraints","generate","perm","currLen","currPerm","currentTrackIndex","_createTrack","useSegmentBase","ThumbnailTrackInfo","vars","cache","_normalizeSegments","cached","blob","Blob","imageUrl","_handleUpdatedSegmentData","buildTemplateUrl","voReps","currentVoRep","fileStart","parsedFile","dashIsoFile","IsoFile","setData","parseUint32","parseIsoBoxType","IsoBoxSearchInfo","boxInfo","boxSize","boxType","mdhdBox","sampleDuration","sampleCount","sampleDts","dataOffset","moofBoxes","mfhdBoxes","sequence_number","subsIndex","nextSubsSample","moofBox","trafBoxes","getChildBoxes","trafBox","tfhdBox","getChildBox","tfdtBox","baseMediaDecodeTime","trunBoxes","subsBoxes","trunBox","sample_count","base_data_offset","data_offset","sample_duration","default_sample_duration","sample_size","default_sample_size","sample_composition_time_offset","subsBox","entry_count","sample_delta","subsample_count","subsamples","subsample_size","ftyp","moov","parsePayload","codecCompatibilityTable","hasMediaSource","encryptedMediaSupported","mediaCapabilities","decodingInfo","_canUseMediaCapabilitiesApi","_checkCodecWithMediaCapabilities","_checkCodecWithMse","ep","codec1","codec2","compatTableCodec","codecRoot","rootCompatible","compatibleCodecs","compatibleCodec","customTimeRangeArray","mergeRanges","rangeIndex1","rangeIndex2","range1","range2","DefaultURLUtils","resolveFunction","schemeRegex","httpUrlRegex","httpsUrlRegex","originRegex","nativeURLResolver","dumbURLResolver","baseUrlParseFunc","isPathAbsolute","parseOrigin","isSchemeRelative","parseScheme","joinChar","slashIndex","lastSlashIndex","isHTTPS","removeHostname","parsedIsoFile","fetchAll","box","boxData","convertToDashIsoBox","IsoBox","_incomplete","parameter","defaultURLUtils","regexUtils","internalCall","functionName","utils","regex","getUtils","registerUrlRegex","ACTION_DOWNLOAD","ACTION_COMPLETE","_offset","presentation_time","sample_description_index","default_sample_flags","first_sample_flags","reference_track_ID","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","check","tags","leftIndex","cast","right","rightIndex","basicFilter","lookup","bcp47","defaults","many","schema","emptyExtraFields","extensions","compareSingleton","own","script","collator","Intl","Collator","variants","privateuse","irregular","regular","removed","object","compare","singleton","alphanumeric","alphabetical","decimal","normal","extendedLanguageSubtags","normalize","fail","forgiving","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","encoding","isEncoding","actual","write","fromString","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","fill","allocUnsafeSlow","_isBuffer","swap16","swap32","swap64","toLocaleString","inspect","thisStart","thisEnd","thisCopy","targetCopy","toJSON","_arr","out","hexSliceLookupTable","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","constructor","alphabet","table","i16","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","maxChunkLength","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","ISOFile","ISOBox","_boxProcessors","newBox","createBox","dataViewToString","impliedEncoding","TextDecoder","utf8ToByteArray","appendBox","_cursor","_root","_raw","_parent","parseBuffer","addBoxProcessor","createFile","createFullBox","Cursor","initialOffset","returnEarly","_sweep","getLength","_rawo","_parseBox","_boxContainers","_procField","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","_procSubEntries","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s2","largesize","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","setInt8","setInt16","setInt32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","pre","post","_writeUTF8String","nbCompatibleBrands","DataSize","reference_count","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","isFunction","vertxNext","customSchedulerFn","asap","queue","flush","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","process","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","iterations","observer","onFulfillment","onRejection","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","nextTick","createTextNode","characterData","port1","onmessage","port2","postMessage","vertx","require","runOnLoop","runOnContext","attemptVertx","PENDING","handleMaybeThenable","maybeThenable","then$$1","thenable","fulfill","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","publishRejection","_onerror","publish","_subscribers","subscribers","settled","hasCallback","succeeded","Enumerator","Constructor","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","resolve$$1","_then","didError","_settledAt","Promise$1","_willSettleAt","enumerator","resolver","needsResolver","initializePromise","needsNew","catch","finally","race","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","polyfill","local","g","P","promiseToString","ReflectOwnKeys","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","once","emitter","errorListener","removeListener","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","existing","newListener","emit","unshift","warned","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","wrapListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","prependListener","prependOnceListener","originalListener","spliceOne","removeAllListeners","rawListeners","eventNames","keyList","hasProp","arrA","arrB","dateA","dateB","regexpA","regexpB","imscDoc","sax","imscNames","imscStyles","imscUtils","cleanRubyContainers","rubyval","styleAttrs","byName","ruby","qname","isrubycontainer","resolveTiming","doc","prev_sibling","isinseq","timeContainer","implicit_begin","begin","explicit_begin","implicit_end","set_i","sets","content_i","explicit_end","explicit_dur","_registerEvent","ForeignElement","TT","Head","styling","Styling","layout","Layout","initials","Style","styleRefs","Initial","Image","ContentElement","IdentifiedElement","LayoutElement","regionID","StyledElement","AnimatedElement","ContainerElement","TimedElement","Body","Div","Span","AnonymousSpan","Br","Region","Set","elementGetXMLID","elementGetStyleRefs","elementGetStyles","errorHandler","sa","byQName","reportWarning","reportError","findAttribute","parseTimeExpression","tickRate","effectiveFrameRate","mergeChainedStyles","sref","mergeStylesIfNotPresent","mergeReferencedStyles","stylerefs","styleattrs","from_styles","into_styles","sname","reportFatal","searchval","cur","curval","xmlstring","xmlns","estack","xmllangstack","xmlspacestack","metadata_depth","onclosetag","cs","ns_tt","ontext","initFromText","onopentag","xmlspace","xmllang","column","initFromNode","ini","qn","bi","backgroundImage","img","nb","hasRegions","dr","createDefaultRegion","region_i","cr","ns_ttp","extractCellResolution","cellLength","ComputedLength","frtr","fps_attr","fps","frm_attr","frm","efps","tr","trattr","extractFrameAndTickRate","ar","ns_ittp","rslt","extractAspectRatio","ns_tts","parseLength","extractExtent","pxLength","unit","dimensions","b_i","e_i","getMediaTimeRange","ns_itts","ns_ebutts","elementGetRegionID","dur","processTiming","tc","elementGetTimeContainer","space","imscHTML","processElement","dom_parent","isd_element","isd_parent","imgResolver","regionH","regionW","margin","wdir","writingMode","ipd","bpd","pdir","direction","STYLING_MAP_DEFS","sm","proc_e","lp","isZero","plength","toUsedLength","padmeasure","paddingLeft","paddingRight","paddingTop","paddingBottom","mra","multiRowAlign","textAlign","rr","rubyReserve","fillLineGap","flg","te","textEmphasis","textCombine","applyTextEmphasis","cbuf","cc","_isd_element","linelist","constructLineList","lineList","rt1","rt2","rb","fs","RUBYPOSITION_PROP","RUBYPOSITION_ISWK","sib","rbc","setProperty","getPropertyValue","applyRubyReserve","applyRubyPosition","TEXTEMPHASISPOSITION_PROP","applyTextEmphasisOutside","lastnode","nextSibling","applyMultiRowAlign","pospadpxlen","negpadpxlen","start_elem","ee","end_elem","elementBoundingRect","marginLeft","marginRight","marginTop","marginBottom","applyLinePadding","previous","spanMerge","thisNode","ancestorBackgroundColor","clearTheseBackgrounds","getSpanAncestorColor","backgroundColor","mergeSpans","par_edges","rect2edges","par_before","par_after","frontier","after","before","applyFillLineGap","enableRollUp","displayAlign","RegionPBuffer","currentISDState","plist","body_elem","firstElementChild","bottom","transition","transform","ancestorList","isAncestor","first","second","tagName","styleName","rect","edges","llist","bgcolor","before1","after1","before2","after2","curbgcolor","childElementCount","bpd_dir","ipd_dir","ELEMENT_NODE","TEXTEMPHASISSTYLE_PROP","dom_element","symbol","HTMLStylingMapDefinition","qName","mapFunc","render","eheight","ewidth","displayForcedOnlyMode","twidth","rootcontainer","flexDirection","justifyContent","hdelta","wdelta","unique","fi","fontFamily","angle","fontStyle","fontWeight","opacity","rubyAlign","ta","textDecoration","txto","textOutline","textShadow","to_color","x_off","y_off","b_radius","textCombineUpright","ub","unicodeBidi","visibility","whiteSpace","STYLMAP_BY_QNAME","getComputedStyle","documentElement","imscISD","tt","ISD","activeRegions","initialShowBackground","showBackground","initialbackgroundColor","layout_child","filteredElement","isdProcessContentElement","_rcs_na_styles","inherited_region_id","associated_region_id","ISDContentElement","spec_attr","wm","ps","es","outs","inherit","parent_fs","rw","rh","ruby_fs","ivs","iv","initial","piv","z","compute","cstyle","qnameb","na","rsp","rubyPosition","da","applies","elist","constructSpanList","trimmed_text","prev_element","next_element","collapseLWSP","pruneEmptySpans","region_id","ttelem","ns_xml","ns_smpte","StylingAttributeDefinition","initialValue","appliesTo","isInherit","isAnimatable","parseFunc","computeFunc","animatable","parseColor","toComputedLength","ffs","lh","extent","parsePosition","edge","thickness","parseTextShadow","shadow","HEX_COLOR_RE","DEC_COLOR_RE","DEC_COLORA_RE","NAMED_COLOR","transparent","black","silver","gray","white","maroon","red","purple","fuchsia","magenta","green","lime","olive","yellow","navy","blue","teal","aqua","cyan","nc","LENGTH_RE","shadows","out_shadow","isKeyword","comp","lengthVal","lengthUnit","emLength","percentLength","character","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","cwd","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","_format","delimiter","win32","copyProps","SafeBuffer","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","bufferCheckPosition","lowercase","lowercasetags","looseCase","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","rootNS","trackPosition","F","BEGIN_WHITESPACE","beginWhiteSpace","starti","textNode","not","whitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","is","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","pad","emitNode","CDATA","cdata","COMMENT","comment","DOCTYPE","doctype","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","resume","ex","streamWraps","ev","_parser","writable","readable","me","_decoder","configurable","SD","number","letter","XML_NAMESPACE","XMLNS_NAMESPACE","xml","charClass","charclass","isRegExp","stringFromCharCode","fromCodePoint","STATE","COMMENT_STARTING","qualName","selfClosing","nv","isSelfClosing","closeTo","entityLC","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","EE","inherits","Readable","Writable","Duplex","Transform","PassThrough","finished","pipeline","pipe","ondata","ondrain","_isStdio","onclose","didOnEnd","cleanup","ctor","superCtor","super_","TempCtor","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","__proto__","oneOf","expected","thing","determiner","this_len","endsWith","objectKeys","allowHalfOpen","_writableState","onEndNT","highWaterMark","_readableState","destroyed","_transform","ReadableState","EElistenerCount","OurUint8Array","debugUtil","debuglog","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_read","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","setEncoding","enc","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","xs","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onfinish","cleanedUp","needDrain","pipeOnDrain","dests","wrap","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","_transformState","transforming","writecb","writechunk","needTransform","writeencoding","_flush","prefinish","_write","err2","CorkedRequest","finish","corkReq","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","lastPromise","wrapForNext","_this2","_Object$create","iterator","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_defineProperties","descriptor","custom","_classCallCheck","tail","protoProps","hasStrings","_getString","_getBuffer","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","called","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","setHeader","isRequest","ERR_MISSING_ARGS","destroyer","popCallback","destroys","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","utf8CheckExtraBytes","utf8CheckIncomplete","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","NAME","VENDOR","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SONY","XIAOMI","ZEBRA","FACEBOOK","enumerize","enums","str1","str2","lowerize","rgxMapper","arrays","strMapper","windowsVersionMap","regexes","cpu","device","engine","EDGE","os","getResult","_ua","_rgxmap","mergedRegexes","getBrowser","_browser","major","getCPU","_cpu","getDevice","_device","getEngine","_engine","getOS","_os","getUA","setUA","CPU","DEVICE","ENGINE","OS","$","jQuery","Zepto","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","__esModule","definition","globalThis","loadInterval","SUPPORTED_MIME_TYPE","_dashjs_player","player","videoID","querySelectorAll","findVideo","createAll","aPlayers","sources","MediaPlayerFactory","skipAutoCreate","loadHandler"],"sourceRoot":""}