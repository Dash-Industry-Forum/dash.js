version: 2.1

executors:
  dashjs-executor:
    working_directory: ~/repo
    docker:
      - image: cimg/node:10.20.1

commands:
    dependencies_setup:
        steps:
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            - run:
                name: Install dependencies
                command: npm install
            - save_cache:
                paths:
                    - node_modules
                key: v1-dependencies-{{ checksum "package.json" }}
    functional_test_setup:
        steps:
            - run:
                name: Download the browserstack binary file to create a tunnel
                command: wget "https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip"

            - run:
                name: Unzip the browserstack binary file
                command: unzip BrowserStackLocal-linux-x64.zip

            - run:
                name: Run browserstack with provided access key
                command: ./BrowserStackLocal $BROWSERSTACK_ACCESS_KEY
                background: true

jobs:
    build:
        executor: dashjs-executor
        steps:
            - checkout
            - dependencies_setup
            - run:
                name: Build and Test
                command: npm run build
            - deploy:
                name: Deploy
                command: |
                    if [ "${CIRCLE_BRANCH}" = "development" ]; then
                        sudo npm install -g grunt-cli
                        grunt deploy --git-commit=$CIRCLE_SHA1 --ftp-host=$DEPLOY_HOST --ftp-user=$DEPLOY_USER --ftp-pass=$DEPLOY_PASSWORD
                    else
                        echo "Not development branch, dry run only"
                    fi

    functional-tests-all:
        executor: dashjs-executor
        steps:
            - checkout
            - dependencies_setup
            - functional_test_setup
            - run:
                name: Run functional tests (chrome / https)
                command:
                    node test/functional/runTests.js --selenium=remote --reporters=junit --app=remote --browsers=chrome --protocol=https

            - run:
                name: Run functional tests (chrome / http)
                when: always # run tests even if some previous tests failed
                command:
                    node test/functional/runTests.js --selenium=remote --reporters=junit --app=remote --browsers=chrome --protocol=http

            - store_test_results:
                path: test/functional/reports

    functional-tests-smoke:
        executor: dashjs-executor
        steps:
            - checkout
            - dependencies_setup
            - functional_test_setup
            - run:
                name: Run functional tests for smoke vectors (chrome / https)
                command:
                    node test/functional/runTests.js --selenium=remote --reporters=junit --app=remote --browsers=chrome --protocol=https --source=./test/functional/config/smokeVectors.json

            - store_test_results:
                path: test/functional/reports

workflows:
    commit-workflow:
        jobs:
            - build
            - functional-tests-smoke:
                filters:
                    branches:
                        only:
                            - development
    scheduled-workflow:
        triggers:
            - schedule:
                cron: "0 0 * * 0"
                filters:
                    branches:
                        only:
                            - development
        jobs:
            - functional-tests-all

